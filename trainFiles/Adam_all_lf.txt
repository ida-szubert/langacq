Sent: were you a pirate too ?
Sem: lambda $0_{r}.Q(det:art|a_3(post|too_5(pro:per|you_2),n|pirate_4(post|too_5(pro:per|you_2),$0)))
example_end

Sent: he was a tiger ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:sub|he_1,n|tiger_4(pro:sub|he_1,$0)))
example_end

Sent: you want one what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|want_2(pro:per|you_1,$1,$0)
example_end

Sent: you won 't eat !
Sem: lambda $0_{r}.not(mod|will_2(v|eat_4(pro:per|you_1,$0),$0),$0)
example_end

Sent: what won 't you eat ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|will_2(v|eat_5(pro:per|you_4,$1,$0),$0),$0)
example_end

Sent: you won 't eat tigers !
Sem: lambda $0_{r}.not(mod|will_2(v|eat_4(pro:per|you_1,BARE($1,n|tiger-pl_5($1)),$0),$0),$0)
example_end

Sent: I should hope not .
Sem: lambda $0_{r}.mod|should_2(v|hope_3(pro:sub|i_1,neg|not_4,$0),$0)
example_end

Sent: what were you doing then ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-past_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv:tem|then_5($0)),$0)
example_end

Sent: oh it was .
Sem: lambda $0_{r}.and(cop|be-past_3(pro:per|it_2,$0),co|oh_1($0))
example_end

Sent: where does he come from ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|come_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: where 's the real Ursula ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,att(BARE($2,n:prop|ursula_5($2)),BARE($3,adj|real_4($3)),$1)),$0))
example_end

Sent: Adam Smith what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_4(part|do-presp_6(pro:per|you_5,$1,$0),$0)
example_end

Sent: yes what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|yes_1($0))
example_end

Sent: why does that have_to be attached to that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(mod:aux|have_to_4(pro:dem|that_3,lambda $1_{r}.v|attach-past_7(pro:dem|that_3,$1),$0),$2($0)),$0)
example_end

Sent: it 's part of it .
Sem: lambda $0_{r}.att(n|part_3(pro:per|it_1,$0),prep|of_4(pro:per|it_5))
example_end

Sent: tell Ursula what happened .
Sem: lambda $0_{r}.v|tell_1(you,n:prop|ursula_2,lambda $1_{r}.v|happen-past_4(_,pro:int|what_3,$1),$0)
example_end

Sent: and what happened to it ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_3($1,$0),prep|to_4(pro:per|it_5,$0))
example_end

Sent: oh I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|oh_1($0))
example_end

Sent: tell her what happened .
Sem: lambda $0_{r}.v|tell_1(you,pro:obj|her_2,lambda $1_{r}.v|happen-past_4(pro:int|what_3,$1),$0)
example_end

Sent: I won 't bite .
Sem: lambda $0_{r}.not(mod|will_2(v|bite_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what d you have in your pocket ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,$1,$0),prep|in_5(det:poss|your_6($2,n|pocket_7($2)),$0)),$0)
example_end

Sent: you turn .
Sem: lambda $0_{r}.v|turn_2(pro:per|you_1,$0)
example_end

Sent: Adam why don 't you sit down ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_3(and(v|sit_6_down_7(pro:per|you_5,$0),$1($0)),$0),$0)
example_end

Sent: there 're some toys right there .
Sem: lambda $0_{r}.and(aux|~be_2(qn|some_3($1,n|toy-pl_4($1)),$0),adv|right_5(adv|there_6($0)))
example_end

Sent: what d you think it says ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.v|say-3s_6(pro:per|it_5,pro:int|what_1,$1),$0),$0))
example_end

Sent: now you do the rest .
Sem: lambda $0_{r}.and(v|do_3(pro:per|you_2,det:art|the_4($1,n|rest_5($1)),$0),adv|now_1($0))
example_end

Sent: is Smokey in a real forest ?
Sem: lambda $0_{r}.Q(prep|in_3(det:art|a_4($1,and(adj|real_5($1),n|forest_6($1))),n:prop|smokey_2,$0))
example_end

Sent: they 're bears in real forests yes .
Sem: lambda $0_{r}.and(att(n|bear-pl_3(pro:sub|they_1,$0),prep|in_4(BARE($1,and(adj|real_5($1),n|forest-pl_6($1))))),co|yes_7($0))
example_end

Sent: she left it for me .
Sem: lambda $0_{r}.and(v|leave-past_2(pro:sub|she_1,pro:per|it_3,$0),prep|for_4(pro:obj|me_5,$0))
example_end

Sent: no I let you look at it .
Sem: lambda $0_{r}.and(v|let-zero_3(pro:sub|i_2,lambda $1_{r}.and(cop|look_5(pro:per|you_4,$1),prep|at_6(pro:per|it_7,$1)),$0),co|no_1($0))
example_end

Sent: I shared my book with you .
Sem: lambda $0_{r}.and(v|share-past_2(pro:sub|i_1,det:poss|my_3($1,n|book_4($1)),$0),prep|with_5(pro:per|you_6,$0))
example_end

Sent: what 're you doing over there ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|over_5(adv|there_6($0))),$0)
example_end

Sent: why don 't you start down here ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|start_5(pro:per|you_4,$0),$1($0)),adv|down_6(adv|here_7($0))),$0),$0)
example_end

Sent: I was looking .
Sem: lambda $0_{r}.aux|be-past_2(part|look-presp_3(pro:sub|i_1,$0),$0)
example_end

Sent: no I 'm not going to do it .
Sem: lambda $0_{r}.and(not(cop|~be_3(part|go-presp_5(pro:sub|i_2,lambda $1_{r}.v|do_7(pro:sub|i_2,pro:per|it_8,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: you have_to come back .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|come_4(pro:per|you_1,$1),$0)
example_end

Sent: we have_to go one after another .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:sub|we_1,lambda $1_{r}.v|go_4(pro:sub|we_1,$1),$0)
example_end

Sent: put it in from the back .
Sem: lambda $0_{r}.and(and(v|put-zero_1(you,pro:per|it_2,$0),prep|in_3($0)),prep|from_4(BARE($1,adj|back_6($1)),$0))
example_end

Sent: his name is Leonard Lion .
Sem: lambda $0_{r}.n:prop|leonard_4_lion_5(det:poss|his_1($1,n|name_2($1)),$0)
example_end

Sent: put it through the back .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|through_3(det:art|the_4($1,n|back_5($1)),$0))
example_end

Sent: Paul don 't knock on the window please .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|knock_4(you,$0),prep|on_5(det:art|the_6($1,n|window_7($1)),$0)),$0),$0),co|please_8($0))
example_end

Sent: Paul no !
Sem: lambda $0_{r}.co|no_2($0)
example_end

Sent: you missed these .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,pro:dem|these_3,$0)
example_end

Sent: Adam please come and visit me .
Sem: lambda $0_{r}.and(v|visit_5(you,pro:obj|me_6,$0),co|please_2($0))
example_end

Sent: the holes .
Sem: det:art|the_1($0,n|hole-pl_2($0))
example_end

Sent: did you miss one ?
Sem: lambda $0_{r}.Q(v|do-past_1(n|miss_3(pro:per|you_2,pro:indef|one_4,$0),$0))
example_end

Sent: does a hippopotamus have a big wide mouth ?
Sem: lambda $0_{r}.Q(v|do-3s_1(v|have_4(det:art|a_2($1,n|hippopotamus_3($1)),det:art|a_5($2,and(adj|wide_7($2),and(adj|big_6($2),n|mouth_8($2)))),$0),$0))
example_end

Sent: I think it 's a rhinoceros .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:per|it_3,n|rhinoceros_6(pro:per|it_3,$1)),$0)
example_end

Sent: do the what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_1(you,$1,$0)
example_end

Sent: your busy little horse ?
Sem: BARE($0,Q(det:poss|your_1($1,and(adj|little_3($1),and(adj|busy_2($1),n|horse_4($1))),$0)))
example_end

Sent: stop Diandra .
Sem: lambda $0_{r}.n|stop_1(you,$0)
example_end

Sent: that was your horse ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:dem|that_1,n|horse_4(pro:dem|that_1,$0)))
example_end

Sent: he doesn 't know dogs and boys .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|he_1,BARE($1,n|boy-pl_7($1)),$0),$0),$0)
example_end

Sent: d you think the baby whale might want some milk ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|might_7(v|want_8(det:art|the_4($2,and_comp(n|baby_5($2),n|whale_6($2))),qn|some_9($3,n|milk_10($3)),$1),$1),$0),$0))
example_end

Sent: oh was that a police whistle ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:rel|that_3,and_comp(n|police_5(pro:rel|that_3,$0),n|whistle_6(pro:rel|that_3,$0))),co|oh_1($0)))
example_end

Sent: Paul has his .
Sem: lambda $0_{r}.aux|have-3s_2(n:prop|paul_1,det:poss|his_3,$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: a syrup .
Sem: det:art|a_1($0,n|syrup_2($0))
example_end

Sent: what kind of syrup ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|syrup_4($2)))))
example_end

Sent: Adam come back in here please .
Sem: lambda $0_{r}.and(and(and(v|come_2(you,$0),adv|back_3($0)),adv|here_5($0)),co|please_6($0))
example_end

Sent: I don 't have no many babies .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|i_1,qn|no_5($1,qn|many_6($2,n|baby-pl_7($2),$1)),$0),$0),$0)
example_end

Sent: a funnel .
Sem: det:art|a_1($0,n|funnel_2($0))
example_end

Sent: you can pour things through here into a small bottle .
Sem: lambda $0_{r}.mod|can_2(and(and(v|pour_3(pro:per|you_1,BARE($1,n|thing-pl_4($1)),$0),adv|through_5(adv|here_6($0))),prep|into_7(det:art|a_8($2,and(adj|small_9($2),n|bottle_10($2))),$0)),$0)
example_end

Sent: no why d you want to ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do_3(and(v|want_5(pro:per|you_4,$0),$1($0)),$0),co|no_1($0))
example_end

Sent: why don 't we not do that today ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(not(mod|do_2(and(and(v|do_6(pro:sub|we_4,pro:dem|that_7,$0),$1($0)),adv:tem|today_8($0)),$0),$0),$0)
example_end

Sent: but why don 't we not not do that today .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(not(mod|do_3(and(and(v|do_8(pro:sub|we_5,pro:dem|that_9,$0),$1($0)),adv:tem|today_10($0)),$0),$0),$0)
example_end

Sent: it 's patient ?
Sem: lambda $0_{r}.Q(adj|patient_3(pro:per|it_1,$0))
example_end

Sent: where 's the nipple for that bottle ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,att(n|nipple_4($1),prep|for_5(pro:dem|that_6($2,n|bottle_7($2))))),$0))
example_end

Sent: why did she swallow it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|swallow_4(pro:sub|she_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: she likes milk ?
Sem: lambda $0_{r}.Q(v|like-3s_2(pro:sub|she_1,BARE($1,n|milk_3($1)),$0))
example_end

Sent: here the funnel ?
Sem: BARE($0,Q(adv|here_1(det:art|the_2($1,n|funnel_3($1)),$0)))
example_end

Sent: did it go down already ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(and(v|go_3(pro:per|it_2,$0),adv|down_4($0)),adv|already_5($0)),$0))
example_end

Sent: that 's spray .
Sem: lambda $0_{r}.n|spray_3(pro:dem|that_1,$0)
example_end

Sent: what d you call what you do to a bottle ?
Sem: lambda $2_{e}.lambda $1_{e}.lambda $0_{r}.mod|do_2(v|call_4(pro:per|you_3,$1,$2,$0),$0)
example_end

Sent: d you tie a bottle ?
Sem: lambda $0_{r}.Q(mod|do_1(v|tie_3(pro:per|you_2,det:art|a_4($1,n|bottle_5($1)),$0),$0))
example_end

Sent: what d you do to a bottle ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|to_5(det:art|a_6($2,n|bottle_7($2)),$0)),$0)
example_end

Sent: see it .
Sem: lambda $0_{r}.v|see_1(you,pro:per|it_2,$0)
example_end

Sent: d you see it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: it 's full .
Sem: lambda $0_{r}.adj|full_3(pro:per|it_1,$0)
example_end

Sent: put your fingers there .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:poss|your_2($1,n|finger-pl_3($1)),$0),adv|there_4($0))
example_end

Sent: no not in Diandro 's bottle because that top comes off very easily .
Sem: n:prop|diandro_4's($0,n|bottle_6($0))
example_end

Sent: well give him one dear .
Sem: lambda $0_{r}.and(v|give_2(you,pro:indef|one_4,pro:obj|him_3,$0),co|well_1($0))
example_end

Sent: he had one of those .
Sem: lambda $0_{r}.v|have-past_2(pro:sub|he_1,BARE($1,det:num|one_3($1)),$0)
example_end

Sent: forty cents ?
Sem: BARE($0,Q(det:num|forty_1(n|cent-pl_2($0))))
example_end

Sent: red eyes ?
Sem: BARE($0,Q(and(adj|red_1($0),n|eye-pl_2($0))))
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: you don 't want to lose the tops .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:per|you_1,lambda $1_{r}.v|lose_6(pro:per|you_1,det:art|the_7($2,n|top-pl_8($2)),$1),$0),$0),$0)
example_end

Sent: I think you missed the bottle .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|miss-past_4(pro:per|you_3,det:art|the_5($2,n|bottle_6($2)),$1),$0)
example_end

Sent: it 's growing !
Sem: lambda $0_{r}.aux|~be_2(part|grow-presp_3(pro:per|it_1,$0),$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: what does that spell ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(n|spell_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: what is spray ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,v|spray_3($2)),$0)
example_end

Sent: what kind is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|kind_2(pro:per|it_4,$0))
example_end

Sent: chocolate spray ?
Sem: BARE($0,Q(and_comp(n|chocolate_1($0),n|spray_2($0))))
example_end

Sent: you said it was chocolate spray .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.and_comp(n|chocolate_5(pro:per|it_3,$1),n|spray_6(pro:per|it_3,$1)),$0)
example_end

Sent: thank_you dear .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: Paul and Diandra stop it .
Sem: lambda $0_{r}.v|stop_4(you,pro:per|it_5,$0)
example_end

Sent: that 's enough both of you .
Sem: lambda $0_{r}.adv|enough_3($0)
example_end

Sent: no that 's not clean water honey .
Sem: lambda $0_{r}.and(not(and(n|water_6(pro:dem|that_2,$0),adj|clean_5(pro:dem|that_2,$0)),$0),co|no_1($0))
example_end

Sent: you must have lost it .
Sem: lambda $0_{r}.aux|have_3(mod|must_2(part|lose-pastp_4(pro:per|you_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: what happened to the funnel ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|funnel_5($2)),$0))
example_end

Sent: you 're making a mess there .
Sem: lambda $0_{r}.aux|~be_2(and(part|make-presp_3(pro:per|you_1,det:art|a_4($1,n|mess_5($1)),$0),adv|there_6($0)),$0)
example_end

Sent: you have a funnel that let 's you know when you have enough in the bottle .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,det:art|a_3($1,n|funnel_4($1)),$0)
example_end

Sent: where 's the other bottle ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,and(qn|other_4($1),n|bottle_5($1))),$0))
example_end

Sent: open it up and see .
Sem: lambda $0_{r}.and(v|see_5(you,pro:per|it_2,$0),adv|up_3($0))
example_end

Sent: what have they got those men ?
Sem: lambda $1_{e}.lambda $0_{r}.v|have_2(v|get-past_4(pro:sub|they_3,$1,$0),$0)
example_end

Sent: no wonder what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(v|wonder_2($1,$0),$0)
example_end

Sent: how can animals box themselves ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|can_2(and(n|box_4(BARE($1,n|animal-pl_3($1)),pro:refl|themselves_5,$0),$2($0)),$0)
example_end

Sent: what d you think this says ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.v|say-3s_6(pro:dem|this_5,pro:int|what_1,$1),$0),$0))
example_end

Sent: and they 've got animal skins on for clothes .
Sem: lambda $0_{r}.aux|~have_3(and(and(part|get-pastp_4(pro:sub|they_2,BARE($1,and_comp(n|animal_5($1),n|skin-pl_6($1))),$0),adv|on_7($0)),prep|for_8(BARE($2,n:pt|clothes_9($2)),$0)),$0)
example_end

Sent: animal skins .
Sem: BARE($0,and_comp(n|animal_1($0),n|skin-pl_2($0)))
example_end

Sent: no he 's wearing an animal skin .
Sem: lambda $0_{r}.and(aux|~be_3(part|wear-presp_4(pro:sub|he_2,det:art|a_5($1,and_comp(n|animal_6($1),n|skin_7($1))),$0),$0),co|no_1($0))
example_end

Sent: he 's a man .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|he_1,n|man_4(pro:sub|he_1,$0))
example_end

Sent: well he might hit that dinosaur .
Sem: lambda $0_{r}.and(mod|might_3(v|hit-zero_4(pro:sub|he_2,pro:dem|that_5($1,n|dinosaur_6($1)),$0),$0),co|well_1($0))
example_end

Sent: sometimes they kill animals for their skins for clothing .
Sem: lambda $0_{r}.and(and(v|kill_3(pro:sub|they_2,BARE($1,n|animal-pl_4($1)),$0),adv|sometimes_1($0)),prep|for_5(det:poss|their_6($2,att(n|skin-pl_7($2),prep|for_8(BARE($3,n|clothing_9($3))))),$0))
example_end

Sent: and maybe they chop down trees .
Sem: lambda $0_{r}.and(and(v|chop_4(pro:sub|they_3,BARE($1,n|tree-pl_6($1)),$0),adv|maybe_2($0)),adv|down_5($0))
example_end

Sent: how could you wear a tree ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|could_2(and(v|wear_4(pro:per|you_3,det:art|a_5($1,n|tree_6($1)),$0),$2($0)),$0)
example_end

Sent: it 's like a big flying dinosaur .
Sem: lambda $0_{r}.conj|like_3(det:art|a_4($1,and(n:gerund|fly-presp_6($1),and(adj|big_5($1),n|dinosaur_7($1)))),pro:per|it_1,$0)
example_end

Sent: yes you can take them all out if you want .
Sem: lambda $0_{r}.and(conj|if_8(v|want_10(pro:per|you_9,$0),mod|can_3(and(v|take_4(pro:per|you_2,post|all_6($1,pro:obj|them_5($1)),$0),adv|out_7($0)),$0)),co|yes_1($0))
example_end

Sent: you have_to start here .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|start_4(pro:per|you_1,$1),$0)
example_end

Sent: I do too .
Sem: lambda $0_{r}.and(v|do_2(pro:sub|i_1,$0),post|too_3($0))
example_end

Sent: d you have seeds in yours ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,BARE($1,n|seed-pl_4($1)),$0),prep|in_5(pro:poss|yours_6,$0)),$0))
example_end

Sent: I got seeds in mine .
Sem: lambda $0_{r}.and(v|get-past_2(pro:sub|i_1,BARE($1,n|seed-pl_3($1)),$0),prep|in_4(pro:poss|mine_5,$0))
example_end

Sent: then what will you do with it ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_3(and(and(v|do_5(pro:per|you_4,$1,$0),adv:tem|then_1($0)),prep|with_6(pro:per|it_7,$0)),$0)
example_end

Sent: are you going to swallow it ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.v|swallow_5(pro:per|you_2,pro:per|it_6,$1),$0),$0))
example_end

Sent: what 're you digging for ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|dig-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: aren 't you going to eat your apple ?
Sem: lambda $0_{r}.Q(not(aux|be_1(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|eat_6(pro:per|you_3,det:poss|your_7($2,n|apple_8($2)),$1),$0),$0),$0))
example_end

Sent: but not boy babies ?
Sem: BARE($0,Q(not(BARE($1,and_comp(n|boy_3($1),v|baby-3s_4($1))),$0)))
example_end

Sent: does he like apples ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(co|like_3(pro:sub|he_2,BARE($1,n|apple-pl_4($1)),$0),$0))
example_end

Sent: yes I think so .
Sem: lambda $0_{r}.and(and(v|think_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: he has big wings .
Sem: lambda $0_{r}.aux|have-3s_2(pro:sub|he_1,BARE($1,and(adj|big_3($1),n|wing-pl_4($1))),$0)
example_end

Sent: that 's true .
Sem: lambda $0_{r}.adj|true_3(pro:dem|that_1,$0)
example_end

Sent: can you fly ?
Sem: lambda $0_{r}.Q(mod|can_1(v|fly_3(pro:per|you_2,$0),$0))
example_end

Sent: I can fly .
Sem: lambda $0_{r}.mod|can_2(v|fly_3(pro:sub|i_1,$0),$0)
example_end

Sent: much taller .
Sem: BARE($0,adv|much_1(adj|tall-cp_2($0)))
example_end

Sent: why do you like that one ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(co|like_4(pro:per|you_3,pro:dem|that_5($1,pro:indef|one_6($1)),$0),$2($0)),$0)
example_end

Sent: here comes the other one .
Sem: lambda $0_{r}.and(v|come-3s_2(det:art|the_3($1,and(qn|other_4($1),pro:indef|one_5($1))),$0),adv|here_1($0))
example_end

Sent: that 's a dinosaur .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|dinosaur_4(pro:dem|that_1,$0))
example_end

Sent: goodness they 're all kinds .
Sem: lambda $0_{r}.and(adv|all_4(pro:sub|they_2,n|kind-pl_5(pro:sub|they_2,$0)),co|goodness_1($0))
example_end

Sent: he 's playing all the parts .
Sem: lambda $0_{r}.aux|~be_2(part|play-presp_3(pro:sub|he_1,qn|all_4(det:art|the_5($1,n|part-pl_6($1))),$0),$0)
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: that 's another Paul .
Sem: lambda $0_{r}.and(n:prop|paul_4(pro:dem|that_1,$0),pro:indef|another_3(pro:dem|that_1,$0))
example_end

Sent: I don 't think I 'm very hungry thank_you .
Sem: lambda $0_{r}.and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.adv|very_7(adj|hungry_8(pro:sub|i_5,$1)),$0),$0),$0),n|thank_you_9(you,$0))
example_end

Sent: don 't what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_1(you,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you can 't what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|can_2($1(pro:per|you_1,$0),$0),$0)
example_end

Sent: you can 't either do it ?
Sem: lambda $0_{r}.Q(not(mod|can_2(and(v|do_5(pro:per|you_1,pro:per|it_6,$0),adv|either_4($0)),$0),$0))
example_end

Sent: how can she write if you sit on top of her ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|if_5(and(v|sit_7(pro:per|you_6,$0),prep|on_8(BARE($1,att(n|top_9($1),prep|of_10(pro:obj|her_11))),$0)),mod|can_2(and(v|write_4(pro:sub|she_3,$0),$2($0)),$0))
example_end

Sent: who lives in your barn .
Sem: lambda $1_{e}.lambda $0_{r}.and(n|life-pl_2($1,$0),prep|in_3(det:poss|your_4($2,n|barn_5($2)),$0))
example_end

Sent: in your barn .
Sem: prep|in_1(det:poss|your_2($0,n|barn_3($0)))
example_end

Sent: that 's a picture of a barn .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(n|picture_4(pro:dem|that_1,$0),prep|of_5(det:art|a_6($1,n|barn_7($1)))))
example_end

Sent: I didn 't see any men .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,qn|any_5($1,n|man-pl_6($1)),$0),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: did you get hurt very badly ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|get_3_hurt-zero_4(pro:per|you_2,$0),adv|very_5(adv|bad-dadj_6($0))),$0))
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: who does ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2($1,$0)
example_end

Sent: oh you are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:per|you_2,$0),co|oh_1($0))
example_end

Sent: oh where did you get feather brain ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(v|get_5(pro:per|you_4,BARE($1,and_comp(n|feather_6($1),n|brain_7($1))),$0),$2($0)),$0),co|oh_1($0))
example_end

Sent: Diandra give me that .
Sem: lambda $0_{r}.v|give_2(you,pro:dem|that_4,pro:obj|me_3,$0)
example_end

Sent: that 's dangerous .
Sem: lambda $0_{r}.adj|dangerous_3(pro:dem|that_1,$0)
example_end

Sent: he can hurt himself with it .
Sem: lambda $0_{r}.mod|can_2(and(v|hurt-zero_3(pro:sub|he_1,pro:refl|himself_4,$0),prep|with_5(pro:per|it_6,$0)),$0)
example_end

Sent: where 's the Mommy ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n:prop|mommy_4($1)),$0))
example_end

Sent: no no take it apart .
Sem: lambda $0_{r}.and(and(v|take_3(you,pro:per|it_4,$0),adv|apart_5($0)),co|no_1($0))
example_end

Sent: he can 't do the puzzle dear why don 't you leave it closed ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(not(mod|can_2(v|do_4(pro:sub|he_1,det:art|the_5($1,n|puzzle_6($1)),$0),$0),$0),not(mod|do_9(and(v|leave_12(pro:per|you_11,lambda $2_{r}.v|close-past_14(pro:per|it_13,$2),$0),$3($0)),$0),$0))
example_end

Sent: no he just wants to take it around like Paul is taking one around .
Sem: lambda $0_{r}.and(and(v|want-3s_4(pro:sub|he_2,lambda $1_{r}.v|like_9(aux|be-3s_11(and(part|take-presp_12(n:prop|paul_10,det:num|one_13,$1),adv|around_14($1)),$1),and(v|take_6(_,pro:per|it_7,$1),adv|around_8($1))),$0),adv|just_3($0)),co|no_1($0))
example_end

Sent: if you can 't what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|can_3(pro:per|you_2,$1,$0),$0)
example_end

Sent: good very good .
Sem: and(BARE($0,adj|good_1($0)),BARE($1,adv|very_2(adj|good_3($1))))
example_end

Sent: what kind of bird is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|bird_4($2)))))
example_end

Sent: that 's not a peacock .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|peacock_5(pro:dem|that_1,$0)),$0)
example_end

Sent: you 're so busy .
Sem: lambda $0_{r}.adv|so_3(adj|busy_4(pro:per|you_1,$0))
example_end

Sent: I didn 't think you 'd get back around to me .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|~genmod_6(and(and(v|get_7(pro:per|you_5,$1),adv|back_8(adv|around_9($1))),prep|to_10(pro:obj|me_11,$1)),$1),$0),$0),$0)
example_end

Sent: that poor dinosaur .
Sem: pro:dem|that_1($0,and(adj|poor_2($0),n|dinosaur_3($0)))
example_end

Sent: why should he do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|should_2(and(v|do_4(pro:sub|he_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: what shall I help you do ?
Sem: lambda $0_{r}.Q(mod|shall_2(v|help_4(pro:sub|i_3,lambda $1_{r}.v|do_6(pro:per|you_5,pro:int|what_1,$1),$0),$0))
example_end

Sent: who is Callie ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(chi|callie_3,$0)
example_end

Sent: that 's the name .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|name_4(pro:dem|that_1,$0))
example_end

Sent: you knocked one down driver .
Sem: lambda $0_{r}.v|knock-past_2(pro:per|you_1,BARE($1,and_comp(n|down_4($1),det:num|one_3(n|drive-dv_5($1)))),$0)
example_end

Sent: no that 's not a horse .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:dem|that_2,n|horse_6(pro:dem|that_2,$0)),$0),co|no_1($0))
example_end

Sent: it 's the cover that came off the puzzle .
Sem: lambda $0_{r}.det:art|the_3(pro:per|it_1,n|cover_4(pro:per|it_1,$0))
example_end

Sent: which one would you like ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|will-cond_3(co|like_5(pro:per|you_4,$1($2,pro:indef|one_2($2)),$0),$0)
example_end

Sent: don 't knock on the window Adam .
Sem: lambda $0_{r}.not(mod|do_1(and(v|knock_3(you,$0),prep|on_4(det:art|the_5($1,n|window_6($1)),$0)),$0),$0)
example_end

Sent: no no don 't push .
Sem: lambda $0_{r}.and(not(mod|do_3(v|push_5(you,$0),$0),$0),co|no_1($0))
example_end

Sent: we need some help .
Sem: lambda $0_{r}.v|need_2(pro:sub|we_1,qn|some_3($1,co|help_4($1)),$0)
example_end

Sent: you can press the button on that microphone .
Sem: lambda $0_{r}.mod|can_2(v|press_3(pro:per|you_1,det:art|the_4($1,att(n|button_5($1),prep|on_6(pro:dem|that_7($2,n|microphone_8($2))))),$0),$0)
example_end

Sent: see what happens .
Sem: lambda $0_{r}.v|see_1(you,lambda $1_{r}.v|happen-3s_3(pro:int|what_2,$1),$0)
example_end

Sent: talk Adam .
Sem: lambda $0_{r}.n|talk_1(you,$0)
example_end

Sent: don 't pretend like that .
Sem: lambda $0_{r}.not(mod|do_1(and(v|pretend_3(you,$0),prep|like_4(pro:dem|that_5,$0)),$0),$0)
example_end

Sent: then he won 't try to talk if you don 't talk properly .
Sem: lambda $0_{r}.not(conj|if_8(not(mod|do_10(and(v|talk_12(pro:per|you_9,$0),adv|proper-dadj_13($0)),$0),$0),mod|will_3(and(v|try_5(pro:sub|he_2,lambda $1_{r}.n|talk_7(pro:sub|he_2,$1),$0),adv:tem|then_1($0)),$0)),$0)
example_end

Sent: Diandra Paul had that .
Sem: lambda $0_{r}.v|have-past_3(n:prop|diandra_1_paul_2,pro:dem|that_4,$0)
example_end

Sent: Adam d you want to see some of the things I brought ?
Sem: lambda $0_{r}.Q(v|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.v|see_6(pro:per|you_3,qn|some_7(det:art|the_9($2,n|thing-pl_10($2))),$1),$0),$0))
example_end

Sent: a fire engine ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|fire_2($1),n|engine_3($1)),$0)))
example_end

Sent: you have_to pull it all the way down .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|pull_4(pro:per|you_1,$1),$0)
example_end

Sent: I think you have_to look toward the light .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod:aux|have_to_4(pro:per|you_3,lambda $2_{r}.cop|look_6(pro:per|you_3,$2),$1),$0)
example_end

Sent: oh that 's nice .
Sem: lambda $0_{r}.and(adj|nice_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: let Paul see it please .
Sem: lambda $0_{r}.and(v|let-zero_1(you,lambda $1_{r}.v|see_3(n:prop|paul_2,pro:per|it_4,$1),$0),co|please_5($0))
example_end

Sent: alright Paul you don 't have_to look .
Sem: lambda $0_{r}.and(not(mod|do_4(mod:aux|have_to_6(pro:per|you_3,lambda $1_{r}.cop|look_8(pro:per|you_3,$1),$0),$0),$0),co|alright_1($0))
example_end

Sent: Diandra Paul had that .
Sem: lambda $0_{r}.v|have-past_3(n:prop|diandra_1_paul_2,pro:dem|that_4,$0)
example_end

Sent: please give it to him .
Sem: lambda $0_{r}.and(and(v|give_2(you,pro:per|it_3,$0),prep|to_4(pro:obj|him_5,$0)),co|please_1($0))
example_end

Sent: the box is on his arm .
Sem: lambda $0_{r}.prep|on_4(det:poss|his_5($1,n|arm_6($1)),det:art|the_1($2,n|box_2($2)),$0)
example_end

Sent: I see more than four .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,BARE($1,att(qn|more_3($1),prep|than_4(BARE($2,det:num|four_5($2))))),$0)
example_end

Sent: I don 't see any peanut .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,qn|any_5($1,n|peanut_6($1)),$0),$0),$0)
example_end

Sent: this is Rocky .
Sem: lambda $0_{r}.n:prop|rocky_3(pro:dem|this_1,$0)
example_end

Sent: oh Rocky I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_5(pro:sub|i_3,$0),co|oh_1($0))
example_end

Sent: now you hold it still .
Sem: lambda $0_{r}.and(and(v|hold_3(pro:per|you_2,pro:per|it_4,$0),adv|now_1($0)),adv|still_5($0))
example_end

Sent: that 's a boy .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|boy_4(pro:dem|that_1,$0))
example_end

Sent: oh what you see on television .
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|see_4(pro:per|you_3,$1,$0),prep|on_5(BARE($2,n|television_6($2)),$0)),co|oh_1($0))
example_end

Sent: you see what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|see_2(pro:per|you_1,$1,$0)
example_end

Sent: Paul stop that .
Sem: lambda $0_{r}.n|stop_2(you,pro:dem|that_3,$0)
example_end

Sent: we can 't hear ourselves think .
Sem: lambda $0_{r}.not(mod|can_2(v|hear_4(pro:sub|we_1,lambda $1_{r}.v|think_6(pro:refl|ourselves_5,$1),$0),$0),$0)
example_end

Sent: is it too tight Adam ?
Sem: lambda $0_{r}.Q(adv|too_3(adv|tight_4(pro:per|it_2,$0)))
example_end

Sent: where 's your little animal ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|your_3($1,and(adj|little_4($1),n|animal_5($1))),$0))
example_end

Sent: with a big chin ?
Sem: Q(prep|with_1(det:art|a_2($0,and(adj|big_3($0),n|chin_4($0)))))
example_end

Sent: move your fingers I can 't see .
Sem: lambda $0_{r}.and(v|move_1(you,det:poss|your_2($1,n|finger-pl_3($1)),$0),not(mod|can_5(v|see_7(pro:sub|i_4,$0),$0),$0))
example_end

Sent: d you want to see the first one again ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|see_5(pro:per|you_2,det:art|the_6($2,and(adj|first_7($2),pro:indef|one_8($2))),$1),adv|again_9($1)),$0),$0))
example_end

Sent: Jack and the Beanstalk .
Sem: BARE($0,and_comp(det:art|the_3($1,n:prop|beanstalk_4($1),$0),n:prop|jack_1($0)))
example_end

Sent: look through the light .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|through_2(det:art|the_3($1,n|light_4($1)),$0))
example_end

Sent: it 's to make strong muscles .
Sem: lambda $0_{r}.aux|~be_2(pro:per|it_1,lambda $1_{r}.v|make_4(pro:per|it_1,BARE($2,and(adj|strong_5($2),n|muscle-pl_6($2))),$1),$0)
example_end

Sent: squeeze it .
Sem: lambda $0_{r}.v|squeeze_1(you,pro:per|it_2,$0)
example_end

Sent: Diandra now you go into your room if you can 't stop that .
Sem: lambda $0_{r}.conj|if_8(not(mod|can_10(v|stop_12(pro:per|you_9,pro:dem|that_13,$0),$0),$0),and(and(v|go_4(pro:per|you_3,$0),adv|now_2($0)),prep|into_5(det:poss|your_6($1,n|room_7($1)),$0)))
example_end

Sent: just slide it under .
Sem: lambda $0_{r}.and(and(v|slide_2(you,pro:per|it_3,$0),adv|just_1($0)),adv|under_4($0))
example_end

Sent: you 'll make a refrigerator with two holes .
Sem: lambda $0_{r}.mod|~will_2(v|make_3(pro:per|you_1,det:art|a_4($1,att(n|refrigerator_5($1),prep|with_6(BARE($2,det:num|two_7(n|hole-pl_8($2)))))),$0),$0)
example_end

Sent: yes it cuts .
Sem: lambda $0_{r}.and(v|cut-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: it 's a sharp one .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and(pro:indef|one_5(pro:per|it_1,$0),adj|sharp_4(pro:per|it_1,$0)))
example_end

Sent: yes if you 're careful .
Sem: lambda $0_{r}.and(co|careful_5(pro:per|you_3,$0),co|yes_1($0))
example_end

Sent: an egg ?
Sem: BARE($0,Q(det:art|a_1($1,n|egg_2($1),$0)))
example_end

Sent: for your babies ?
Sem: Q(prep|for_1(det:poss|your_2($0,n|baby-pl_3($0))))
example_end

Sent: where did you lose him ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|lose_4(pro:per|you_3,pro:obj|him_5,$0),$1($0)),$0)
example_end

Sent: what are you giving them for dinner ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|give-presp_4(pro:per|you_3,$1,pro:obj|them_5,$0),prep|for_6(BARE($2,n|dinner_7($2)),$0)),$0)
example_end

Sent: oh I forgot .
Sem: lambda $0_{r}.and(v|forget-past_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: I thought maybe they were having something else .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.aux|be-past_5(and(part|have-presp_6(pro:sub|they_4,post|else_8(pro:indef|something_7),$1),adv|maybe_3($1)),$1),$0)
example_end

Sent: bottoms of the pans ?
Sem: BARE($0,Q(att(n|bottom-pl_1($0),prep|of_2(det:art|the_3($1,n|pan-pl_4($1))))))
example_end

Sent: it doesn 't understand ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|understand_4(pro:per|it_1,$0),$0),$0))
example_end

Sent: what 're you making now Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|make-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: can you use this ?
Sem: lambda $0_{r}.Q(mod|can_1(v|use_3(pro:per|you_2,pro:dem|this_4,$0),$0))
example_end

Sent: for paper ?
Sem: Q(prep|for_1(BARE($0,n|paper_2($0))))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: the fire father ?
Sem: BARE($0,Q(det:art|the_1($1,and_comp(n|fire_2($1),n|father_3($1)),$0)))
example_end

Sent: yes cow girl .
Sem: lambda $0_{r}.and(n|girl_3_cow_2($0),co|yes_1($0))
example_end

Sent: I think that might be nice .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|might_4(adj|nice_6(pro:rel|that_3,$1),$1),$0)
example_end

Sent: what 're you working on ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|work-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: some more noodles .
Sem: qn|some_1($0,and(qn|more_2($0),n|noodle-pl_3($0)))
example_end

Sent: you don 't have any noodles ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|have_4(pro:per|you_1,qn|any_5($1,n|noodle-pl_6($1)),$0),$0),$0))
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: I think he said chowder .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|say-past_4(pro:sub|he_3,$1),BARE($2,n|chowder_5($2))),$0)
example_end

Sent: what about that yellow and blue one ?
Sem: att(pro:int|what_1,prep|about_2(pro:dem|that_3($0,att(pro:indef|one_7,BARE($1,adj|blue_6($1)),$0))))
example_end

Sent: yes I know .
Sem: lambda $0_{r}.and(v|know_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: here 's a fire truck .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,and_comp(n|fire_4($1),n|truck_5($1))),$0),pro:exist|here_1($0))
example_end

Sent: you don 't need a fire truck ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|need_4(pro:per|you_1,det:art|a_5($1,and_comp(n|fire_6($1),n|truck_7($1))),$0),$0),$0))
example_end

Sent: put the dirt where ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|dirt_3($1)),$0),$2($0))
example_end

Sent: no I can 't put the dirt in the station wagon .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|put-zero_5(pro:sub|i_2,det:art|the_6($1,n|dirt_7($1)),$0),prep|in_8(det:art|the_9($2,and_comp(n|station_10($2),n|wagon_11($2))),$0)),$0),$0),co|no_1($0))
example_end

Sent: no I can 't put the dirt in the station wagon .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|put-zero_5(pro:sub|i_2,det:art|the_6($1,n|dirt_7($1)),$0),prep|in_8(det:art|the_9($2,and_comp(n|station_10($2),n|wagon_11($2))),$0)),$0),$0),co|no_1($0))
example_end

Sent: ten cents ?
Sem: BARE($0,Q(det:num|ten_1(n|cent-pl_2($0))))
example_end

Sent: Adam where 'd you go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|~genmod_3(and(v|go_5(pro:per|you_4,$0),$1($0)),$0)
example_end

Sent: let 's throw some things away .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|throw_3(pro:obj|~us_2,qn|some_4($2,n|thing-pl_5($2)),$1),adv|away_6($1)),$0)
example_end

Sent: no that 's Robin 's hat .
Sem: lambda $0_{r}.and(n:prop|robin_4's'(pro:dem|that_2,n|hat_6(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: did you say that ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|say_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: men have what ?
Sem: lambda $2_{e}.lambda $0_{r}.v|have_2(BARE($1,n|man-pl_1($1)),$2,$0)
example_end

Sent: doesn 't your Mommy have a book like this ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_5(det:poss|your_3($1,n:prop|mommy_4($1)),det:art|a_6($2,att(n|book_7($2),prep|like_8(pro:dem|this_9))),$0),$0),$0))
example_end

Sent: I 'm not a man .
Sem: lambda $0_{r}.not(det:art|a_4(pro:sub|i_1,n|man_5(pro:sub|i_1,$0)),$0)
example_end

Sent: one more .
Sem: BARE($0,pro:indef|more_2($0))
example_end

Sent: you can do it on the floor too Adam .
Sem: lambda $0_{r}.mod|can_2(and(and(v|do_3(pro:per|you_1,pro:per|it_4,$0),prep|on_5(det:art|the_6($1,n|floor_7($1)),$0)),post|too_8($0)),$0)
example_end

Sent: if you do it faster you can see it change colors .
Sem: lambda $0_{r}.mod|can_7(conj|if_1(and(v|do_3(pro:per|you_2,pro:per|it_4,$0),adj|fast-cp_5($0)),v|see_8(pro:per|you_6,lambda $1_{r}.n|change_10(pro:per|it_9,BARE($2,n|color-pl_11($2)),$1),$0)),$0)
example_end

Sent: where did you hear a lion ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|hear_4(pro:per|you_3,det:art|a_5($1,n|lion_6($1)),$0),$2($0)),$0)
example_end

Sent: do I want to see something ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:sub|i_2,lambda $1_{r}.v|see_5(pro:sub|i_2,BARE($2,pro:indef|something_6($2)),$1),$0),$0))
example_end

Sent: put it on a .
Sem: lambda $0_{r}.v|put-zero_1(you,pro:per|it_2,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you were what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_1,$0)
example_end

Sent: you were throwing it ?
Sem: lambda $0_{r}.Q(aux|be-past_2(part|throw-presp_3(pro:per|you_1,pro:per|it_4,$0),$0))
example_end

Sent: alright but then we need a scissors .
Sem: lambda $0_{r}.and(and(v|need_5(pro:sub|we_4,det:art|a_6($1,n|scissors_7($1)),$0),adv:tem|then_3($0)),adj|alright_1($0))
example_end

Sent: we need a scissors .
Sem: lambda $0_{r}.v|need_2(pro:sub|we_1,det:art|a_3($1,n|scissors_4($1)),$0)
example_end

Sent: I think the scissors are upstairs .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.adv|upstairs_6(det:art|the_3($2,n|scissors_4($2)),$1),$0)
example_end

Sent: if you say the magic word .
Sem: lambda $0_{r}.v|say_3(pro:per|you_2,det:art|the_4($1,and(adj|magic_5($1),n|word_6($1))),$0)
example_end

Sent: you didn 't say the magic word yet .
Sem: lambda $0_{r}.not(mod|do_2(and(v|say_4(pro:per|you_1,det:art|the_5($1,and(adj|magic_6($1),n|word_7($1))),$0),adv|yet_8($0)),$0),$0)
example_end

Sent: what about that word that starts with .
Sem: att(pro:int|what_1,adv|about_2(pro:rel|that_3($0,n|word_4($0))))
example_end

Sent: you have_to help him come out ?
Sem: lambda $0_{r}.Q(mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|help_4(pro:per|you_1,$1),$0))
example_end

Sent: can you find the other piece to that Adam ?
Sem: lambda $0_{r}.Q(mod|can_1(v|find_3(pro:per|you_2,det:art|the_4($1,att(and(qn|other_5($1),n|piece_6($1)),prep|to_7(det:dem|that_8))),$0),$0))
example_end

Sent: yes but you need a paper .
Sem: lambda $0_{r}.and(v|need_4(pro:per|you_3,det:art|a_5($1,n|paper_6($1)),$0),co|yes_1($0))
example_end

Sent: she 's giving you one .
Sem: lambda $0_{r}.aux|~be_2(part|give-presp_3(pro:sub|she_1,BARE($1,pro:indef|one_5($1)),pro:per|you_4,$0),$0)
example_end

Sent: a little bit too big .
Sem: BARE($0,adv|too_4(det:art|a_1($1,and(adj|little_2($1),n|bit_3($1)),adj|big_5($0))))
example_end

Sent: the shape of the scissors ?
Sem: BARE($0,Q(det:art|the_1($1,att(n|shape_2($1),prep|of_3(det:art|the_4($2,n|scissors_5($2)))),$0)))
example_end

Sent: is that a turtle ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|turtle_4(pro:rel|that_2,$0)))
example_end

Sent: it will fit .
Sem: lambda $0_{r}.mod|will_2(v|fit-zero_3(pro:per|it_1,$0),$0)
example_end

Sent: see the stars ?
Sem: lambda $0_{r}.Q(v|see_1(you,det:art|the_2($1,n|star-pl_3($1)),$0))
example_end

Sent: is it really ?
Sem: lambda $0_{r}.Q(adv|real-dadj_3(pro:per|it_2,$0))
example_end

Sent: what 's your song about ?
Sem: lambda $0_{r}.adv|about_5(pro:int|what_1,det:poss|your_3($1,n|song_4($1)),$0)
example_end

Sent: look at it .
Sem: lambda $0_{r}.cop|look_1(you,pro:per|it_3_at_2,$0)
example_end

Sent: no Diandra .
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: don 't tear the paper .
Sem: lambda $0_{r}.not(mod|do_1(v|tear_3(you,det:art|the_4($1,n|paper_5($1)),$0),$0),$0)
example_end

Sent: no dear don 't bother him dear .
Sem: lambda $0_{r}.and(not(mod|do_3(v|bother_5(you,pro:obj|him_6,$0),$0),$0),qn|no_1($0))
example_end

Sent: you touch mine .
Sem: lambda $0_{r}.v|touch_2(pro:per|you_1,pro:poss|mine_3,$0)
example_end

Sent: I 'm a nice guy .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|i_1,and(n|guy_5(pro:sub|i_1,$0),adj|nice_4(pro:sub|i_1,$0)))
example_end

Sent: maybe you could cut some things from it .
Sem: lambda $0_{r}.mod|could_3(and(and(part|cut-pastp_4(pro:per|you_2,qn|some_5($1,n|thing-pl_6($1)),$0),adv|maybe_1($0)),prep|from_7(pro:per|it_8,$0)),$0)
example_end

Sent: oh that 's something for your Mother .
Sem: lambda $0_{r}.and(att(pro:indef|something_4(pro:dem|that_2,$0),prep|for_5(det:poss|your_6($1,n:prop|mother_7($1)))),co|oh_1($0))
example_end

Sent: let 's take one piece to start with .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|take_3(pro:obj|~us_2,BARE($2,rel(det:num|one_4(n|piece_5_with_8($2)),lambda $3_{r}.v|start_7(you,$3))),$1),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I got it in the store like that .
Sem: lambda $0_{r}.and(and(v|get-past_2(pro:sub|i_1,pro:per|it_3,$0),prep|in_4(det:art|the_5($1,n|store_6($1)),$0)),prep|like_7(pro:dem|that_8,$0))
example_end

Sent: the men ?
Sem: BARE($0,Q(det:art|the_1($1,n|man-pl_2($1),$0)))
example_end

Sent: you can use the Scotch tape if you want Adam .
Sem: lambda $0_{r}.conj|if_7(v|want_9(pro:per|you_8,$0),mod|can_2(v|use_3(pro:per|you_1,det:art|the_4($1,and(n:prop|scotch_5($1),n|tape_6($1))),$0),$0))
example_end

Sent: you 're going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: yes I think the umbrella 's ready .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.adj|ready_7(det:art|the_4($2,n|umbrella_5($2)),$1),$0),co|yes_1($0))
example_end

Sent: is it raining outside ?
Sem: lambda $0_{r}.Q(aux|be-3s_1(and(part|rain-presp_3(you,$0),adv|outside_4($0)),$0))
example_end

Sent: oh we have_to use the pretty umbrella .
Sem: lambda $0_{r}.and(mod:aux|have_to_3(pro:sub|we_2,lambda $1_{r}.v|use_5(pro:sub|we_2,$1),$0),co|oh_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: I didn 't know an umbrella had arms .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|have-past_7(det:art|a_5($2,n|umbrella_6($2)),BARE($3,n|arm-pl_8($3)),$1),$0),$0),$0)
example_end

Sent: I didn 't know that an umbrella had arms .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|have-past_8(det:art|a_6($2,n|umbrella_7($2)),BARE($3,n|arm-pl_9($3)),$1),$0),$0),$0)
example_end

Sent: Diandra where 's the Scotch tape ?
Sem: lambda $0_{r}.Q(adv:int|where_2(det:art|the_4($1,and_comp(n:prop|scotch_5($1),n|tape_6($1))),$0))
example_end

Sent: you want what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|want_2(pro:per|you_1,$1,$0)
example_end

Sent: you said to put up my umbrella .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.and(v|put-zero_4(_,det:poss|my_6($2,n|umbrella_7($2)),$1),adv|up_5($1)),$0)
example_end

Sent: after Diandra 's father stops working ?
Sem: lambda $0_{r}.Q(n|stop-pl_5(n:prop|diandra_2's($1,n|father_4($1)),lambda $2_{r}.part|work-presp_6(n:prop|diandra_2's($1,n|father_4($1)),$2),$0))
example_end

Sent: oh you 're his father ?
Sem: lambda $0_{r}.Q(and(det:poss|his_4(pro:per|you_2,n|father_5(pro:per|you_2,$0)),co|oh_1($0)))
example_end

Sent: that 's my umbrella .
Sem: lambda $0_{r}.det:poss|my_3(pro:dem|that_1,n|umbrella_4(pro:dem|that_1,$0))
example_end

Sent: Adam says he 's your father .
Sem: lambda $0_{r}.v|say-3s_2(n:prop|adam_1,lambda $1_{r}.det:poss|your_5(pro:sub|he_3,n|father_6(pro:sub|he_3,$1)),$0)
example_end

Sent: he 's making you an umbrella .
Sem: lambda $0_{r}.aux|~be_2(part|make-presp_3(pro:sub|he_1,det:art|a_5($1,n|umbrella_6($1)),pro:per|you_4,$0),$0)
example_end

Sent: that 's my umbrella .
Sem: lambda $0_{r}.det:poss|my_3(pro:dem|that_1,n|umbrella_4(pro:dem|that_1,$0))
example_end

Sent: Adam says it 's mine .
Sem: lambda $0_{r}.v|say-3s_2(n:prop|adam_1,lambda $1_{r}.pro:poss|mine_5(pro:per|it_3,$1),$0)
example_end

Sent: it 's mine .
Sem: lambda $0_{r}.pro:poss|mine_3(pro:per|it_1,$0)
example_end

Sent: it 's mine .
Sem: lambda $0_{r}.pro:poss|mine_3(pro:per|it_1,$0)
example_end

Sent: it 's mine .
Sem: lambda $0_{r}.pro:poss|mine_3(pro:per|it_1,$0)
example_end

Sent: I had it first .
Sem: lambda $0_{r}.and(v|have-past_2(pro:sub|i_1,pro:per|it_3,$0),adv|first_4($0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: there 's some over there on the floor .
Sem: lambda $0_{r}.and(and(cop|~be_2(qn|some_3,$0),adv|over_4(adv|there_5($0))),prep|on_6(det:art|the_7($1,n|floor_8($1)),$0))
example_end

Sent: I 'll give him mine .
Sem: lambda $0_{r}.mod|~will_2(v|give_3(pro:sub|i_1,pro:poss|mine_5,pro:obj|him_4,$0),$0)
example_end

Sent: Adam 's going to make you an umbrella .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(n:prop|adam_1,lambda $1_{r}.and(v|make_5(n:prop|adam_1,det:art|a_7($2,n|umbrella_8($2)),$1),pro:per|you_6($1)),$0),$0)
example_end

Sent: there 's more tape .
Sem: lambda $0_{r}.cop|~be_2(BARE($1,and(qn|more_3($1),n|tape_4($1))),$0)
example_end

Sent: what are you writing Paul ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|write-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: are you writing a letter .
Sem: lambda $0_{r}.cop|be-pres_1(part|write-presp_3(pro:per|you_2,det:art|a_4($1,n|letter_5($1)),$0),$0)
example_end

Sent: can I help you ?
Sem: lambda $0_{r}.Q(mod|can_1(v|help_3(pro:sub|i_2,_,pro:per|you_4,$0),$0))
example_end

Sent: Adam almost has your umbrella ready Diandra .
Sem: lambda $0_{r}.and(aux|have-3s_3(n:prop|adam_1,lambda $1_{r}.adj|ready_6(det:poss|your_4($2,n|umbrella_5($2)),$1),$0),adv|almost_2($0))
example_end

Sent: oh he doesn 't want the umbrella .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|he_2,det:art|the_6($1,n|umbrella_7($1)),$0),$0),$0),co|oh_1($0))
example_end

Sent: that 's his piece of paper and his pen .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,att(n|piece_4(pro:dem|that_1,$0),prep|of_5(det:poss|his_8($1,n|pen_9($1)))))
example_end

Sent: where 're you going with that chair ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),prep|with_5(pro:dem|that_6($2,n|chair_7($2)),$0)),$0)
example_end

Sent: here 's my pen .
Sem: lambda $0_{r}.and(cop|~be_2(det:poss|my_3($1,n|pen_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: this is my pen .
Sem: lambda $0_{r}.det:poss|my_3(pro:dem|this_1,n|pen_4(pro:dem|this_1,$0))
example_end

Sent: no it 's my pen .
Sem: lambda $0_{r}.and(det:poss|my_4(pro:per|it_2,n|pen_5(pro:per|it_2,$0)),co|no_1($0))
example_end

Sent: no dear he has this pen .
Sem: lambda $0_{r}.and(aux|have-3s_4(pro:sub|he_3,pro:dem|this_5($1,n|pen_6($1)),$0),qn|no_1($0))
example_end

Sent: maybe some more what ?
Sem: adv|maybe_1(qn|some_2($0,att(pro:int|what_4,BARE($1,pro:indef|more_3($1)),$0)))
example_end

Sent: why are you going to use all of the paper ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|use_6(pro:per|you_3,qn|all_7(det:art|the_9($2,n|paper_10($2))),$1),$0),$3($0)),$0)
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: Diandra has the tape .
Sem: lambda $0_{r}.v|have-3s_2(n:prop|diandra_1,det:art|the_3($1,n|tape_4($1)),$0)
example_end

Sent: yes maybe the tape is just playing hide and seek .
Sem: lambda $0_{r}.and(aux|be-3s_5(and(and(part|play-presp_7(det:art|the_3($1,n|tape_4($1)),BARE($2,and_comp(v|seek_10($2),n|hide_8($2))),$0),adv|maybe_2($0)),adv|just_6($0)),$0),co|yes_1($0))
example_end

Sent: I had it first .
Sem: lambda $0_{r}.and(v|have-past_2(pro:sub|i_1,pro:per|it_3,$0),adv|first_4($0))
example_end

Sent: what 're you doing Diandra ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're playing ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|play-presp_3(pro:per|you_1,$0),$0))
example_end

Sent: I 'm going to put this away .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|i_1,lambda $1_{r}.and(v|put-zero_5(pro:sub|i_1,pro:dem|this_6,$1),adv|away_7($1)),$0),$0)
example_end

Sent: you 're taking the what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|take-presp_3(pro:per|you_1,$1,$0),$0)
example_end

Sent: oh you 're taping the paper so no one will tear it .
Sem: lambda $0_{r}.and(adv|so_7(mod|will_10(v|tear_11(qn|no_8($1,pro:indef|one_9($1)),pro:per|it_12,$0),$0),aux|~be_3(part|tape-presp_4(pro:per|you_2,det:art|the_5($2,n|paper_6($2)),$0),$0)),co|oh_1($0))
example_end

Sent: you can trap them in there ?
Sem: lambda $0_{r}.Q(mod|can_2(and(v|trap_3(pro:per|you_1,pro:obj|them_4,$0),adv|there_6($0)),$0))
example_end

Sent: what won 't break ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|will_2(v|break_4($1,$0),$0),$0)
example_end

Sent: pick the chair up .
Sem: lambda $0_{r}.and(v|pick_1(you,det:art|the_2($1,n|chair_3($1)),$0),adv|up_4($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: pick it up Paul Smith .
Sem: lambda $0_{r}.and(v|pick_1(you,pro:per|it_2,$0),adv|up_3($0))
example_end

Sent: pick it up .
Sem: lambda $0_{r}.and(v|pick_1(you,pro:per|it_2,$0),adv|up_3($0))
example_end

Sent: what 're you tearing up Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|tear-presp_4_up_5(pro:per|you_3,$1,$0),$0)
example_end

Sent: yes that 's mine .
Sem: lambda $0_{r}.and(pro:poss|mine_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: you made my umbrella .
Sem: lambda $0_{r}.v|make-past_2(pro:per|you_1,det:poss|my_3($1,n|umbrella_4($1)),$0)
example_end

Sent: she probably was going to use it for something .
Sem: lambda $0_{r}.cop|be-past_3(and(n:gerund|go-presp_4(pro:sub|she_1,lambda $1_{r}.and(v|use_6(pro:sub|she_1,pro:per|it_7,$1),prep|for_8(pro:indef|something_9,$1)),$0),adv|probable-dadj_2($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam don 't throw those .
Sem: lambda $0_{r}.not(mod|do_2(v|throw_4(n:prop|adam_1,pro:dem|those_5,$0),$0),$0)
example_end

Sent: you don 't want to remember ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|want_4(pro:per|you_1,lambda $1_{r}.v|remember_6(pro:per|you_1,$1),$0),$0),$0))
example_end

Sent: squeeze here .
Sem: lambda $0_{r}.and(n|squeeze_1(you,$0),adv|here_2($0))
example_end

Sent: push hard .
Sem: lambda $0_{r}.and(n|push_1(you,$0),adv|hard_2($0))
example_end

Sent: you stepped on your cowboy hat .
Sem: lambda $0_{r}.and(part|step-pastp_2(pro:per|you_1,$0),prep|on_3(det:poss|your_4($1,and_comp(n|cow+boy_5($1),n|hat_6($1))),$0))
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: you hit who ?
Sem: lambda $1_{e}.lambda $0_{r}.v|hit-zero_2(pro:per|you_1,$1,$0)
example_end

Sent: okay thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|okay_1($0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it was over here somewhere .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(cop|be-past_2(pro:per|it_1,$0),adv|over_3(adv|here_4($0))),$1($0))
example_end

Sent: do you see it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: yes thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|yes_1($0))
example_end

Sent: did you look under the couch ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(cop|look_3(pro:per|you_2,$0),prep|under_4(det:art|the_5($1,n|couch_6($1)),$0)),$0))
example_end

Sent: did you pinch your finger Adam ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|pinch_3(pro:per|you_2,det:poss|your_4($1,n|finger_5($1)),$0),$0))
example_end

Sent: what do you do with the button ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(det:art|the_6($2,n|button_7($2)),$0)),$0)
example_end

Sent: write number ?
Sem: lambda $0_{r}.Q(v|write_1(you,BARE($1,v|number_2($1)),$0))
example_end

Sent: what number shall I write ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|shall_3(v|write_5(pro:sub|i_4,$1($2,n|number_2($2)),$0),$0)
example_end

Sent: do you want a pencil ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,det:art|a_4($1,n|pencil_5($1)),$0),$0))
example_end

Sent: you 're welcome Adam .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: what are you writing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|write-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: cowboy rope .
Sem: BARE($0,and_comp(n|cow+boy_1($0),n|rope_2($0)))
example_end

Sent: is it a big cowboy ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,and(n|cow+boy_5(pro:per|it_2,$0),adj|big_4(pro:per|it_2,$0))))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: I have_to use that .
Sem: lambda $0_{r}.mod:aux|have_to_2(v|use_3(pro:sub|i_1,pro:dem|that_4,$0),$0)
example_end

Sent: do you want to write a number Adam with this ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|write_5(pro:per|you_2,det:art|a_6($2,n|number_7($2)),$1),prep|with_9(pro:dem|this_10,$1)),$0),$0))
example_end

Sent: write cowboy ?
Sem: lambda $0_{r}.Q(v|write_1(you,BARE($1,n|cow+boy_2($1)),$0))
example_end

Sent: don 't say kangaroo write ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|say_3(you,lambda $1_{r}.v|write_5(BARE($2,n|kangaroo_4($2)),$1),$0),$0),$0))
example_end

Sent: what are you writing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|write-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what does Captain_Kangaroo write ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|write_4(n:prop|captain_kangaroo_3,$1,$0),$0)
example_end

Sent: oh he writes with a pencil ?
Sem: lambda $0_{r}.Q(and(and(v|write-3s_3(pro:sub|he_2,$0),prep|with_4(det:art|a_5($1,n|pencil_6($1)),$0)),co|oh_1($0)))
example_end

Sent: that 's green ?
Sem: lambda $0_{r}.Q(adj|green_3(pro:dem|that_1,$0))
example_end

Sent: why don 't you sit down there on the floor and write okay ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(not(mod|do_2(and(and(and(v|write_12(pro:per|you_4,$0),$1($0)),adv|down_6(adv|there_7($0))),prep|on_8(det:art|the_9($2,n|floor_10($2)),$0)),$0),$0),adj|okay_13($0))
example_end

Sent: you 're Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(pro:per|you_1,$0))
example_end

Sent: I won 't step on your candy .
Sem: lambda $0_{r}.not(mod|will_2(and(v|step_4(pro:sub|i_1,$0),prep|on_5(det:poss|your_6($1,n|candy_7($1)),$0)),$0),$0)
example_end

Sent: wait Adam .
Sem: lambda $0_{r}.v|wait_1(you,$0)
example_end

Sent: why don 't you bring your cup up ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|bring_5(pro:per|you_4,det:poss|your_6($1,n|cup_7($1)),$0),$2($0)),adv|up_8($0)),$0),$0)
example_end

Sent: okay that 's enough .
Sem: lambda $0_{r}.and(adv|enough_4(pro:dem|that_2,$0),co|okay_1($0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: thank_you very much .
Sem: lambda $0_{r}.and(co|thank_you_1(you,$0),qn|much_4($0))
example_end

Sent: now you 've spilled a whole cup of sugar almost .
Sem: lambda $0_{r}.aux|~have_3(and(and(part|spill-pastp_4(pro:per|you_2,det:art|a_5($1,att(and(adj|whole_6($1),n|cup_7($1)),prep|of_8(BARE($2,n|sugar_9($2))))),$0),adv|now_1($0)),adv|almost_10($0)),$0)
example_end

Sent: would you like one cookie Adam ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,BARE($1,det:num|one_4(n|cookie_5($1))),$0),$0))
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: do you see the post man ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,det:art|the_4($1,and_comp(n|post_5($1),n|man_6($1))),$0),$0))
example_end

Sent: horn coming up ?
Sem: lambda $0_{r}.Q(and(part|come-presp_2(BARE($1,n|horn_1($1)),$0),adv|up_3($0)))
example_end

Sent: what are you drinking Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|drink-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I 'm drinking espresso .
Sem: lambda $0_{r}.aux|~be_2(part|drink-presp_3(pro:sub|i_1,BARE($1,n|espresso_4($1)),$0),$0)
example_end

Sent: now what 's the doggie doing ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_3(and(part|do-presp_6(det:art|the_4($1,n|dog-dim_5($1)),$2,$0),adv|now_1($0)),$0)
example_end

Sent: he 's eating what all up ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|eat-presp_3(pro:sub|he_1,$1,$0),adv|all_5(adv|up_6($0))),$0)
example_end

Sent: you 're having spaghetti ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|have-presp_3(pro:per|you_1,BARE($1,n|spaghetti_4($1)),$0),$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: a telescope .
Sem: det:art|a_1($0,n|telescope_2($0))
example_end

Sent: can you look in it ?
Sem: lambda $0_{r}.Q(mod|can_1(and(cop|look_3(pro:per|you_2,$0),prep|in_4(pro:per|it_5,$0)),$0))
example_end

Sent: see you ?
Sem: lambda $0_{r}.Q(v|see_1(you,pro:per|you_2,$0))
example_end

Sent: you can look out_of the window .
Sem: lambda $0_{r}.mod|can_2(and(cop|look_3(pro:per|you_1,$0),prep|out_of_4(det:art|the_5($1,n|window_6($1)),$0)),$0)
example_end

Sent: you see David ?
Sem: lambda $0_{r}.Q(v|see_2(pro:per|you_1,n:prop|david_3,$0))
example_end

Sent: where is David ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(n:prop|david_3,$0),$1($0))
example_end

Sent: what else do you see ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: who else do you see ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: look all around .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),adv|all_2(adv|around_3($0)))
example_end

Sent: open it again .
Sem: lambda $0_{r}.and(v|open_1(you,pro:per|it_2,$0),adv|again_3($0))
example_end

Sent: turn it over .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: what were the magic words that Urs said ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,and(n|magic_4($2),n|word-pl_5($2))),$0)
example_end

Sent: with a beard !
Sem: prep|with_1(det:art|a_2($0,n|beard_3($0)))
example_end

Sent: turn it over .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: and say the magic words .
Sem: lambda $0_{r}.v|say_2(you,det:art|the_3($1,and(n|magic_4($1),n|word-pl_5($1))),$0)
example_end

Sent: you didn 't say the right magic words .
Sem: lambda $0_{r}.not(mod|do_2(v|say_4(pro:per|you_1,det:art|the_5($1,and(n|magic_7($1),and(adj|right_6($1),n|word-pl_8($1)))),$0),$0),$0)
example_end

Sent: close it and try again .
Sem: lambda $0_{r}.and(v|try_4(you,pro:per|it_2,$0),adv|again_5($0))
example_end

Sent: turn it over .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: now rub it .
Sem: lambda $0_{r}.and(v|rub_2(you,pro:per|it_3,$0),adv|now_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I see your back .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,det:poss|your_3($1,n|back_4($1)),$0)
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: Adam where are you going with the cookies ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_3(and(and(part|go-presp_5(pro:per|you_4,$0),$1($0)),prep|with_6(det:art|the_7($2,n|cookie-pl_8($2)),$0)),$0)
example_end

Sent: oh I see it .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,pro:per|it_4,$0),co|oh_1($0))
example_end

Sent: it 's under the chair .
Sem: lambda $0_{r}.and(aux|~be_2(pro:per|it_1,$0),prep|under_3(det:art|the_4($1,n|chair_5($1)),$0))
example_end

Sent: under the chair with your telephone .
Sem: prep|under_1(det:art|the_2($0,att(n|chair_3($0),prep|with_4(det:poss|your_5($1,n|telephone_6($1))))))
example_end

Sent: careful Adam did you hit Urs ?
Sem: lambda $0_{r}.Q(and(mod|do-past_3(v|hit-zero_5(pro:per|you_4,n:prop|ursula_6,$0),$0),co|careful_1($0)))
example_end

Sent: no you didn 't hit me .
Sem: lambda $0_{r}.and(not(mod|do_3(v|hit-zero_5(pro:per|you_2,pro:obj|me_6,$0),$0),$0),co|no_1($0))
example_end

Sent: that 's alright Adam .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: she 's funny ?
Sem: lambda $0_{r}.Q(adj|fun-dn_3(pro:sub|she_1,$0))
example_end

Sent: your bunkhouse .
Sem: det:poss|your_1($0,n|bunkhouse_2($0))
example_end

Sent: where 's what ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(cop|~be_2($1,$0),$2($0))
example_end

Sent: your washing machine .
Sem: det:poss|your_1($0,and_comp(part|wash-presp_2($0),n|machine_3($0)))
example_end

Sent: I think it 's behind the door .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(cop|~be_4(pro:per|it_3,$1),prep|behind_5(det:art|the_6($2,n|door_7($2)),$1)),$0)
example_end

Sent: behind the door ?
Sem: Q(prep|behind_1(det:art|the_2($0,n|door_3($0))))
example_end

Sent: in the box of toys behind you ?
Sem: Q(prep|in_1(det:art|the_2($0,att(att(n|box_3($0),prep|of_4(BARE($1,n|toy-pl_5($1)))),prep|behind_6(pro:per|you_7)))))
example_end

Sent: is it in there ?
Sem: lambda $0_{r}.Q(and(aux|be-3s_1(pro:per|it_2,$0),prep|in_3(adv|there_4($0))))
example_end

Sent: I thought you said it was in there .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:per|you_3,lambda $2_{r}.and(cop|be-past_6(pro:per|it_5,$2),prep|in_7(adv|there_8($2))),$1),$0)
example_end

Sent: you 're looking for it .
Sem: lambda $0_{r}.aux|~be_2(and(part|look-presp_3(pro:per|you_1,$0),prep|for_4(pro:per|it_5,$0)),$0)
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: that wasn 't a dime .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|dime_5(pro:dem|that_1,$0)),$0)
example_end

Sent: that was a penny .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|penny_4(pro:dem|that_1,$0))
example_end

Sent: it 's on the floor .
Sem: lambda $0_{r}.adv|on_3(det:art|the_4($1,n|floor_5($1)),pro:per|it_1,$0)
example_end

Sent: didn 't you see the penny ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|see_4(pro:per|you_3,det:art|the_5($1,n|penny_6($1)),$0),$0),$0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: did you turn it over ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|turn_3(pro:per|you_2,pro:per|it_4,$0),adv|over_5($0)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you have_to ask Urs .
Sem: lambda $0_{r}.mod:aux|have_to_2(v|ask_3(pro:per|you_1,n:prop|ursula_4,$0),$0)
example_end

Sent: hold it like this .
Sem: lambda $0_{r}.and(v|hold_1(you,pro:per|it_2,$0),v|like_3(pro:dem|this_4,$0))
example_end

Sent: open it up .
Sem: lambda $0_{r}.and(v|open_1(you,pro:per|it_2,$0),adv|up_3($0))
example_end

Sent: you have some more .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,qn|some_3($1,pro:indef|more_4($1)),$0)
example_end

Sent: what did you get Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|get_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: the other door .
Sem: det:art|the_1($0,and(qn|other_2($0),n|door_3($0)))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: thank_you who ?
Sem: lambda $1_{e}.lambda $0_{r}.co|thank_you_1($1,$0)
example_end

Sent: magic words .
Sem: BARE($0,and(adj|magic_1($0),n|word-pl_2($0)))
example_end

Sent: where 's the magic box ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,and(adj|magic_4($1),n|box_5($1))),$0),$2($0))
example_end

Sent: what does the big bad giant say ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|say_7(det:art|the_3($1,and(adj|bad_5($1),and(adj|big_4($1),n|giant_6($1)))),$2,$0),$0)
example_end

Sent: magic hand .
Sem: BARE($0,and(adj|magic_1($0),n|hand_2($0)))
example_end

Sent: do you remember that story ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,pro:rel|that_4($1,n|story_5($1)),$0),$0))
example_end

Sent: it 's cold ?
Sem: lambda $0_{r}.Q(n|cold_3(pro:per|it_1,$0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I 've had enough .
Sem: lambda $0_{r}.aux|~have_2(and(part|have-pastp_3(pro:sub|i_1,$0),adv|enough_4($0)),$0)
example_end

Sent: mixit dirt !
Sem: BARE($0,and_comp(chi|mixit_1($0),n|dirt_2($0)))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: one piece of dirt ?
Sem: BARE($0,Q(att(det:num|one_1(n|piece_2($0)),prep|of_3(BARE($1,n|dirt_4($1))))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what does he mean ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(v|mean_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: I don 't think she 's still in here .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(aux|~be_6(pro:sub|she_5,$1),prep|in_8(adv|still_7(adv|here_9($1)))),$0),$0),$0)
example_end

Sent: a pen .
Sem: det:art|a_1($0,n|pen_2($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: now you can draw another picture .
Sem: lambda $0_{r}.mod|can_3(and(v|draw_4(pro:per|you_2,qn|another_5($1,n|picture_6($1)),$0),adv|now_1($0)),$0)
example_end

Sent: Chocks are vitamins .
Sem: lambda $0_{r}.n|vitamin-pl_3(n:prop|chocks_1,$0)
example_end

Sent: she didn 't say Chocks .
Sem: lambda $0_{r}.not(mod|do_2(v|say_4(pro:sub|she_1,n:prop|chocks_5,$0),$0),$0)
example_end

Sent: she said chalk .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|she_1,BARE($1,n|chalk_3($1)),$0)
example_end

Sent: wipe it ?
Sem: lambda $0_{r}.Q(v|wipe_1(you,pro:per|it_2,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: did you show Urs the puppet ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:art|the_5($1,n|puppet_6($1)),n:prop|ursula_4,$0),$0)
example_end

Sent: she wouldn 't frighten you .
Sem: lambda $0_{r}.not(mod|will_2(v|frighten_4(pro:sub|she_1,pro:per|you_5,$0),$0),$0)
example_end

Sent: oh you have money ?
Sem: lambda $0_{r}.Q(and(v|have_3(pro:per|you_2,BARE($1,n|money_4($1)),$0),co|oh_1($0)))
example_end

Sent: you have it ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: what else do you want to do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_3(v|want_5(pro:per|you_4,lambda $1_{r}.v|do_7(pro:per|you_4,$2,$1),$0),$0)
example_end

Sent: you just shake it down .
Sem: lambda $0_{r}.and(and(v|shake_3(pro:per|you_1,pro:per|it_4,$0),adv|just_2($0)),adv|down_5($0))
example_end

Sent: what happened to it ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:per|it_4,$0))
example_end

Sent: what is that called Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(v|call-past_4(pro:rel|that_3,$1,$0),$0)
example_end

Sent: d you know ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,$0),$0))
example_end

Sent: you 're tired .
Sem: lambda $0_{r}.part|tire-pastp_3(pro:per|you_1,$0)
example_end

Sent: are you tired ?
Sem: lambda $0_{r}.Q(v|tire-past_3(pro:per|you_2,$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: you open it .
Sem: lambda $0_{r}.v|open_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: number eight ?
Sem: BARE($0,Q(det:num|eight_2(n|number_1($0))))
example_end

Sent: funny baseball I think he said .
Sem: lambda $0_{r}.v|think_4(pro:sub|i_3,lambda $1_{r}.v|say-past_6(pro:sub|he_5,BARE($2,and(adj|fun-dn_1($2),n|baseball_2($2))),$1),$0)
example_end

Sent: that 's the other part of Urs  game isn 't it ?
Sem: lambda $0_{r}.Q(and(det:art|the_3(pro:dem|that_1,att(and(n|part_5(pro:dem|that_1,$0),qn|other_4(pro:dem|that_1,$0)),prep|of_6(n:prop|ursula_7's($1,n|game_9($1))))),not(cop|be_10(pro:per|it_12,$0),$0)))
example_end

Sent: you have_to wash it !
Sem: lambda $0_{r}.mod:aux|have_to_2(v|wash_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: how did it get dirty ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|it_3,lambda $1_{r}.adj|dirt-dn_5(pro:per|it_3,$1),$0),$2($0)),$0)
example_end

Sent: did you ask Urs ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|ask_3(pro:per|you_2,n:prop|ursula_4,$0),$0))
example_end

Sent: did you ask me ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|ask_3(pro:per|you_2,pro:obj|me_4,$0),$0))
example_end

Sent: bring them to Cromer .
Sem: lambda $0_{r}.and(v|bring_1(you,pro:obj|them_2,$0),prep|to_3(n:prop|cromer_4,$0))
example_end

Sent: may be he can fix it .
Sem: lambda $0_{r}.mod|can_4(and(v|fix_5(pro:sub|he_3,pro:per|it_6,$0),cop|be_2_may_1($0)),$0)
example_end

Sent: what is he making ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|make-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: where does that go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|go_4(det:dem|that_3,$0),$1($0)),$0)
example_end

Sent: what is it Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: be very gentle with it it will break .
Sem: BARE($0,adj|gentle_3($0))
example_end

Sent: it can 't be fixed .
Sem: lambda $0_{r}.not(aux|be_4(mod|can_2(part|fix-pastp_5(pro:per|it_1,$0),$0),$0),$0)
example_end

Sent: okay you go back out there and I 'll let you have it .
Sem: lambda $0_{r}.and(and(and(v|go_3(pro:per|you_2,lambda $1_{r}.mod|~will_9(v|let-zero_10(pro:sub|i_8,lambda $2_{r}.v|have_12(pro:per|you_11,pro:per|it_13,$2),$1),$1),$0),adv|back_4($0)),adv|out_5(adv|there_6($0))),co|okay_1($0))
example_end

Sent: I know but it 's not all together .
Sem: lambda $0_{r}.and(v|know_2(pro:sub|i_1,$0),not(and(cop|~be_5(pro:per|it_4,$0),adv|all_7(adv|together_8($0))),$0))
example_end

Sent: what d you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: secret beans ?
Sem: BARE($0,Q(and(adj|secret_1($0),n|bean-pl_2($0))))
example_end

Sent: you put it back together .
Sem: lambda $0_{r}.and(and(v|put-zero_2(pro:per|you_1,pro:per|it_3,$0),adv|back_4($0)),adv|together_5($0))
example_end

Sent: when you take those it comes apart .
Sem: lambda $0_{r}.conj|when_1(v|take_3(pro:per|you_2,pro:dem|those_4,$0),and(v|come-3s_6(pro:per|it_5,$0),adv|apart_7($0)))
example_end

Sent: you cracked it ?
Sem: lambda $0_{r}.Q(v|crack-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: down the meat ?
Sem: Q(prep|down_1(det:art|the_2($0,n|meat_3($0))))
example_end

Sent: it turns like an airplane ?
Sem: lambda $0_{r}.Q(and(v|turn-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,n|airplane_5($1)),$0)))
example_end

Sent: what 's going around ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|go-presp_3($1,$0),adv|around_4($0)),$0)
example_end

Sent: propellers are on airplanes aren 't they ?
Sem: lambda $0_{r}.Q(and(and(cop|be-pres_2(BARE($1,n|propel-dv_1($1)),$0),prep|on_3(BARE($2,n|airplane-pl_4($2)),$0)),not(aux|be_5(pro:sub|they_7,$0),$0)))
example_end

Sent: when you see an airplane you see propellers .
Sem: lambda $0_{r}.conj|when_1(v|see_3(pro:per|you_2,det:art|a_4($1,n|airplane_5($1)),$0),v|see_7(pro:per|you_6,BARE($2,n|propel-dv_8($2)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you can ride it ?
Sem: lambda $0_{r}.Q(mod|can_2(v|ride_3(pro:per|you_1,pro:per|it_4,$0),$0))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're fixing the busy bulldozer ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|fix-presp_3(pro:per|you_1,det:art|the_4($1,and(adj|busy_5($1),n|bulldoze-dv_6($1))),$0),$0))
example_end

Sent: am I a strawberry ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:sub|i_2,n|strawberry_4(pro:sub|i_2,$0)))
example_end

Sent: where is the ball ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|ball_4($1)),$0),$2($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: behind the kitchen door .
Sem: prep|behind_1(det:art|the_2($0,and_comp(n|kitchen_3($0),n|door_4($0))))
example_end

Sent: did it pop ?
Sem: lambda $0_{r}.Q(v|do-past_1(n|pop_3(pro:per|it_2,$0),$0))
example_end

Sent: d you have the ball in there ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,det:art|the_4($1,n|ball_5($1)),$0),prep|in_6(adv|there_7($0))),$0))
example_end

Sent: where 's the ball ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|ball_4($1)),$0),$2($0))
example_end

Sent: what happened Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|happen-past_2($1,$0)
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: don 't what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_1(you,$1,$0),$0)
example_end

Sent: why should I burn you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|should_2(and(v|burn_4(pro:sub|i_3,pro:per|you_5,$0),$1($0)),$0)
example_end

Sent: wait Adam .
Sem: lambda $0_{r}.v|wait_1(you,$0)
example_end

Sent: did you say dance ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|say_3(pro:per|you_2,BARE($1,n|dance_4($1)),$0),$0))
example_end

Sent: wait you come around here honey .
Sem: lambda $0_{r}.and(and(v|come_3(pro:per|you_2,$0),prep|around_4(adv|here_5($0))),v|wait_1(you,$0))
example_end

Sent: this is yours .
Sem: lambda $0_{r}.pro:poss|yours_3(pro:dem|this_1,$0)
example_end

Sent: no she said one .
Sem: lambda $0_{r}.and(v|say-past_3(pro:sub|she_2,BARE($1,pro:indef|one_4($1)),$0),co|no_1($0))
example_end

Sent: just one .
Sem: adv|just_1(BARE($0,det:num|one_2($0)))
example_end

Sent: you 're Urs ?
Sem: lambda $0_{r}.Q(n:prop|ursula_3(pro:per|you_1,$0))
example_end

Sent: you 're not Ursula .
Sem: lambda $0_{r}.not(n:prop|ursula_4(pro:per|you_1,$0),$0)
example_end

Sent: where are you going with that cookie ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),prep|with_5(pro:dem|that_6($2,n|cookie_7($2)),$0)),$0)
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: please don 't call you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|call_4(you,pro:per|you_5,$0),$0),$0),co|please_1($0)))
example_end

Sent: because Bobo 's crying .
Sem: lambda $0_{r}.aux|~be_3(part|cry-presp_4(n:prop|bobo_2,$0),$0)
example_end

Sent: why is Bobo crying ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|cry-presp_4(n:prop|bobo_3,$0),$1($0)),$0)
example_end

Sent: oh he 's crying at fourteen o'clock ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|cry-presp_4(pro:sub|he_2,$0),prep|at_5(BARE($1,det:num|fourteen_6(n|o'clock_7($1))),$0)),$0),co|oh_1($0)))
example_end

Sent: you were upstairs ?
Sem: lambda $0_{r}.Q(and(aux|be-past_2(pro:per|you_1,$0),adv|upstairs_3($0)))
example_end

Sent: and he was crying because you were upstairs ?
Sem: lambda $0_{r}.Q(conj|because_5(and(aux|be-past_7(pro:per|you_6,$0),adv|upstairs_8($0)),aux|be-past_3(part|cry-presp_4(pro:sub|he_2,$0),$0)))
example_end

Sent: he wants you downstairs ?
Sem: lambda $0_{r}.Q(v|want-3s_2(pro:sub|he_1,adv|downstairs_4(pro:per|you_3),$0))
example_end

Sent: he didn 't want you to take a nap .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|he_1,lambda $1_{r}.v|take_7(pro:per|you_5,det:art|a_8($2,n|nap_9($2)),$1),$0),$0),$0)
example_end

Sent: you 're dripping .
Sem: lambda $0_{r}.aux|~be_2(part|drip-presp_3(pro:per|you_1,$0),$0)
example_end

Sent: you 're supposed to drink it honey .
Sem: lambda $0_{r}.aux|~be_2(v|suppose-past_3(pro:per|you_1,lambda $1_{r}.v|drink_5(pro:per|you_1,pro:per|it_6,$1),$0),$0)
example_end

Sent: you don 't eat it with a spoon .
Sem: lambda $0_{r}.not(mod|do_2(and(v|eat_4(pro:per|you_1,pro:per|it_5,$0),prep|with_6(det:art|a_7($1,n|spoon_8($1)),$0)),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: it 's good .
Sem: lambda $0_{r}.adj|good_3(pro:per|it_1,$0)
example_end

Sent: cowboy 's sleeping .
Sem: lambda $0_{r}.aux|~be_2(part|sleep-presp_3(BARE($1,n|cow+boy_1($1)),$0),$0)
example_end

Sent: where 's the cowboy ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|cow+boy_4($1)),$0),$2($0))
example_end

Sent: look on your shirt .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|on_2(det:poss|your_3($1,n|shirt_4($1)),$0))
example_end

Sent: cranberry juice on your shirt .
Sem: BARE($0,att(and_comp(n|cranberry_1($0),n|juice_2($0)),prep|on_3(det:poss|your_4($1,n|shirt_5($1)))))
example_end

Sent: that 's why you should drink it .
Sem: lambda $0_{r}.cop|~be_2(pro:dem|that_1,lambda $1_{r}.mod|should_5(and(v|drink_6(pro:per|you_4,pro:per|it_7,$1),adv:int|why_3($1)),$1),$0)
example_end

Sent: no you don 't need water on that dear .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|need_5(pro:per|you_2,BARE($1,n|water_6($1)),$0),adv|on_7(pro:rel|that_8,$0)),$0),$0),co|no_1($0))
example_end

Sent: you want to smoke Camels ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.v|smoke_4(pro:per|you_1,n:prop|camels_5,$1),$0))
example_end

Sent: why do you want to smoke Camels ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.n|smoke_6(pro:per|you_3,n:prop|camels_7,$1),$0),$2($0)),$0)
example_end

Sent: yes Urs Paul !
Sem: lambda $0_{r}.and(n:prop|paul_3_ursula_2($0),co|yes_1($0))
example_end

Sent: where 's the mixer ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|mix-dv_4($1)),$0),$2($0))
example_end

Sent: you 're playing a new game ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|play-presp_3(pro:per|you_1,det:art|a_4($1,and(adj|new_5($1),n|game_6($1))),$0),$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: who found it ?
Sem: lambda $1_{e}.lambda $0_{r}.v|find-past_2($1,pro:per|it_3,$0)
example_end

Sent: you found it ?
Sem: lambda $0_{r}.Q(v|find-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: where did you find it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|find_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: what happens now ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_2($1,$0),adv|now_3($0))
example_end

Sent: oh did you say the right magic words ?
Sem: lambda $0_{r}.Q(and(mod|do-past_2(v|say_4(pro:per|you_3,det:art|the_5($1,and(n|magic_7($1),and(adj|right_6($1),n|word-pl_8($1)))),$0),$0),co|oh_1($0)))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: did you turn it over ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|turn_3(pro:per|you_2,pro:per|it_4,$0),adv|over_5($0)),$0))
example_end

Sent: now say the magic words .
Sem: lambda $0_{r}.and(v|say_2(you,det:art|the_3($1,and(n|magic_4($1),n|word-pl_5($1))),$0),adv|now_1($0))
example_end

Sent: then what happens ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_3($1,$0),adv:tem|then_1($0))
example_end

Sent: say the magic words .
Sem: lambda $0_{r}.v|say_1(you,det:art|the_2($1,and(n|magic_3($1),n|word-pl_4($1))),$0)
example_end

Sent: you ask Ursula .
Sem: lambda $0_{r}.v|ask_2(pro:per|you_1,n:prop|ursula_3,$0)
example_end

Sent: open it up .
Sem: lambda $0_{r}.and(v|open_1(you,pro:per|it_2,$0),adv|up_3($0))
example_end

Sent: cowboy shale or cowboy Bill ?
Sem: BARE($0,Q(and_comp(n|cow+boy_4($0),and_comp(n|cow+boy_1($0),n:prop|bill_5($0)))))
example_end

Sent: cowboy Bill ?
Sem: BARE($0,Q(and_comp(n|cow+boy_1($0),n:prop|bill_2($0))))
example_end

Sent: don 't put them in anyone 's face .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:obj|them_4,$0),prep|in_5(pro:indef|anyone_6($1,n|face_8($1)),$0)),$0),$0)
example_end

Sent: no what 's that in your hand ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(att(pro:dem|that_4,prep|in_5(det:poss|your_6($2,n|hand_7($2)))),$0),co|no_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: yes a baby carriage .
Sem: lambda $0_{r}.and(det:art|a_2($1,and_comp(n|baby_3($1),n|carriage_4($1)),$0),co|yes_1($0))
example_end

Sent: are you finished ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(v|finish-past_3(pro:per|you_2,$0),$0))
example_end

Sent: do you want some more coffee ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,qn|some_4($1,and(qn|more_5($1),n|coffee_6($1))),$0),$0))
example_end

Sent: oh are you eating a cookie ?
Sem: lambda $0_{r}.Q(and(aux|be-pres_2(part|eat-presp_4(pro:per|you_3,det:art|a_5($1,n|cookie_6($1)),$0),$0),co|oh_1($0)))
example_end

Sent: you like what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|like_2(pro:per|you_1,$1,$0)
example_end

Sent: your spoon .
Sem: det:poss|your_1($0,n|spoon_2($0))
example_end

Sent: you left it out on the table .
Sem: lambda $0_{r}.and(and(adv|left_2(pro:per|you_1,pro:per|it_3,$0),adv|out_4($0)),prep|on_5(det:art|the_6($1,n|table_7($1)),$0))
example_end

Sent: fire truck ?
Sem: BARE($0,Q(and_comp(n|fire_1($0),n|truck_2($0))))
example_end

Sent: on gun ?
Sem: Q(prep|on_1(BARE($0,n|gun_2($0))))
example_end

Sent: is that where the fire truck has gone ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(pro:dem|that_2,lambda $1_{r}.aux|have-3s_7(part|go-pastp_8(det:art|the_4($2,and_comp(n|fire_5($2),n|truck_6($2))),$1),$1),$0))
example_end

Sent: can you put the fire out on guns ?
Sem: lambda $0_{r}.Q(mod|can_1(and(and(v|put-zero_3(pro:per|you_2,det:art|the_4($1,v|fire_5($1)),$0),adv|out_6($0)),prep|on_7(BARE($2,n|gun-pl_8($2)),$0)),$0))
example_end

Sent: they wouldn 't need a big fire truck for that .
Sem: lambda $0_{r}.not(mod|will_2(and(v|need_4(pro:sub|they_1,det:art|a_5($1,and_comp(n|fire_7($1),and(adj|big_6($1),n|truck_8($1)))),$0),prep|for_9(pro:dem|that_10,$0)),$0),$0)
example_end

Sent: some pie ?
Sem: BARE($0,Q(qn|some_1($1,n|pie_2($1),$0)))
example_end

Sent: you blow it .
Sem: lambda $0_{r}.v|blow_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: you can blow .
Sem: lambda $0_{r}.mod|can_2(v|blow_3(pro:per|you_1,$0),$0)
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what 's in it when you blow ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|when_5(v|blow_7(pro:per|you_6,$0),and(cop|~be_2($1,$0),prep|in_3(pro:per|it_4,$0)))
example_end

Sent: some sugar ?
Sem: BARE($0,Q(qn|some_1($1,n|sugar_2($1),$0)))
example_end

Sent: you blow it .
Sem: lambda $0_{r}.v|blow_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: hold it at the top .
Sem: lambda $0_{r}.and(v|hold_1(you,pro:per|it_2,$0),prep|at_3(det:art|the_4($1,n|top_5($1)),$0))
example_end

Sent: what are the colors ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|color-pl_4($2)),$0)
example_end

Sent: red yes .
Sem: lambda $0_{r}.and(adj|red_1($0),co|yes_2($0))
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: hold it now .
Sem: lambda $0_{r}.and(v|hold_1(you,pro:per|it_2,$0),adv|now_3($0))
example_end

Sent: whose suitcase is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|suitcase_2(pro:dem|that_4,$0))
example_end

Sent: that 's his name .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|name_4(pro:dem|that_1,$0))
example_end

Sent: whose suitcase is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|suitcase_2(pro:dem|that_4,$0))
example_end

Sent: what does it say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: whose tractor is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|tractor_2(pro:dem|that_4,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: put the ball where ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|ball_3($1)),$0),$2($0))
example_end

Sent: tape recorder ?
Sem: BARE($0,Q(and_comp(n|tape_1($0),n|record-dv_2($0))))
example_end

Sent: no you can 't put the ball on the tape recorder .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|put-zero_5(pro:per|you_2,det:art|the_6($1,n|ball_7($1)),$0),prep|on_8(det:art|the_9($2,and_comp(n|tape_10($2),n|record-dv_11($2))),$0)),$0),$0),co|no_1($0))
example_end

Sent: what did the ball hit ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(v|hit-zero_5(det:art|the_3($1,n|ball_4($1)),$2,$0),$0)
example_end

Sent: oh hit Mommy 's rug ?
Sem: lambda $0_{r}.Q(and(n|hit_2(you,n:prop|mommy_3's($1,n|rug_5($1)),$0),co|oh_1($0)))
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: is it under the chair ?
Sem: lambda $0_{r}.Q(prep|under_3(det:art|the_4($1,n|chair_5($1)),pro:per|it_2,$0))
example_end

Sent: see you later again ?
Sem: lambda $0_{r}.Q(and(and(v|see_1(you,pro:per|you_2,$0),adv|later_3($0)),adv|again_4($0)))
example_end

Sent: Adam whose ball is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_5,n|ball_3(pro:dem|that_5,$0))
example_end

Sent: no you can 't sit on my book .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|sit_5(pro:per|you_2,$0),prep|on_6(det:poss|my_7($1,n|book_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: what kind is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|kind_2(pro:dem|that_4,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: this is a diesel locomotive .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,and_comp(n|diesel_4(pro:dem|this_1,$0),n|locomotive_5(pro:dem|this_1,$0)))
example_end

Sent: can you say that ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: baggage car ?
Sem: BARE($0,Q(and_comp(n|baggage_1($0),n|car_2($0))))
example_end

Sent: streamlined coach .
Sem: BARE($0,and_comp(part|streamline-pastp_1($0),n|coach_2($0)))
example_end

Sent: sleeping car .
Sem: BARE($0,and_comp(part|sleep-presp_1($0),n|car_2($0)))
example_end

Sent: dining car .
Sem: BARE($0,and_comp(part|dine-presp_1($0),n|car_2($0)))
example_end

Sent: modern steam locomotive .
Sem: BARE($0,and_comp(n|steam_2($0),and(adj|modern_1($0),n|locomotive_3($0))))
example_end

Sent: electric locomotive .
Sem: BARE($0,and_comp(adj|electric_1($0),n|locomotive_2($0)))
example_end

Sent: rotary snow plow .
Sem: BARE($0,and_comp(and_comp(adj|rotary_1($0),n|snow_2($0)),n|plow_3($0)))
example_end

Sent: flat car .
Sem: BARE($0,and_comp(adj|flat_1($0),n|car_2($0)))
example_end

Sent: mail car .
Sem: BARE($0,and_comp(n|mail_1($0),n|car_2($0)))
example_end

Sent: tank car .
Sem: BARE($0,and_comp(n|tank_1($0),n|car_2($0)))
example_end

Sent: box car .
Sem: BARE($0,and_comp(n|box_1($0),n|car_2($0)))
example_end

Sent: do you know what kind this is ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.$2(pro:dem|this_6,n|kind_5(pro:dem|this_6,$1)),$0),$0)
example_end

Sent: yes there 's a man .
Sem: lambda $0_{r}.and(cop|~be_3(det:art|a_4($1,n|man_5($1)),$0),co|yes_1($0))
example_end

Sent: what kind is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|kind_2(pro:dem|that_4,$0))
example_end

Sent: put the baby where ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|baby_3($1)),$0),$2($0))
example_end

Sent: where is the baby ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|baby_4($1)),$0),$2($0))
example_end

Sent: where is she ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:sub|she_3,$0),$1($0))
example_end

Sent: where is she ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:sub|she_3,$0),$1($0))
example_end

Sent: bed yes .
Sem: lambda $0_{r}.and(n|bed_1($0),co|yes_2($0))
example_end

Sent: this is the sleeping car .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,and_comp(part|sleep-presp_4(pro:dem|this_1,$0),n|car_5(pro:dem|this_1,$0)))
example_end

Sent: this is a box car .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,and_comp(n|box_4(pro:dem|this_1,$0),n|car_5(pro:dem|this_1,$0)))
example_end

Sent: know what kind that is ?
Sem: lambda $2_{e}.lambda $0_{r}.v|know_1(you,lambda $1_{r}.$2(pro:rel|that_4,n|kind_3(pro:rel|that_4,$1)),$0)
example_end

Sent: that 's the mail car .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,and_comp(n|mail_4(pro:dem|that_1,$0),n|car_5(pro:dem|that_1,$0)))
example_end

Sent: stop car .
Sem: BARE($0,and_comp(n|stop_1($0),n|car_2($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: there 's a truck that looks like that .
Sem: lambda $0_{r}.cop|~be_2(det:art|a_3($1,n|truck_4($1)),$0)
example_end

Sent: tank car .
Sem: BARE($0,and_comp(n|tank_1($0),n|car_2($0)))
example_end

Sent: and the last car on a train is called the what ?
Sem: lambda $3_{e}.lambda $0_{r}.aux|be-3s_8(part|call-pastp_9(det:art|the_2($1,att(and(adj|last_3($1),n|car_4($1)),prep|on_5(det:art|a_6($2,n|train_7($2))))),$3,$0),$0)
example_end

Sent: it 's called the caboose .
Sem: lambda $0_{r}.aux|~be_2(part|call-pastp_3(pro:per|it_1,det:art|the_4($1,n|caboose_5($1)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: yes that does look like a broom doesn 't it .
Sem: lambda $0_{r}.and(and(v|do-3s_3(and(cop|look_4(pro:rel|that_2,$0),conj|like_5(det:art|a_6($1,n|broom_7($1)),$0)),$0),not(mod|do_8(pro:per|it_10,$0),$0)),co|yes_1($0))
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: whose is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: fix bike ?
Sem: lambda $0_{r}.Q(v|fix_1(you,BARE($1,n|bike_2($1)),$0))
example_end

Sent: what do you want to take off ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.and(v|take_6($2,$1),adv|off_7($1)),$0),$0)
example_end

Sent: isn 't that pretty ?
Sem: lambda $0_{r}.Q(not(adv|pretty_4(pro:dem|that_3,$0),$0))
example_end

Sent: did you write it already ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|write_3(pro:per|you_2,pro:per|it_4,$0),adv|already_5($0)),$0))
example_end

Sent: careful don 't hit Ursula 's feet with the tow truck .
Sem: lambda $0_{r}.and(not(mod|do_2(and(n|hit_4(you,n:prop|ursula_5's($1,n|foot-pl_7($1)),$0),prep|with_8(det:art|the_9($2,and_comp(n|tow_10($2),n|truck_11($2))),$0)),$0),$0),co|careful_1($0))
example_end

Sent: you hit your knee ?
Sem: lambda $0_{r}.Q(v|hit-zero_2(pro:per|you_1,det:poss|your_3($1,n|knee_4($1)),$0))
example_end

Sent: the tow truck hit your knee ?
Sem: lambda $0_{r}.Q(v|hit-zero_4(det:art|the_1($1,and_comp(n|tow_2($1),n|truck_3($1))),det:poss|your_5($2,n|knee_6($2)),$0))
example_end

Sent: yes that is Donald Duck .
Sem: lambda $0_{r}.and(n:prop|duck_5_donald_4(pro:rel|that_2,$0),co|yes_1($0))
example_end

Sent: that 's not Pinnochio .
Sem: lambda $0_{r}.not(n:prop|pinnochio_4(pro:dem|that_1,$0),$0)
example_end

Sent: those are chipmunks and Mickey_Mouse .
Sem: lambda $0_{r}.n:prop|mickey_mouse_5(pro:dem|those_1,$0)
example_end

Sent: put your pajamas on ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,det:poss|your_2($1,n|pajamas_3($1)),$0),adv|on_4($0)))
example_end

Sent: Daddy 's racket ?
Sem: BARE($0,Q(n:prop|daddy_1's($1,n|racket_3($1),$0)))
example_end

Sent: Adam whose racket is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_5,n|racket_3(pro:dem|that_5,$0))
example_end

Sent: you can 't play with Daddy 's .
Sem: lambda $0_{r}.not(mod|can_2(v|play_4(pro:per|you_1,n:prop|daddy_6_with_5,$0),$0),$0)
example_end

Sent: where did your racket go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_5(det:poss|your_3($1,n|racket_4($1)),$0),$2($0)),$0)
example_end

Sent: yes Daddy 's racket .
Sem: lambda $0_{r}.and(n:prop|daddy_2's($1,n|racket_4($1),$0),co|yes_1($0))
example_end

Sent: whose racket is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|racket_2(pro:dem|that_4,$0))
example_end

Sent: whose brief case is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_5,n|case_3_brief_2(pro:dem|this_5,$0))
example_end

Sent: get off her briefcase honey .
Sem: lambda $0_{r}.and(v|get_1(you,det:poss|her_3($1,n|briefcase_4($1)),$0),prep|off_2($0))
example_end

Sent: get up .
Sem: lambda $0_{r}.and(v|get_1(you,$0),adv|up_2($0))
example_end

Sent: come on .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|on_2($0))
example_end

Sent: no you can 't sit on his either .
Sem: lambda $0_{r}.and(not(mod|can_3(and(and(v|sit_5(pro:per|you_2,$0),prep|on_6(det:poss|his_7,$0)),adv|either_8($0)),$0),$0),co|no_1($0))
example_end

Sent: where 's your foot ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|foot_4($1)),$0),$2($0))
example_end

Sent: where 's the other one ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,att(pro:indef|one_5,BARE($2,qn|other_4($2)),$1)),$0),$3($0))
example_end

Sent: oh did you find it ?
Sem: lambda $0_{r}.Q(and(mod|do-past_2(v|find_4(pro:per|you_3,pro:per|it_5,$0),$0),co|oh_1($0)))
example_end

Sent: how many do you have now ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_3(and(v|have_5(pro:per|you_4,BARE($1,$2(qn|many_2($1))),$0),adv|now_6($0)),$0)
example_end

Sent: two feet .
Sem: BARE($0,det:num|two_1(n|foot-pl_2($0)))
example_end

Sent: how many does Mr Cromer have ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-3s_3(v|have_6(n:prop|cromer_5_mr_4,BARE($1,$2(qn|many_2($1))),$0),$0)
example_end

Sent: oh that 's the knee ?
Sem: lambda $0_{r}.Q(and(det:art|the_4(pro:dem|that_2,n|knee_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: do you have elbow ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,BARE($1,n|elbow_4($1)),$0),$0))
example_end

Sent: what 's an elbow ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|elbow_4($2)),$0)
example_end

Sent: oh it 's right on your arm .
Sem: lambda $0_{r}.and(adv|right_4(prep|on_5(det:poss|your_6($1,n|arm_7($1)),pro:per|it_2,$0)),co|oh_1($0))
example_end

Sent: it 's all squashed .
Sem: lambda $0_{r}.adv|all_3(part|squash-pastp_4(pro:per|it_1,$0))
example_end

Sent: all squashed .
Sem: BARE($0,post|all_1(part|squash-pastp_2($0)))
example_end

Sent: you 're stepping on her feet .
Sem: lambda $0_{r}.aux|~be_2(and(n:gerund|step-presp_3(pro:per|you_1,$0),prep|on_4(det:poss|her_5($1,n|foot-pl_6($1)),$0)),$0)
example_end

Sent: where are you sitting ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|sit-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: Joshua 's chair or did you say Joshua 's shirt ?
Sem: lambda $0_{r}.Q(v|do-past_5(v|say_7(pro:per|you_6,n:prop|joshua_8's($1,n|shirt_10($1)),$0),$0))
example_end

Sent: you 're picking the dirt up with your bulldozer ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(and(part|pick-presp_3(pro:per|you_1,det:art|the_4($1,n|dirt_5($1)),$0),adv|up_6($0)),prep|with_7(det:poss|your_8($2,n|bulldoze-dv_9($2)),$0)),$0))
example_end

Sent: the big tow truck 's picking Joshua 's dirt up ?
Sem: lambda $0_{r}.Q(aux|~be_5(and(part|pick-presp_6(det:art|the_1($1,and_comp(n|tow_3($1),and(adj|big_2($1),n|truck_4($1)))),n:prop|joshua_7's($2,n|dirt_9($2)),$0),adv|up_10($0)),$0))
example_end

Sent: write that ?
Sem: lambda $0_{r}.Q(v|write_1(you,pro:dem|that_2,$0))
example_end

Sent: the tractor can 't write .
Sem: lambda $0_{r}.not(mod|can_3(v|write_5(det:art|the_1($1,n|tractor_2($1)),$0),$0),$0)
example_end

Sent: the racket can 't write either .
Sem: lambda $0_{r}.not(mod|can_3(and(v|write_5(det:art|the_1($1,n|racket_2($1)),$0),adv|either_6($0)),$0),$0)
example_end

Sent: Adam is sitting down .
Sem: lambda $0_{r}.aux|be-3s_2(and(part|sit-presp_3(n:prop|adam_1,$0),adv|down_4($0)),$0)
example_end

Sent: pick the dirt up ?
Sem: lambda $0_{r}.Q(and(v|pick_1(you,det:art|the_2($1,n|dirt_3($1)),$0),adv|up_4($0)))
example_end

Sent: pick the roadgrader up ?
Sem: lambda $0_{r}.Q(and(v|pick_1(you,det:art|the_2($1,n|roadgrader_3($1)),$0),adv|up_4($0)))
example_end

Sent: no you don 't have a nail in there .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|have_5(pro:per|you_2,det:art|a_6($1,n|nail_7($1)),$0),prep|in_8(adv|there_9($0))),$0),$0),co|no_1($0))
example_end

Sent: he 's just sharp .
Sem: lambda $0_{r}.adv|just_3(adj|sharp_4(pro:sub|he_1,$0))
example_end

Sent: Robie 's nail ?
Sem: BARE($0,Q(n:prop|robie_1's($1,n|nail_3($1),$0)))
example_end

Sent: pick the glove up ?
Sem: lambda $0_{r}.Q(and(v|pick_1(you,det:art|the_2($1,v|glove_3($1)),$0),adv|up_4($0)))
example_end

Sent: pick the paper up ?
Sem: lambda $0_{r}.Q(and(v|pick_1(you,det:art|the_2($1,n|paper_3($1)),$0),adv|up_4($0)))
example_end

Sent: oh you can see the rug now ?
Sem: lambda $0_{r}.Q(and(mod|can_3(and(v|see_4(pro:per|you_2,det:art|the_5($1,n|rug_6($1)),$0),adv|now_7($0)),$0),co|oh_1($0)))
example_end

Sent: what color is the rug ?
Sem: lambda $1_{<<e,e>,e>}.lambda $1_{<<e,e>,e>}.lambda $0_{r}.det:art|the_4($1($2,n|color_2($2)),n|rug_5($1($2,n|color_2($2)),$0))
example_end

Sent: what color is in the rug ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(cop|be-3s_3($1($2,n|color_2($2)),$0),prep|in_4(det:art|the_5($3,n|rug_6($3)),$0))
example_end

Sent: what other color is in it ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_4(BARE($1,and(qn|other_2($1),n|color_3($1))),$0),prep|in_5(pro:per|it_6,$0)))
example_end

Sent: green and what ?
Sem: BARE($0,Q(pro:int|what_3($0)))
example_end

Sent: well what did you hit ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do-past_3(v|hit-zero_5(pro:per|you_4,$1,$0),$0),co|well_1($0))
example_end

Sent: you hit your shoulder .
Sem: lambda $0_{r}.v|hit-zero_2(pro:per|you_1,det:poss|your_3($1,n|shoulder_4($1)),$0)
example_end

Sent: on the table ?
Sem: Q(prep|on_1(det:art|the_2($0,n|table_3($0))))
example_end

Sent: you don 't have a mosquito bite back there .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:per|you_1,det:art|a_5($1,and_comp(n|mosquito_6($1),n|bite_7($1))),$0),adv|back_8(adv|there_9($0))),$0),$0)
example_end

Sent: don 't hit your head on the bicycle .
Sem: lambda $0_{r}.not(mod|do_1(and(part|hit-pastp_3(you,det:poss|your_4($1,n|head_5($1)),$0),prep|on_6(det:art|the_7($2,n|cycle_8($2)),$0)),$0),$0)
example_end

Sent: yes that is a man .
Sem: lambda $0_{r}.and(det:art|a_4(pro:rel|that_2,n|man_5(pro:rel|that_2,$0)),co|yes_1($0))
example_end

Sent: do you know the man 's name ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,n|man_5's($1,n|name_7($1)),$0),$0))
example_end

Sent: yes he 's pushing the dirt up .
Sem: lambda $0_{r}.and(aux|~be_3(and(part|push-presp_4(pro:sub|he_2,det:art|the_5($1,n|dirt_6($1)),$0),adv|up_7($0)),$0),co|yes_1($0))
example_end

Sent: what 's the man 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|man_4's($2,n|name_6($2)),$0)
example_end

Sent: this is the man who drives the busy bulldozer .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,n|man_4(pro:dem|this_1,$0))
example_end

Sent: what 's his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_3($2,n|name_4($2)),$0)
example_end

Sent: where did what go ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.v|do-past_2(and(v|go_4($1,$0),$2($0)),$0)
example_end

Sent: until he met how many men ?
Sem: lambda $2_{e}.lambda $0_{r}.v|meet-past_3(pro:sub|he_2,BARE($1,and($2(qn|many_5($1)),n|man-pl_6($1))),$0)
example_end

Sent: three men .
Sem: BARE($0,det:num|three_1(n|man-pl_2($0)))
example_end

Sent: that 's one of the men .
Sem: lambda $0_{r}.att(pro:indef|one_3(pro:dem|that_1,$0),prep|of_4(det:art|the_5($1,n|man-pl_6($1))))
example_end

Sent: come on pal .
Sem: lambda $0_{r}.v|come_1_on_2(you,$0)
example_end

Sent: no don 't push Mommy 's book .
Sem: lambda $0_{r}.and(not(mod|do_2(n|push_4(you,n:prop|mommy_5's($1,n|book_7($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: no it isn 't yours .
Sem: lambda $0_{r}.and(not(pro:poss|yours_5(pro:per|it_2,$0),$0),co|no_1($0))
example_end

Sent: your books are over in your basket .
Sem: lambda $0_{r}.and(aux|be-pres_3(det:poss|your_1($1,n|book-pl_2($1)),$0),adv|over_4(prep|in_5(det:poss|your_6($2,n|basket_7($2)),$0)))
example_end

Sent: is that Doctor Dan ?
Sem: lambda $0_{r}.Q(n:prop|dan_4_doctor_3(pro:rel|that_2,$0))
example_end

Sent: I didn 't think it was .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.cop|be-past_6(pro:per|it_5,$1),$0),$0),$0)
example_end

Sent: why do you call that spaghetti ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do_2(and(v|call_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0),BARE($2,n|spaghetti_6($2)))
example_end

Sent: what about Daddy ?
Sem: att(pro:int|what_1,prep|about_2(n:prop|daddy_3))
example_end

Sent: no that 's Mr Cromer 's suitcase .
Sem: lambda $0_{r}.and(n:prop|cromer_5_mr_4's'(pro:dem|that_2,n|suitcase_7(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: whose suitcase is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|suitcase_2(pro:dem|that_4,$0))
example_end

Sent: no whose suitcase is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_5,n|suitcase_3(pro:dem|that_5,$0)),qn|no_1($0))
example_end

Sent: whose is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: to whom does that belong ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_3(v|belong_5(det:dem|that_4,$1,$0),$0)
example_end

Sent: yes that 's Daddy 's suitcase .
Sem: lambda $0_{r}.and(n:prop|daddy_4's'(pro:dem|that_2,n|suitcase_6(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: it 's not a pocketbook .
Sem: lambda $0_{r}.not(det:art|a_4(pro:per|it_1,n|pocket+book_5(pro:per|it_1,$0)),$0)
example_end

Sent: no don 't sit on that .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|sit_4(you,$0),prep|on_5(pro:dem|that_6,$0)),$0),$0),co|no_1($0))
example_end

Sent: what kind of car do you have ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_5(v|have_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|car_4($3))))),$0),$0)
example_end

Sent: put Miss Munroe 's tow truck ?
Sem: lambda $0_{r}.Q(v|put-zero_1(you,n:prop|munroe_3_miss_2's($1,and_comp(n|tow_5($1),n|truck_6($1))),$0))
example_end

Sent: is that your doggie ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:rel|that_2,n|dog-dim_4(pro:rel|that_2,$0)))
example_end

Sent: Texaco star ?
Sem: BARE($0,Q(and_comp(n:prop|texaco_1($0),n|star_2($0))))
example_end

Sent: that 's not a star .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|star_5(pro:dem|that_1,$0)),$0)
example_end

Sent: what about Cliffy ?
Sem: att(pro:int|what_1,prep|about_2(n:prop|cliffy_3))
example_end

Sent: two boots ?
Sem: BARE($0,Q(det:num|two_1(n|boot-pl_2($0))))
example_end

Sent: it doesn 't belong there .
Sem: lambda $0_{r}.not(mod|do_2(and(v|belong_4(pro:per|it_1,$0),adv|there_5($0)),$0),$0)
example_end

Sent: Adam 's doggie ?
Sem: BARE($0,Q(n:prop|adam_1's($1,n|dog-dim_3($1),$0)))
example_end

Sent: take his nose off ?
Sem: lambda $0_{r}.Q(and(v|take_1(you,det:poss|his_2($1,n|nose_3($1)),$0),adv|off_4($0)))
example_end

Sent: no you can 't take his nose off .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|take_5(pro:per|you_2,det:poss|his_6($1,n|nose_7($1)),$0),adv|off_8($0)),$0),$0),co|no_1($0))
example_end

Sent: how will he smell anything .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will_2(and(v|smell_4(pro:sub|he_3,pro:indef|anything_5,$0),$1($0)),$0)
example_end

Sent: no you can 't take his nose off either .
Sem: lambda $0_{r}.and(not(mod|can_3(and(and(v|take_5(pro:per|you_2,det:poss|his_6($1,n|nose_7($1)),$0),adv|off_8($0)),adv|either_9($0)),$0),$0),co|no_1($0))
example_end

Sent: you can 't take his nose off .
Sem: lambda $0_{r}.not(mod|can_2(and(v|take_4(pro:per|you_1,det:poss|his_5($1,n|nose_6($1)),$0),adv|off_7($0)),$0),$0)
example_end

Sent: can you take your nose off ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|take_3(pro:per|you_2,det:poss|your_4($1,n|nose_5($1)),$0),adv|off_6($0)),$0))
example_end

Sent: did you take it off ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|take_3(pro:per|you_2,pro:per|it_4,$0),adv|off_5($0)),$0))
example_end

Sent: you can 't take his nose off .
Sem: lambda $0_{r}.not(mod|can_2(and(v|take_4(pro:per|you_1,det:poss|his_5($1,n|nose_6($1)),$0),adv|off_7($0)),$0),$0)
example_end

Sent: no I don 't think those two men can .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|can_9(pro:dem|those_6($2,det:num|two_7(n|man-pl_8($2))),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: no you can 't take the lion 's nose off .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|take_5(pro:per|you_2,n|lion_7's($1,n|nose_9($1)),$0),adv|off_10($0)),$0),$0),co|no_1($0))
example_end

Sent: doggie take nose off ?
Sem: lambda $0_{r}.Q(and(v|take_2(BARE($1,n|dog-dim_1($1)),BARE($2,n|nose_3($2)),$0),adv|off_4($0)))
example_end

Sent: no you can 't take the nose off .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|take_5(pro:per|you_2,det:art|the_6($1,n|nose_7($1)),$0),adv|off_8($0)),$0),$0),co|no_1($0))
example_end

Sent: Adam who take nose off ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|take_3($1,BARE($2,n|nose_4($2)),$0),adv|off_5($0))
example_end

Sent: take nose off Donald Duck ?
Sem: lambda $0_{r}.Q(and(and(v|take_1(you,BARE($1,n|nose_2($1)),$0),prep|off_3($0)),n:prop|duck_5_donald_4($0)))
example_end

Sent: take nose off what ?
Sem: lambda $0_{r}.and(v|take_1(you,BARE($1,n|nose_2($1)),$0),prep|off_3($0))
example_end

Sent: no you can 't take the nose off the bird either .
Sem: lambda $0_{r}.and(not(mod|can_3(and(and(v|take_5(pro:per|you_2,det:art|the_6($1,n|nose_7($1)),$0),prep|off_8(det:art|the_9($2,n|bird_10($2)),$0)),adv|either_11($0)),$0),$0),co|no_1($0))
example_end

Sent: does the bird have a nose ?
Sem: lambda $0_{r}.Q(v|do-3s_1(v|have_4(det:art|the_2($1,n|bird_3($1)),det:art|a_5($2,n|nose_6($2)),$0),$0))
example_end

Sent: that 's a donkey .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|donkey_4(pro:dem|that_1,$0))
example_end

Sent: and a piggie .
Sem: det:art|a_2($0,n|pig-dim_3($0))
example_end

Sent: that is a man .
Sem: lambda $0_{r}.det:art|a_3(pro:rel|that_1,n|man_4(pro:rel|that_1,$0))
example_end

Sent: that 's a piggie .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|pig-dim_4(pro:dem|that_1,$0))
example_end

Sent: that 's a little baby doggie .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(and(n|dog-dim_6(pro:dem|that_1,$0),adj|little_4(pro:dem|that_1,$0)),n|baby_5(pro:dem|that_1,$0)))
example_end

Sent: the baby doggie is a puppy .
Sem: lambda $0_{r}.det:art|a_5(det:art|the_1($1,and(n|baby_2($1),n|dog-dim_3($1))),n|puppy_6(det:art|the_1($1,and(n|baby_2($1),n|dog-dim_3($1))),$0))
example_end

Sent: it 's not the same dog as Pepper .
Sem: lambda $0_{r}.not(det:art|the_4(pro:per|it_1,att(and(n|dog_6(pro:per|it_1,$0),adj|same_5(pro:per|it_1,$0)),conj|as_7(n:prop|pepper_8))),$0)
example_end

Sent: what is it doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-3s_2(part|do-presp_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: record going to work ?
Sem: lambda $0_{r}.Q(part|go-presp_2(BARE($1,n|record_1($1)),lambda $2_{r}.v|work_4(BARE($3,n|record_1($3)),$2),$0))
example_end

Sent: it hasn 't finished .
Sem: lambda $0_{r}.not(aux|have_2(part|finish-pastp_4(pro:per|it_1,$0),$0),$0)
example_end

Sent: Adam sit down .
Sem: lambda $0_{r}.and(v|sit_2(you,$0),adv|down_3($0))
example_end

Sent: where are you going to sit ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|sit_6(pro:per|you_3,$1),$0),$2($0)),$0)
example_end

Sent: it doesn 't have nose .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|it_1,BARE($1,n|nose_5($1)),$0),$0),$0)
example_end

Sent: where is the nose on the car ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,att(n|nose_4($1),prep|on_5(det:art|the_6($2,n|car_7($2))))),$0),$3($0))
example_end

Sent: that 's a train .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|train_4(pro:dem|that_1,$0))
example_end

Sent: the car is on the train .
Sem: lambda $0_{r}.and(cop|be-3s_3(det:art|the_1($1,n|car_2($1)),$0),prep|on_4(det:art|the_5($2,n|train_6($2)),$0))
example_end

Sent: car train .
Sem: BARE($0,and_comp(n|car_1($0),n|train_2($0)))
example_end

Sent: car train .
Sem: BARE($0,and_comp(n|car_1($0),n|train_2($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: do you have anything in your pocket ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,pro:indef|anything_4,$0),prep|in_5(det:poss|your_6($1,n|pocket_7($1)),$0)),$0))
example_end

Sent: do you have a penny ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|penny_5($1)),$0),$0))
example_end

Sent: that 's the rug .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|rug_4(pro:dem|that_1,$0))
example_end

Sent: whose rug is it Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|rug_2(pro:per|it_4,$0))
example_end

Sent: careful don 't step on his foot .
Sem: lambda $0_{r}.and(not(mod|do_2(v|step_4(you,det:poss|his_6($1,n|foot_7_on_5($1)),$0),$0),$0),adj|care-dn_1($0))
example_end

Sent: how does it work ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|work_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's part of the broom .
Sem: lambda $0_{r}.att(n|part_3(pro:dem|that_1,$0),prep|of_4(det:art|the_5($1,n|broom_6($1))))
example_end

Sent: what is that part of ?
Sem: lambda $1_{e}.lambda $0_{r}.att($1(pro:dem|that_3,$0),prep|of_5(BARE($2,n|part_4($2))))
example_end

Sent: why don 't you put it in the trash ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|put-zero_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),prep|in_7(det:art|the_8($2,n|trash_9($2)),$0)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what else is on there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-3s_3($1,$0),prep|on_4(adv|there_5($0)))
example_end

Sent: beans and what ?
Sem: BARE($0,Q(pro:int|what_3($0)))
example_end

Sent: those aren 't beans they 're peas .
Sem: lambda $0_{r}.not(and(n|bean-pl_4(pro:dem|those_1,$0),n|pea-pl_7(pro:sub|they_5,$0)),$0)
example_end

Sent: may I see them ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,pro:obj|them_4,$0),$0))
example_end

Sent: what did Humpty_Dumpty do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(n:prop|humpty_dumpty_3,$1,$0),$0)
example_end

Sent: he sat on the wall .
Sem: lambda $0_{r}.and(v|sit-past_2(pro:sub|he_1,$0),prep|on_3(det:art|the_4($1,n|wall_5($1)),$0))
example_end

Sent: Ricky will fix that ?
Sem: lambda $0_{r}.Q(mod|will_2(v|fix_3(n:prop|ricky_1,pro:dem|that_4,$0),$0))
example_end

Sent: oh Lilly will fix it .
Sem: lambda $0_{r}.and(mod|will_3(v|fix_4(n:prop|lilly_2,pro:per|it_5,$0),$0),co|oh_1($0))
example_end

Sent: oh Jesus loves me ?
Sem: lambda $0_{r}.Q(and(v|love-3s_3(n:prop|jesus_2,pro:obj|me_4,$0),co|oh_1($0)))
example_end

Sent: at church .
Sem: prep|at_1(BARE($0,n|church_2($0)))
example_end

Sent: Jesus love me .
Sem: lambda $0_{r}.v|love_2(n:prop|jesus_1,pro:obj|me_3,$0)
example_end

Sent: you want to go to church ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|go_4(pro:per|you_1,$1),prep|to_5(BARE($2,n|church_6($2)),$1)),$0))
example_end

Sent: you don 't go to church today .
Sem: lambda $0_{r}.not(mod|do_2(and(v|go_4(pro:per|you_1,BARE($1,n|church_6_to_5($1)),$0),adv:tem|today_7($0)),$0),$0)
example_end

Sent: Adam 's driving ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|drive-presp_3(n:prop|adam_1,$0),$0))
example_end

Sent: where did Daddy go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(n:prop|daddy_3,$0),$1($0)),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: yes that is Daddy .
Sem: lambda $0_{r}.and(n:prop|daddy_4(pro:rel|that_2,$0),co|yes_1($0))
example_end

Sent: may I see it ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,pro:per|it_4,$0),$0))
example_end

Sent: no leave that back there .
Sem: lambda $0_{r}.and(and(n|leave_2(you,pro:rel|that_3,$0),adv|back_4(adv|there_5($0))),qn|no_1($0))
example_end

Sent: that 's Ursula 's tape recorder .
Sem: lambda $0_{r}.n:prop|ursula_3's'(pro:dem|that_1,and_comp(n|tape_5(pro:dem|that_1,$0),n|record-dv_6(pro:dem|that_1,$0)))
example_end

Sent: Mommy is Ursula 's Daddy ?
Sem: lambda $0_{r}.Q(n:prop|ursula_3's'(n:prop|mommy_1,n:prop|daddy_5(n:prop|mommy_1,$0)))
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: where did Daddy go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(n:prop|daddy_3,$0),$1($0)),$0)
example_end

Sent: what does Daddy do at school ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(and(v|do_4(n:prop|daddy_3,$1,$0),prep|at_5(BARE($2,n|school_6($2)),$0)),$0)
example_end

Sent: is the busy bulldozer at school ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_1(det:art|the_2($1,and(adj|busy_3($1),n|bulldoze-dv_4($1))),$0),prep|at_5(BARE($2,n|school_6($2)),$0)))
example_end

Sent: he can 't march .
Sem: lambda $0_{r}.not(mod|can_2(v|march_4(pro:sub|he_1,$0),$0),$0)
example_end

Sent: no he can 't march .
Sem: lambda $0_{r}.and(not(mod|can_3(v|march_5(pro:sub|he_2,$0),$0),$0),co|no_1($0))
example_end

Sent: yes Mr Green_jeans can march .
Sem: lambda $0_{r}.and(mod|can_4(v|march_5(n:prop|green_jeans_3_mr_2,$0),$0),co|yes_1($0))
example_end

Sent: Bambi can 't march .
Sem: lambda $0_{r}.not(mod|can_2(v|march_4(n:prop|bambi_1,$0),$0),$0)
example_end

Sent: oh yes the bear can march .
Sem: lambda $0_{r}.and(mod|can_5(v|march_6(det:art|the_3($1,n|bear_4($1)),$0),$0),co|yes_2_oh_1($0))
example_end

Sent: where 's your bumble bee ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|bee_5_bumble_4($1)),$0),$2($0))
example_end

Sent: get the bumble bee alright .
Sem: lambda $0_{r}.and(v|get_1(you,det:art|the_2($1,n|bee_4_bumble_3($1)),$0),adj|alright_5($0))
example_end

Sent: do you think he can drive with that there ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|can_5(and(v|drive_6(pro:sub|he_4,$1),adv|there_9(prep|with_7(det:dem|that_8,$1))),$1),$0),$0))
example_end

Sent: that 's your name .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|that_1,n|name_4(pro:dem|that_1,$0))
example_end

Sent: the one who had the bunny rabbit .
Sem: det:art|the_1($0,pro:indef|one_2($0))
example_end

Sent: why don 't you take Ursula 's briefcase over to her ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(v|take_5(pro:per|you_4,n:prop|ursula_6's($1,n|briefcase_8($1)),$0),$2($0)),adv|over_9($0)),prep|to_10(pro:obj|her_11,$0)),$0),$0)
example_end

Sent: you can take it off ?
Sem: lambda $0_{r}.Q(mod|can_2(and(v|take_3(pro:per|you_1,pro:per|it_4,$0),adv|off_5($0)),$0))
example_end

Sent: I doubt it .
Sem: lambda $0_{r}.v|doubt_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: oh put him on the rug .
Sem: lambda $0_{r}.and(and(v|put-zero_2(you,pro:obj|him_3,$0),prep|on_4(det:art|the_5($1,n|rug_6($1)),$0)),co|oh_1($0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(pro:dem|that_1,$0))
example_end

Sent: do you see him ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,pro:obj|him_4,$0),$0))
example_end

Sent: do you see Ursula too ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|see_3(pro:per|you_2,n:prop|ursula_4,$0),post|too_5($0)),$0))
example_end

Sent: who else do you see ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: do you see your truck too ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|see_3(pro:per|you_2,det:poss|your_4($1,n|truck_5($1)),$0),adv|too_6($0)),$0))
example_end

Sent: you don 't mean ball .
Sem: lambda $0_{r}.not(mod|do_2(adj|mean_4(pro:per|you_1,BARE($1,n|ball_5($1)),$0),$0),$0)
example_end

Sent: that 's a bat .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|bat_4(pro:dem|that_1,$0))
example_end

Sent: where 's the ball ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|ball_4($1)),$0),$2($0))
example_end

Sent: careful don 't spill it .
Sem: lambda $0_{r}.and(not(mod|do_2(v|spill_4(you,pro:per|it_5,$0),$0),$0),co|careful_1($0))
example_end

Sent: don 't spill the water on the rug .
Sem: lambda $0_{r}.not(mod|do_1(and(v|spill_3(you,det:art|the_4($1,n|water_5($1)),$0),prep|on_6(det:art|the_7($2,n|rug_8($2)),$0)),$0),$0)
example_end

Sent: he doesn 't want any water I don 't think .
Sem: lambda $0_{r}.not(and(mod|do_2(v|want_4(pro:sub|he_1,qn|any_5($1,n|water_6($1)),$0),$0),not(mod|do_8(v|think_10(pro:sub|i_7,$0),$0),$0)),$0)
example_end

Sent: ask her if she 'd like some .
Sem: lambda $0_{r}.conj|if_3(mod|~genmod_5(v|like_6(pro:sub|she_4,qn|some_7,$0),$0),v|ask_1(you,pro:obj|her_2,$0))
example_end

Sent: ask me if I 'd like some .
Sem: lambda $0_{r}.conj|if_3(mod|~genmod_5(v|like_6(pro:sub|i_4,qn|some_7,$0),$0),v|ask_1(you,pro:obj|me_2,$0))
example_end

Sent: ask Mr Cromer if he 'd like some water .
Sem: lambda $0_{r}.conj|if_4(mod|~genmod_6(v|like_7(pro:sub|he_5,qn|some_8($1,n|water_9($1)),$0),$0),v|ask_1(you,n:prop|cromer_3_mr_2,$0))
example_end

Sent: the suitcase wants water .
Sem: lambda $0_{r}.v|want-3s_3(det:art|the_1($1,n|suitcase_2($1)),BARE($2,n|water_4($2)),$0)
example_end

Sent: that 's not your tummy .
Sem: lambda $0_{r}.not(det:poss|your_4(pro:dem|that_1,n|tummy_5(pro:dem|that_1,$0)),$0)
example_end

Sent: how many tummies do you have ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_4(v|have_6(pro:per|you_5,BARE($1,and($2(qn|many_2($1)),n|tummy-pl_3($1))),$0),$0)
example_end

Sent: that 's the man who wrote the book .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|man_4(pro:dem|that_1,$0))
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh you 're wiping it off ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|wipe-presp_4(pro:per|you_2,pro:per|it_5,$0),adv|off_6($0)),$0),co|oh_1($0)))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: are you the driver .
Sem: lambda $0_{r}.det:art|the_3(pro:per|you_2,n|drive-dv_4(pro:per|you_2,$0))
example_end

Sent: how does it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: Adam go to work ?
Sem: lambda $0_{r}.Q(and(v|go_2(n:prop|adam_1,$0),prep|to_3(BARE($1,n|work_4($1)),$0)))
example_end

Sent: where does Adam work ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(n|work_4(n:prop|adam_3,$0),$1($0)),$0)
example_end

Sent: oh Adam 's driving .
Sem: lambda $0_{r}.and(aux|~be_3(part|drive-presp_4(n:prop|adam_2,$0),$0),co|oh_1($0))
example_end

Sent: who is driving ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-3s_2(part|drive-presp_3($1,$0),$0)
example_end

Sent: Robbie 's driving too ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|drive-presp_3(n:prop|robbie_1,$0),post|too_4($0)),$0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what kind of noise is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|noise_4($2)))))
example_end

Sent: what kind of truck is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|truck_4($2)))))
example_end

Sent: Hobo 's truck .
Sem: n:prop|hobo_1's($0,n|truck_3($0))
example_end

Sent: did you find it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: where 's the other one ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,att(pro:indef|one_5,BARE($2,qn|other_4($2)),$1)),$0),$3($0))
example_end

Sent: throw to Daddy ?
Sem: lambda $0_{r}.Q(and(v|throw_1(you,$0),prep|to_2(n:prop|daddy_3,$0)))
example_end

Sent: Doctor Dan at the circus .
Sem: att(n:prop|dan_2_doctor_1,prep|at_3(det:art|the_4($0,n|circus_5($0))))
example_end

Sent: that 's a lion tamer .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|lion_4(pro:dem|that_1,$0),adj|tame-cp_5(pro:dem|that_1,$0)))
example_end

Sent: the lady of the elephant .
Sem: det:art|the_1($0,att(n|lady_2($0),prep|of_3(det:art|the_4($1,n|elephant_5($1)))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's the doggie .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|dog-dim_4(pro:dem|that_1,$0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: yes tattooed man .
Sem: lambda $0_{r}.and(and(part|tattoo-pastp_2($0),n|man_3($0)),co|yes_1($0))
example_end

Sent: they 're all falling down .
Sem: lambda $0_{r}.aux|~be_2(and(and(part|fall-presp_4(pro:sub|they_1,$0),post|all_3($0)),adv|down_5($0)),$0)
example_end

Sent: see the bird gets away .
Sem: lambda $0_{r}.and(v|get-3s_4_away_5(det:art|the_2($1,n|bird_3($1)),$0),v|see_1(you,$0))
example_end

Sent: first he does what ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|do-3s_3(pro:sub|he_2,$1,$0),adv|first_1($0))
example_end

Sent: no the doggie didn 't bite him .
Sem: lambda $0_{r}.and(not(mod|do_4(v|bite_6(det:art|the_2($1,n|dog-dim_3($1)),pro:obj|him_7,$0),$0),$0),qn|no_1($0))
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: Adam doesn 't have cowboy boots like that .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(n:prop|adam_1,BARE($1,att(and_comp(n|cow+boy_5($1),n|boot-pl_6($1)),prep|like_7(pro:dem|that_8))),$0),$0),$0)
example_end

Sent: do you recognize any of these pictures ?
Sem: lambda $0_{r}.Q(mod|do_1(v|recognize_3(pro:per|you_2,qn|any_4(pro:dem|these_6($1,n|picture-pl_7_of_5($1))),$0),$0))
example_end

Sent: yeah they all fall down .
Sem: lambda $0_{r}.and(and(and(v|fall_4(pro:sub|they_2,$0),post|all_3($0)),adv|down_5($0)),co|yeah_1($0))
example_end

Sent: how did he get tattooed ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|get_4(mod|do-past_2(and(part|tattoo-pastp_5(pro:sub|he_3,$0),$1($0)),$0),$0)
example_end

Sent: who fell down ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|fall-past_2($1,$0),adv|down_3($0))
example_end

Sent: what happened to your head ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:poss|your_4($2,n|head_5($2)),$0))
example_end

Sent: what fell down ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|fall-past_2($1,$0),adv|down_3($0))
example_end

Sent: when did Adam fall down ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.v|do-past_2(and(and(n|fall_4(n:prop|adam_3,$0),$1($0)),adv|down_5($0)),$0)
example_end

Sent: you beep beep Adam .
Sem: lambda $0_{r}.v|beep_2_beep_3(pro:per|you_1,$0)
example_end

Sent: you move some of your toys ?
Sem: lambda $0_{r}.Q(v|move_2(pro:per|you_1,att(qn|some_3,prep|of_4(det:poss|your_5($1,n|toy-pl_6($1)))),$0))
example_end

Sent: yes move your bike .
Sem: lambda $0_{r}.and(v|move_2(you,det:poss|your_3($1,n|bike_4($1)),$0),co|yes_1($0))
example_end

Sent: where 's your racket ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|racket_4($1)),$0),$2($0))
example_end

Sent: you 're welcome .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: what shall I write ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|write_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: what will you write ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_2(v|write_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's for you .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),conj|for_3(pro:per|you_4,$0))
example_end

Sent: whose book is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|book_2(pro:dem|that_4,$0))
example_end

Sent: playing the piano .
Sem: lambda $0_{r}.part|play-presp_1(you,det:art|the_2($1,n|piano_3($1)),$0)
example_end

Sent: they do look like stars .
Sem: lambda $0_{r}.mod|do_2(and(cop|look_3(pro:sub|they_1,$0),conj|like_4(BARE($1,n|star-pl_5($1)),$0)),$0)
example_end

Sent: what 's he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: what 's his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_3($2,n|name_4($2)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no that 's no paper .
Sem: lambda $0_{r}.and(not(n|paper_5(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: Adam didn 't write that .
Sem: lambda $0_{r}.not(mod|do_2(v|write_4(you,pro:dem|that_5,$0),$0),$0)
example_end

Sent: Mr Walter did .
Sem: lambda $0_{r}.v|do-past_3(n:prop|walter_2_mr_1,$0)
example_end

Sent: which one is Mr Walter ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.n:prop|walter_5_mr_4($1($2,pro:indef|one_2($2)),$0)
example_end

Sent: did you read that book last time Adam ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|read-zero_3(pro:per|you_2,pro:dem|that_4($1,n|book_5($1)),$0),and(adj|last_6($0),n|time_7($0))),$0))
example_end

Sent: what is he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: he 's conducting .
Sem: lambda $0_{r}.aux|~be_2(part|conduct-presp_3(pro:sub|he_1,$0),$0)
example_end

Sent: he 's in there .
Sem: lambda $0_{r}.and(cop|~be_2(pro:sub|he_1,$0),prep|in_3(adv|there_4($0)))
example_end

Sent: you going to give back to Ursula now .
Sem: lambda $0_{r}.part|go-presp_2(pro:per|you_1,lambda $1_{r}.and(v|give_4(pro:per|you_1,$1),adv|now_8(adv|back_5(prep|to_6(n:prop|ursula_7,$1)))),$0)
example_end

Sent: put it back in the briefcase .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),adv|back_3(prep|in_4(det:art|the_5($1,n|briefcase_6($1)),$0)))
example_end

Sent: have you met Mr Walter ?
Sem: lambda $0_{r}.Q(aux|have_1(v|meet-past_3(pro:per|you_2,n:prop|walter_5_mr_4,$0),$0))
example_end

Sent: have you read this book before ?
Sem: lambda $0_{r}.Q(aux|have_1(and(v|read-zero_3(pro:per|you_2,pro:dem|this_4($1,n|book_5($1)),$0),adv|before_6($0)),$0))
example_end

Sent: you have ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,$0))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: Adam 's not funny .
Sem: lambda $0_{r}.not(adj|fun-dn_4(n:prop|adam_1,$0),$0)
example_end

Sent: where did Daddy go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(n:prop|daddy_3,$0),$1($0)),$0)
example_end

Sent: Daddy Cromer ?
Sem: BARE($0,Q(n:prop|cromer_2_daddy_1($0)))
example_end

Sent: no that 's not Cromer 's Daddy .
Sem: lambda $0_{r}.and(not(n:prop|cromer_5's'(pro:dem|that_2,n:prop|daddy_7(pro:dem|that_2,$0)),$0),co|no_1($0))
example_end

Sent: Adam Cromer ?
Sem: BARE($0,Q(n:prop|cromer_2_adam_1($0)))
example_end

Sent: whose coat is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|coat_2(pro:dem|that_4,$0))
example_end

Sent: what are you going to do with the pencil ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6($2,$1),prep|with_7(det:art|the_8($3,n|pencil_9($3)),$1)),$0),$0)
example_end

Sent: how do you know tha  your pencil ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do_2(and(v|know_4(pro:per|you_3,lambda $1_{r}.det:poss|your_7(pro:rel|that_5,n|pencil_8(pro:rel|that_5,$1)),$0),$2($0)),$0)
example_end

Sent: yes it 's turned on .
Sem: lambda $0_{r}.and(cop|~be_3(and(v|turn-past_4(pro:per|it_2,$0),adv|on_5($0)),$0),co|yes_1($0))
example_end

Sent: are you lying on the dog .
Sem: lambda $0_{r}.cop|be-pres_1(part|lie-presp_3(pro:per|you_2,det:art|the_5($1,n|dog_6_on_4($1)),$0),$0)
example_end

Sent: what are you talking about ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|talk-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam 's pencil ?
Sem: BARE($0,Q(n:prop|adam_1's($1,n|pencil_3($1),$0)))
example_end

Sent: is that a pencil ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|pencil_4(pro:rel|that_2,$0)))
example_end

Sent: you want some paper ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,qn|some_3($1,n|paper_4($1)),$0))
example_end

Sent: where did you get that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: Adam are you writing .
Sem: lambda $0_{r}.aux|be-pres_2(part|write-presp_4(pro:per|you_3,$0),$0)
example_end

Sent: do you know how old you are ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.adv:int|how_4(adj|old_5(pro:per|you_6,$1)),$0),$0))
example_end

Sent: two boy ?
Sem: BARE($0,Q(det:num|two_1(n|boy_2($0))))
example_end

Sent: see the racket ?
Sem: lambda $0_{r}.Q(v|see_1(you,det:art|the_2($1,n|racket_3($1)),$0))
example_end

Sent: oh you see that ?
Sem: lambda $0_{r}.Q(and(v|see_3(pro:per|you_2,pro:dem|that_4,$0),co|oh_1($0)))
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: are those pillows .
Sem: lambda $0_{r}.n|pillow-pl_3(pro:dem|those_2,$0)
example_end

Sent: Mommy 's pillows .
Sem: n:prop|mommy_1's($0,n|pillow-pl_3($0))
example_end

Sent: well I don 't want my pillows on the floor .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|want_5(pro:sub|i_2,det:poss|my_6($1,n|pillow-pl_7($1)),$0),prep|on_8(det:art|the_9($2,n|floor_10($2)),$0)),$0),$0),co|well_1($0))
example_end

Sent: oh they 're Adam 's pillows .
Sem: lambda $0_{r}.and(n:prop|adam_4's'(pro:sub|they_2,n|pillow-pl_6(pro:sub|they_2,$0)),co|oh_1($0))
example_end

Sent: I don 't think Daddy wants his pillows on the floor either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,lambda $1_{r}.and(v|want-3s_6(n:prop|daddy_5,det:poss|his_7($2,n|pillow-pl_8($2)),$1),prep|on_9(det:art|the_10($3,n|floor_11($3)),$1)),$0),adv|either_12($0)),$0),$0)
example_end

Sent: put together again .
Sem: lambda $0_{r}.and(and(v|put-zero_1(you,$0),adv|together_2($0)),adv|again_3($0))
example_end

Sent: are you fixing the dog .
Sem: lambda $0_{r}.cop|be-pres_1(part|fix-presp_3(pro:per|you_2,det:art|the_4($1,n|dog_5($1)),$0),$0)
example_end

Sent: you want me to move my case ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.v|move_5(pro:obj|me_3,det:poss|my_6($2,n|case_7($2)),$1),$0))
example_end

Sent: did you ask him to move it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|ask_3(pro:per|you_2,lambda $1_{r}.v|move_6(pro:obj|him_4,pro:per|it_7,$1),$0),$0))
example_end

Sent: are you pulling your dog .
Sem: lambda $0_{r}.cop|be-pres_1(part|pull-presp_3(pro:per|you_2,det:poss|your_4($1,n|dog_5($1)),$0),$0)
example_end

Sent: is the doggie broken .
Sem: lambda $0_{r}.part|break-pastp_4(det:art|the_2($1,n|dog-dim_3($1)),$0)
example_end

Sent: that 's no lion .
Sem: lambda $0_{r}.not(n|lion_4(pro:dem|that_1,$0),$0)
example_end

Sent: well that 's the right way .
Sem: lambda $0_{r}.and(det:art|the_4(pro:dem|that_2,and(n|way_6(pro:dem|that_2,$0),adj|right_5(pro:dem|that_2,$0))),co|well_1($0))
example_end

Sent: you can 't do that honey .
Sem: lambda $0_{r}.not(mod|can_2(v|do_4(pro:per|you_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: are you writing a letter .
Sem: lambda $0_{r}.cop|be-pres_1(part|write-presp_3(pro:per|you_2,det:art|a_4($1,n|letter_5($1)),$0),$0)
example_end

Sent: what are you Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: busy bulldozer ?
Sem: BARE($0,Q(and(adj|busy_1($0),n|bulldoze-dv_2($0))))
example_end

Sent: Adam did you pick up the pillows ?
Sem: lambda $0_{r}.Q(mod|do-past_2(v|pick_4_up_5(pro:per|you_3,det:art|the_6($1,n|pillow-pl_7($1)),$0),$0))
example_end

Sent: does the doggie like the pillows .
Sem: lambda $0_{r}.mod|do-3s_1(prep|like_4(det:art|the_2($1,n|dog-dim_3($1)),det:art|the_5($2,n|pillow-pl_6($2)),$0),$0)
example_end

Sent: is that a racket .
Sem: lambda $0_{r}.det:art|a_3(pro:rel|that_2,n|racket_4(pro:rel|that_2,$0))
example_end

Sent: did you think that was funny ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|think_3(pro:per|you_2,lambda $1_{r}.adj|fun-dn_6(pro:rel|that_4,$1),$0),$0))
example_end

Sent: don 't ride the roadgrader up there .
Sem: lambda $0_{r}.not(mod|do_1(and(v|ride_3(you,det:art|the_4($1,n|roadgrader_5($1)),$0),adv|up_6(adv|there_7($0))),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: it 's not a big hill .
Sem: lambda $0_{r}.not(det:art|a_4(pro:per|it_1,and(n|hill_6(pro:per|it_1,$0),adj|big_5(pro:per|it_1,$0))),$0)
example_end

Sent: where is your pencil ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:poss|your_3($1,n|pencil_4($1)),$0),$2($0))
example_end

Sent: I have mine .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,pro:poss|mine_3,$0)
example_end

Sent: do you want a piece ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,det:art|a_4($1,n|piece_5($1)),$0),$0))
example_end

Sent: are you writing your name .
Sem: lambda $0_{r}.cop|be-pres_1(part|write-presp_3(pro:per|you_2,det:poss|your_4($1,n|name_5($1)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: doctor Dan ?
Sem: BARE($0,Q(n:prop|dan_2_doctor_1($0)))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh wash hands ?
Sem: lambda $0_{r}.Q(and(n|wash_2(you,BARE($1,n|hand-pl_3($1)),$0),co|oh_1($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: is that a boot .
Sem: lambda $0_{r}.det:art|a_3(pro:rel|that_2,n|boot_4(pro:rel|that_2,$0))
example_end

Sent: why don 't you show it to Ursula ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|show_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),prep|to_7(n:prop|ursula_8,$0)),$0),$0)
example_end

Sent: yes Donald_Duck .
Sem: lambda $0_{r}.and(n:prop|donald_duck_2($0),co|yes_1($0))
example_end

Sent: is that a ladder .
Sem: lambda $0_{r}.det:art|a_3(pro:rel|that_2,n|ladder_4(pro:rel|that_2,$0))
example_end

Sent: who is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: show it to Ursula .
Sem: lambda $0_{r}.and(v|show_1(you,pro:per|it_2,$0),prep|to_3(n:prop|ursula_4,$0))
example_end

Sent: is that Bambi .
Sem: lambda $0_{r}.n:prop|bambi_3(pro:rel|that_2,$0)
example_end

Sent: what did you say then Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|say_4(pro:per|you_3,$1,$0),adv:tem|then_5($0)),$0)
example_end

Sent: why is he like Perro ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(v|like_4(n:prop|perro_5,pro:sub|he_3,$0))
example_end

Sent: is there a bunny there ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_1(det:art|a_3($1,n|bunny+rabbit_4($1)),$0),adv|there_5($0)))
example_end

Sent: wet your pants ?
Sem: lambda $0_{r}.Q(part|wet-pastp_1(you,det:poss|your_2($1,n:pt|pants_3($1)),$0))
example_end

Sent: can you say you 're sorry ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,lambda $1_{r}.adj|sorry_6(pro:per|you_4,$1),$0),$0))
example_end

Sent: where 's the kitchen ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|kitchen_4($1)),$0),$2($0))
example_end

Sent: where 's the kitchen ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|kitchen_4($1)),$0),$2($0))
example_end

Sent: is that the kitchen ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,n|kitchen_4(pro:rel|that_2,$0)))
example_end

Sent: you go get it .
Sem: lambda $0_{r}.v|get_3(pro:per|you_1,pro:per|it_4,$0)
example_end

Sent: Adam is that a ball .
Sem: lambda $0_{r}.det:art|a_4(pro:rel|that_3,n|ball_5(pro:rel|that_3,$0))
example_end

Sent: oh take my hand out ?
Sem: lambda $0_{r}.Q(and(and(v|take_2(you,co|my_3($1,n|hand_4($1)),$0),adv|out_5($0)),co|oh_1($0)))
example_end

Sent: get the hand out ?
Sem: lambda $0_{r}.Q(and(v|get_1(you,det:art|the_2($1,v|hand_3($1)),$0),adv|out_4($0)))
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: that 's not Donald Duck .
Sem: lambda $0_{r}.not(n:prop|duck_5_donald_4(pro:dem|that_1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's an egg .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|egg_4(pro:dem|that_1,$0))
example_end

Sent: hello Chatter .
Sem: lambda $0_{r}.and(n:prop|chatter_2($0),co|hello_1($0))
example_end

Sent: you 're eating Chatter 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|eat-presp_3(pro:per|you_1,$1,$0),$0)
example_end

Sent: what did you bite ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|bite_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: wipe it off .
Sem: lambda $0_{r}.and(v|wipe_1(you,pro:per|it_2,$0),adv|off_3($0))
example_end

Sent: did you like it ?
Sem: lambda $0_{r}.Q(v|do-past_1(prep|like_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: was it good ?
Sem: lambda $0_{r}.Q(adj|good_3(pro:per|it_2,$0))
example_end

Sent: it doesn 't go in your mouth does it ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|go_4(pro:per|it_1,det:poss|your_6($1,n|mouth_7_in_5($1)),$0),$0),$0),mod|do-3s_8(pro:per|it_9,$0)))
example_end

Sent: in whose mouth does it go ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-3s_4(v|go_6(pro:per|it_5,$1($2,v|mouth_3_in_1($2)),$0),$0)
example_end

Sent: no not Mommy 's mouth .
Sem: lambda $0_{r}.and(not(n:prop|mommy_3's($1,n|mouth_5($1)),$0),co|no_1($0))
example_end

Sent: not Adam 's mouth .
Sem: not(n:prop|adam_2's($0,n|mouth_4($0)))
example_end

Sent: bite whose mouth ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.n|bite_1(you,$1($2,n|mouth_3($2)),$0)
example_end

Sent: does the tape recorder have a mouth ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_5(det:art|the_2($1,and_comp(n|tape_3($1),n|record-dv_4($1))),det:art|a_6($2,n|mouth_7($2)),$0),$0))
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: is that hot ?
Sem: lambda $0_{r}.Q(adj|hot_3(pro:dem|that_2,$0))
example_end

Sent: careful the microphone .
Sem: and(det:art|the_2($0,n|microphone_3($0)),BARE($1,co|careful_1($1)))
example_end

Sent: are you the driver .
Sem: lambda $0_{r}.det:art|the_3(pro:per|you_2,n|drive-dv_4(pro:per|you_2,$0))
example_end

Sent: Daddy 's desk ?
Sem: BARE($0,Q(n:prop|daddy_1's($1,n|desk_3($1),$0)))
example_end

Sent: whose tummy hurts ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|hurt-3s_3($1($2,n|tummy_2($2)),$0)
example_end

Sent: oh your tummy hurts .
Sem: lambda $0_{r}.and(v|hurt-3s_4(det:poss|your_2($1,n|tummy_3($1)),$0),co|oh_1($0))
example_end

Sent: if you put the tractor on your book won 't you tear it up ?
Sem: lambda $0_{r}.Q(not(mod|will_9(conj|if_1(and(v|put-zero_3(pro:per|you_2,det:art|the_4($1,n|tractor_5($1)),$0),prep|on_6(det:poss|your_7($2,n|book_8($2)),$0)),and(v|tear_12(pro:per|you_11,pro:per|it_13,$0),adv|up_14($0))),$0),$0))
example_end

Sent: no you won 't tear the book up ?
Sem: lambda $0_{r}.Q(and(not(mod|will_3(and(v|tear_5(pro:per|you_2,det:art|the_6($1,n|book_7($1)),$0),adv|up_8($0)),$0),$0),co|no_1($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: is that a green car .
Sem: lambda $0_{r}.det:art|a_3(pro:rel|that_2,and(n|car_5(pro:rel|that_2,$0),n|green_4(pro:rel|that_2,$0)))
example_end

Sent: that 's a block .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|block_4(pro:dem|that_1,$0))
example_end

Sent: what color is the block ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_4($2,n|block_5($2)),n|color_2(det:art|the_4($2,n|block_5($2)),$0))
example_end

Sent: what color is the hammer ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_4($2,n|hammer_5($2)),n|color_2(det:art|the_4($2,n|hammer_5($2)),$0))
example_end

Sent: Bambi 's green .
Sem: lambda $0_{r}.n|green_3(n:prop|bambi_1,$0)
example_end

Sent: what 's Bambi doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(n:prop|bambi_3,$1,$0),$0)
example_end

Sent: poor Bambi .
Sem: att(n:prop|bambi_2,BARE($0,adj|poor_1($0)))
example_end

Sent: did you hurt your head when you feel ?
Sem: lambda $0_{r}.Q(conj|when_6(v|feel_8(pro:per|you_7,$0),v|do-past_1(v|hurt-zero_3(pro:per|you_2,det:poss|your_4($1,n|head_5($1)),$0),$0)))
example_end

Sent: did he hurt his head ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:sub|he_2,det:poss|his_4($1,n|head_5($1)),$0),$0))
example_end

Sent: you go get it .
Sem: lambda $0_{r}.v|get_3(pro:per|you_1,pro:per|it_4,$0)
example_end

Sent: is it there .
Sem: lambda $0_{r}.and(aux|be-3s_1(pro:per|it_2,$0),adv|there_3($0))
example_end

Sent: you get it .
Sem: lambda $0_{r}.v|get_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: did you throw the ball ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|throw_3(pro:per|you_2,det:art|the_4($1,n|ball_5($1)),$0),$0))
example_end

Sent: where did what go ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.v|do-past_2(and(v|go_4($1,$0),$2($0)),$0)
example_end

Sent: the light ?
Sem: BARE($0,Q(det:art|the_1($1,n|light_2($1),$0)))
example_end

Sent: are you hitting the ball .
Sem: lambda $0_{r}.cop|be-pres_1(part|hit-presp_3(pro:per|you_2,det:art|the_4($1,n|ball_5($1)),$0),$0)
example_end

Sent: where did the glove go .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_5(det:art|the_3($1,n|glove_4($1)),$0),$2($0)),$0)
example_end

Sent: how can you use the glove and the racket at the same time ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|can_2(and(and(v|use_4(pro:per|you_3,det:art|the_5($1,n|glove_6($1)),$0),$2($0)),prep|at_10(det:art|the_11($3,and(adj|same_12($3),n|time_13($3))),$0)),$0)
example_end

Sent: is that a bat .
Sem: lambda $0_{r}.det:art|a_3(pro:rel|that_2,n|bat_4(pro:rel|that_2,$0))
example_end

Sent: oh you lost your shoe ?
Sem: lambda $0_{r}.Q(and(v|lose-past_3(pro:per|you_2,det:poss|your_4($1,n|shoe_5($1)),$0),co|oh_1($0)))
example_end

Sent: what did you hit ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|hit-zero_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you knocked Bambi off ?
Sem: lambda $0_{r}.Q(and(v|knock-past_2(pro:per|you_1,n:prop|bambi_3,$0),adv|off_4($0)))
example_end

Sent: call Daddy .
Sem: lambda $0_{r}.n|call_1(you,n:prop|daddy_2,$0)
example_end

Sent: Daddy 's not home .
Sem: lambda $0_{r}.not(n|home_4(n:prop|daddy_1,$0),$0)
example_end

Sent: Daddy 's not home .
Sem: lambda $0_{r}.not(n|home_4(n:prop|daddy_1,$0),$0)
example_end

Sent: Daddy 's not home .
Sem: lambda $0_{r}.not(n|home_4(n:prop|daddy_1,$0),$0)
example_end

Sent: Mommy 's home .
Sem: lambda $0_{r}.n|home_3(n:prop|mommy_1,$0)
example_end

Sent: Adam is home .
Sem: lambda $0_{r}.adv|home_3(n:prop|adam_1,$0)
example_end

Sent: Bambi is home .
Sem: lambda $0_{r}.adv|home_3(n:prop|bambi_1,$0)
example_end

Sent: Cromer 's at your home .
Sem: lambda $0_{r}.and(cop|~be_2(n:prop|cromer_1,$0),prep|at_3(det:poss|your_4($1,n|home_5($1)),$0))
example_end

Sent: Joshua 's at his home .
Sem: lambda $0_{r}.and(cop|~be_2(n:prop|joshua_1,$0),prep|at_3(det:poss|his_4($1,n|home_5($1)),$0))
example_end

Sent: Kenny 's at his home .
Sem: lambda $0_{r}.and(cop|~be_2(n:prop|kenny_1,$0),prep|at_3(det:poss|his_4($1,n|home_5($1)),$0))
example_end

Sent: doggie 's home .
Sem: lambda $0_{r}.n|home_3(BARE($1,n|dog_1($1)),$0)
example_end

Sent: ball is home .
Sem: lambda $0_{r}.adv|home_3(BARE($1,n|ball_1($1)),$0)
example_end

Sent: Perro is home .
Sem: lambda $0_{r}.adv|home_3(n:prop|perro_1,$0)
example_end

Sent: yes man driving tractor over there .
Sem: lambda $0_{r}.and(and(part|drive-presp_3(BARE($1,n|man_2($1)),BARE($2,n|tractor_4($2)),$0),prep|over_5(adv|there_6($0))),co|yes_1($0))
example_end

Sent: yes he 's home .
Sem: lambda $0_{r}.and(adv|home_4(pro:sub|he_2,$0),co|yes_1($0))
example_end

Sent: yes tractor is home .
Sem: lambda $0_{r}.and(adv|home_4(BARE($1,n|tractor_2($1)),$0),co|yes_1($0))
example_end

Sent: yes busy bulldozer is home .
Sem: lambda $0_{r}.and(adv|home_5(BARE($1,and(adj|busy_2($1),n|bulldoze-dv_3($1))),$0),co|yes_1($0))
example_end

Sent: Adam is home .
Sem: lambda $0_{r}.adv|home_3(n:prop|adam_1,$0)
example_end

Sent: dirt is home .
Sem: lambda $0_{r}.adv|home_3(BARE($1,n|dirt_1($1)),$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: bike is home .
Sem: lambda $0_{r}.adv|home_3(BARE($1,n|bike_1($1)),$0)
example_end

Sent: Ricky 's at his home .
Sem: lambda $0_{r}.and(cop|~be_2(n:prop|ricky_1,$0),prep|at_3(det:poss|his_4($1,n|home_5($1)),$0))
example_end

Sent: Susy is at her home .
Sem: lambda $0_{r}.prep|at_3(det:poss|her_4($1,n|home_5($1)),n:prop|susy_1,$0)
example_end

Sent: where is your pencil ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:poss|your_3($1,n|pencil_4($1)),$0),$2($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what 's in his mouth ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|~be_2($1,$0),prep|in_3(det:poss|his_4($2,n|mouth_5($2)),$0))
example_end

Sent: yes that 's an eye .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|eye_5(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: how many eyes ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|eye-pl_3($0)))
example_end

Sent: two ears .
Sem: BARE($0,det:num|two_1(n|ear-pl_2($0)))
example_end

Sent: two eyes .
Sem: BARE($0,det:num|two_1(n|eye-pl_2($0)))
example_end

Sent: yes that is a bell .
Sem: lambda $0_{r}.and(det:art|a_4(pro:rel|that_2,n|bell_5(pro:rel|that_2,$0)),co|yes_1($0))
example_end

Sent: yes that bell is home .
Sem: lambda $0_{r}.and(adv|home_5(pro:rel|that_2($1,n|bell_3($1)),$0),co|yes_1($0))
example_end

Sent: Ursula 's at your home .
Sem: lambda $0_{r}.and(cop|~be_2(n:prop|ursula_1,$0),prep|at_3(det:poss|your_4($1,n|home_5($1)),$0))
example_end

Sent: tape recorder 's at your home .
Sem: lambda $0_{r}.and(poss|~s_3(BARE($1,and_comp(n|tape_1($1),n|record_2($1))),$0),prep|at_4(det:poss|your_5($2,n|home_6($2)),$0))
example_end

Sent: make Cromer do it !
Sem: lambda $0_{r}.v|make_1(you,lambda $1_{r}.v|do_3(n:prop|cromer_2,pro:per|it_4,$1),$0)
example_end

Sent: you pick doc Dan up yourself .
Sem: lambda $0_{r}.and(and(v|pick_2(pro:per|you_1,n:prop|dan_4_doctor_3,$0),adv|up_5($0)),pro:refl|yourself_6($0))
example_end

Sent: do you like this book .
Sem: lambda $0_{r}.mod|do_1(v|like_3(pro:per|you_2,pro:dem|this_4($1,n|book_5($1)),$0),$0)
example_end

Sent: why don 't you show him the tattooed man ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|show_5(pro:per|you_4,det:art|the_7($1,and(part|tattoo-pastp_8($1),n|man_9($1))),pro:obj|him_6,$0),$2($0)),$0),$0)
example_end

Sent: is this the tattooed man .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_2,and(n|man_5(pro:dem|this_2,$0),part|tattoo-pastp_4(pro:dem|this_2,$0)))
example_end

Sent: do you like the tattooed man .
Sem: lambda $0_{r}.mod|do_1(conj|like_3(pro:per|you_2,det:art|the_4($1,and(part|tattoo-pastp_5($1),n|man_6($1))),$0),$0)
example_end

Sent: is that like your doggie .
Sem: lambda $0_{r}.prep|like_3(det:poss|your_4($1,n|dog-dim_5($1)),pro:dem|that_2,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: part of an apple ?
Sem: BARE($0,Q(att(n|part_1($0),prep|of_2(det:art|a_3($1,n|apple_4($1))))))
example_end

Sent: I think maybe it came from your basket .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(and(v|come-past_5(pro:per|it_4,$1),adv|maybe_3($1)),prep|from_6(det:poss|your_7($2,n|basket_8($2)),$1)),$0)
example_end

Sent: go where it belongs ?
Sem: lambda $0_{r}.Q(v|go_1(you,lambda $1_{r}.and(v|belong-3s_4(pro:per|it_3,$1),adv:int|where_2($1)),$0))
example_end

Sent: I don 't think you can put it back .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(and(v|put-zero_7(pro:per|you_5,pro:per|it_8,$1),adv|back_9($1)),$1),$0),$0),$0)
example_end

Sent: no that 's not part of an apple .
Sem: lambda $0_{r}.and(not(att(n|part_5(pro:dem|that_2,$0),prep|of_6(det:art|a_7($1,n|apple_8($1)))),$0),co|no_1($0))
example_end

Sent: it 's not part of the apple .
Sem: lambda $0_{r}.not(att(n|part_4(pro:per|it_1,$0),prep|of_5(det:art|the_6($1,n|apple_7($1)))),$0)
example_end

Sent: careful Adam with that pencil .
Sem: BARE($0,co|careful_1($0))
example_end

Sent: what happened to Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(n:prop|adam_4,$0))
example_end

Sent: did somebody spank Adam ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|spank_3(pro:indef|somebody_2,n:prop|adam_4,$0),$0))
example_end

Sent: change your diaper ?
Sem: lambda $0_{r}.Q(v|change_1(you,det:poss|your_2($1,n|diaper_3($1)),$0))
example_end

Sent: that 's your back .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|that_1,n|back_4(pro:dem|that_1,$0))
example_end

Sent: you don 't have two tummies .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,BARE($1,det:num|two_5(n|tummy-pl_6($1))),$0),$0),$0)
example_end

Sent: your tummy 's in front .
Sem: lambda $0_{r}.and(poss|~s_3(det:poss|your_1($1,n|tummy_2($1)),$0),n|front_5($0))
example_end

Sent: whose shoes did you hit ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-past_3(v|hit-zero_5(pro:per|you_4,$1($2,n|shoe-pl_2($2)),$0),$0)
example_end

Sent: shall I help you ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|help_3(pro:sub|i_2,pro:per|you_4,$0),$0))
example_end

Sent: you want to take it over to Ursula ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|take_4(pro:per|you_1,pro:per|it_5,$1),adv|over_6(prep|to_7(n:prop|ursula_8,$1))),$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: don 't Adam foot .
Sem: lambda $0_{r}.not(mod|do_1(you,$0),$0)
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's tape .
Sem: lambda $0_{r}.n|tape_3(pro:dem|that_1,$0)
example_end

Sent: no that 's tape .
Sem: lambda $0_{r}.and(n|tape_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: that 's a screw .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|screw_4(pro:dem|that_1,$0))
example_end

Sent: Ursula 's all set ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(n|set_4(n:prop|ursula_1,$0),adv|all_3($0)),$0))
example_end

Sent: we leave this down here .
Sem: lambda $0_{r}.and(v|leave_2(pro:sub|we_1,pro:dem|this_3,$0),adv|down_4(adv|here_5($0)))
example_end

Sent: so it will be out_of the way .
Sem: lambda $0_{r}.mod|will_3(prep|out_of_5(det:art|the_6($1,n|way_7($1)),pro:per|it_2,$0),$0)
example_end

Sent: that 's not a screw .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|screw_5(pro:dem|that_1,$0)),$0)
example_end

Sent: well that 's a screw .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|screw_5(pro:dem|that_2,$0)),co|well_1($0))
example_end

Sent: get back ?
Sem: lambda $0_{r}.Q(and(v|get_1(you,$0),adv|back_2($0)))
example_end

Sent: if it 's hot won 't it burn you ?
Sem: lambda $0_{r}.Q(not(mod|will_5(conj|if_1(adj|hot_4(pro:per|it_2,$0),v|burn_8(pro:per|it_7,pro:per|you_9,$0)),$0),$0))
example_end

Sent: find a penny ?
Sem: lambda $0_{r}.Q(v|find_1(you,det:art|a_2($1,n|penny_3($1)),$0))
example_end

Sent: where did you put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: put it in your pocket ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,pro:per|it_2,$0),prep|in_3(det:poss|your_4($1,n|pocket_5($1)),$0)))
example_end

Sent: don 't touch .
Sem: lambda $0_{r}.not(mod|do_1(v|touch_3(you,$0),$0),$0)
example_end

Sent: do you want a pencil ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,det:art|a_4($1,n|pencil_5($1)),$0),$0))
example_end

Sent: what are you going to write ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|write_6_to_5($2,$1),$0),$0)
example_end

Sent: you 're going to write Cromer ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|write_5(pro:per|you_1,$1),$0),$0),n:prop|cromer_6))
example_end

Sent: you 're going to write Cromer ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|write_5(pro:per|you_1,$1),$0),$0),n:prop|cromer_6))
example_end

Sent: don 't knock it over .
Sem: lambda $0_{r}.not(mod|do_1(and(v|knock_3(you,pro:per|it_4,$0),adv|over_5($0)),$0),$0)
example_end

Sent: good morning .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: hurt knee .
Sem: lambda $0_{r}.v|hurt-zero_1(you,BARE($1,n|knee_2($1)),$0)
example_end

Sent: hurt knee .
Sem: lambda $0_{r}.v|hurt-zero_1(you,BARE($1,n|knee_2($1)),$0)
example_end

Sent: you didn 't hurt yourself with the screwdriver .
Sem: lambda $0_{r}.not(mod|do_2(and(v|hurt-zero_4(pro:per|you_1,pro:refl|yourself_5,$0),prep|with_6(det:art|the_7($1,n|screw+driver_8($1)),$0)),$0),$0)
example_end

Sent: you can fix the screws in your firetruck .
Sem: lambda $0_{r}.mod|can_2(v|fix_3(pro:per|you_1,det:art|the_4($1,att(n|screw-pl_5($1),prep|in_6(det:poss|your_7($2,n|fire+truck_8($2))))),$0),$0)
example_end

Sent: put this one here .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:dem|this_2($1,pro:indef|one_3($1)),$0),adv|here_4($0))
example_end

Sent: what kind of truck is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_6,att(n|kind_2(pro:per|it_6,$0),prep|of_3(BARE($2,n|truck_4($2)))))
example_end

Sent: truck broken ?
Sem: lambda $0_{r}.Q(part|break-pastp_2(BARE($1,n|truck_1($1)),$0))
example_end

Sent: you put the truck where ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,det:art|the_3($1,n|truck_4($1)),$0),$2($0))
example_end

Sent: you 're a busy bulldozer ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,and(n|bulldoze-dv_5(pro:per|you_1,$0),adj|busy_4(pro:per|you_1,$0))))
example_end

Sent: oh it 's a truck ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:per|it_2,n|truck_5(pro:per|it_2,$0)),co|oh_1($0)))
example_end

Sent: red and yellow .
Sem: BARE($0,n|yellow_3($0))
example_end

Sent: which one is yellow ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.adj|yellow_4($1($2,pro:indef|one_2($2)),$0)
example_end

Sent: Ursula 's right there ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(n:prop|ursula_1,$0),adv|right_3(adv|there_4($0))))
example_end

Sent: can you put it together again ?
Sem: lambda $0_{r}.Q(mod|can_1(and(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),adv|together_5($0)),adv|again_6($0)),$0))
example_end

Sent: you put it together .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,pro:per|it_3,$0),adv|together_4($0))
example_end

Sent: is it like this one ?
Sem: lambda $0_{r}.Q(v|like_3(pro:dem|this_4($1,pro:indef|one_5($1)),pro:per|it_2,$0))
example_end

Sent: which one looks like that one ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.cop|look-3s_3($1($2,pro:indef|one_2($2)),pro:dem|that_5($3,pro:indef|one_6_like_4($3)),$0)
example_end

Sent: what kind of horn is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|horn_4($2)))))
example_end

Sent: where did Adam go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(n:prop|adam_3,$0),$1($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: well what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|well_1($0))
example_end

Sent: what does the baby have in his mouth ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(and(v|have_5(det:art|the_3($1,n|baby_4($1)),$2,$0),prep|in_6(det:poss|his_7($3,n|mouth_8($3)),$0)),$0)
example_end

Sent: whistle baby .
Sem: BARE($0,and_comp(n|whistle_1($0),n|baby_2($0)))
example_end

Sent: mouth oh .
Sem: lambda $0_{r}.and(meta|mouth_1($0),co|oh_2($0))
example_end

Sent: whistle in the baby 's mouth .
Sem: BARE($0,att(n|whistle_1($0),prep|in_2(n|baby_4's($1,n|mouth_6($1)))))
example_end

Sent: that 's Adam 's baby .
Sem: lambda $0_{r}.n:prop|adam_3's'(pro:dem|that_1,n|baby_5(pro:dem|that_1,$0))
example_end

Sent: yes that 's water .
Sem: lambda $0_{r}.and(n|water_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: those are rocks .
Sem: lambda $0_{r}.n|rock-pl_3(pro:dem|those_1,$0)
example_end

Sent: there may be fish in the water .
Sem: lambda $0_{r}.mod|may_2(and(cop|be_3(BARE($1,n|fish_4($1)),$0),prep|in_5(det:art|the_6($2,n|water_7($2)),$0)),$0)
example_end

Sent: yes there may be some fish in the water .
Sem: lambda $0_{r}.and(mod|may_3(and(cop|be_4(qn|some_5($1,n|fish_6($1)),$0),prep|in_7(det:art|the_8($2,n|water_9($2)),$0)),$0),co|yes_1($0))
example_end

Sent: that 's no tape recorder .
Sem: lambda $0_{r}.not(and_comp(n|tape_4(pro:dem|that_1,$0),n|record-dv_5(pro:dem|that_1,$0)),$0)
example_end

Sent: those are records in a box .
Sem: lambda $0_{r}.att(n|record-pl_3(pro:dem|those_1,$0),prep|in_4(det:art|a_5($1,n|box_6($1))))
example_end

Sent: how do you spell your name Adam ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|spell_4(pro:per|you_3,det:poss|your_5($1,n|name_6($1)),$0),$2($0)),$0)
example_end

Sent: why don 't you sit beside Mr Cromer and write what he writes .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|write_10(pro:per|you_4,lambda $1_{r}.v|write-3s_13(pro:sub|he_12,pro:int|what_11,$1),$0),$2($0)),prep|beside_6(n:prop|cromer_8_mr_7,$0)),$0),$0)
example_end

Sent: what does the label on Mr Cromer 's suitcase say ?
Sem: lambda $3_{e}.lambda $0_{r}.v|do-3s_2(v|say_10(det:art|the_3($1,att(n|label_4($1),prep|on_5(n:prop|cromer_7_mr_6's($2,n|suitcase_9($2))))),$3,$0),$0)
example_end

Sent: that 's no horse .
Sem: lambda $0_{r}.not(n|horse_4(pro:dem|that_1,$0),$0)
example_end

Sent: what about Cromer 's suitcase ?
Sem: att(pro:int|what_1,prep|about_2(n:prop|cromer_3's($0,n|suitcase_5($0))))
example_end

Sent: Adam break suitcase Cromer ?
Sem: lambda $0_{r}.Q(v|break_2(n:prop|adam_1,n:prop|cromer_4's($1,n|suitcase_3($1)),$0))
example_end

Sent: no Adam shouldn 't break Cromer 's suitcase .
Sem: lambda $0_{r}.and(not(mod|should_3(v|break_5(n:prop|adam_2,n:prop|cromer_6's($1,n|suitcase_8($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: he 'd do without a suitcase .
Sem: lambda $0_{r}.mod|~genmod_2(and(v|do_3(pro:sub|he_1,$0),prep|without_4(det:art|a_5($1,n|suitcase_6($1)),$0)),$0)
example_end

Sent: do with a suitcase ?
Sem: lambda $0_{r}.Q(and(v|do_1(you,$0),prep|with_2(det:art|a_3($1,n|suitcase_4($1)),$0)))
example_end

Sent: Catherine take the suitcase ?
Sem: lambda $0_{r}.Q(v|take_2(n:prop|catherine_1,det:art|the_3($1,n|suitcase_4($1)),$0))
example_end

Sent: raining outside .
Sem: lambda $0_{r}.and(part|rain-presp_1(you,$0),adv|outside_2($0))
example_end

Sent: is it raining ?
Sem: lambda $0_{r}.Q(aux|be-3s_1(part|rain-presp_3(you,$0),$0))
example_end

Sent: well is the sun shining ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_2(part|shine-presp_5(det:art|the_3($1,n|sun_4($1)),$0),$0),co|well_1($0)))
example_end

Sent: the sun 's not shining ?
Sem: lambda $0_{r}.Q(not(aux|~be_3(part|shine-presp_5(det:art|the_1($1,n|sun_2($1)),$0),$0),$0))
example_end

Sent: is it cloudy ?
Sem: lambda $0_{r}.Q(adj|cloud-dn_3($0))
example_end

Sent: Adam 's pieces ?
Sem: BARE($0,Q(n:prop|adam_1's($1,n|piece-pl_3($1),$0)))
example_end

Sent: take a piece of candy .
Sem: lambda $0_{r}.v|take_1(you,det:art|a_2($1,att(n|piece_3($1),prep|of_4(BARE($2,n|candy_5($2))))),$0)
example_end

Sent: write with pencil ?
Sem: lambda $0_{r}.Q(and(v|write_1(you,$0),prep|with_2(BARE($1,n|pencil_3($1)),$0)))
example_end

Sent: put the radio in ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,det:art|the_2($1,n|radio_3($1)),$0),adv|in_4($0)))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you know Humpty_Dumpty .
Sem: lambda $0_{r}.v|know_2(pro:per|you_1,n:prop|humpty_dumpty_3,$0)
example_end

Sent: do you think that radio will go in that box ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|will_6(v|go_7(pro:dem|that_4($2,n|radio_5($2)),pro:dem|that_9($3,n|box_10_in_8($3)),$1),$1),$0),$0))
example_end

Sent: it 's a windmill .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|windmill_4(pro:per|it_1,$0))
example_end

Sent: whose bike ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|bike_2($1))
example_end

Sent: do you want to play Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|play_5(pro:per|you_2,$1),$0),$0))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: you 're going to put all of your toys away .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|put-zero_5(pro:per|you_1,det:poss|your_8($2,qn|all_6($3,n|toy-pl_9_of_7($3),$2)),$1),adv|away_10($1)),$0),$0)
example_end

Sent: you going to put your toys in there ?
Sem: lambda $0_{r}.Q(part|go-presp_2(pro:per|you_1,lambda $1_{r}.and(v|put-zero_4(pro:per|you_1,det:poss|your_5($2,n|toy-pl_6($2)),$1),prep|in_7(adv|there_8($1))),$0))
example_end

Sent: play toy ?
Sem: BARE($0,Q(and_comp(n|play_1($0),n|toy_2($0))))
example_end

Sent: what about your play toy ?
Sem: att(pro:int|what_1,adv|about_2(det:poss|your_3($0,and_comp(n|play_4($0),n|toy_5($0)))))
example_end

Sent: play toy ?
Sem: BARE($0,Q(and_comp(n|play_1($0),n|toy_2($0))))
example_end

Sent: what happened to the play toy ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,and_comp(n|play_5($2),n|toy_6($2))),$0))
example_end

Sent: you dropped the play toy ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,det:art|the_3($1,and_comp(n|play_4($1),n|toy_5($1))),$0))
example_end

Sent: how many play toys do you have ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_5(v|have_7(pro:per|you_6,BARE($1,and_comp(n|play_3($1),and($2(qn|many_2($1)),n|toy-pl_4($1)))),$0),$0)
example_end

Sent: Adam fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(n:prop|adam_1,$0),adv|down_3($0))
example_end

Sent: oh you 're crawling on the radio ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|crawl-presp_4(pro:per|you_2,$0),prep|on_5(det:art|the_6($1,n|radio_7($1)),$0)),$0),co|oh_1($0)))
example_end

Sent: but I though you were crawling .
Sem: lambda $0_{r}.adv|though_3(pro:sub|i_2,lambda $1_{r}.aux|be-past_5(part|crawl-presp_6(pro:per|you_4,$1),$1),$0)
example_end

Sent: on your knees .
Sem: prep|on_1(det:poss|your_2($0,n|knee-pl_3($0)))
example_end

Sent: put shoe on ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,BARE($1,n|shoe_2($1)),$0),adv|on_3($0)))
example_end

Sent: where did your foot go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_5(det:poss|your_3($1,n|foot_4($1)),$0),$2($0)),$0)
example_end

Sent: is it in the shoe ?
Sem: lambda $0_{r}.Q(and(aux|be-3s_1(pro:per|it_2,$0),prep|in_3(det:art|the_4($1,n|shoe_5($1)),$0)))
example_end

Sent: do you have play toys in the kitchen ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,BARE($1,and_comp(n|play_4($1),n|toy-pl_5($1))),$0),prep|in_6(det:art|the_7($2,n|kitchen_8($2)),$0)),$0))
example_end

Sent: what toy do you kick ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_3(v|kick_5(pro:per|you_4,$1($2,n|toy_2($2)),$0),$0)
example_end

Sent: kick your shoe ?
Sem: lambda $0_{r}.Q(v|kick_1(you,det:poss|your_2($1,n|shoe_3($1)),$0))
example_end

Sent: you fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0))
example_end

Sent: doggie and the car ?
Sem: BARE($0,Q(det:art|the_3($1,n|car_4($1),$0)))
example_end

Sent: where did you go yesterday ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|go_4(pro:per|you_3,$0),$1($0)),adv:tem|yesterday_5($0)),$0)
example_end

Sent: you saw some pretty flowers ?
Sem: lambda $0_{r}.Q(v|saw_2(pro:per|you_1,qn|some_3($1,and(adj|pretty_4($1),n|flower-pl_5($1))),$0))
example_end

Sent: are you a boat or an airplane ?
Sem: lambda $0_{r}.Q(det:art|a_6(pro:per|you_2,det:art|a_3(pro:per|you_2,n|airplane_7(pro:per|you_2,$0))))
example_end

Sent: are you a Texaco star ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_2,and_comp(n:prop|texaco_4(pro:per|you_2,$0),n|star_5(pro:per|you_2,$0))))
example_end

Sent: oh you 're a man with a Texaco star .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|you_2,att(n|man_5(pro:per|you_2,$0),prep|with_6(det:art|a_7($1,and_comp(n:prop|texaco_8($1),n|star_9($1)))))),co|oh_1($0))
example_end

Sent: don 't put your mouth on the paper .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,det:poss|your_4($1,n|mouth_5($1)),$0),prep|on_6(det:art|the_7($2,n|paper_8($2)),$0)),$0),$0)
example_end

Sent: what did you do here ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),adv|here_5($0)),$0)
example_end

Sent: what did you do to the paper ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|to_5(det:art|the_6($2,n|paper_7($2)),$0)),$0)
example_end

Sent: game Adam ?
Sem: BARE($0,Q(n|game_1($0)))
example_end

Sent: play tail ?
Sem: lambda $0_{r}.Q(n|play_1(you,BARE($1,n|tail_2($1)),$0))
example_end

Sent: you put your gloves on ?
Sem: lambda $0_{r}.Q(and(v|put-zero_2(pro:per|you_1,det:poss|your_3($1,n|glove-pl_4($1)),$0),prep|on_5($0)))
example_end

Sent: can you put your gloves on ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,det:poss|your_4($1,n|glove-pl_5($1)),$0),prep|on_6($0)),$0))
example_end

Sent: what about the book and the door ?
Sem: BARE($0,Q(det:art|the_6($1,att(n|door_7($1),adv|about_2(det:art|the_3($2,n|book_4($2)))),$0)))
example_end

Sent: who puts your gloves on ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|put-3s_2($1,det:poss|your_3($2,n|glove-pl_4($2)),$0),prep|on_5($0))
example_end

Sent: why are you going to put the book outside ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|put-zero_6(pro:per|you_3,det:art|the_7($2,n|book_8($2)),$1),adv|outside_9($1)),$0),$3($0)),$0)
example_end

Sent: another book yes .
Sem: lambda $0_{r}.and(qn|another_1($1,n|book_2($1),$0),co|yes_3($0))
example_end

Sent: whose book is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|book_2(pro:dem|that_4,$0))
example_end

Sent: whose book is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|book_2(pro:dem|that_4,$0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: a book isn 't a ball .
Sem: lambda $0_{r}.not(det:art|a_5(det:art|a_1($1,n|book_2($1)),n|ball_6(det:art|a_1($1,n|book_2($1)),$0)),$0)
example_end

Sent: don 't throw the book .
Sem: lambda $0_{r}.not(mod|do_1(v|throw_3(you,det:art|the_4($1,n|book_5($1)),$0),$0),$0)
example_end

Sent: you ask somebody to play with you .
Sem: lambda $0_{r}.v|ask_2(pro:per|you_1,lambda $1_{r}.v|play_5(pro:indef|somebody_3,pro:per|you_7_with_6,$1),$0)
example_end

Sent: can 't you think of another game ?
Sem: lambda $0_{r}.Q(not(mod|can_1(v|think_4(pro:per|you_3,qn|another_6($1,n|game_7_of_5($1)),$0),$0),$0))
example_end

Sent: what are you doing with that chair ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),prep|with_5(pro:dem|that_6($2,n|chair_7($2)),$0)),$0)
example_end

Sent: oh Adam sit in the chair .
Sem: lambda $0_{r}.and(and(v|sit_3(you,$0),prep|in_4(det:art|the_5($1,n|chair_6($1)),$0)),co|oh_1($0))
example_end

Sent: oh Adam sit in the chair and watch the game ?
Sem: lambda $0_{r}.Q(and(and(v|watch_8(you,det:art|the_9($1,n|game_10($1)),$0),prep|in_4(det:art|the_5($2,n|chair_6($2)),$0)),co|oh_1($0)))
example_end

Sent: what kind of game are you going to watch ?
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.cop|be-pres_5(part|go-presp_7(pro:per|you_6,lambda $1_{r}.v|watch_9($2($3,att(n|kind_2($3),prep|of_3(BARE($4,n|game_4($4))))),$1),$0),$0)
example_end

Sent: watch the game ?
Sem: lambda $0_{r}.Q(v|watch_1(you,det:art|the_2($1,n|game_3($1)),$0))
example_end

Sent: they usually come on the weekend .
Sem: lambda $0_{r}.and(and(v|come_3(pro:sub|they_1,$0),adv|usual-dadj_2($0)),prep|on_4(det:art|the_5($1,n|week+end_6($1)),$0))
example_end

Sent: come at the end of the week .
Sem: lambda $0_{r}.and(v|come_1(you,$0),prep|at_2(det:art|the_3($1,att(n|end_4($1),prep|of_5(det:art|the_6($2,n|week_7($2))))),$0))
example_end

Sent: Sunday yes is at the end of the week .
Sem: lambda $0_{r}.and(and(cop|be-3s_3(n:prop|sunday_1,$0),prep|at_4(det:art|the_5($1,att(n|end_6($1),prep|of_7(det:art|the_8($2,n|week_9($2))))),$0)),co|yes_2($0))
example_end

Sent: the power shovel pick the dirt up ?
Sem: lambda $0_{r}.Q(and(v|pick_4(det:art|the_1($1,and_comp(n|power_2($1),n|shovel_3($1))),det:art|the_5($2,n|dirt_6($2)),$0),adv|up_7($0)))
example_end

Sent: did you see a power shovel yesterday ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|see_3(pro:per|you_2,det:art|a_4($1,and_comp(n|power_5($1),n|shovel_6($1))),$0),adv:tem|yesterday_7($0)),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you say a busy bulldozer yesterday .
Sem: lambda $0_{r}.and(v|say_2(pro:per|you_1,det:art|a_3($1,and(adj|busy_4($1),n|bulldoze-dv_5($1))),$0),adv:tem|yesterday_6($0))
example_end

Sent: what was the busy bulldozer doing ?
Sem: lambda $2_{e}.lambda $0_{r}.cop|be-past_2(part|do-presp_6(det:art|the_3($1,and(adj|busy_4($1),n|bulldoze-dv_5($1))),$2,$0),$0)
example_end

Sent: was it pushing the dirt around too ?
Sem: lambda $0_{r}.Q(cop|be-past_1(and(and(part|push-presp_3(pro:per|it_2,det:art|the_4($1,n|dirt_5($1)),$0),adv|around_6($0)),adv|too_7($0)),$0))
example_end

Sent: moon picks the dirt up ?
Sem: lambda $0_{r}.Q(and(v|pick-3s_2(BARE($1,n|moon_1($1)),det:art|the_3($2,n|dirt_4($2)),$0),adv|up_5($0)))
example_end

Sent: when do you see the moon ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do_2(and(v|see_4(pro:per|you_3,det:art|the_5($1,n|moon_6($1)),$0),$2($0)),$0)
example_end

Sent: Adam 's pencil ?
Sem: BARE($0,Q(n:prop|adam_1's($1,n|pencil_3($1),$0)))
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: what are you going to say to the busy bulldozer ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|say_6($2,det:art|the_8($3,and(adj|busy_9($3),n|bulldoze-dv_10_to_7($3))),$1),$0),$0)
example_end

Sent: you 're a little rascal ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,and(n|rascal_5(pro:per|you_1,$0),adj|little_4(pro:per|you_1,$0))))
example_end

Sent: just checking ?
Sem: lambda $0_{r}.Q(and(part|check-presp_2(you,$0),adv|just_1($0)))
example_end

Sent: no you don 't need your temperature taken .
Sem: lambda $0_{r}.and(not(mod|do_3(v|need_5(pro:per|you_2,lambda $1_{r}.part|take-pastp_8(det:poss|your_6($2,n|temperature_7($2)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: you 're well .
Sem: lambda $0_{r}.adv|well_3(pro:per|you_1,$0)
example_end

Sent: Mommy just takes your temperature when you are sick .
Sem: lambda $0_{r}.conj|when_6(adj|sick_9(pro:per|you_7,$0),and(v|take-3s_3(n:prop|mommy_1,det:poss|your_4($1,n|temperature_5($1)),$0),adv|just_2($0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam 's shirt !
Sem: n:prop|adam_1's($0,n|shirt_3($0))
example_end

Sent: don 't wear a shirt Mommy ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|wear_3(you,det:art|a_4($1,n|shirt_5($1)),$0),$0),$0))
example_end

Sent: Mommy doesn 't wear a shirt .
Sem: lambda $0_{r}.not(mod|do_2(v|wear_4(n:prop|mommy_1,det:art|a_5($1,n|shirt_6($1)),$0),$0),$0)
example_end

Sent: yes Adam does wear shoes .
Sem: lambda $0_{r}.and(mod|do-3s_3(v|wear_4(n:prop|adam_2,BARE($1,n|shoe-pl_5($1)),$0),$0),co|yes_1($0))
example_end

Sent: don 't ride on the briefcase .
Sem: lambda $0_{r}.not(mod|do_1(v|ride_3(you,det:art|the_5($1,n|briefcase_6_on_4($1)),$0),$0),$0)
example_end

Sent: do you want to sit next_to me ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|sit_5(pro:per|you_2,$1),prep|next_to_6(pro:obj|me_7,$1)),$0),$0))
example_end

Sent: that 's Ursula 's .
Sem: lambda $0_{r}.poss|~s_4(n:prop|ursula_3,pro:dem|that_1,$0)
example_end

Sent: that 's Ursula 's pocket book .
Sem: lambda $0_{r}.n:prop|ursula_3's'(pro:dem|that_1,and_comp(n|pocket_5(pro:dem|that_1,$0),n|book_6(pro:dem|that_1,$0)))
example_end

Sent: is it heavy ?
Sem: lambda $0_{r}.Q(adj|heavy_3(pro:per|it_2,$0))
example_end

Sent: isn 't that a pretty box Adam ?
Sem: lambda $0_{r}.Q(not(det:art|a_4(det:dem|that_3,and(n|box_6(det:dem|that_3,$0),adj|pretty_5(det:dem|that_3,$0))),$0))
example_end

Sent: can you bring me my pocket book ?
Sem: lambda $0_{r}.Q(mod|can_1(v|bring_3(pro:per|you_2,det:poss|my_5($1,and_comp(n|pocket_6($1),n|book_7($1))),pro:obj|me_4,$0),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no it 's not all finished .
Sem: lambda $0_{r}.and(not(cop|~be_3(and(part|finish-pastp_6(pro:per|it_2,$0),adv|all_5($0)),$0),$0),co|no_1($0))
example_end

Sent: won 't you please go over and take Ursula 's pocketbook to her ?
Sem: lambda $0_{r}.Q(not(mod|will_1(and(and(and(v|take_8(pro:per|you_3,n:prop|ursula_9's($1,n|pocket+book_11($1)),$0),co|please_4($0)),adv|over_6($0)),prep|to_12(pro:obj|her_13,$0)),$0),$0))
example_end

Sent: no you hit your head here on the bench .
Sem: lambda $0_{r}.and(and(v|hit-zero_3(pro:per|you_2,det:poss|your_4($1,n|head_5($1)),$0),adv|here_6(prep|on_7(det:art|the_8($2,n|bench_9($2)),$0))),co|no_1($0))
example_end

Sent: Adam what are you doing back there ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(and(part|do-presp_5(pro:per|you_4,$1,$0),adv|back_6(adv|there_7($0))),$0)
example_end

Sent: looking at the water ?
Sem: lambda $0_{r}.Q(and(part|look-presp_1(you,$0),prep|at_2(det:art|the_3($1,n|water_4($1)),$0)))
example_end

Sent: no there isn 't any water in there .
Sem: lambda $0_{r}.and(and(cop|be_3(not(qn|any_5($1,n|water_6($1))),$0),prep|in_7(adv|there_8($0))),co|no_1($0))
example_end

Sent: that wasn 't a drum .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|drum_5(pro:dem|that_1,$0)),$0)
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: picking tomatoes up ?
Sem: lambda $0_{r}.Q(and(part|pick-presp_1(you,BARE($1,n|tomato-pl_2($1)),$0),adv|up_3($0)))
example_end

Sent: why would you pick a tomato up like that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(and(v|pick_4(pro:per|you_3,det:art|a_5($1,n|tomato_6($1)),$0),$2($0)),adv|up_7($0)),prep|like_8(pro:dem|that_9,$0)),$0)
example_end

Sent: what 's on your tongue ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),prep|on_3(det:poss|your_4($2,n|tongue_5($2)),$0))
example_end

Sent: you 've got a string of Mommy 's hair in your mouth .
Sem: lambda $0_{r}.aux|~have_2(and(part|get-pastp_3(pro:per|you_1,det:art|a_4($1,att(n|string_5($1),prep|of_6(n:prop|mommy_7's($2,n|hair_9($2))))),$0),prep|in_10(det:poss|your_11($3,n|mouth_12($3)),$0)),$0)
example_end

Sent: no you don 't write on buttons .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|write_5(pro:per|you_2,$0),prep|on_6(BARE($1,n|button-pl_7($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: tomato soup .
Sem: BARE($0,and_comp(n|tomato_1($0),n|soup_2($0)))
example_end

Sent: how can I drink so much coffee ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|can_2(and(n|drink_4(pro:sub|i_3,adv|so_5(qn|much_6($1,n|coffee_7($1))),$0),$2($0)),$0)
example_end

Sent: oh Adam will drink some coffee too .
Sem: lambda $0_{r}.and(mod|will_3(and(v|drink_4(n:prop|adam_2,qn|some_5($1,n|coffee_6($1)),$0),post|too_7($0)),$0),co|oh_1($0))
example_end

Sent: did you have a pumpkin at Halloween ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|have_3(pro:per|you_2,det:art|a_4($1,n|pumpkin_5($1)),$0),prep|at_6(n:prop|halloween_7,$0)),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's a mouth .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|mouth_4(pro:dem|that_1,$0))
example_end

Sent: it looks like a tomato ?
Sem: lambda $0_{r}.Q(and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,n|tomato_5($1)),$0)))
example_end

Sent: that 's three .
Sem: BARE($0,det:num|three_3($0))
example_end

Sent: get your ball ?
Sem: lambda $0_{r}.Q(v|get_1(you,det:poss|your_2($1,n|ball_3($1)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: do you know ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where did you put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: when did you see the ball ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,det:art|the_5($1,n|ball_6($1)),$0),$2($0)),$0)
example_end

Sent: do you like grapefruit ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,n|grape+fruit_4($1)),$0),$0))
example_end

Sent: if you break it then you won 't have a pumpkin .
Sem: lambda $0_{r}.not(mod|will_7(conj|if_1(v|break_3(pro:per|you_2,pro:per|it_4,$0),and(v|have_9(pro:per|you_6,det:art|a_10($1,n|pumpkin_11($1)),$0),adv:tem|then_5($0))),$0),$0)
example_end

Sent: poor pumpkin .
Sem: BARE($0,and(adj|poor_1($0),n|pumpkin_2($0)))
example_end

Sent: oh is that Pepper ?
Sem: lambda $0_{r}.Q(and(n:prop|pepper_4(pro:rel|that_3,$0),co|oh_1($0)))
example_end

Sent: he went out to the kitchen soon .
Sem: lambda $0_{r}.and(and(and(v|go-past_2(pro:sub|he_1,$0),adv|out_3($0)),prep|to_4(det:art|the_5($1,n|kitchen_6($1)),$0)),adv|soon_7($0))
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: don 't touch .
Sem: lambda $0_{r}.not(mod|do_1(v|touch_3(you,$0),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: my that would be a big hat .
Sem: lambda $0_{r}.and(mod|will-cond_3(det:art|a_5(pro:dem|that_2,and(n|hat_7(pro:dem|that_2,$0),adj|big_6(pro:dem|that_2,$0))),$0),det:poss|my_1($0))
example_end

Sent: where would you wear a hat like that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|wear_4(pro:per|you_3,det:art|a_5($1,n|hat_6($1)),$0),$2($0)),prep|like_7(pro:dem|that_8,$0)),$0)
example_end

Sent: you put the pencil in your mouth ?
Sem: lambda $0_{r}.Q(and(v|put-zero_2(pro:per|you_1,det:art|the_3($1,n|pencil_4($1)),$0),prep|in_5(det:poss|your_6($2,n|mouth_7($2)),$0)))
example_end

Sent: that 's not Daddy 's suitcase .
Sem: lambda $0_{r}.not(n:prop|daddy_4's'(pro:dem|that_1,n|suitcase_6(pro:dem|that_1,$0)),$0)
example_end

Sent: you knocked it over .
Sem: lambda $0_{r}.and(v|knock-past_2(pro:per|you_1,pro:per|it_3,$0),adv|over_4($0))
example_end

Sent: buy milk ?
Sem: lambda $0_{r}.Q(n|buy_1(you,BARE($1,n|milk_2($1)),$0))
example_end

Sent: is milk on there ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_1(BARE($1,v|milk_2($1)),$0),prep|on_3(adv|there_4($0))))
example_end

Sent: what kind of bread ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|bread_4($2)))))
example_end

Sent: fresh milk ?
Sem: BARE($0,Q(and(adj|fresh_1($0),n|milk_2($0))))
example_end

Sent: more candy .
Sem: qn|more_1($0,n|candy_2($0))
example_end

Sent: is that Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(pro:rel|that_2,$0))
example_end

Sent: it 's not candy .
Sem: lambda $0_{r}.not(n|candy_4(pro:per|it_1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam 's suitcase ?
Sem: BARE($0,Q(n:prop|adam_1's($1,n|suitcase_3($1),$0)))
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: what will happen if you drop it ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|if_4(v|drop_6(pro:per|you_5,pro:per|it_7,$0),mod|will_2(v|happen_3(you,$1,$0),$0))
example_end

Sent: is that a letter for somebody ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,att(n|letter_4(pro:rel|that_2,$0),prep|for_5(pro:indef|somebody_6))))
example_end

Sent: whose letter is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|letter_2(pro:per|it_4,$0))
example_end

Sent: Adam 's letter .
Sem: n:prop|adam_1's($0,n|letter_3($0))
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: the paint came off in your mouth .
Sem: lambda $0_{r}.and(v|come-past_3_off_4(det:art|the_1($1,n|paint_2($1)),$0),prep|in_5(det:poss|your_6($2,n|mouth_7($2)),$0))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh ice .
Sem: lambda $0_{r}.and(n|ice+cream_2($0),co|oh_1($0))
example_end

Sent: put it in your mouth .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|in_3(det:poss|your_4($1,n|mouth_5($1)),$0))
example_end

Sent: where are you going now ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),adv|now_5($0)),$0)
example_end

Sent: did you take the suitcase out ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|take_3(pro:per|you_2,det:art|the_4($1,n|suitcase_5($1)),$0),adv|out_6($0)),$0))
example_end

Sent: they 're too large .
Sem: lambda $0_{r}.adv|too_3(adj|large_4(pro:sub|they_1,$0))
example_end

Sent: no it 's not broken .
Sem: lambda $0_{r}.and(not(cop|~be_3(part|break-pastp_5(pro:per|it_2,$0),$0),$0),co|no_1($0))
example_end

Sent: no that side isn 't broken .
Sem: lambda $0_{r}.and(not(cop|be_4(part|break-pastp_6(pro:dem|that_2($1,n|side_3($1)),$0),$0),$0),qn|no_1($0))
example_end

Sent: no it 's not broken .
Sem: lambda $0_{r}.and(not(cop|~be_3(part|break-pastp_5(pro:per|it_2,$0),$0),$0),co|no_1($0))
example_end

Sent: do you have a whistle over there ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,det:art|a_4($1,v|whistle_5($1)),$0),adv|over_6(adv|there_7($0))),$0))
example_end

Sent: the microphone .
Sem: det:art|the_1($0,n|microphone_2($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: big boys don 't bother things like that .
Sem: lambda $0_{r}.not(mod|do_3(v|bother_5(BARE($1,and(adj|big_1($1),n|boy-pl_2($1))),BARE($2,att(n|thing-pl_6($2),prep|like_7(pro:dem|that_8))),$0),$0),$0)
example_end

Sent: the record 's in the folder .
Sem: lambda $0_{r}.and(poss|~s_3(det:art|the_1($1,n|record_2($1)),$0),prep|in_4(det:art|the_5($2,n|folder_6($2)),$0))
example_end

Sent: the record is in the folder .
Sem: lambda $0_{r}.and(cop|be-3s_3(det:art|the_1($1,n|record_2($1)),$0),prep|in_4(det:art|the_5($2,n|folder_6($2)),$0))
example_end

Sent: is that yours ?
Sem: lambda $0_{r}.Q(pro:poss|yours_3(pro:dem|that_2,$0))
example_end

Sent: whose is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam 's ?
Sem: Q(poss|~s_2(n:prop|adam_1))
example_end

Sent: is that yours ?
Sem: lambda $0_{r}.Q(pro:poss|yours_3(pro:dem|that_2,$0))
example_end

Sent: what 's the name of that song ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,att(n|name_4($2),prep|of_5(pro:dem|that_6($3,n|song_7($3))))),$0)
example_end

Sent: don 't scratch the record .
Sem: lambda $0_{r}.not(mod|do_1(v|scratch_3(you,det:art|the_4($1,n|record_5($1)),$0),$0),$0)
example_end

Sent: put the toys in the basket .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|toy-pl_3($1)),$0),prep|in_4(det:art|the_5($2,n|basket_6($2)),$0))
example_end

Sent: where is the record ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|record_4($1)),$0),$2($0))
example_end

Sent: in your hand ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|hand_3($0))))
example_end

Sent: see the record falling out_of the folder ?
Sem: lambda $0_{r}.Q(and(v|see_1(you,det:art|the_2($1,n|record_3($1)),$0),and(part|fall-presp_4(you,$0),prep|out_of_5(det:art|the_6($2,n|folder_7($2)),$0))))
example_end

Sent: no that 's not the top to that .
Sem: lambda $0_{r}.and(not(det:art|the_5(pro:dem|that_2,att(adj|top_6(pro:dem|that_2,$0),prep|to_7(pro:dem|that_8))),$0),co|no_1($0))
example_end

Sent: what kind of fish ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|fish_4($2)))))
example_end

Sent: that 's not a bus .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|bus_5(pro:dem|that_1,$0)),$0)
example_end

Sent: that 's part of a train .
Sem: lambda $0_{r}.att(n|part_3(pro:dem|that_1,$0),prep|of_4(det:art|a_5($1,n|train_6($1))))
example_end

Sent: I still don 't know what fish is in there .
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.not(mod|do_3(and(v|know_5(pro:sub|i_1,lambda $1_{r}.and(cop|be-3s_8($2($3,n|fish_7($3)),$1),prep|in_9(adv|there_10($1))),$0),adv|still_2($0)),$0),$0)
example_end

Sent: I 'll put it in the drawer .
Sem: lambda $0_{r}.mod|~will_2(and(v|put-zero_3(pro:sub|i_1,pro:per|it_4,$0),prep|in_5(det:art|the_6($1,n|drawer_7($1)),$0)),$0)
example_end

Sent: careful with the record .
Sem: BARE($0,co|careful_1($0))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: what is he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: did Adam do that ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|do_3(n:prop|adam_2,pro:dem|that_4,$0),$0))
example_end

Sent: the man did that ?
Sem: lambda $0_{r}.Q(v|do-past_3(det:art|the_1($1,n|man_2($1)),pro:dem|that_4,$0))
example_end

Sent: Adam did that ?
Sem: lambda $0_{r}.Q(v|do-past_2(n:prop|adam_1,pro:dem|that_3,$0))
example_end

Sent: why did Adam do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|do_4(n:prop|adam_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: Adam take it off ?
Sem: lambda $0_{r}.Q(and(v|take_2(n:prop|adam_1,pro:per|it_3,$0),adv|off_4($0)))
example_end

Sent: what makes the windmill turn around ?
Sem: lambda $1_{e}.lambda $0_{r}.v|make-3s_2($1,lambda $2_{r}.and(n|turn_5(det:art|the_3($3,n|windmill_4($3)),$2),adv|around_6($2)),$0)
example_end

Sent: what makes a real windmill turn around ?
Sem: lambda $1_{e}.lambda $0_{r}.v|make-3s_2($1,lambda $2_{r}.and(n|turn_6(det:art|a_3($3,and(adj|real_4($3),n|windmill_5($3))),$2),adv|around_7($2)),$0)
example_end

Sent: do you know ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,$0),$0))
example_end

Sent: no you don 't know ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|know_5(pro:per|you_2,$0),$0),$0),co|no_1($0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where did you put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: I 'm looking right at it .
Sem: lambda $0_{r}.aux|~be_2(and(part|look-presp_3(pro:sub|i_1,pro:per|it_6_at_5,$0),adv|right_4($0)),$0)
example_end

Sent: yes I 'm looking .
Sem: lambda $0_{r}.and(aux|~be_3(part|look-presp_4(pro:sub|i_2,$0),$0),co|yes_1($0))
example_end

Sent: what are you doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: oh you 're looking at the windmill .
Sem: lambda $0_{r}.and(aux|~be_3(part|look-presp_4(pro:per|you_2,det:art|the_6($1,n|windmill_7_at_5($1)),$0),$0),co|oh_1($0))
example_end

Sent: you 're turning it on ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|turn-presp_3(pro:per|you_1,pro:per|it_4,$0),adv|on_5($0)),$0))
example_end

Sent: here comes an airplane ?
Sem: lambda $0_{r}.Q(and(v|come-3s_2(you,det:art|a_3($1,n|airplane_4($1)),$0),adv|here_1($0)))
example_end

Sent: what does an airplane say ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|say_5(det:art|a_3($1,n|airplane_4($1)),$2,$0),$0)
example_end

Sent: get it again ?
Sem: lambda $0_{r}.Q(and(aux|get_1(you,pro:per|it_2,$0),adv|again_3($0)))
example_end

Sent: is that a flag ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|flag_4(pro:rel|that_2,$0)))
example_end

Sent: oh you 're getting supper ready ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|get-presp_4(pro:per|you_2,lambda $1_{r}.adj|ready_6(BARE($2,n|supper_5($2)),$1),$0),$0),co|oh_1($0)))
example_end

Sent: do you like tomato soup ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,and_comp(n|tomato_4($1),n|soup_5($1))),$0),$0))
example_end

Sent: no you don 't like tomato soup ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(co|like_5(pro:per|you_2,BARE($1,and_comp(n|tomato_6($1),n|soup_7($1))),$0),$0),$0),co|no_1($0)))
example_end

Sent: you 're making two bowls of tomato soup .
Sem: lambda $0_{r}.aux|~be_2(part|make-presp_3(pro:per|you_1,BARE($1,att(det:num|two_4(n|bowl-pl_5($1)),prep|of_6(BARE($2,and_comp(n|tomato_7($2),n|soup_8($2)))))),$0),$0)
example_end

Sent: what are you doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: other side .
Sem: qn|other_1($0,n|side_2($0))
example_end

Sent: well what are you cooking down there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-pres_3(and(part|cook-presp_5(pro:per|you_4,$1,$0),adv|down_6(adv|there_7($0))),$0),co|well_1($0))
example_end

Sent: cooking water ?
Sem: lambda $0_{r}.Q(part|cook-presp_1(you,BARE($1,n|water_2($1)),$0))
example_end

Sent: Adam swimming .
Sem: lambda $0_{r}.part|swim-presp_2(n:prop|adam_1,$0)
example_end

Sent: when you throw it it hurts your head .
Sem: lambda $0_{r}.conj|when_1(v|throw_3(pro:per|you_2,pro:per|it_4,$0),v|hurt-3s_6(pro:per|it_5,det:poss|your_7($1,n|head_8($1)),$0))
example_end

Sent: don 't throw it .
Sem: lambda $0_{r}.not(mod|do_1(v|throw_3(you,pro:per|it_4,$0),$0),$0)
example_end

Sent: you 'll hurt Mr Cromer 's head .
Sem: lambda $0_{r}.mod|~will_2(part|hurt-pastp_3(pro:per|you_1,n:prop|cromer_5_mr_4's($1,n|head_7($1)),$0),$0)
example_end

Sent: you 'll hurt Ursula too .
Sem: lambda $0_{r}.mod|~will_2(and(part|hurt-pastp_3(pro:per|you_1,n:prop|ursula_4,$0),post|too_5($0)),$0)
example_end

Sent: you 'll hurt the suitcase too .
Sem: lambda $0_{r}.mod|~will_2(and(v|hurt-zero_3(pro:per|you_1,det:art|the_4($1,n|suitcase_5($1)),$0),post|too_6($0)),$0)
example_end

Sent: you hit the floor .
Sem: lambda $0_{r}.v|hit-zero_2(pro:per|you_1,det:art|the_3($1,n|floor_4($1)),$0)
example_end

Sent: do you think you hurt the floor ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.v|hurt-zero_5(pro:per|you_4,det:art|the_6($2,n|floor_7($2)),$1),$0),$0))
example_end

Sent: hurt your knee ?
Sem: lambda $0_{r}.Q(v|hurt-zero_1(you,det:poss|your_2($1,n|knee_3($1)),$0))
example_end

Sent: how did you hurt your knee ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|hurt-zero_4(pro:per|you_3,det:poss|your_5($1,n|knee_6($1)),$0),$2($0)),$0)
example_end

Sent: on the chair .
Sem: prep|on_1(det:art|the_2($0,n|chair_3($0)))
example_end

Sent: how did you hurt your arm ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|hurt-zero_4(pro:per|you_3,det:poss|your_5($1,n|arm_6($1)),$0),$2($0)),$0)
example_end

Sent: you hurt your arm on the chair .
Sem: lambda $0_{r}.and(v|hurt-zero_2(pro:per|you_1,det:poss|your_3($1,n|arm_4($1)),$0),prep|on_5(det:art|the_6($2,n|chair_7($2)),$0))
example_end

Sent: pick the play toys up .
Sem: lambda $0_{r}.and(v|pick_1(you,det:art|the_2($1,and_comp(n|play_3($1),v|toy-3s_4($1))),$0),adv|up_5($0))
example_end

Sent: that 's a good boy .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|boy_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: no that 's not yellow .
Sem: lambda $0_{r}.and(not(adj|yellow_5(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: the papers are yellow .
Sem: lambda $0_{r}.adj|yellow_4(det:art|the_1($1,n|paper-pl_2($1)),$0)
example_end

Sent: is that yours ?
Sem: lambda $0_{r}.Q(pro:poss|yours_3(pro:dem|that_2,$0))
example_end

Sent: what are you checking ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|check-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: is that hot ?
Sem: lambda $0_{r}.Q(adj|hot_3(pro:dem|that_2,$0))
example_end

Sent: that 's a radiator .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|radiator_4(pro:dem|that_1,$0))
example_end

Sent: there is another one in the kitchen .
Sem: lambda $0_{r}.and(cop|be-3s_2(qn|another_3($1,pro:indef|one_4($1)),$0),prep|in_5(det:art|the_6($2,n|kitchen_7($2)),$0))
example_end

Sent: the other is hot ?
Sem: lambda $0_{r}.Q(adj|hot_4(det:art|the_1($1,qn|other_2($1)),$0))
example_end

Sent: don 't fall pencil ?
Sem: lambda $0_{r}.Q(and(not(mod|do_1(v|fall_3(you,$0),$0),$0),BARE($1,n|pencil_4($1))))
example_end

Sent: I don 't hurt myself thank_you .
Sem: lambda $0_{r}.and(not(mod|do_2(v|hurt-zero_4(pro:sub|i_1,pro:refl|myself_5,$0),$0),$0),n|thank_you_6($0))
example_end

Sent: time for bed ?
Sem: BARE($0,Q(att(n|time_1($0),prep|for_2(BARE($1,n|bed_3($1))))))
example_end

Sent: for Mommy .
Sem: conj|for_1(n:prop|mommy_2)
example_end

Sent: it 's not time for bed for Adam ?
Sem: lambda $0_{r}.Q(not(att(att(v|time_4(pro:per|it_1,$0),prep|for_5(BARE($1,n|bed_6($1)))),prep|for_7(n:prop|adam_8)),$0))
example_end

Sent: are you saying Bambi ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|say-presp_3(pro:per|you_2,n:prop|bambi_4,$0),$0))
example_end

Sent: what happened to Bambi ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(n:prop|bambi_4,$0))
example_end

Sent: Adam you give Bambi a ride .
Sem: lambda $0_{r}.v|give_3(pro:per|you_2,det:art|a_5($1,n|ride_6($1)),n:prop|bambi_4,$0)
example_end

Sent: on your foot .
Sem: prep|on_1(det:poss|your_2($0,n|foot_3($0)))
example_end

Sent: do you think he likes that ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.v|like-3s_5(pro:sub|he_4,pro:dem|that_6,$1),$0),$0))
example_end

Sent: oh you managed to get it .
Sem: lambda $0_{r}.and(v|manage-past_3(pro:per|you_2,lambda $1_{r}.v|get_5(pro:per|you_2,pro:per|it_6,$1),$0),co|oh_1($0))
example_end

Sent: you managed .
Sem: lambda $0_{r}.v|manage-past_2(pro:per|you_1,$0)
example_end

Sent: how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: hopping to Missouri .
Sem: lambda $0_{r}.and(part|hop-presp_1(you,$0),prep|to_2(n:prop|missouri_3,$0))
example_end

Sent: that 's a song .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|song_4(pro:dem|that_1,$0))
example_end

Sent: hopping to Missouri in the bag !
Sem: lambda $0_{r}.and(and(part|hop-presp_1(you,$0),prep|to_2(n:prop|missouri_3,$0)),prep|in_4(det:art|the_5($1,n|bag_6($1)),$0))
example_end

Sent: who brought what ?
Sem: lambda $2_{e}.lambda $1_{e}.lambda $0_{r}.v|bring-past_2($1,$2,$0)
example_end

Sent: Shadow_Gay is the horse that won the Kentucky Derby .
Sem: lambda $0_{r}.det:art|the_3(n:prop|shadow_gay_1,n|horse_4(n:prop|shadow_gay_1,$0))
example_end

Sent: put it what ?
Sem: lambda $0_{r}.v|put-zero_1(you,pro:per|it_2,$0)
example_end

Sent: he flew on the tree ?
Sem: lambda $0_{r}.Q(and(v|fly-past_2(pro:sub|he_1,$0),prep|on_3(det:art|the_4($1,n|tree_5($1)),$0)))
example_end

Sent: how does he hop ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|hop_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: airplane in your foot ?
Sem: BARE($0,Q(att(n|airplane_1($0),prep|in_2(det:poss|your_3($1,n|foot_4($1))))))
example_end

Sent: you have an airplane in your shoe ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,det:art|a_3($1,att(n|airplane_4($1),prep|in_5(det:poss|your_6($2,n|shoe_7($2))))),$0))
example_end

Sent: airplane walk .
Sem: lambda $0_{r}.n|walk_2(BARE($1,n|airplane_1($1)),$0)
example_end

Sent: does airplane walk ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(n|walk_3(BARE($1,n|airplane_2($1)),$0),$0))
example_end

Sent: two of them ?
Sem: Q(prep|of_2(BARE($0,det:num|two_1(pro:obj|them_3($0)))))
example_end

Sent: you go talk to Urs .
Sem: lambda $0_{r}.v|go_2_talk_3(pro:per|you_1,$0)
example_end

Sent: cowboy 's going to shoot with you ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(BARE($1,n|cow+boy_1($1)),lambda $2_{r}.and(co|shoot_5(BARE($3,n|cow+boy_1($3)),$2),prep|with_6(pro:per|you_7,$2)),$0),$0))
example_end

Sent: he didn 't say anything .
Sem: lambda $0_{r}.not(mod|do_2(v|say_4(pro:sub|he_1,BARE($1,pro:indef|anything_5($1)),$0),$0),$0)
example_end

Sent: soxy soccer ?
Sem: BARE($0,Q(and(chi|soxy_1($0),n|soccer_2($0))))
example_end

Sent: some what Adam ?
Sem: pro:indef|some_1($0,pro:int|what_2($0))
example_end

Sent: on my face ?
Sem: Q(prep|on_1(det:poss|my_2($0,n|face_3($0))))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: he saw some clowns at the circus throw pies .
Sem: lambda $0_{r}.v|see-past_2(pro:sub|he_1,lambda $1_{r}.v|throw_8(qn|some_3($2,att(n|clown-pl_4($2),prep|at_5(det:art|the_6($3,n|circus_7($3))))),BARE($4,n|pie-pl_9($4)),$1),$0)
example_end

Sent: you 're going to get out your game ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|get_5(pro:per|you_1,det:poss|your_7($2,n|game_8($2)),$1),adv|out_6($1)),$0),$0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what 's a soxer ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,chi|soxer_4($2)),$0)
example_end

Sent: no I say boxer .
Sem: lambda $0_{r}.and(v|say_3(pro:sub|i_2,BARE($1,n|box-dv_4($1)),$0),co|no_1($0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: come little fellow ?
Sem: lambda $0_{r}.Q(and(v|come_1(you,$0),BARE($1,and(adj|little_2($1),n|fellow_3($1)))))
example_end

Sent: you 're going to wait for something ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|wait_5(pro:per|you_1,$1),prep|for_6(pro:indef|something_7,$1)),$0),$0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: good word .
Sem: BARE($0,and(adj|good_1($0),n|word_2($0)))
example_end

Sent: he doesn 't want pie .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|he_1,BARE($1,n|pie_5($1)),$0),$0),$0)
example_end

Sent: can you get it off ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|get_3(pro:per|you_2,pro:per|it_4,$0),adv|off_5($0)),$0))
example_end

Sent: what 're you going to play .
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.n|play_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: the song was daisy daisy .
Sem: lambda $0_{r}.and_comp(n|daisy_4(det:art|the_1($1,n|song_2($1)),$0),n|daisy_5(det:art|the_1($1,n|song_2($1)),$0))
example_end

Sent: did you break one of the wheels ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|break_3(pro:per|you_2,att(det:num|one_4,prep|of_5(det:art|the_6($1,n|wheel-pl_7($1)))),$0),$0))
example_end

Sent: why did you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: because Shadow_Gay did what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_3(n:prop|shadow_gay_2,$1,$0)
example_end

Sent: hugged you ?
Sem: lambda $0_{r}.Q(v|hug-past_1(you,pro:per|you_2,$0))
example_end

Sent: d you think she needs a helper ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.v|need-3s_5(pro:sub|she_4,det:art|a_6($2,n|help-dv_7($2)),$1),$0),$0))
example_end

Sent: Adam I have espresso .
Sem: lambda $0_{r}.v|have_3(pro:sub|i_2,BARE($1,n|espresso_4($1)),$0)
example_end

Sent: what do you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what do you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I don 't see one .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,pro:indef|one_5,$0),$0),$0)
example_end

Sent: give me your cup .
Sem: lambda $0_{r}.v|give_1(you,det:poss|your_3($1,n|cup_4($1)),pro:obj|me_2,$0)
example_end

Sent: don 't drop it please .
Sem: lambda $0_{r}.and(not(mod|do_1(v|drop_3(you,pro:per|it_4,$0),$0),$0),co|please_5($0))
example_end

Sent: Jenny cup ?
Sem: BARE($0,Q(and_comp(n:prop|jenny_1($0),n|cup_2($0))))
example_end

Sent: what 's a Jenny cup ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,and_comp(n:prop|jenny_4($2),n|cup_5($2))),$0)
example_end

Sent: can you ride it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|ride_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: are you going to be little ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.adj|little_6(pro:per|you_2,$1),$0),$0))
example_end

Sent: why am I mixing the baby 's chocolate ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-1s_2(and(part|mix-presp_4(pro:sub|i_3,n|baby_6's($1,n|chocolate_8($1)),$0),$2($0)),$0)
example_end

Sent: so the baby can drink it .
Sem: lambda $0_{r}.mod|can_4(v|drink_5(det:art|the_2($1,n|baby_3($1)),pro:per|it_6,$0),$0)
example_end

Sent: oh you 're Adam .
Sem: lambda $0_{r}.and(n:prop|adam_4(pro:per|you_2,$0),co|oh_1($0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: okay just a minute you hold that .
Sem: lambda $0_{r}.and(and(v|hold_6(pro:per|you_5,pro:dem|that_7,$0),adv|just_2(det:art|a_3($1,n|minute_4($1)))),co|okay_1($0))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: see what happens when you put it in ?
Sem: lambda $0_{r}.Q(v|see_1(you,lambda $1_{r}.conj|when_4(and(v|put-zero_6(pro:per|you_5,pro:per|it_7,$1),adv|in_8($1)),v|happen-3s_3(pro:int|what_2,$1)),$0))
example_end

Sent: if you want to drink it .
Sem: lambda $0_{r}.v|want_3(pro:per|you_2,lambda $1_{r}.v|drink_5(pro:per|you_2,pro:per|it_6,$1),$0)
example_end

Sent: you 're going to swallow it ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|swallow_5(pro:per|you_1,pro:per|it_6,$1),$0),$0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: you spilled it again ?
Sem: lambda $0_{r}.Q(and(v|spill-past_2(pro:per|you_1,pro:per|it_3,$0),adv|again_4($0)))
example_end

Sent: it 's hot .
Sem: lambda $0_{r}.adj|hot_3(pro:per|it_1,$0)
example_end

Sent: because it will burn you .
Sem: lambda $0_{r}.mod|will_3(v|burn_4(pro:per|it_2,pro:per|you_5,$0),$0)
example_end

Sent: you like it .
Sem: lambda $0_{r}.v|like_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: you broke another wheel .
Sem: lambda $0_{r}.v|break-past_2(pro:per|you_1,qn|another_3($1,n|wheel_4($1)),$0)
example_end

Sent: because it doesn 't go if you break it .
Sem: lambda $0_{r}.not(conj|if_6(v|break_8(pro:per|you_7,pro:per|it_9,$0),mod|do_3(v|go_5(pro:per|it_2,$0),$0)),$0)
example_end

Sent: no if you take those off the wheels will come off .
Sem: lambda $0_{r}.and(mod|will_9(conj|if_2(and(v|take_4(pro:per|you_3,pro:dem|those_5,$0),prep|off_6($0)),and(v|come_10(det:art|the_7($1,n|wheel-pl_8($1)),$0),adv|off_11($0))),$0),co|no_1($0))
example_end

Sent: no then it doesn 't go if the wheels are off .
Sem: lambda $0_{r}.and(not(mod|do_4(and(v|go_6(pro:per|it_3,lambda $1_{r}.and(cop|be-pres_10(det:art|the_8($2,n|wheel-pl_9($2)),$1),prep|off_11($1)),$0),adv:tem|then_2($0)),$0),$0),co|no_1($0))
example_end

Sent: they are ?
Sem: lambda $0_{r}.Q(cop|be-pres_2(pro:sub|they_1,$0))
example_end

Sent: I don 't see any propellers on that one .
Sem: lambda $0_{r}.not(mod|do_2(and(v|see_4(pro:sub|i_1,qn|any_5($1,n|propel-dv_6($1)),$0),prep|on_7(pro:dem|that_8($2,pro:indef|one_9($2)),$0)),$0),$0)
example_end

Sent: are there any propellers ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(qn|any_3($1,n|propel-dv_4($1)),$0))
example_end

Sent: I guess I 'm not looking in the right place .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.not(cop|~be_4(and(part|look-presp_6(pro:sub|i_3,$1),prep|in_7(det:art|the_8($2,and(adj|right_9($2),n|place_10($2))),$1)),$1),$1),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: oh Urs .
Sem: lambda $0_{r}.and(n:prop|ursula_2($0),co|oh_1($0))
example_end

Sent: well put your cup on the table there .
Sem: lambda $0_{r}.and(and(and(v|put-zero_2(you,det:poss|your_3($1,n|cup_4($1)),$0),prep|on_5(det:art|the_6($2,n|table_7($2)),$0)),adv|there_8($0)),co|well_1($0))
example_end

Sent: well pretend that that 's coffee okay ?
Sem: lambda $0_{r}.Q(and(and(adj|pretend_2(you,lambda $1_{r}.n|coffee_6(pro:rel|that_4,$1),$0),co|well_1($0)),adj|okay_7($0)))
example_end

Sent: your spoon got stuck ?
Sem: lambda $0_{r}.Q(part|stick-pastp_4(_,det:poss|your_1($1,n|spoon_2($1)),$0))
example_end

Sent: down your throat ?
Sem: Q(prep|down_1(det:poss|your_2($0,n|throat_3($0))))
example_end

Sent: you don 't have anything in your bag do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|have_4(pro:per|you_1,BARE($1,pro:indef|anything_5($1)),$0),prep|in_6(det:poss|your_7($2,n|bag_8($2)),$0)),$0),$0),v|do_9(pro:per|you_10,$0)))
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: is that the name ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,n|name_4(pro:rel|that_2,$0)))
example_end

Sent: like that ?
Sem: Q(prep|like_1(pro:dem|that_2))
example_end

Sent: what name is it Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|name_2(pro:per|it_4,$0))
example_end

Sent: it says made in Japan .
Sem: lambda $0_{r}.v|say-3s_2(pro:per|it_1,lambda $1_{r}.and(part|make-pastp_3(you,$1),prep|in_4(n:prop|japan_5,$1)),$0)
example_end

Sent: d you want me to wind it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|wind_6(pro:obj|me_4,pro:per|it_7,$1),$0),$0))
example_end

Sent: what about it ?
Sem: att(pro:int|what_1,prep|about_2(pro:per|it_3))
example_end

Sent: you 're going to save it ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|save_5(pro:per|you_1,pro:per|it_6,$1),$0),$0))
example_end

Sent: until your birthday time .
Sem: det:poss|your_2($0,and_comp(n|birth+day_3($0),n|time_4($0)))
example_end

Sent: give it to me .
Sem: lambda $0_{r}.and(v|give_1(you,pro:per|it_2,$0),prep|to_3(pro:obj|me_4,$0))
example_end

Sent: no put it on the table .
Sem: lambda $0_{r}.and(and(v|put-zero_2(you,pro:per|it_3,$0),prep|on_4(det:art|the_5($1,n|table_6($1)),$0)),co|no_1($0))
example_end

Sent: you may break it there .
Sem: lambda $0_{r}.mod|may_2(and(v|break_3(pro:per|you_1,pro:per|it_4,$0),adv|there_5($0)),$0)
example_end

Sent: d you want to have a birthday ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|have_5(pro:per|you_2,det:art|a_6($2,n|birth+day_7($2)),$1),$0),$0))
example_end

Sent: is that your stove ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:rel|that_2,n|stove_4(pro:rel|that_2,$0)))
example_end

Sent: take him out ?
Sem: lambda $0_{r}.Q(and(v|take_1(you,pro:obj|him_2,$0),adv|out_3($0)))
example_end

Sent: pull him out .
Sem: lambda $0_{r}.and(v|pull_1(you,pro:obj|him_2,$0),adv|out_3($0))
example_end

Sent: what about water ?
Sem: att(pro:int|what_1,adv|about_2(BARE($0,n|water_3($0))))
example_end

Sent: how does the water get in here ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(and(v|get_5(det:art|the_3($1,n|water_4($1)),$0),$2($0)),adv|in_6(adv|here_7($0))),$0)
example_end

Sent: I just put the driver in the back .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:sub|i_1,det:art|the_4($1,n|drive-dv_5($1)),$0),adv|just_2($0)),prep|in_6(det:art|the_7($2,n|back_8($2)),$0))
example_end

Sent: drive by Main Street ?
Sem: lambda $0_{r}.Q(and(n|drive_1(you,$0),prep|by_2(BARE($1,and_comp(n:prop|main_3($1),n:prop|street_4($1))),$0)))
example_end

Sent: oh you 're so tired .
Sem: lambda $0_{r}.and(adv|so_4(part|tire-pastp_5(pro:per|you_2,$0)),co|oh_1($0))
example_end

Sent: what about Urs and Cromer ?
Sem: att(pro:int|what_1,prep|about_2(n:prop|cromer_5))
example_end

Sent: no she doesn 't want to wear that hat .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|she_2,lambda $1_{r}.v|wear_7(pro:sub|she_2,pro:dem|that_8($2,n|hat_9($2)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: that 's a boy 's hat .
Sem: lambda $0_{r}.n|boy_4's'(pro:dem|that_1,n|hat_6(pro:dem|that_1,$0))
example_end

Sent: yes and you 're a little boy .
Sem: lambda $0_{r}.and(det:art|a_5(pro:per|you_3,and(n|boy_7(pro:per|you_3,$0),adj|little_6(pro:per|you_3,$0))),co|yes_1($0))
example_end

Sent: what are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: you 're Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(pro:per|you_1,$0))
example_end

Sent: Adam boy ?
Sem: BARE($0,Q(n|boy_2($0)))
example_end

Sent: oh it 's cool now ?
Sem: lambda $0_{r}.Q(and(adv|now_5(adj|cool_4(pro:per|it_2,$0)),co|oh_1($0)))
example_end

Sent: it 's not cool ?
Sem: lambda $0_{r}.Q(not(v|cool_4(pro:per|it_1,$0),$0))
example_end

Sent: you 're going to wash dishes ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.n|wash_5(pro:per|you_1,BARE($2,n|dish-pl_6($2)),$1),$0),$0))
example_end

Sent: if you break it then I won 't have one .
Sem: lambda $0_{r}.not(mod|will_7(conj|if_1(v|break_3(pro:per|you_2,pro:per|it_4,$0),and(v|have_9(pro:sub|i_6,pro:indef|one_10,$0),adv:tem|then_5($0))),$0),$0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're going to wait for me ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|wait_5(pro:per|you_1,$1),prep|for_6(pro:obj|me_7,$1)),$0),$0))
example_end

Sent: I 'll come in .
Sem: lambda $0_{r}.mod|~will_2(and(v|come_3(pro:sub|i_1,$0),adv|in_4($0)),$0)
example_end

Sent: now I 'll wait for you to come in .
Sem: lambda $0_{r}.mod|~will_3(and(and(v|wait_4(pro:sub|i_2,lambda $1_{r}.and(v|come_8(pro:sub|i_2,$1),adv|in_9($1)),$0),adv|now_1($0)),prep|for_5(pro:per|you_6,$0)),$0)
example_end

Sent: because Urs is broken ?
Sem: lambda $0_{r}.Q(part|break-pastp_4(n:prop|ursula_2,$0))
example_end

Sent: how did she get broken ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(aux|get_4(pro:sub|she_3,lambda $1_{r}.part|break-pastp_5(pro:sub|she_3,$1),$0),$2($0)),$0)
example_end

Sent: how did Urs get broken ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(aux|get_4(n:prop|ursula_3,lambda $1_{r}.part|break-pastp_5(n:prop|ursula_3,$1),$0),$2($0)),$0)
example_end

Sent: broken on Thursday ?
Sem: BARE($0,part|break-pastp_1($0))
example_end

Sent: are you coming in ?
Sem: lambda $0_{r}.Q(aux|be-pres_1(and(part|come-presp_3(pro:per|you_2,$0),adv|in_4($0)),$0))
example_end

Sent: something to show you ?
Sem: BARE($0,pro:indef|something_1($0))
example_end

Sent: no don 't pull your rubbers like that .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|pull_4(you,det:poss|your_5($1,n|rubber-pl_6($1)),$0),prep|like_7(pro:dem|that_8,$0)),$0),$0),co|no_1($0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: well that 's alright .
Sem: lambda $0_{r}.and(adj|alright_4(pro:dem|that_2,$0),co|well_1($0))
example_end

Sent: you don 't have_to wear it .
Sem: lambda $0_{r}.not(mod:aux|have_to_4(mod|do_2(v|wear_5(pro:per|you_1,pro:per|it_6,$0),$0),$0),$0)
example_end

Sent: just don 't pull your rubbers .
Sem: lambda $0_{r}.not(mod|do_2(and(v|pull_4(you,det:poss|your_5($1,n|rubber-pl_6($1)),$0),adv|just_1($0)),$0),$0)
example_end

Sent: put what on ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|put-zero_1(you,$1,$0),adv|on_3($0))
example_end

Sent: I see why you didn 't want to come in .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,lambda $1_{r}.not(mod|do_5(and(v|want_7(pro:per|you_4,lambda $2_{r}.and(v|come_9(pro:per|you_4,$2),adv|in_10($2)),$1),adv:int|why_3($1)),$1),$1),$0)
example_end

Sent: some child outside .
Sem: adv|outside_3(qn|some_1($0,n|child_2($0)))
example_end

Sent: they 're playing .
Sem: lambda $0_{r}.aux|~be_2(part|play-presp_3(pro:sub|they_1,$0),$0)
example_end

Sent: they 're playing .
Sem: lambda $0_{r}.aux|~be_2(part|play-presp_3(pro:sub|they_1,$0),$0)
example_end

Sent: I don 't think they 're fighting I think they 're just playing .
Sem: lambda $0_{r}.not(and(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.aux|~be_6(part|fight-presp_7(pro:sub|they_5,$1),$1),$0),$0),v|think_9(pro:sub|i_8,lambda $2_{r}.aux|~be_11(and(part|play-presp_13(pro:sub|they_10,$2),adv|just_12($2)),$2),$0)),$0)
example_end

Sent: you 're going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a word ?
Sem: BARE($0,Q(det:art|a_1($1,n|word_2($1),$0)))
example_end

Sent: what does that word mean ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-3s_2(adj|mean_5(pro:dem|that_3($1,n|word_4($1)),$2,$0),$0)
example_end

Sent: we don 't need lights on .
Sem: lambda $0_{r}.not(mod|do_2(and(v|need_4(pro:sub|we_1,BARE($1,n|light-pl_5($1)),$0),adv|on_6($0)),$0),$0)
example_end

Sent: it 's daytime Adam .
Sem: lambda $0_{r}.n|day+time_3(pro:per|it_1,$0)
example_end

Sent: we only need the lights on at night .
Sem: lambda $0_{r}.and(v|need_3(pro:sub|we_1,adv|on_6(BARE($1,att(det:art|the_4($2,n|light-pl_5($2),$1),prep|at_7(BARE($3,n|night_8($3)))))),$0),adv|only_2($0))
example_end

Sent: because we have the sun .
Sem: lambda $0_{r}.v|have_3(pro:sub|we_2,det:art|the_4($1,n|sun_5($1)),$0)
example_end

Sent: you 're a derrick ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,n|derrick_4(pro:per|you_1,$0)))
example_end

Sent: I don 't think they 're fighting .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.aux|~be_6(part|fight-presp_7(pro:sub|they_5,$1),$1),$0),$0),$0)
example_end

Sent: I think they 're just playing .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~be_4(and(part|play-presp_6(pro:sub|they_3,$1),adv|just_5($1)),$1),$0)
example_end

Sent: children outside .
Sem: adv|outside_2(BARE($0,n|child-pl_1($0)))
example_end

Sent: no I don 't think you need any more chocolate .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|need_7(pro:per|you_6,qn|any_8($2,and(qn|more_9($2),n|chocolate_10($2))),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: well you still have your juice .
Sem: lambda $0_{r}.and(and(v|have_4(pro:per|you_2,det:poss|your_5($1,n|juice_6($1)),$0),adv|still_3($0)),co|well_1($0))
example_end

Sent: alright talk about it .
Sem: lambda $0_{r}.and(and(n|talk_2(you,$0),prep|about_3(pro:per|it_4,$0)),co|alright_1($0))
example_end

Sent: you 're talking about the word ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|talk-presp_3(pro:per|you_1,$0),prep|about_4(det:art|the_5($1,n|word_6($1)),$0)),$0))
example_end

Sent: it means dump you out ?
Sem: lambda $0_{r}.Q(v|mean-3s_2(pro:per|it_1,lambda $1_{r}.and(n|dump_3(_,pro:per|you_4,$1),adv|out_5($1)),$0))
example_end

Sent: I don 't know if it was pillow or Perro .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.n:prop|perro_10(pro:per|it_6,$1),$0),$0),$0)
example_end

Sent: what 'd I say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|~genmod_2(v|say_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: oh nothing of importance .
Sem: lambda $0_{r}.and(att(pro:indef|nothing_2($0),prep|of_3(BARE($1,n|importance_4($1)))),co|oh_1($0))
example_end

Sent: did you make that ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|make_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: did you show her your game Adam ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:poss|your_5($1,n|game_6($1)),det:poss|her_4,$0),$0)
example_end

Sent: one of those matching games and he knew it all so he wasn 't interested anymore .
Sem: lambda $0_{r}.conj|so_11(not(aux|be_13(and(part|interest-pastp_15(pro:sub|he_12,$0),adv|anymore_16($0)),$0),$0),and(and(v|know-past_8(pro:sub|he_7,pro:per|it_9,$0),prep|of_2(BARE($1,and(part|match-presp_4($1),and(pro:dem|those_3($1),n|game-pl_5($1)))),$0)),adv|all_10($0)))
example_end

Sent: no that 's enough Adam .
Sem: lambda $0_{r}.and(adj|enough_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: okay you 're going to play with Urs ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|go-presp_4(pro:per|you_2,lambda $1_{r}.n|play_6(pro:per|you_2,$1),$0),prep|with_7(n:prop|ursula_8,$0)),$0),co|okay_1($0)))
example_end

Sent: is that a b ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n:let|b_4(pro:rel|that_2,$0)))
example_end

Sent: the children ?
Sem: BARE($0,Q(det:art|the_1($1,n|child-pl_2($1),$0)))
example_end

Sent: Adam which one is like this ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(aux|be-3s_4($1($2,pro:indef|one_3($2)),$0),co|like_5(pro:dem|this_6,$0))
example_end

Sent: I think you had more than two cookies .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|have-past_4(pro:per|you_3,BARE($2,det:num|two_7(n|cookie-pl_8($2))),$1),$0)
example_end

Sent: did he eat it ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|eat_3(pro:sub|he_2,pro:per|it_4,$0),$0))
example_end

Sent: you 're patting him ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|pat-presp_3(pro:per|you_1,pro:obj|him_4,$0),$0))
example_end

Sent: did he fly ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|fly_3(pro:sub|he_2,$0),$0))
example_end

Sent: are you ready ?
Sem: lambda $0_{r}.Q(adj|ready_3(pro:per|you_2,$0))
example_end

Sent: go play the game with Urs .
Sem: lambda $0_{r}.and(v|play_2(you,det:art|the_3($1,n|game_4($1)),$0),prep|with_5(n:prop|ursula_6,$0))
example_end

Sent: well I thought you were going to play the game .
Sem: lambda $0_{r}.and(v|think-past_3(pro:sub|i_2,lambda $1_{r}.aux|be-past_5(part|go-presp_6(pro:per|you_4,lambda $2_{r}.v|play_8(pro:per|you_4,det:art|the_9($3,n|game_10($3)),$2),$1),$1),$0),co|well_1($0))
example_end

Sent: well I can 't change your diaper right now .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|change_5(pro:sub|i_2,det:poss|your_6($1,n|diaper_7($1)),$0),adv|right_8(adv|now_9($0))),$0),$0),co|well_1($0))
example_end

Sent: well I don 't think you need to eat these .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|need_7(pro:per|you_6,lambda $2_{r}.v|eat_9(pro:per|you_6,pro:dem|these_10,$2),$1),$0),$0),$0),co|well_1($0))
example_end

Sent: I think you 've had enough .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~have_4(and(part|have-pastp_5(pro:per|you_3,$1),adv|enough_6($1)),$1),$0)
example_end

Sent: busy bulldozer ?
Sem: BARE($0,Q(and(adj|busy_1($0),n|bulldoze-dv_2($0))))
example_end

Sent: snap you ?
Sem: lambda $0_{r}.Q(v|snap_1(you,pro:per|you_2,$0))
example_end

Sent: eat it all up ?
Sem: lambda $0_{r}.Q(and(v|eat_1(you,pro:per|it_2,$0),adv|all_3(adv|up_4($0))))
example_end

Sent: the cupcake ?
Sem: BARE($0,Q(det:art|the_1($1,n|cupcake_2($1),$0)))
example_end

Sent: take it out .
Sem: lambda $0_{r}.and(v|take_1(you,pro:per|it_2,$0),adv|out_3($0))
example_end

Sent: no if he goes in there he can 't see where he 's going .
Sem: lambda $0_{r}.and(not(mod|can_8(conj|if_2(and(v|go-3s_4(pro:sub|he_3,$0),adv|in_5(adv|there_6($0))),v|see_10(pro:sub|he_7,lambda $1_{r}.aux|~be_13(and(part|go-presp_14(pro:sub|he_12,$1),pro:rel|where_11($1)),$1),$0)),$0),$0),co|no_1($0))
example_end

Sent: no don 't pull it .
Sem: lambda $0_{r}.and(not(mod|do_2(v|pull_4(you,pro:per|it_5,$0),$0),$0),co|no_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: his tail yes .
Sem: lambda $0_{r}.and(det:poss|his_1($1,n|tail_2($1),$0),co|yes_3($0))
example_end

Sent: do you think he can hop to Missouri ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|can_5(and(v|hop_6(pro:sub|he_4,$1),prep|to_7(n:prop|missouri_8,$1)),$1),$0),$0))
example_end

Sent: oh I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|oh_1($0))
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: talk to his mouth ?
Sem: lambda $0_{r}.Q(and(n|talk_1(you,$0),prep|to_2(det:poss|his_3($1,n|mouth_4($1)),$0)))
example_end

Sent: what is that in his mouth ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(att(pro:dem|that_3,prep|in_4(det:poss|his_5($2,n|mouth_6($2)))),$0)
example_end

Sent: yes he has a tongue .
Sem: lambda $0_{r}.and(v|have-3s_3(pro:sub|he_2,det:art|a_4($1,n|tongue_5($1)),$0),co|yes_1($0))
example_end

Sent: he has two green eyes .
Sem: lambda $0_{r}.v|have-3s_2(pro:sub|he_1,BARE($1,and(n|green_4($1),det:num|two_3(n|eye-pl_5($1)))),$0)
example_end

Sent: she 's a lady .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|she_1,n|lady_4(pro:sub|she_1,$0))
example_end

Sent: yes she 's Urs .
Sem: lambda $0_{r}.and(n:prop|ursula_4(pro:sub|she_2,$0),co|yes_1($0))
example_end

Sent: you need some what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|need_2(pro:per|you_1,$1,$0)
example_end

Sent: you need some paper ?
Sem: lambda $0_{r}.Q(v|need_2(pro:per|you_1,qn|some_3($1,n|paper_4($1)),$0))
example_end

Sent: what kind of paper ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|paper_4($2)))))
example_end

Sent: what 's your paper ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_3($2,n|paper_4($2)),$0)
example_end

Sent: thank_you for my drawing ?
Sem: BARE($0,Q(att(co|thank_you_1($0),prep|for_2(det:poss|my_3($1,n|drawing_4($1))))))
example_end

Sent: you 're drawing a shadow ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|draw-presp_3(pro:per|you_1,det:art|a_4($1,n|shadow_5($1)),$0),$0))
example_end

Sent: Adam you dropped one over here dear .
Sem: lambda $0_{r}.and(v|drop-past_3(pro:per|you_2,pro:indef|one_4,$0),adv|over_5(adv|here_6($0)))
example_end

Sent: no careful .
Sem: lambda $0_{r}.and(co|careful_2($0),co|no_1($0))
example_end

Sent: you write with those pencils .
Sem: lambda $0_{r}.and(v|write_2(pro:per|you_1,$0),prep|with_3(pro:dem|those_4($1,n|pencil-pl_5($1)),$0))
example_end

Sent: this is blue .
Sem: lambda $0_{r}.adj|blue_3(pro:dem|this_1,$0)
example_end

Sent: that 's not red .
Sem: lambda $0_{r}.not(adj|red_4(pro:dem|that_1,$0),$0)
example_end

Sent: that 's yellow .
Sem: lambda $0_{r}.adj|yellow_3(pro:dem|that_1,$0)
example_end

Sent: this is black ?
Sem: lambda $0_{r}.Q(n|black_3(pro:dem|this_1,$0))
example_end

Sent: that 's blue .
Sem: lambda $0_{r}.adj|blue_3(pro:dem|that_1,$0)
example_end

Sent: come and look at my pencil .
Sem: lambda $0_{r}.and(cop|look_3(you,$0),prep|at_4(det:poss|my_5($1,n|pencil_6($1)),$0))
example_end

Sent: I 've got something interesting on mine .
Sem: lambda $0_{r}.aux|~have_2(and(part|get-pastp_3(pro:sub|i_1,BARE($1,and(part|interest-presp_5($1),pro:indef|something_4($1))),$0),prep|on_6(pro:poss|mine_7,$0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's not Bozo .
Sem: lambda $0_{r}.not(n:prop|bozo_4(pro:dem|that_1,$0),$0)
example_end

Sent: what 's on there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),prep|on_3(adv|there_4($0)))
example_end

Sent: star yes .
Sem: lambda $0_{r}.and(n|star_1($0),co|yes_2($0))
example_end

Sent: does your pencil have numbers ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(aux|have_4(det:poss|your_2($1,n|pencil_3($1)),BARE($2,n|number-pl_5($2)),$0),$0))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: in the basement !
Sem: prep|in_1(det:art|the_2($0,n|basement_3($0)))
example_end

Sent: that 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: well what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:per|it_4,$0),co|well_1($0))
example_end

Sent: that 's nice Adam .
Sem: lambda $0_{r}.adj|nice_3(pro:dem|that_1,$0)
example_end

Sent: did you finish drawing ?
Sem: lambda $0_{r}.Q(v|do-past_1(n|drawing_4(pro:per|you_2,$0),$0))
example_end

Sent: it 's a new word from one of his books .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,att(and(n|word_5(pro:per|it_1,$0),adj|new_4(pro:per|it_1,$0)),prep|from_6(att(det:num|one_7,prep|of_8(det:poss|his_9($1,n|book-pl_10($1)))))))
example_end

Sent: may I see ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,$0),$0))
example_end

Sent: a pail of good fresh milk skedaddle .
Sem: lambda $0_{r}.and(det:art|a_1($1,att(n|pail_2($1),prep|of_3(BARE($2,and(adj|fresh_5($2),and(adj|good_4($2),n|milk_6($2))))))),v|skedaddle_7($0))
example_end

Sent: that was no penny .
Sem: lambda $0_{r}.qn|no_3(pro:dem|that_1,n|penny_4(pro:dem|that_1,$0))
example_end

Sent: was it a penny ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|penny_4(pro:per|it_2,$0)))
example_end

Sent: where 's the elephant ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|elephant_4($1)),$0),$2($0))
example_end

Sent: show me .
Sem: lambda $0_{r}.v|show_1(you,pro:obj|me_2,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: is that a fireman ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|fire+man_4(pro:rel|that_2,$0)))
example_end

Sent: why don 't you scoot out there and I 'll come out in a minute okay ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(not(and(mod|do_2(and(and(v|scoot_5(pro:per|you_4,$0),$1($0)),adv|out_6(adv|there_7($0))),$0),mod|~will_10(and(and(v|come_11(pro:sub|i_9,$0),adv|out_12($0)),prep|in_13(det:art|a_14($2,n|minute_15($2)),$0)),$0)),$0),adj|okay_16($0))
example_end

Sent: Adam would you like to draw on a paper cup ?
Sem: lambda $0_{r}.Q(mod|will-cond_2(v|like_4(pro:per|you_3,lambda $1_{r}.and(v|draw_6(pro:per|you_3,$1),prep|on_7(det:art|a_8($2,and_comp(n|paper_9($2),n|cup_10($2))),$1)),$0),$0))
example_end

Sent: Adam would you like to draw on a paper cup ?
Sem: lambda $0_{r}.Q(mod|will-cond_2(v|like_4(pro:per|you_3,lambda $1_{r}.and(v|draw_6(pro:per|you_3,$1),prep|on_7(det:art|a_8($2,and_comp(n|paper_9($2),n|cup_10($2))),$1)),$0),$0))
example_end

Sent: no you can 't draw if you put water in the cup .
Sem: lambda $0_{r}.and(not(conj|if_6(and(v|put-zero_8(pro:per|you_7,BARE($1,n|water_9($1)),$0),prep|in_10(det:art|the_11($2,n|cup_12($2)),$0)),mod|can_3(v|draw_5(pro:per|you_2,$0),$0)),$0),co|no_1($0))
example_end

Sent: what kind of water ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|water_4($2)))))
example_end

Sent: did you draw ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|draw_3(pro:per|you_2,$0),$0))
example_end

Sent: what did you draw on the cup ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|draw_4(pro:per|you_3,$1,$0),prep|on_5(det:art|the_6($2,n|cup_7($2)),$0)),$0)
example_end

Sent: what 's carby ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,chi|carby_3($2)),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: what do you need ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|need_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you stay out there .
Sem: lambda $0_{r}.and(n|stay_2(pro:per|you_1,$0),adv|out_3(adv|there_4($0)))
example_end

Sent: well that 's all you need .
Sem: lambda $0_{r}.and(pro:indef|all_4(pro:dem|that_2,$0),co|well_1($0))
example_end

Sent: I did .
Sem: lambda $0_{r}.v|do-past_2(pro:sub|i_1,$0)
example_end

Sent: it wasn 't dancing .
Sem: lambda $0_{r}.not(aux|be_2(part|dance-presp_4(pro:per|it_1,$0),$0),$0)
example_end

Sent: like this .
Sem: prep|like_1(pro:dem|this_2)
example_end

Sent: your tail hurts .
Sem: lambda $0_{r}.v|hurt-3s_3(det:poss|your_1($1,n|tail_2($1)),$0)
example_end

Sent: your tail ?
Sem: BARE($0,Q(det:poss|your_1($1,n|tail_2($1),$0)))
example_end

Sent: where 's your tail ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|tail_4($1)),$0),$2($0))
example_end

Sent: in your ear ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|ear_3($0))))
example_end

Sent: where does it hurt ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|hurt-zero_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: your tail ?
Sem: BARE($0,Q(det:poss|your_1($1,n|tail_2($1),$0)))
example_end

Sent: that 's no tail .
Sem: lambda $0_{r}.not(n|tail_4(pro:dem|that_1,$0),$0)
example_end

Sent: a piece of string in your .
Sem: det:art|a_1($0,att(n|piece_2($0),prep|of_3(BARE($1,att(n|string_4($1),prep|in_5(det:poss|your_6))))))
example_end

Sent: airplane shoot who ?
Sem: lambda $2_{e}.lambda $0_{r}.n|shoot_2(BARE($1,n|airplane_1($1)),$2,$0)
example_end

Sent: I see you did .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,lambda $1_{r}.v|do-past_4(pro:per|you_3,$1),$0)
example_end

Sent: you spilled a lot didn 't you ?
Sem: lambda $0_{r}.Q(and(v|spill-past_2(pro:per|you_1,det:art|a_3($1,n|lot_4($1)),$0),not(mod|do_5(pro:per|you_7,$0),$0)))
example_end

Sent: I don 't think there are any .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I have plenty .
Sem: lambda $0_{r}.and(v|have_2(pro:sub|i_1,$0),adv|plenty_3($0))
example_end

Sent: Adam no !
Sem: lambda $0_{r}.co|no_2($0)
example_end

Sent: you scoot .
Sem: lambda $0_{r}.v|scoot_2(pro:per|you_1,$0)
example_end

Sent: Adam no !
Sem: lambda $0_{r}.co|no_2($0)
example_end

Sent: you 're tasting it ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|taste-presp_3(pro:per|you_1,pro:per|it_4,$0),$0))
example_end

Sent: d you like it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: I think you broke it .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|break-past_4(pro:per|you_3,pro:per|it_5,$1),$0)
example_end

Sent: I don 't know why you broke it .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|break-past_7(pro:per|you_6,pro:per|it_8,$1),adv:int|why_5($1)),$0),$0),$0)
example_end

Sent: what about the lion Adam ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|lion_4($0))))
example_end

Sent: and the lion went away ?
Sem: lambda $0_{r}.Q(and(v|go-past_4(det:art|the_2($1,n|lion_3($1)),$0),adv|away_5($0)))
example_end

Sent: Adam I think you 're missing your mouth .
Sem: lambda $0_{r}.v|think_3(pro:sub|i_2,lambda $1_{r}.aux|~be_5(part|miss-presp_6(pro:per|you_4,det:poss|your_7($2,n|mouth_8($2)),$1),$1),$0)
example_end

Sent: look at your shirt ?
Sem: lambda $0_{r}.Q(and(cop|look_1(you,$0),prep|at_2(det:poss|your_3($1,n|shirt_4($1)),$0)))
example_end

Sent: does it tickle ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|tickle_3(pro:per|it_2,$0),$0))
example_end

Sent: what color was the lion ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_4($2,n|lion_5($2)),n|color_2(det:art|the_4($2,n|lion_5($2)),$0))
example_end

Sent: a blue lion .
Sem: det:art|a_1($0,and(adj|blue_2($0),n|lion_3($0)))
example_end

Sent: blue like this ?
Sem: BARE($0,adj|blue_1($0))
example_end

Sent: where are you Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-pres_2(pro:per|you_3,$0),$1($0))
example_end

Sent: what did we say about the light ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|say_4(pro:sub|we_3,$1,$0),prep|about_5(det:art|the_6($2,n|light_7($2)),$0)),$0)
example_end

Sent: I just took a nap before I came .
Sem: lambda $0_{r}.conj|before_6(v|come-past_8(pro:sub|i_7,$0),and(v|take-past_3(pro:sub|i_1,det:art|a_4($1,n|nap_5($1)),$0),adv|just_2($0)))
example_end

Sent: took a nap just like Adam .
Sem: lambda $0_{r}.and(v|take-past_1(you,det:art|a_2($1,n|nap_3($1)),$0),co|like_5(att(n:prop|adam_6,BARE($2,adj|just_4($2))),$0))
example_end

Sent: I don 't know that song Adam .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,pro:dem|that_5($1,n|song_6($1)),$0),$0),$0)
example_end

Sent: you sing it .
Sem: lambda $0_{r}.v|sing_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: you sing it for her .
Sem: lambda $0_{r}.and(v|sing_2(pro:per|you_1,pro:per|it_3,$0),prep|for_4(pro:obj|her_5,$0))
example_end

Sent: you sing it for her .
Sem: lambda $0_{r}.and(v|sing_2(pro:per|you_1,pro:per|it_3,$0),prep|for_4(pro:obj|her_5,$0))
example_end

Sent: well they 're over there behind the door .
Sem: lambda $0_{r}.and(and(and(aux|~be_3(pro:sub|they_2,$0),adv|over_4(adv|there_5($0))),prep|behind_6(det:art|the_7($1,n|door_8($1)),$0)),co|well_1($0))
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it 's in your bed isn 't it ?
Sem: lambda $0_{r}.Q(and(and(aux|~be_2(pro:per|it_1,$0),prep|in_3(det:poss|your_4($1,n|bed_5($1)),$0)),not(cop|be_6(pro:per|it_8,$0),$0)))
example_end

Sent: you 're looking for it .
Sem: lambda $0_{r}.aux|~be_2(and(part|look-presp_3(pro:per|you_1,$0),prep|for_4(pro:per|it_5,$0)),$0)
example_end

Sent: did you find it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: what that piggie ?
Sem: and(pro:int|what_1,pro:dem|that_2($0,n|pig-dim_3($0)))
example_end

Sent: what 's the piggie 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|pig_4's($2,n|name_6($2)),$0)
example_end

Sent: are you very tired ?
Sem: lambda $0_{r}.Q(adv|very_3(part|tire-pastp_4(pro:per|you_2,$0)))
example_end

Sent: when you went down to the Boston_Common ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(and(v|go-past_3(pro:per|you_2,$0),$1($0)),adv|down_4($0)),prep|to_5(det:art|the_6($2,n:prop|boston_common_7($2)),$0))
example_end

Sent: and what did you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: where did you see pigs ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,BARE($1,n|pig-pl_5($1)),$0),$2($0)),$0)
example_end

Sent: look like moto scooter .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),conj|like_2(BARE($1,and_comp(n|motor_3($1),n|scooter_4($1))),$0))
example_end

Sent: a motor scooter ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|motor_2($1),n|scooter_3($1)),$0)))
example_end

Sent: well what were those big things you saw ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|those_4($2,and(adj|big_5($2),n|thing-pl_6($2))),$0),co|well_1($0))
example_end

Sent: another squirrel and what else ?
Sem: BARE($0,Q(post|else_5(qn|another_1($1,pro:int|what_4($1)),$0)))
example_end

Sent: oh and what else ?
Sem: post|else_4(pro:int|what_3)
example_end

Sent: what about the mirrors ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|mirror-pl_4($0))))
example_end

Sent: cows yes .
Sem: lambda $0_{r}.and(n|cow-pl_1($0),co|yes_2($0))
example_end

Sent: well don 't put your knees down there on the bench .
Sem: lambda $0_{r}.and(not(mod|do_2(and(and(v|put-zero_4(you,det:poss|your_5($1,n|knee-pl_6($1)),$0),adv|down_7(adv|there_8($0))),prep|on_9(det:art|the_10($2,n|bench_11($2)),$0)),$0),$0),co|well_1($0))
example_end

Sent: you just rubbed on the bench .
Sem: lambda $0_{r}.and(and(part|rub-pastp_3(pro:per|you_1,$0),adv|just_2($0)),prep|on_4(det:art|the_5($1,n|bench_6($1)),$0))
example_end

Sent: sometimes it hurts to do that .
Sem: lambda $0_{r}.and(v|hurt-3s_3(pro:per|it_2,lambda $1_{r}.v|do_5(pro:per|it_2,pro:dem|that_6,$1),$0),adv|sometimes_1($0))
example_end

Sent: sleep in the chair there .
Sem: lambda $0_{r}.and(and(n|sleep_1(you,$0),prep|in_2(det:art|the_3($1,n|chair_4($1)),$0)),adv|there_5($0))
example_end

Sent: no I thought you were sleeping .
Sem: lambda $0_{r}.and(v|think-past_3(pro:sub|i_2,lambda $1_{r}.aux|be-past_5(part|sleep-presp_6(pro:per|you_4,$1),$1),$0),co|no_1($0))
example_end

Sent: aren 't you sleeping ?
Sem: lambda $0_{r}.Q(not(aux|be_1(part|sleep-presp_4(pro:per|you_3,$0),$0),$0))
example_end

Sent: look at your shirt ?
Sem: lambda $0_{r}.Q(and(cop|look_1(you,$0),prep|at_2(det:poss|your_3($1,n|shirt_4($1)),$0)))
example_end

Sent: what happened to your shirt ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:poss|your_4($2,n|shirt_5($2)),$0))
example_end

Sent: you got some chocolate on it didn 't you ?
Sem: lambda $0_{r}.Q(and(and(v|get-past_2(pro:per|you_1,qn|some_3($1,n|chocolate_4($1)),$0),prep|on_5(pro:per|it_6,$0)),not(mod|do_7(pro:per|you_9,$0),$0)))
example_end

Sent: because you spilled it .
Sem: lambda $0_{r}.v|spill-past_3(pro:per|you_2,pro:per|it_4,$0)
example_end

Sent: because you weren 't careful .
Sem: lambda $0_{r}.not(co|careful_5(pro:per|you_2,$0),$0)
example_end

Sent: because you were careless .
Sem: lambda $0_{r}.adj|care-dn_4(pro:per|you_2,$0)
example_end

Sent: you were careless .
Sem: lambda $0_{r}.adj|care-dn_3(pro:per|you_1,$0)
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: no I don 't want you to drink it .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|i_2,lambda $1_{r}.v|drink_8(pro:per|you_6,pro:per|it_9,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: because I 'm going to drink it .
Sem: lambda $0_{r}.aux|~be_3(part|go-presp_4(pro:sub|i_2,lambda $1_{r}.v|drink_6(pro:sub|i_2,pro:per|it_7,$1),$0),$0)
example_end

Sent: yes ladies drink it .
Sem: lambda $0_{r}.and(n|drink_3(BARE($1,n|lady-pl_2($1)),pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: no because you 're a little boy .
Sem: lambda $0_{r}.and(det:art|a_5(pro:per|you_3,and(n|boy_7(pro:per|you_3,$0),adj|little_6(pro:per|you_3,$0))),co|no_1($0))
example_end

Sent: what happened to your popcorn ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:poss|your_4($2,n|pop+corn_5($2)),$0))
example_end

Sent: it fell ?
Sem: lambda $0_{r}.Q(v|fall-past_2(pro:per|it_1,$0))
example_end

Sent: no it didn 't .
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: what did you do with your popcorn ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(det:poss|your_6($2,n|pop+corn_7($2)),$0)),$0)
example_end

Sent: did they like it ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|like_3(pro:sub|they_2,pro:per|it_4,$0),$0))
example_end

Sent: what about pineapple ?
Sem: att(pro:int|what_1,prep|about_2(BARE($0,n|pineapple_3($0))))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: no Adam careful .
Sem: lambda $0_{r}.and(co|no_1($0),co|careful_3($0))
example_end

Sent: I think it was a car .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:per|it_3,n|car_6(pro:per|it_3,$1)),$0)
example_end

Sent: some people like to drive like that .
Sem: lambda $0_{r}.co|like_3(qn|some_1($1,n|person-pl_2($1)),lambda $2_{r}.and(n|drive_5(qn|some_1($1,n|person-pl_2($1)),$2),prep|like_6(pro:dem|that_7,$2)),$0)
example_end

Sent: only hit Adam ?
Sem: lambda $0_{r}.Q(and(n|hit_2(you,$0),adv|only_1($0)))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: Mommy has_to be careful that she doesn 't get hit .
Sem: lambda $0_{r}.pro:rel|that_5(not(mod|do_7(n|hit_10(pro:sub|she_6,$0),$0),$0),mod:aux|has_to_2(co|careful_4(n:prop|mommy_1,$0),$0))
example_end

Sent: Adam has_to be careful that he doesn 't get hit either .
Sem: lambda $0_{r}.pro:rel|that_5(not(mod|do_7(and(n|hit_10(pro:sub|he_6,$0),adv|either_11($0)),$0),$0),mod:aux|has_to_2(co|careful_4(n:prop|adam_1,$0),$0))
example_end

Sent: because it would hurt .
Sem: lambda $0_{r}.mod|will-cond_3(v|hurt-zero_4(pro:per|it_2,$0),$0)
example_end

Sent: because you don 't like to get hurt do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|like_5(pro:per|you_2,lambda $1_{r}.part|hurt-pastp_8(pro:per|you_2,$1),$0),$0),$0),v|do_9(pro:per|you_10,$0)))
example_end

Sent: you think you 'd like to get hurt ?
Sem: lambda $0_{r}.Q(v|think_2(pro:per|you_1,lambda $1_{r}.mod|~genmod_4(v|like_5(pro:per|you_3,lambda $2_{r}.v|hurt-zero_8(pro:per|you_3,$2),$1),$1),$0))
example_end

Sent: then perhaps you 'd have_to go to the hospital .
Sem: lambda $0_{r}.mod:aux|have_to_5(mod|~genmod_4(and(and(and(v|go_6(pro:per|you_3,$0),adv:tem|then_1($0)),adv|perhaps_2($0)),prep|to_7(det:art|the_8($1,n|hospital_9($1)),$0)),$0),$0)
example_end

Sent: yes Mommy would have_to leave you there .
Sem: lambda $0_{r}.and(mod:aux|have_to_4(mod|will-cond_3(and(v|leave_5(n:prop|mommy_2,pro:per|you_6,$0),adv|there_7($0)),$0),$0),co|yes_1($0))
example_end

Sent: don 't leave you ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|leave_3(you,pro:per|you_4,$0),$0),$0))
example_end

Sent: you have_to be careful when you play .
Sem: lambda $0_{r}.conj|when_5(v|play_7(pro:per|you_6,$0),mod:aux|have_to_2(co|careful_4(pro:per|you_1,$0),$0))
example_end

Sent: well you should be careful .
Sem: lambda $0_{r}.and(mod|should_3(adj|care-dn_5(pro:per|you_2,$0),$0),co|well_1($0))
example_end

Sent: oh yes I want you to be careful .
Sem: lambda $0_{r}.and(and(v|want_4(pro:sub|i_3,lambda $1_{r}.adj|care-dn_8(pro:per|you_5,$1),$0),co|oh_1($0)),co|yes_2($0))
example_end

Sent: do I want you to touch that ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:sub|i_2,lambda $1_{r}.v|touch_6(pro:per|you_4,pro:dem|that_7,$1),$0),$0))
example_end

Sent: I 'm just sitting .
Sem: lambda $0_{r}.aux|~be_2(and(part|sit-presp_4(pro:sub|i_1,$0),adv|just_3($0)),$0)
example_end

Sent: you 're rocking your baby ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|rock-presp_3(pro:per|you_1,det:poss|your_4($1,n|baby_5($1)),$0),$0))
example_end

Sent: Adam d you know why you like your blanket ?
Sem: lambda $0_{r}.Q(v|do_2(v|know_4(pro:per|you_3,lambda $1_{r}.and(v|like_7(pro:per|you_6,det:poss|your_8($2,n|blanket_9($2)),$1),adv:int|why_5($1)),$0),$0))
example_end

Sent: yes it 's blue .
Sem: lambda $0_{r}.and(adj|blue_4(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: Mommy has a yellow one .
Sem: lambda $0_{r}.v|have-3s_2(n:prop|mommy_1,det:art|a_3($1,att(pro:indef|one_5,BARE($2,n|yellow_4($2)),$1)),$0)
example_end

Sent: she has a blue one too .
Sem: lambda $0_{r}.and(v|have-3s_2(pro:sub|she_1,det:art|a_3($1,att(pro:indef|one_5,BARE($2,n|blue_4($2)),$1)),$0),post|too_6($0))
example_end

Sent: what 's Urs doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(n:prop|ursula_3,$1,$0),$0)
example_end

Sent: she 's blue .
Sem: lambda $0_{r}.adj|blue_3(pro:sub|she_1,$0)
example_end

Sent: she has a blue dress on .
Sem: lambda $0_{r}.and(v|have-3s_2(pro:sub|she_1,det:art|a_3($1,and(adj|blue_4($1),n|dress_5($1))),$0),adv|on_6($0))
example_end

Sent: I have a green blanket at home .
Sem: lambda $0_{r}.and(v|have_2(pro:sub|i_1,det:art|a_3($1,and(adj|green_4($1),n|blanket_5($1))),$0),prep|at_6(BARE($2,n|home_7($2)),$0))
example_end

Sent: rock_a_bye Urs .
Sem: lambda $0_{r}.co|rock_a_bye_1($0)
example_end

Sent: where 's the moon ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|moon_4($1)),$0),$2($0))
example_end

Sent: are you cold ?
Sem: lambda $0_{r}.Q(adv|cold_3(pro:per|you_2,$0))
example_end

Sent: come on just a little more .
Sem: lambda $0_{r}.and(and(v|come_1(you,$0),adv|on_2($0)),adv|just_3(det:art|a_4($1,and(adj|little_5($1),pro:indef|more_6($1)))))
example_end

Sent: I 'm just going to sit back .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:sub|i_1,lambda $1_{r}.and(v|sit_6(pro:sub|i_1,$1),adv|back_7($1)),$0),adv|just_3($0)),$0)
example_end

Sent: a squirrel .
Sem: det:art|a_1($0,n|squirrel_2($0))
example_end

Sent: well you let her see .
Sem: lambda $0_{r}.and(v|let-zero_3(pro:per|you_2,lambda $1_{r}.v|see_5(pro:obj|her_4,$1),$0),co|well_1($0))
example_end

Sent: would you like to have this letter ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|have_5(pro:per|you_2,pro:dem|this_6($2,n|letter_7($2)),$1),$0),$0))
example_end

Sent: that wasn 't screaming .
Sem: lambda $0_{r}.not(aux|be_2(part|scream-presp_4(pro:dem|that_1,$0),$0),$0)
example_end

Sent: he was just crying .
Sem: lambda $0_{r}.cop|be-past_2(and(part|cry-presp_4(pro:sub|he_1,$0),adv|just_3($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: one for you ?
Sem: BARE($0,Q(att(pro:indef|one_1,prep|for_2(pro:per|you_3),$0)))
example_end

Sent: you missed somebody .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,pro:indef|somebody_3,$0)
example_end

Sent: did Urs get one ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|get_3(n:prop|ursula_2,pro:indef|one_4,$0),$0))
example_end

Sent: oh you shave just like a man .
Sem: lambda $0_{r}.and(and(v|shave_3(pro:per|you_2,$0),adv|just_4(prep|like_5(det:art|a_6($1,n|man_7($1)),$0))),co|oh_1($0))
example_end

Sent: what is this I 've got ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: a sun .
Sem: det:art|a_1($0,n|sun_2($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no that 's not Stripey .
Sem: lambda $0_{r}.and(not(n:prop|stripey_5(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: that 's Colgate .
Sem: lambda $0_{r}.n:prop|colgate_3(pro:dem|that_1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: does it have a picture inside ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|have_3(pro:per|it_2,det:art|a_4($1,n|picture_5($1)),$0),adv|inside_6($0)),$0))
example_end

Sent: I like to use a pen don 't you ?
Sem: lambda $0_{r}.Q(and(v|like_2(pro:sub|i_1,lambda $1_{r}.v|use_4(pro:sub|i_1,det:art|a_5($2,n|pen_6($2)),$1),$0),not(mod|do_7(pro:per|you_9,$0),$0)))
example_end

Sent: I have some things .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,qn|some_3($1,n|thing-pl_4($1)),$0)
example_end

Sent: did you watch Captain Bob ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|watch_3(pro:per|you_2,n:prop|bob_5_captain_4,$0),$0))
example_end

Sent: does he give you lessons ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|give_3(pro:sub|he_2,BARE($1,n|lesson-pl_5($1)),pro:per|you_4,$0),$0))
example_end

Sent: what 's a chicken ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|chicken_4($2)),$0)
example_end

Sent: he did ?
Sem: lambda $0_{r}.Q(v|do-past_2(pro:sub|he_1,$0))
example_end

Sent: how d you know she has any toys ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,lambda $1_{r}.v|have-3s_6(pro:sub|she_5,qn|any_7($2,n|toy-pl_8($2)),$1),$0),$3($0)),$0)
example_end

Sent: how d you know she has any toys ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,lambda $1_{r}.v|have-3s_6(pro:sub|she_5,qn|any_7($2,n|toy-pl_8($2)),$1),$0),$3($0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what d you think it might have in it ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.mod|might_6(and(v|have_7(pro:per|it_5,pro:int|what_1,$1),prep|in_8(pro:per|it_9,$1)),$1),$0),$0))
example_end

Sent: yes oil and perhaps gas .
Sem: lambda $0_{r}.and(co|perhaps_4(BARE($1,n|gas_5($1)),$0),co|yes_1($0))
example_end

Sent: well here it is a picture of it .
Sem: lambda $0_{r}.and(adv|here_2(pro:per|it_3,$0),co|well_1($0))
example_end

Sent: perhaps if you put them as they were then they would all fit in .
Sem: lambda $0_{r}.mod|will-cond_11(conj|if_2(conj|as_6(aux|be-past_8(pro:sub|they_7,$0),and(v|put-zero_4(pro:per|you_3,pro:obj|them_5,$0),adv|perhaps_1($0))),and(and(and(part|fit-pastp_13(pro:sub|they_10,$0),adv:tem|then_9($0)),adv|all_12($0)),adv|in_14($0))),$0)
example_end

Sent: is it an old truck ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,and(n|truck_5(pro:per|it_2,$0),adj|old_4(pro:per|it_2,$0))))
example_end

Sent: no I don 't think it 's an old truck .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.det:art|a_8(pro:per|it_6,and(n|truck_10(pro:per|it_6,$1),adj|old_9(pro:per|it_6,$1))),$0),$0),$0),co|no_1($0))
example_end

Sent: because it 's an old truck ?
Sem: lambda $0_{r}.Q(det:art|a_4(pro:per|it_2,and(n|truck_6(pro:per|it_2,$0),adj|old_5(pro:per|it_2,$0))))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what would you like to have in there ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|will-cond_2(v|like_4(pro:per|you_3,lambda $1_{r}.and(v|have_6(pro:per|you_3,$2,$1),adv|in_7(adv|there_8($1))),$0),$0)
example_end

Sent: because it 's a little truck .
Sem: lambda $0_{r}.det:art|a_4(pro:per|it_2,and(n|truck_6(pro:per|it_2,$0),adj|little_5(pro:per|it_2,$0)))
example_end

Sent: why 're you finished playing with it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(and(n:gerund|play-presp_5(pro:per|you_3,$0),$1($0)),prep|with_6(pro:per|it_7,$0)),$0)
example_end

Sent: you 're going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: you 're going to put it in with the lumber ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(and(v|put-zero_5(pro:per|you_1,pro:per|it_6,$1),adv|in_7($1)),prep|with_8(det:art|the_9($2,n|lumber_10($2)),$1)),$0),$0))
example_end

Sent: oh are you the man ?
Sem: lambda $0_{r}.Q(and(det:art|the_4(pro:per|you_3,n|man_5(pro:per|you_3,$0)),co|oh_1($0)))
example_end

Sent: are you finished ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(v|finish-past_3(pro:per|you_2,$0),$0))
example_end

Sent: well you just started playing with it .
Sem: lambda $0_{r}.and(and(and(part|play-presp_5(pro:per|you_2,$0),adv|just_3($0)),prep|with_6(pro:per|it_7,$0)),co|well_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: are you finished ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(v|finish-past_3(pro:per|you_2,$0),$0))
example_end

Sent: I don 't got nose bleed .
Sem: lambda $0_{r}.not(mod|do_2(v|get-past_4(pro:sub|i_1,BARE($1,and_comp(n|nose_5($1),v|bleed_6($1))),$0),$0),$0)
example_end

Sent: you lost what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|lose-past_2(pro:per|you_1,$1,$0)
example_end

Sent: why don 't you leave it on the floor ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|leave_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),prep|on_7(det:art|the_8($2,n|floor_9($2)),$0)),$0),$0)
example_end

Sent: better prepared .
Sem: lambda $0_{r}.and(part|prepare-pastp_2(you,$0),adv|good-cp_1($0))
example_end

Sent: it 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:per|it_1,$1(pro:per|it_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: anything carrying what ?
Sem: lambda $1_{e}.lambda $0_{r}.part|carry-presp_2(pro:indef|anything_1,$1,$0)
example_end

Sent: he got some space .
Sem: lambda $0_{r}.v|get-past_2(pro:sub|he_1,qn|some_3($1,n|space_4($1)),$0)
example_end

Sent: I really don 't know that .
Sem: lambda $0_{r}.not(mod|do_3(and(v|know_5(pro:sub|i_1,pro:dem|that_6,$0),adv|real-dadj_2($0)),$0),$0)
example_end

Sent: we 'll have_to see some day .
Sem: lambda $0_{r}.mod:aux|have_to_3(mod|~will_2(v|see_4(pro:sub|we_1,qn|some_5($1,n|day_6($1)),$0),$0),$0)
example_end

Sent: we aren 't men .
Sem: lambda $0_{r}.not(n|man-pl_4(pro:sub|we_1,$0),$0)
example_end

Sent: we can pretend yes .
Sem: lambda $0_{r}.and(mod|can_2(v|pretend_3(pro:sub|we_1,$0),$0),co|yes_4($0))
example_end

Sent: yes we can pretend .
Sem: lambda $0_{r}.and(mod|can_3(v|pretend_4(pro:sub|we_2,$0),$0),co|yes_1($0))
example_end

Sent: that 's not a train .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|train_5(pro:dem|that_1,$0)),$0)
example_end

Sent: that 's a car carrier .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|car_4(pro:dem|that_1,$0),n|carry-dv_5(pro:dem|that_1,$0)))
example_end

Sent: especially new cars .
Sem: adv|especial-dadj_1(BARE($0,and(adj|new_2($0),n|car-pl_3($0))))
example_end

Sent: d you know any other kind of car ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,qn|any_4($1,att(and(qn|other_5($1),n|kind_6($1)),prep|of_7(BARE($2,n|car_8($2))))),$0),$0))
example_end

Sent: what kind d you know ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_3(v|know_5(pro:per|you_4,$1($2,n|kind_2($2)),$0),$0)
example_end

Sent: that 's all !
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: the people at the factory who made the car painted it .
Sem: lambda $0_{r}.v|paint-past_10(det:art|the_1($1,att(n|person-pl_2($1),prep|at_3(det:art|the_4($2,n|factory_5($2))))),pro:per|it_11,$0)
example_end

Sent: where are you supposed to park them ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(v|suppose-past_4(pro:per|you_3,lambda $1_{r}.v|park_6(pro:per|you_3,pro:obj|them_7,$1),$0),$2($0)),$0)
example_end

Sent: you didn 't put the gas tanks back on that truck .
Sem: lambda $0_{r}.not(mod|do_2(v|put-zero_4(pro:per|you_1,adv|back_8(det:art|the_5($1,att(and_comp(n|gas_6($1),n|tank-pl_7($1)),prep|on_9(pro:dem|that_10($2,n|truck_11($2)))))),$0),$0),$0)
example_end

Sent: oh d you have a garage ?
Sem: lambda $0_{r}.Q(and(v|do_2(v|have_4(pro:per|you_3,det:art|a_5($1,n|garage_6($1)),$0),$0),co|oh_1($0)))
example_end

Sent: well what 're you going to do with these ?
Sem: lambda $2_{e}.lambda $0_{r}.and(aux|~be_3(part|go-presp_5(pro:per|you_4,lambda $1_{r}.and(v|do_7(pro:per|you_4,$2,$1),prep|with_8(pro:dem|these_9,$1)),$0),$0),co|well_1($0))
example_end

Sent: here the tanks .
Sem: adv|here_1(det:art|the_2($0,n|tank-pl_3($0)))
example_end

Sent: you 're going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: did you ever think of that ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(and(v|think_4(pro:per|you_2,$0),adv|ever_3($0)),prep|of_5(pro:dem|that_6,$0)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: poor Robin gets blamed for everything .
Sem: lambda $0_{r}.and(part|blame-pastp_4(_,att(n:prop|robin_2,BARE($1,adj|poor_1($1))),$0),prep|for_5(pro:indef|everything_6,$0))
example_end

Sent: is that like the one in your book ?
Sem: att(pro:dem|that_2,prep|like_3(det:art|the_4($0,att(pro:indef|one_5,prep|in_6(det:poss|your_7($1,n|book_8($1))),$0))))
example_end

Sent: oh Adam that 's not fair .
Sem: lambda $0_{r}.and(not(adv|fair_6(pro:dem|that_3,$0),$0),co|oh_1($0))
example_end

Sent: you just started playing with that .
Sem: lambda $0_{r}.and(part|start-pastp_3(pro:per|you_1,lambda $1_{r}.and(part|play-presp_4(you,$1),prep|with_5(pro:dem|that_6,$1)),$0),adv|just_2($0))
example_end

Sent: that 's a bouncing ball .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(part|bounce-presp_4(pro:dem|that_1,$0),n|ball_5(pro:dem|that_1,$0)))
example_end

Sent: you try and hit it with the paddle .
Sem: lambda $0_{r}.and(v|hit-zero_4(pro:per|you_1,pro:per|it_5,$0),prep|with_6(det:art|the_7($1,n|paddle_8($1)),$0))
example_end

Sent: d you want to blow ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|blow_5(pro:per|you_2,$1),$0),$0))
example_end

Sent: blow again .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|again_2($0))
example_end

Sent: blow one more time .
Sem: lambda $0_{r}.n|blow_1(you,BARE($1,pro:indef|one_2($1)),$0)
example_end

Sent: you 're finished ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|finish-pastp_3(pro:per|you_1,$0),$0))
example_end

Sent: I don 't know why .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),$1($0)),$0),$0)
example_end

Sent: yes that 's fine .
Sem: lambda $0_{r}.and(adj|fine_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: here 's the bag on the floor .
Sem: lambda $0_{r}.and(and(cop|~be_2(det:art|the_3($1,n|bag_4($1)),$0),pro:exist|here_1($0)),prep|on_5(det:art|the_6($2,n|floor_7($2)),$0))
example_end

Sent: it 's alright to leave the bag on the floor .
Sem: lambda $0_{r}.adj|alright_3(pro:per|it_1,lambda $1_{r}.and(v|leave_5(pro:per|it_1,det:art|the_6($2,n|bag_7($2)),$1),prep|on_8(det:art|the_9($3,n|floor_10($3)),$1)),$0)
example_end

Sent: she has no more toys .
Sem: lambda $0_{r}.aux|have-3s_2(pro:sub|she_1,co|no_3(BARE($1,and(qn|more_4($1),n|toy-pl_5($1)))),$0)
example_end

Sent: d you want to blow ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|blow_5(pro:per|you_2,$1),$0),$0))
example_end

Sent: what takes the car ?
Sem: lambda $1_{e}.lambda $0_{r}.v|take-3s_2($1,det:art|the_3($2,n|car_4($2)),$0)
example_end

Sent: the car carrier .
Sem: det:art|the_1($0,and_comp(n|car_2($0),n|carry-dv_3($0)))
example_end

Sent: what does a truck carrier carry ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|carry_6(det:art|a_3($1,and_comp(n|truck_4($1),n|carry-dv_5($1))),$2,$0),$0)
example_end

Sent: no you can 't keep this .
Sem: lambda $0_{r}.and(not(mod|can_3(v|keep_5(pro:per|you_2,pro:dem|this_6,$0),$0),$0),co|no_1($0))
example_end

Sent: yes you hit it .
Sem: lambda $0_{r}.and(v|hit-zero_3(pro:per|you_2,pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: pull it out like this so the ball goes up in the air .
Sem: lambda $0_{r}.conj|so_6(and(and(v|go-3s_9(det:art|the_7($1,n|ball_8($1)),$0),prep|up_10($0)),prep|in_11(det:art|the_12($2,n|air_13($2)),$0)),and(and(v|pull_1(you,pro:per|it_2,$0),adv|out_3($0)),prep|like_4(pro:dem|this_5,$0)))
example_end

Sent: where does the truck run ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(n|run_5(det:art|the_3($1,n|truck_4($1)),$0),$2($0)),$0)
example_end

Sent: where does the truck run ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(n|run_5(det:art|the_3($1,n|truck_4($1)),$0),$2($0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: why don 't they go down Massachusetts Ave ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|go_5(pro:sub|they_4,$0),$1($0)),adv|down_6(BARE($2,and_comp(n:prop|massachusetts_7($2),n:prop|avenue_8($2))),$0)),$0),$0)
example_end

Sent: and then what town will they go to ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|will_5(and(v|go_7(pro:sub|they_6,$1($2,n|town_4_to_8($2)),$0),adv:tem|then_2($0)),$0)
example_end

Sent: so the man can see and not have a bump ?
Sem: lambda $0_{r}.Q(not(mod|can_4(v|have_8(det:art|the_2($1,n|man_3($1)),det:art|a_9($2,n|bump_10($2)),$0),$0),$0))
example_end

Sent: oh they should have a bump .
Sem: lambda $0_{r}.and(mod|should_3(v|have_4(pro:sub|they_2,det:art|a_5($1,n|bump_6($1)),$0),$0),co|oh_1($0))
example_end

Sent: he can see the Rambler at dark_time ?
Sem: lambda $0_{r}.Q(mod|can_2(and(v|see_3(pro:sub|he_1,det:art|the_4($1,n:prop|rambler_5($1)),$0),prep|at_6(BARE($2,chi|dark_time_7($2)),$0)),$0))
example_end

Sent: oh the lumber .
Sem: lambda $0_{r}.and(det:art|the_2($1,n|lumber_3($1),$0),co|oh_1($0))
example_end

Sent: my_goodness that car sure is pulling something big .
Sem: lambda $0_{r}.and(aux|be-3s_5(and(part|pull-presp_6(pro:rel|that_2($1,n|car_3($1)),att(pro:indef|something_7,BARE($2,adj|big_8($2))),$0),adv|sure_4($0)),$0),co|my_goodness_1($0))
example_end

Sent: the cab .
Sem: det:art|the_1($0,n|cab_2($0))
example_end

Sent: the cab .
Sem: det:art|the_1($0,n|cab_2($0))
example_end

Sent: pulling the trailer .
Sem: lambda $0_{r}.part|pull-presp_1(you,det:art|the_2($1,n|trailer_3($1)),$0)
example_end

Sent: he can 't pull both of them can he ?
Sem: lambda $0_{r}.Q(and(not(mod|can_2(v|pull_4(pro:sub|he_1,qn|both_5(pro:obj|them_7),$0),$0),$0),mod|can_8(pro:sub|he_9,$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: what kind of work are they going to do ?
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.cop|be-pres_5(part|go-presp_7(pro:sub|they_6,lambda $1_{r}.v|do_9(pro:sub|they_6,$2($3,att(n|kind_2($3),prep|of_3(BARE($4,n|work_4($4))))),$1),$0),$0)
example_end

Sent: derrick work ?
Sem: BARE($0,Q(and_comp(n|derrick_1($0),n|work_2($0))))
example_end

Sent: they should turn right .
Sem: lambda $0_{r}.mod|should_2(n|turn_3(pro:sub|they_1,lambda $1_{r}.adj|right_4(pro:sub|they_1,$1),$0),$0)
example_end

Sent: I think they should keep going down Broadway street .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|should_4(and(part|go-presp_6(pro:sub|they_3,$1),prep|down_7(BARE($2,and_comp(n:prop|broadway_8($2),n|street_9($2))),$1)),$1),$0)
example_end

Sent: I guess the hitch is broken .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.part|break-pastp_6(det:art|the_3($2,n|hitch_4($2)),$1),$0)
example_end

Sent: because you need to have your nose wiped .
Sem: lambda $0_{r}.v|need_3(pro:per|you_2,lambda $1_{r}.v|wipe-past_8(_,det:poss|your_6($2,n|nose_7($2)),$1),$0)
example_end

Sent: because we need to use them .
Sem: lambda $0_{r}.v|need_3(pro:sub|we_2,lambda $1_{r}.v|use_5(pro:sub|we_2,pro:obj|them_6,$1),$0)
example_end

Sent: no there are no more .
Sem: lambda $0_{r}.and(not(pro:indef|more_5($0),$0),co|no_1($0))
example_end

Sent: that 's the top .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|top_4(pro:dem|that_1,$0))
example_end

Sent: the part that you open so_that you can pull the kleenex up through there .
Sem: det:art|the_1($0,adj|part_2($0))
example_end

Sent: because you put it on there .
Sem: lambda $0_{r}.and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|on_5(adv|there_6($0)))
example_end

Sent: he has a new little big trailer .
Sem: lambda $0_{r}.v|have-3s_2(pro:sub|he_1,det:art|a_3($1,and(adj|big_6($1),and(adj|little_5($1),and(adj|new_4($1),n|trailer_7($1))))),$0)
example_end

Sent: they don 't burn it down .
Sem: lambda $0_{r}.not(mod|do_2(and(v|burn_4(pro:sub|they_1,pro:per|it_5,$0),adv|down_6($0)),$0),$0)
example_end

Sent: oh mhm .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: you mean can a building burn down by itself ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,lambda $1_{r}.n|can_3(and(and(n|burn_6(det:art|a_4($2,n|building_5($2)),$1),adv|down_7($1)),prep|by_8(pro:refl|itself_9,$1)),$1),$0))
example_end

Sent: yes if someone starts a fire .
Sem: lambda $0_{r}.and(v|start-3s_4(pro:indef|someone_3,det:art|a_5($1,n|fire_6($1)),$0),co|yes_1($0))
example_end

Sent: to put the fire out .
Sem: lambda $0_{r}.and(v|put-zero_2(you,det:art|the_3($1,v|fire_4($1)),$0),adv|out_5($0))
example_end

Sent: then the building burns down .
Sem: lambda $0_{r}.and(and(n|burn-pl_4(det:art|the_2($1,n|building_3($1)),$0),adv:tem|then_1($0)),adv|down_5($0))
example_end

Sent: and who puts it back up ?
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|put-3s_3($1,pro:per|it_4,$0),adv|back_5($0)),adv|up_6($0))
example_end

Sent: they don 't build buildings .
Sem: lambda $0_{r}.not(mod|do_2(v|build_4(pro:sub|they_1,BARE($1,n|building-pl_5($1)),$0),$0),$0)
example_end

Sent: I don 't believe that .
Sem: lambda $0_{r}.not(mod|do_2(v|believe_4(pro:sub|i_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: how did they put it back up ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(and(v|put-zero_4(pro:sub|they_3,pro:per|it_5,$0),$1($0)),adv|back_6($0)),adv|up_7($0)),$0)
example_end

Sent: they put the fire out .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:sub|they_1,det:art|the_3($1,v|fire_4($1)),$0),adv|out_5($0))
example_end

Sent: yes when they put the fire out .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(and(v|put-zero_4(pro:sub|they_3,det:art|the_5($1,v|fire_6($1)),$0),$2($0)),adv|out_7($0)),co|yes_1($0))
example_end

Sent: to put another fire out .
Sem: lambda $0_{r}.and(v|put-zero_2(you,pro:indef|another_3($1,n|fire_4($1)),$0),adv|out_5($0))
example_end

Sent: putting the fire out at the school .
Sem: lambda $0_{r}.and(part|put-presp_1(you,det:art|the_2($1,att(v|fire_3($1),prep|at_5(det:art|the_6($2,n|school_7($2))))),$0),adv|out_4($0))
example_end

Sent: yes they put the fire out at the school didn 't they ?
Sem: lambda $0_{r}.Q(and(and(and(v|put-zero_3(pro:sub|they_2,det:art|the_4($1,att(v|fire_5($1),prep|at_7(det:art|the_8($2,n|school_9($2))))),$0),adv|out_6($0)),not(mod|do_10(pro:sub|they_12,$0),$0)),co|yes_1($0)))
example_end

Sent: and then we saw the derricks tearing the school down .
Sem: lambda $0_{r}.and(v|see-past_4(pro:sub|we_3,lambda $1_{r}.and(part|tear-presp_7(det:art|the_5($2,n|derrick-pl_6($2)),det:art|the_8($3,n|school_9($3)),$1),adv|down_10($1)),$0),adv:tem|then_2($0))
example_end

Sent: yes but you can only put one car in there now .
Sem: lambda $0_{r}.and(mod|can_4(and(and(and(part|put-pastp_6(pro:per|you_3,BARE($1,det:num|one_7(n|car_8($1))),$0),adv|only_5($0)),prep|in_9(adv|there_10($0))),adv|now_11($0)),$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: d you think it 's a doctor ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.det:art|a_6(pro:per|it_4,n|doctor_7(pro:per|it_4,$1)),$0),$0))
example_end

Sent: could be a doctor ?
Sem: det:art|a_3($0,n|doctor_4($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: can you put it back together ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),adv|back_5(adv|together_6($0))),$0))
example_end

Sent: where 's the rest of the train ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,att(n|rest_4($1),prep|of_5(det:art|the_6($2,n|train_7($2))))),$0),$3($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: did you ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:per|you_2,$0))
example_end

Sent: no that was Daddy .
Sem: lambda $0_{r}.and(n:prop|daddy_4(pro:dem|that_2,$0),qn|no_1($0))
example_end

Sent: I guess so .
Sem: lambda $0_{r}.and(n|guess_2(pro:sub|i_1,$0),adv|so_3($0))
example_end

Sent: is that the caboose ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,n|caboose_4(pro:rel|that_2,$0)))
example_end

Sent: how can you tell which one is the caboose ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|tell_4(pro:per|you_3,lambda $1_{r}.det:art|the_8(pro:rel|which_5($2,pro:indef|one_6($2)),n|caboose_9(pro:rel|which_5($2,pro:indef|one_6($2)),$1)),$0),$3($0)),$0)
example_end

Sent: yes it is very very crowded .
Sem: lambda $0_{r}.and(adv|very_5(adv|very_4(part|crowd-pastp_6(pro:per|it_2,$0))),co|yes_1($0))
example_end

Sent: somebody was laughing .
Sem: lambda $0_{r}.aux|be-past_2(part|laugh-presp_3(pro:indef|somebody_1,$0),$0)
example_end

Sent: who was laughing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-past_2(part|laugh-presp_3($1,$0),$0)
example_end

Sent: a witch you thought .
Sem: lambda $0_{r}.and(det:art|a_1($1,n|witch_2($1)),n|thought_4(pro:per|you_3,$0))
example_end

Sent: oh I know that .
Sem: lambda $0_{r}.and(v|know_3(pro:sub|i_2,pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: yes you do .
Sem: lambda $0_{r}.and(v|do_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: yes he 's sleeping .
Sem: lambda $0_{r}.and(aux|~be_3(part|sleep-presp_4(pro:sub|he_2,$0),$0),co|yes_1($0))
example_end

Sent: he 's sleeping down in his bed .
Sem: lambda $0_{r}.aux|~be_2(and(and(part|sleep-presp_3(pro:sub|he_1,$0),adv|down_4($0)),prep|in_5(det:poss|his_6($1,n|bed_7($1)),$0)),$0)
example_end

Sent: turn your paddle over .
Sem: lambda $0_{r}.and(v|turn_1(you,det:poss|your_2($1,n|paddle_3($1)),$0),adv|over_4($0))
example_end

Sent: see if you can hit it again .
Sem: lambda $0_{r}.conj|if_2(mod|can_4(and(v|hit-zero_5(pro:per|you_3,pro:per|it_6,$0),adv|again_7($0)),$0),v|see_1(you,$0))
example_end

Sent: did you tell Ursula about your new doctor ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|tell_3(pro:per|you_2,n:prop|ursula_4,$0),prep|about_5(det:poss|your_6($1,and(adj|new_7($1),n|doctor_8($1))),$0)),$0))
example_end

Sent: he did ?
Sem: lambda $0_{r}.Q(v|do-past_2(pro:sub|he_1,$0))
example_end

Sent: did he give it to you in your arm ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(and(v|give_3(pro:sub|he_2,pro:per|it_4,$0),prep|to_5(pro:per|you_6,$0)),prep|in_7(det:poss|your_8($1,n|arm_9($1)),$0)),$0))
example_end

Sent: but you may be a doctor when you grow up if you 'd like to .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.conj|if_11(mod|~genmod_13(co|like_14(pro:per|you_12,$0),$0),and(mod|may_3(det:art|a_5(pro:per|you_2,n|doctor_6(pro:per|you_2,$0)),$0),and(v|grow_9_up_10(pro:per|you_8,$0),$1($0))))
example_end

Sent: what did you have in his office ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|have_4(pro:per|you_3,$1,$0),prep|in_5(det:poss|his_6($2,n|office_7($2)),$0)),$0)
example_end

Sent: yes he gave you a lollipop .
Sem: lambda $0_{r}.and(v|give-past_3(pro:sub|he_2,det:art|a_5($1,n|lollipop_6($1)),pro:per|you_4,$0),co|yes_1($0))
example_end

Sent: no it was green .
Sem: lambda $0_{r}.and(n|green_4(pro:per|it_2,$0),co|no_1($0))
example_end

Sent: yes you have lips .
Sem: lambda $0_{r}.and(v|have_3(pro:per|you_2,BARE($1,n|lip-pl_4($1)),$0),co|yes_1($0))
example_end

Sent: you were born with lips .
Sem: lambda $0_{r}.cop|be-past_2(and(adj|born_3(pro:per|you_1,$0),prep|with_4(BARE($1,n|lip-pl_5($1)),$0)),$0)
example_end

Sent: well everybody has lips .
Sem: lambda $0_{r}.and(v|have-3s_3(pro:indef|everybody_2,BARE($1,n|lip-pl_4($1)),$0),co|well_1($0))
example_end

Sent: oh that 's a beard ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:dem|that_2,n|beard_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: you mean a stethoscope .
Sem: lambda $0_{r}.v|mean_2(pro:per|you_1,det:art|a_3($1,n|stethoscope_4($1)),$0)
example_end

Sent: what d you hear ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|hear_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: hear a what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|hear_1(you,$1,$0)
example_end

Sent: you took them all down .
Sem: lambda $0_{r}.and(v|take-past_2(pro:per|you_1,post|all_4($1,pro:obj|them_3($1)),$0),adv|down_5($0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: yes you made a big mistake .
Sem: lambda $0_{r}.and(v|make-past_3(pro:per|you_2,det:art|a_4($1,and(adj|big_5($1),n|mistake_6($1))),$0),co|yes_1($0))
example_end

Sent: you took what off ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|take-past_2(pro:per|you_1,$1,$0),adv|off_4($0))
example_end

Sent: put the wheels on the train .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|wheel-pl_3($1)),$0),prep|on_4(det:art|the_5($2,n|train_6($2)),$0))
example_end

Sent: except you are sliding in my trash .
Sem: lambda $0_{r}.aux|be-pres_3(and(part|slide-presp_4(pro:per|you_2,$0),prep|in_5(det:poss|my_6($1,n|trash_7($1)),$0)),$0)
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: and he gave his mother his milk .
Sem: lambda $0_{r}.v|give-past_3(pro:sub|he_2,det:poss|his_6($1,n|milk_7($1)),det:poss|his_4($2,n|mother_5($2)),$0)
example_end

Sent: are you a carpenter ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_2,n|carpenter_4(pro:per|you_2,$0)))
example_end

Sent: why d you do that sometimes ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),adv|sometimes_6($0)),$0)
example_end

Sent: the mixer ?
Sem: BARE($0,Q(det:art|the_1($1,n|mix-dv_2($1),$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: just a minute please .
Sem: lambda $0_{r}.and(adv|just_1(det:art|a_2($1,n|minute_3($1)),$0),co|please_4($0))
example_end

Sent: what is that you have now ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: what kind of machine is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|machine_4($2)))))
example_end

Sent: oh the dirt dumps it in the pail ?
Sem: lambda $0_{r}.Q(and(and(v|dump-3s_4(det:art|the_2($1,n|dirt_3($1)),pro:per|it_5,$0),prep|in_6(det:art|the_7($2,n|pail_8($2)),$0)),co|oh_1($0)))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: pull it .
Sem: lambda $0_{r}.v|pull_1(you,pro:per|it_2,$0)
example_end

Sent: here 's a little hole .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,and(adj|little_4($1),n|hole_5($1))),$0),pro:exist|here_1($0))
example_end

Sent: why not open it from there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(v|open_3(you,pro:per|it_4,$0),$1($0)),adv|there_6($0))
example_end

Sent: it 's medicine .
Sem: lambda $0_{r}.n|medicine_3(pro:per|it_1,$0)
example_end

Sent: yes if she 's sick .
Sem: lambda $0_{r}.and(adj|sick_5(pro:sub|she_3,$0),co|yes_1($0))
example_end

Sent: it 's a cough drop .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|cough_4(pro:per|it_1,$0),n|drop_5(pro:per|it_1,$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: it 's a microscope .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|microscope_4(pro:per|it_1,$0))
example_end

Sent: open the whole thing .
Sem: lambda $0_{r}.v|open_1(you,det:art|the_2($1,and(adj|whole_3($1),n|thing_4($1))),$0)
example_end

Sent: oh you 're opening the whole thing ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|open-presp_4(pro:per|you_2,det:art|the_5($1,and(adj|whole_6($1),n|thing_7($1))),$0),$0),co|oh_1($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: why don 't you read the directions first ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|read-zero_5(pro:per|you_4,det:art|the_6($1,n|direction-pl_7($1)),$0),$2($0)),adj|first_8($0)),$0),$0)
example_end

Sent: oh you read it through the paper ?
Sem: lambda $0_{r}.Q(and(and(v|read-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|through_5(det:art|the_6($1,n|paper_7($1)),$0)),co|oh_1($0)))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: don 't you have a book about him ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_4(pro:per|you_3,det:art|a_5($1,att(n|book_6($1),prep|about_7(pro:obj|him_8))),$0),$0),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no that 's a popper .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|pop-dv_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: a needle .
Sem: det:art|a_1($0,n|needle_2($0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's a microscope .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|microscope_4(pro:dem|that_1,$0))
example_end

Sent: it 's a microscope .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|microscope_4(pro:per|it_1,$0))
example_end

Sent: well I don 't think you 're really supposed to put it down so far .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.aux|~be_7(and(v|suppose-past_9(pro:per|you_6,lambda $2_{r}.and(and(v|put-zero_11(pro:per|you_6,pro:per|it_12,$2),adv|down_13($2)),adv|so_14(adv|far_15($2))),$1),adv|real-dadj_8($1)),$1),$0),$0),$0),co|well_1($0))
example_end

Sent: look through that little hole in the microscope .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|through_2(pro:dem|that_3($1,att(and(adj|little_4($1),n|hole_5($1)),prep|in_6(det:art|the_7($2,n|microscope_8($2))))),$0))
example_end

Sent: can you look through there ?
Sem: lambda $0_{r}.Q(mod|can_1(and(co|look_3(pro:per|you_2,$0),adv|there_5($0)),$0))
example_end

Sent: these are germs .
Sem: lambda $0_{r}.n|germ-pl_3(pro:dem|these_1,$0)
example_end

Sent: dirty water germs .
Sem: BARE($0,and_comp(n|water_2($0),and(adj|dirt-dn_1($0),n|germ-pl_3($0))))
example_end

Sent: these are germs from dirty hands .
Sem: lambda $0_{r}.att(n|germ-pl_3(pro:dem|these_1,$0),prep|from_4(BARE($1,and(v|dirty_5($1),n|hand-pl_6($1)))))
example_end

Sent: these are fingernail germs .
Sem: lambda $0_{r}.and_comp(n|finger+nail_3(pro:dem|these_1,$0),n|germ-pl_4(pro:dem|these_1,$0))
example_end

Sent: those are germs from dirty faces .
Sem: lambda $0_{r}.att(n|germ-pl_3(pro:dem|those_1,$0),prep|from_4(BARE($1,and(v|dirty_5($1),n|face-pl_6($1)))))
example_end

Sent: germs from dirty ears .
Sem: BARE($0,att(n|germ-pl_1($0),prep|from_2(BARE($1,and(adj|dirt-dn_3($1),n|ear-pl_4($1))))))
example_end

Sent: like a what ?
Sem: det:art|a_2($0,pro:int|what_3($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: why don 't you put that in the doctor 's kit .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|put-zero_5(pro:per|you_4,pro:dem|that_6,$0),$1($0)),prep|in_7(n|doctor_9's($2,n|kit_11($2)),$0)),$0),$0)
example_end

Sent: oh you left your germs out .
Sem: lambda $0_{r}.and(and(v|leave-past_3(pro:per|you_2,det:poss|your_4($1,n|germ-pl_5($1)),$0),adv|out_6($0)),co|oh_1($0))
example_end

Sent: are you done ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|do-pastp_3(pro:per|you_2,$0),$0))
example_end

Sent: Adam you didn 't put your cough drops in .
Sem: lambda $0_{r}.not(mod|do_3(and(v|put-zero_5(pro:per|you_2,det:poss|your_6($1,and_comp(n|cough_7($1),n|drop-pl_8($1))),$0),adv|in_9($0)),$0),$0)
example_end

Sent: sleep away ?
Sem: lambda $0_{r}.Q(and(n|sleep_1(you,$0),adv|away_2($0)))
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 'd like to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|~genmod_2(v|like_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: obey whom ?
Sem: lambda $1_{e}.lambda $0_{r}.v|obey_1(you,$1,$0)
example_end

Sent: d you want to listen to my heartbeat ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|listen_5(pro:per|you_2,$1),prep|to_6(det:poss|my_7($2,n|heart+beat_8($2)),$1)),$0),$0))
example_end

Sent: I take my temperature in my mouth .
Sem: lambda $0_{r}.and(v|take_2(pro:sub|i_1,det:poss|my_3($1,n|temperature_4($1)),$0),prep|in_5(det:poss|my_6($2,n|mouth_7($2)),$0))
example_end

Sent: did you ask Ursula ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|ask_3(pro:per|you_2,n:prop|ursula_4,$0),$0))
example_end

Sent: you may have it if she says so .
Sem: lambda $0_{r}.conj|if_5(and(v|say-3s_7(pro:sub|she_6,$0),adv|so_8($0)),mod|may_2(v|have_3(pro:per|you_1,pro:per|it_4,$0),$0))
example_end

Sent: well you have it .
Sem: lambda $0_{r}.and(v|have_3(pro:per|you_2,pro:per|it_4,$0),co|well_1($0))
example_end

Sent: is he singing ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(part|sing-presp_3(pro:sub|he_2,$0),$0))
example_end

Sent: oh he 's thinking ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|think-presp_4(pro:sub|he_2,$0),$0),co|oh_1($0)))
example_end

Sent: are you his doctor ?
Sem: lambda $0_{r}.Q(det:poss|his_3(pro:per|you_2,n|doctor_4(pro:per|you_2,$0)))
example_end

Sent: I 'll pretend .
Sem: lambda $0_{r}.mod|~will_2(v|pretend_3(pro:sub|i_1,$0),$0)
example_end

Sent: here comes Dr Adam .
Sem: lambda $0_{r}.and(v|come-3s_2(n:prop|adam_4_dr_3,$0),adv|here_1($0))
example_end

Sent: he didn 't even cry did he ?
Sem: lambda $0_{r}.Q(and(not(v|even_4(mod|do_2(v|cry_5(pro:sub|he_1,$0),$0),$0),$0),mod|do-past_6(pro:sub|he_7,$0)))
example_end

Sent: he didn 't even cry .
Sem: lambda $0_{r}.not(mod|do_2(and(v|cry_5(pro:sub|he_1,$0),v|even_4($0)),$0),$0)
example_end

Sent: oh you mustn 't touch the doctor 's bag .
Sem: lambda $0_{r}.and(not(mod|must_3(v|touch_5(pro:per|you_2,n|doctor_7's($1,n|bag_9($1)),$0),$0),$0),co|oh_1($0))
example_end

Sent: examine Paul ?
Sem: lambda $0_{r}.Q(v|examine_1(n:prop|paul_2,$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: listen to his back .
Sem: lambda $0_{r}.and(v|listen_1(you,$0),prep|to_2(det:poss|his_3($1,n|back_4($1)),$0))
example_end

Sent: it 's so small I can 't even see it .
Sem: lambda $0_{r}.and(adv|so_3(adj|small_4(pro:per|it_1,$0)),not(mod|can_6(and(v|see_9(pro:sub|i_5,pro:per|it_10,$0),adv|even_8($0)),$0),$0))
example_end

Sent: it came from the box I think .
Sem: lambda $0_{r}.and(and(v|come-past_2(pro:per|it_1,$0),prep|from_3(det:art|the_4($1,n|box_5($1)),$0)),v|think_7(pro:sub|i_6,$0))
example_end

Sent: here are some signs for the office .
Sem: lambda $0_{r}.and(cop|be-pres_2(qn|some_3($1,att(n|sign-pl_4($1),prep|for_5(det:art|the_6($2,n|office_7($2))))),$0),adv|here_1($0))
example_end

Sent: for your office .
Sem: prep|for_1(det:poss|your_2($0,n|office_3($0)))
example_end

Sent: this really goes under here .
Sem: lambda $0_{r}.and(and(v|go-3s_3(pro:dem|this_1,$0),adv|real-dadj_2($0)),adv|under_4(adv|here_5($0)))
example_end

Sent: can you see ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_3(pro:per|you_2,$0),$0))
example_end

Sent: the germs from the hands ?
Sem: BARE($0,Q(det:art|the_1($1,att(n|germ-pl_2($1),prep|from_3(det:art|the_4($2,n|hand-pl_5($2)))),$0)))
example_end

Sent: those are cherries Adam .
Sem: lambda $0_{r}.n|cherry-pl_3(pro:dem|those_1,$0)
example_end

Sent: which germs ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|germ-pl_2($1))
example_end

Sent: those are germs from dirty faces .
Sem: lambda $0_{r}.att(n|germ-pl_3(pro:dem|those_1,$0),prep|from_4(BARE($1,and(v|dirty_5($1),n|face-pl_6($1)))))
example_end

Sent: what 's the word ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|word_4($2)),$0)
example_end

Sent: dirty ears .
Sem: BARE($0,and(adj|dirt-dn_1($0),n|ear-pl_2($0)))
example_end

Sent: will I smile about it when I laugh ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|will_1(and(v|smile_3(pro:sub|i_2,$0),prep|about_4(pro:per|it_5,$0)),$0),and(v|laugh_8(pro:sub|i_7,$0),$1($0)))
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: he 's got your germs Adam .
Sem: lambda $0_{r}.aux|~be_2(part|get-pastp_3(pro:sub|he_1,det:poss|your_4($1,n|germ-pl_5($1)),$0),$0)
example_end

Sent: he 's got your germ list .
Sem: lambda $0_{r}.aux|~be_2(part|get-pastp_3(pro:sub|he_1,det:poss|your_4($1,and_comp(n|germ_5($1),n|list_6($1))),$0),$0)
example_end

Sent: you come back here .
Sem: lambda $0_{r}.and(v|come_2(pro:per|you_1,$0),adv|back_3(adv|here_4($0)))
example_end

Sent: he just wants to know about germs too .
Sem: lambda $0_{r}.and(and(v|want-3s_3(pro:sub|he_1,lambda $1_{r}.and(v|know_5(pro:sub|he_1,$1),prep|about_6(BARE($2,n|germ-pl_7($2)),$1)),$0),adv|just_2($0)),post|too_8($0))
example_end

Sent: so he can help make people well .
Sem: lambda $0_{r}.and(mod|can_3(v|help_4(pro:sub|he_2,lambda $1_{r}.and(v|make_5(pro:sub|he_2,BARE($2,n|person-pl_6($2)),$1),adv|well_7($1)),$0),$0),co|so_1($0))
example_end

Sent: he can 't be a doctor while he 's a baby .
Sem: lambda $0_{r}.not(conj|while_7(det:art|a_10(pro:sub|he_8,n|baby_11(pro:sub|he_8,$0)),mod|can_2(det:art|a_5(pro:sub|he_1,n|doctor_6(pro:sub|he_1,$0)),$0)),$0)
example_end

Sent: he can just pretend .
Sem: lambda $0_{r}.mod|can_2(and(adj|pretend_4(pro:sub|he_1,$0),adv|just_3($0)),$0)
example_end

Sent: like you can pretend .
Sem: lambda $0_{r}.mod|can_3(v|pretend_4(pro:per|you_2,$0),$0)
example_end

Sent: like you can just pretend .
Sem: lambda $0_{r}.mod|can_3(and(adj|pretend_5(pro:per|you_2,$0),adv|just_4($0)),$0)
example_end

Sent: yes you can pretend .
Sem: lambda $0_{r}.and(mod|can_3(v|pretend_4(pro:per|you_2,$0),$0),co|yes_1($0))
example_end

Sent: well because he 's a little baby .
Sem: lambda $0_{r}.and(det:art|a_5(pro:sub|he_3,and(n|baby_7(pro:sub|he_3,$0),adj|little_6(pro:sub|he_3,$0))),co|well_1($0))
example_end

Sent: and he doesn 't think like you do .
Sem: lambda $0_{r}.not(prep|like_6(v|do_8(pro:per|you_7,$0),mod|do_3(v|think_5(pro:sub|he_2,$0),$0)),$0)
example_end

Sent: because that 's something that hasn 't developed .
Sem: lambda $0_{r}.pro:indef|something_4(pro:dem|that_2,$0)
example_end

Sent: you 're talking very quietly ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|talk-presp_3(pro:per|you_1,$0),adv|very_4(adv|quiet-dadj_5($0))),$0))
example_end

Sent: you liked it didn 't you ?
Sem: lambda $0_{r}.Q(and(v|like-past_2(pro:per|you_1,pro:per|it_3,$0),not(mod|do_4(pro:per|you_6,$0),$0)))
example_end

Sent: no he doesn 't need to taste it .
Sem: lambda $0_{r}.and(not(mod|do_3(v|need_5(pro:sub|he_2,lambda $1_{r}.v|taste_7(pro:sub|he_2,pro:per|it_8,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: an a what ?
Sem: det:art|a_2($0,pro:int|what_3($0))
example_end

Sent: become a spider ?
Sem: lambda $0_{r}.Q(cop|become_1(you,det:art|a_2($1,n|spider_3($1)),$0))
example_end

Sent: who is going to become a spider ?
Sem: lambda $1_{e}.lambda $1_{e}.lambda $0_{r}.aux|be-3s_2(part|go-presp_3($1,lambda $2_{r}.cop|become_5($1,det:art|a_6($3,n|spider_7($3)),$2),$0),$0)
example_end

Sent: a spider what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_1($2,n|spider_2($2)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: in your bowling ball box .
Sem: prep|in_1(det:poss|your_2($0,and_comp(and_comp(part|bowl-presp_3($0),n|ball_4($0)),n|box_5($0))))
example_end

Sent: he doesn 't want to play .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|he_1,lambda $1_{r}.v|play_6(pro:sub|he_1,$1),$0),$0),$0)
example_end

Sent: so he must not feel well .
Sem: lambda $0_{r}.and(not(mod|must_3(and(v|feel_5(pro:sub|he_2,$0),adv|well_6($0)),$0),$0),co|so_1($0))
example_end

Sent: hello Doctor Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: will you come to my house and check my little boy ?
Sem: lambda $0_{r}.Q(mod|will_1(and(v|check_8(pro:per|you_2,det:poss|my_9($1,and(adj|little_10($1),n|boy_11($1))),$0),prep|to_4(det:poss|my_5($2,n|house_6($2)),$0)),$0))
example_end

Sent: is he alright ?
Sem: lambda $0_{r}.Q(co|alright_3(pro:sub|he_2,$0))
example_end

Sent: well what was wrong with him ?
Sem: BARE($0,adj|wrong_4($0))
example_end

Sent: did he have a fever ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|have_3(pro:sub|he_2,det:art|a_4($1,n|fever_5($1)),$0),$0))
example_end

Sent: did he have pneumonia ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|have_3(pro:sub|he_2,BARE($1,n|pneumonia_4($1)),$0),$0))
example_end

Sent: oh he just had a little cold .
Sem: lambda $0_{r}.and(and(v|have-past_4(pro:sub|he_2,det:art|a_5($1,and(adj|little_6($1),n|cold_7($1))),$0),adv|just_3($0)),co|oh_1($0))
example_end

Sent: here 's your money Doctor .
Sem: lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|money_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: thank_you very much .
Sem: lambda $0_{r}.and(co|thank_you_1(you,$0),qn|much_4($0))
example_end

Sent: oh Doctor .
Sem: lambda $0_{r}.and(n:prop|doctor_2($0),co|oh_1($0))
example_end

Sent: I thought I only had to pay ten dollars .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.and(v|have-past_5(pro:sub|i_3,lambda $2_{r}.v|pay_7(pro:sub|i_3,BARE($3,det:num|ten_8(n|dollar-pl_9($3))),$2),$1),adv|only_4($1)),$0)
example_end

Sent: some checks .
Sem: qn|some_1($0,n|check-pl_2($0))
example_end

Sent: well here 's a check .
Sem: lambda $0_{r}.and(and(cop|~be_3(det:art|a_4($1,n|check_5($1)),$0),pro:exist|here_2($0)),co|well_1($0))
example_end

Sent: you don 't need any money .
Sem: lambda $0_{r}.not(mod|do_2(v|need_4(pro:per|you_1,qn|any_5($1,n|money_6($1)),$0),$0),$0)
example_end

Sent: I just gave you some money Doctor .
Sem: lambda $0_{r}.and(v|give-past_3(pro:sub|i_1,qn|some_5($1,n|money_6($1)),pro:per|you_4,$0),adv|just_2($0))
example_end

Sent: don 't you see that money ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|see_4(pro:per|you_3,pro:rel|that_5($1,n|money_6($1)),$0),$0),$0))
example_end

Sent: go get two pennies out then .
Sem: lambda $0_{r}.and(and(v|get_2(you,BARE($1,det:num|two_3(n|penny-pl_4($1))),$0),adv|out_5($0)),adv:tem|then_6($0))
example_end

Sent: one two .
Sem: BARE($0,det:num|one_1($0))
example_end

Sent: no Paul can 't have pennies .
Sem: lambda $0_{r}.and(not(mod|can_3(v|have_5(n:prop|paul_2,BARE($1,n|penny-pl_6($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: here you may keep three pennies .
Sem: lambda $0_{r}.mod|may_3(and(v|keep_4(pro:per|you_2,BARE($1,det:num|three_5(n|penny-pl_6($1))),$0),adv|here_1($0)),$0)
example_end

Sent: put the nickel back .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|nickel_3($1)),$0),adv|back_4($0))
example_end

Sent: put it back in the drawer .
Sem: lambda $0_{r}.and(and(v|put-zero_1(you,pro:per|it_2,$0),adv|back_3($0)),prep|in_4(det:art|the_5($1,n|drawer_6($1)),$0))
example_end

Sent: alright now you have five pennies .
Sem: lambda $0_{r}.and(and(v|have_4(pro:per|you_3,BARE($1,det:num|five_5(n|penny-pl_6($1))),$0),adv|now_2($0)),co|alright_1($0))
example_end

Sent: no you put these through there .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:per|you_2,pro:dem|these_4,$0),adv|through_5(adv|there_6($0))),co|no_1($0))
example_end

Sent: he can play with that one .
Sem: lambda $0_{r}.mod|can_2(and(v|play_3(pro:sub|he_1,$0),prep|with_4(pro:dem|that_5($1,pro:indef|one_6($1)),$0)),$0)
example_end

Sent: m a r x .
Sem: BARE($0,n:let|m_1($0))
example_end

Sent: I don 't believe I 've ever seen that .
Sem: lambda $0_{r}.not(mod|do_2(v|believe_4(pro:sub|i_1,lambda $1_{r}.aux|~have_6(and(part|see-pastp_8(pro:sub|i_5,pro:dem|that_9,$1),adv|ever_7($1)),$1),$0),$0),$0)
example_end

Sent: is that a new toy ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,and(n|toy_5(pro:rel|that_2,$0),adj|new_4(pro:rel|that_2,$0))))
example_end

Sent: by Marx ?
Sem: Q(prep|by_1(n:prop|marx_2))
example_end

Sent: Paul you come back over here .
Sem: lambda $0_{r}.and(and(v|come_3(pro:per|you_2,$0),adv|back_4($0)),prep|over_5(adv|here_6($0)))
example_end

Sent: Adam 's going to give you the block Paul .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(n:prop|adam_1,lambda $1_{r}.v|give_5(n:prop|adam_1,det:art|the_7($2,n|block_8($2)),pro:per|you_6,$1),$0),$0)
example_end

Sent: what am I going to be ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-1s_2(part|go-presp_4(pro:sub|i_3,lambda $1_{r}.cop|be_6(pro:sub|i_3,$2,$1),$0),$0)
example_end

Sent: where is Hans ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(n:prop|hans_3,$0),$1($0))
example_end

Sent: is he alright ?
Sem: lambda $0_{r}.Q(co|alright_3(pro:sub|he_2,$0))
example_end

Sent: you 're the doctor .
Sem: lambda $0_{r}.det:art|the_3(pro:per|you_1,n|doctor_4(pro:per|you_1,$0))
example_end

Sent: well my patient is alright too .
Sem: lambda $0_{r}.and(post|too_6(adj|alright_5(det:poss|my_2($1,n|patient_3($1)),$0)),co|well_1($0))
example_end

Sent: my patient is alright .
Sem: lambda $0_{r}.adj|alright_4(det:poss|my_1($1,n|patient_2($1)),$0)
example_end

Sent: don 't cry Paul .
Sem: lambda $0_{r}.not(mod|do_1(v|cry_3(you,$0),$0),$0)
example_end

Sent: it 'll be alright .
Sem: lambda $0_{r}.mod|~will_2(adj|alright_4(pro:per|it_1,$0),$0)
example_end

Sent: just as long as I 'm holding him .
Sem: lambda $0_{r}.aux|~be_6(and(part|hold-presp_7(pro:sub|i_5,pro:obj|him_8,$0),conj|as_2(adv|long_3(adv|just_1($0)))),$0)
example_end

Sent: not by himself .
Sem: not(prep|by_2(pro:refl|himself_3))
example_end

Sent: big drum ?
Sem: BARE($0,Q(and(adj|big_1($0),n|drum_2($0))))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: those are checkers .
Sem: lambda $0_{r}.n|checker-pl_3(pro:dem|those_1,$0)
example_end

Sent: two checkers yes .
Sem: lambda $0_{r}.and(det:num|two_1(n|checker-pl_2($0)),co|yes_3($0))
example_end

Sent: play checkers ?
Sem: lambda $0_{r}.Q(n|play_1(you,BARE($1,n|checker-pl_2($1)),$0))
example_end

Sent: big horn ?
Sem: BARE($0,Q(and(adj|big_1($0),n|horn_2($0))))
example_end

Sent: are those your checkers ?
Sem: lambda $0_{r}.Q(det:poss|your_3(det:dem|those_2,n|checker-pl_4(det:dem|those_2,$0)))
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: do you want to play with them ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|play_5(pro:per|you_2,$1),prep|with_6(pro:obj|them_7,$1)),$0),$0))
example_end

Sent: I like it .
Sem: lambda $0_{r}.v|like_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: why don 't you read Shadow yourself ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|read-zero_5(pro:per|you_4,n:prop|shadow_6,$0),$1($0)),pro:refl|yourself_7($0)),$0),$0)
example_end

Sent: why don 't you look at some of the toys in the basket .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(cop|look_5(pro:per|you_4,$0),$1($0)),prep|at_6(qn|some_7(det:art|the_9($2,att(n|toy-pl_10($2),prep|in_11(det:art|the_12($3,n|basket_13($3)))))),$0)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: can you put them together Adam ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:obj|them_4,$0),adv|together_5($0)),$0))
example_end

Sent: not in your mouth .
Sem: not(prep|in_2(det:poss|your_3($0,n|mouth_4($0))))
example_end

Sent: let me put them together .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.and(v|put-zero_3(pro:obj|me_2,pro:obj|them_4,$1),adv|together_5($1)),$0)
example_end

Sent: you 'll have_to pick them up .
Sem: lambda $0_{r}.mod:aux|have_to_3(mod|~will_2(and(v|pick_4(pro:per|you_1,pro:obj|them_5,$0),adv|up_6($0)),$0),$0)
example_end

Sent: no that 's his pencil .
Sem: lambda $0_{r}.and(det:poss|his_4(pro:dem|that_2,n|pencil_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: that 's not Daddy that 's Colin .
Sem: lambda $0_{r}.not(and(n:prop|daddy_4(pro:dem|that_1,$0),n:prop|colin_7(pro:rel|that_5,$0)),$0)
example_end

Sent: I think perhaps he 's going back to school .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~be_5(and(and(part|go-presp_6(pro:sub|he_4,$1),adv|perhaps_3($1)),adv|back_7(prep|to_8(BARE($2,n|school_9($2)),$1))),$1),$0)
example_end

Sent: not on the window sill Adam .
Sem: not(prep|on_2(det:art|the_3($0,and_comp(n|window_4($0),n|sill_5($0)))))
example_end

Sent: you write on the paper .
Sem: lambda $0_{r}.and(v|write_2(pro:per|you_1,$0),prep|on_3(det:art|the_4($1,n|paper_5($1)),$0))
example_end

Sent: my paper .
Sem: det:poss|my_1($0,n|paper_2($0))
example_end

Sent: sitting in Adam 's chair .
Sem: lambda $0_{r}.and(part|sit-presp_1(you,$0),prep|in_2(n:prop|adam_3's($1,n|chair_5($1)),$0))
example_end

Sent: why don 't you read it to me ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|read-zero_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),prep|to_7(pro:obj|me_8,$0)),$0),$0)
example_end

Sent: that 's Cathy .
Sem: lambda $0_{r}.n:prop|cathy_3(pro:dem|that_1,$0)
example_end

Sent: is this a horn ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|this_2,n|horn_4(pro:dem|this_2,$0)))
example_end

Sent: look what game is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_5,n|game_3(pro:dem|that_5,$0)),co|look_1(you,$0))
example_end

Sent: how many do you have like this ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_3(and(v|have_5(pro:per|you_4,BARE($1,$2(qn|many_2($1))),$0),prep|like_6(pro:dem|this_7,$0)),$0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: how does a bunny walk ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(n|walk_5(det:art|a_3($1,n|bunny+rabbit_4($1)),$0),$2($0)),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: sweep broom .
Sem: BARE($0,and_comp(n|sweep_1($0),n|broom_2($0)))
example_end

Sent: is that a broom ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|broom_4(pro:rel|that_2,$0)))
example_end

Sent: I thought it was a brush .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:per|it_3,n|brush_6(pro:per|it_3,$1)),$0)
example_end

Sent: Adam Smith ?
Sem: BARE($0,Q(n:prop|smith_2_adam_1($0)))
example_end

Sent: is that the bunny  name ?
Sem: lambda $0_{r}.Q(n|bunny+rabbit_4's'(pro:rel|that_2,n|name_6(pro:rel|that_2,$0)))
example_end

Sent: is that very heavy ?
Sem: lambda $0_{r}.Q(adv|very_3(adj|heavy_4(pro:rel|that_2,$0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: hear a tractor ?
Sem: lambda $0_{r}.Q(v|hear_1(you,det:art|a_2($1,n|tractor_3($1)),$0))
example_end

Sent: no I think that 's a truck .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.det:art|a_6(pro:dem|that_4,n|truck_7(pro:dem|that_4,$1)),$0),co|no_1($0))
example_end

Sent: if you look out the other window maybe you 'll see it .
Sem: lambda $0_{r}.mod|~will_10(conj|if_1(and(cop|look_3(pro:per|you_2,$0),prep|out_4(det:art|the_5($1,and(qn|other_6($1),n|window_7($1))),$0)),and(v|see_11(pro:per|you_9,pro:per|it_12,$0),adv|maybe_8($0))),$0)
example_end

Sent: did you see the truck ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,det:art|the_4($1,n|truck_5($1)),$0),$0))
example_end

Sent: no you didn 't see it .
Sem: lambda $0_{r}.and(not(mod|do_3(v|see_5(pro:per|you_2,pro:per|it_6,$0),$0),$0),co|no_1($0))
example_end

Sent: there goes one .
Sem: lambda $0_{r}.v|go-3s_2_there_1(you,pro:indef|one_3,$0)
example_end

Sent: yes there goes one .
Sem: lambda $0_{r}.and(v|go-3s_3_there_2(you,pro:indef|one_4,$0),co|yes_1($0))
example_end

Sent: put the truck where ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|truck_3($1)),$0),$2($0))
example_end

Sent: tow truck come here ?
Sem: lambda $0_{r}.Q(and(v|come_3(BARE($1,and_comp(n|tow_1($1),n|truck_2($1))),$0),adv|here_4($0)))
example_end

Sent: oh yeah .
Sem: lambda $0_{r}.co|yeah_2_oh_1($0)
example_end

Sent: that 's a big truck .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|truck_5(pro:dem|that_1,$0),adj|big_4(pro:dem|that_1,$0)))
example_end

Sent: busy bulldozer ?
Sem: BARE($0,Q(and(adj|busy_1($0),n|bulldoze-dv_2($0))))
example_end

Sent: did you show Ursula that ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,pro:dem|that_5,n:prop|ursula_4,$0),$0)
example_end

Sent: do you know what those are ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.cop|be-pres_6(pro:dem|those_5,pro:int|what_4,$1),$0),$0))
example_end

Sent: I guess she might like to see that .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.mod|might_4(v|like_5(pro:sub|she_3,lambda $2_{r}.v|see_7(pro:sub|she_3,pro:dem|that_8,$2),$1),$1),$0)
example_end

Sent: what kind of hat is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|hat_4($2)))))
example_end

Sent: Adam 's hat ?
Sem: BARE($0,Q(n:prop|adam_1's($1,n|hat_3($1),$0)))
example_end

Sent: where have you seen a hat like that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|have_2(and(part|see-pastp_4(pro:per|you_3,det:art|a_5($1,att(n|hat_6($1),prep|like_7(pro:dem|that_8))),$0),$2($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: not the kind you hit but the kind you kick .
Sem: not(det:art|the_7($0,det:art|the_2($1,n|kind_8($1),$0)))
example_end

Sent: not shoe ball .
Sem: and(not(BARE($0,n|shoe_2($0))),BARE($1,n|ball_3($1)))
example_end

Sent: foot ball .
Sem: BARE($0,n|ball_2_foot_1($0))
example_end

Sent: I saw a tank truck .
Sem: lambda $0_{r}.v|see-past_2(pro:sub|i_1,det:art|a_3($1,and_comp(n|tank_4($1),n|truck_5($1))),$0)
example_end

Sent: you change the kitty 's diaper ?
Sem: lambda $0_{r}.Q(v|change_2(pro:per|you_1,n|kitty_4's($1,n|diaper_6($1)),$0))
example_end

Sent: was he dirty ?
Sem: lambda $0_{r}.Q(adj|dirt-dn_3(pro:sub|he_2,$0))
example_end

Sent: okay kitty what ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(BARE($2,n|kitty_2($2)),$0),co|okay_1($0))
example_end

Sent: Adam fall toy .
Sem: lambda $0_{r}.n|fall_2(n:prop|adam_1,BARE($1,n|toy_3($1)),$0)
example_end

Sent: you didn 't fall that time .
Sem: lambda $0_{r}.not(mod|do_2(and(v|fall_4(pro:per|you_1,$0),pro:dem|that_5($1,n|time_6($1),$0)),$0),$0)
example_end

Sent: you just sat down .
Sem: lambda $0_{r}.and(and(v|sit-past_3(pro:per|you_1,$0),adv|just_2($0)),adv|down_4($0))
example_end

Sent: do you want to see this ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|see_5(pro:per|you_2,pro:dem|this_6,$1),$0),$0))
example_end

Sent: here 's a label .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|label_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: do you want to paste it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|paste_5(pro:per|you_2,pro:per|it_6,$1),$0),$0))
example_end

Sent: those are her paper clips .
Sem: lambda $0_{r}.det:poss|her_3(pro:dem|those_1,and_comp(n|paper_4(pro:dem|those_1,$0),n|clip-pl_5(pro:dem|those_1,$0)))
example_end

Sent: may I give you some ?
Sem: lambda $0_{r}.Q(mod|may_1(v|give_3(pro:sub|i_2,qn|some_5,pro:per|you_4,$0),$0))
example_end

Sent: you don 't need a pencil .
Sem: lambda $0_{r}.not(mod|do_2(v|need_4(pro:per|you_1,det:art|a_5($1,n|pencil_6($1)),$0),$0),$0)
example_end

Sent: you had a pencil .
Sem: lambda $0_{r}.v|have-past_2(pro:per|you_1,det:art|a_3($1,n|pencil_4($1)),$0)
example_end

Sent: here 's a pencil .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|pencil_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: maybe he likes ball players .
Sem: lambda $0_{r}.and(v|like-3s_3(pro:sub|he_2,BARE($1,and_comp(n|ball_4($1),n|play-dv_5($1))),$0),adv|maybe_1($0))
example_end

Sent: do you think he would ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|will-cond_5(pro:sub|he_4,$1),$0),$0))
example_end

Sent: did you show him the ball player ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:art|the_5($1,and_comp(n|ball_6($1),n|play-dv_7($1))),pro:obj|him_4,$0),$0)
example_end

Sent: your ball player ?
Sem: BARE($0,Q(det:poss|your_1($1,and_comp(n|ball_2($1),n|play-dv_3($1)),$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: boots yes .
Sem: lambda $0_{r}.and(n|boot-pl_1($0),co|yes_2($0))
example_end

Sent: can you fix your bike ?
Sem: lambda $0_{r}.Q(mod|can_1(v|fix_3(pro:per|you_2,det:poss|your_4($1,n|bike_5($1)),$0),$0))
example_end

Sent: is that part of the two truck ?
Sem: lambda $0_{r}.Q(att(n|part_3(pro:dem|that_2,$0),prep|of_4(det:art|the_5($1,and_comp(det:num|two_6($1),n|truck_7($1))))))
example_end

Sent: are you ready to go night_night ?
Sem: lambda $0_{r}.Q(adj|ready_3(pro:per|you_2,lambda $1_{r}.and(v|go_5(pro:per|you_2,$1),co|night_night_6($1)),$0))
example_end

Sent: what kind of hat is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|hat_4($2)))))
example_end

Sent: you hit your head didn 't you .
Sem: lambda $0_{r}.and(v|hit-zero_2(pro:per|you_1,det:poss|your_3($1,n|head_4($1)),$0),not(mod|do_5(pro:per|you_7,$0),$0))
example_end

Sent: did it hurt ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:per|it_2,$0),$0))
example_end

Sent: poor head .
Sem: BARE($0,and(adj|poor_1($0),n|head_2($0)))
example_end

Sent: don 't pull Mommy .
Sem: lambda $0_{r}.not(mod|do_1(v|pull_3(you,n:prop|mommy_4,$0),$0),$0)
example_end

Sent: put pillow on the floor ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,BARE($1,n|pillow_2($1)),$0),prep|on_3(det:art|the_4($2,n|floor_5($2)),$0)))
example_end

Sent: you want Mommy to sit on the floor ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,BARE($1,rel(n:prop|mommy_3($1),lambda $2_{r}.and(v|sit_5(you,$2),prep|on_6(det:art|the_7($3,n|floor_8($3)),$2)))),$0))
example_end

Sent: what do you want Mommy to do ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|do_7($2,$1),$0),n:prop|mommy_5($0)),$0)
example_end

Sent: do you want Mommy to stand up ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|stand_6(n:prop|mommy_4,$1),adv|up_7($1)),$0),$0))
example_end

Sent: Mommy stand up ?
Sem: lambda $0_{r}.Q(and(v|stand_2(n:prop|mommy_1,$0),adv|up_3($0)))
example_end

Sent: what about the chair ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|chair_4($0))))
example_end

Sent: nice pony ?
Sem: BARE($0,Q(and(adj|nice_1($0),n|pony_2($0))))
example_end

Sent: may please ?
Sem: lambda $0_{r}.Q(and(mod|may_1(you,$0),co|please_2($0)))
example_end

Sent: fix kitty ?
Sem: lambda $0_{r}.Q(v|fix_1(you,BARE($1,n|kitty_2($1)),$0))
example_end

Sent: make mosquito ?
Sem: lambda $0_{r}.Q(v|make_1(you,BARE($1,n|mosquito_2($1)),$0))
example_end

Sent: fine book ?
Sem: BARE($0,Q(and(adj|fine_1($0),n|book_2($0))))
example_end

Sent: don 't take those out .
Sem: lambda $0_{r}.not(mod|do_1(and(v|take_3(you,pro:dem|those_4,$0),adv|out_5($0)),$0),$0)
example_end

Sent: leave them in there .
Sem: lambda $0_{r}.and(v|leave_1(you,pro:obj|them_2,$0),prep|in_3(adv|there_4($0)))
example_end

Sent: because they 're Daddy 's .
Sem: lambda $0_{r}.poss|~s_5(n:prop|daddy_4,pro:sub|they_2,$0)
example_end

Sent: what is in there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|be-3s_2($1,$0),prep|in_3(adv|there_4($0)))
example_end

Sent: get Adam 's bike !
Sem: lambda $0_{r}.v|get_1(you,n:prop|adam_2's($1,n|bike_4($1)),$0)
example_end

Sent: which book ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|book_2($1))
example_end

Sent: see there are no pictures .
Sem: lambda $0_{r}.and(v|see_1(you,$0),cop|be-pres_3(qn|no_4($1,n|picture-pl_5($1)),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: did you read that ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|read-zero_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: you gave it to him .
Sem: lambda $0_{r}.and(v|give-past_2(pro:per|you_1,pro:per|it_3,$0),prep|to_4(pro:obj|him_5,$0))
example_end

Sent: go get it ?
Sem: lambda $0_{r}.Q(v|get_2(you,pro:per|it_3,$0))
example_end

Sent: go get what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|get_2(you,$1,$0)
example_end

Sent: what am I ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|i_3,$0)
example_end

Sent: I help to move rocks .
Sem: lambda $0_{r}.v|help_2(pro:sub|i_1,lambda $1_{r}.n|move_4(pro:sub|i_1,BARE($2,n|rock-pl_5($2)),$1),$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what am I ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|i_3,$0)
example_end

Sent: are you looking at the book ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|look-presp_3(pro:per|you_2,$0),prep|at_4(det:art|the_5($1,n|book_6($1)),$0)),$0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: no that 's a tape recorder .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and_comp(n|tape_5(pro:dem|that_2,$0),n|record-dv_6(pro:dem|that_2,$0))),co|no_1($0))
example_end

Sent: yes tape recorder .
Sem: lambda $0_{r}.and(and_comp(n|tape_2($0),n|record-dv_3($0)),co|yes_1($0))
example_end

Sent: read bunny .
Sem: lambda $0_{r}.v|read-zero_1(you,BARE($1,n|bunny+rabbit_2($1)),$0)
example_end

Sent: can the bunny read ?
Sem: lambda $0_{r}.Q(mod|can_1(v|read-zero_4(det:art|the_2($1,n|bunny+rabbit_3($1)),$0),$0))
example_end

Sent: oh you 're going to read to the bunny .
Sem: lambda $0_{r}.and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.and(v|read-zero_6(pro:per|you_2,$1),prep|to_7(det:art|the_8($2,n|bunny+rabbit_9($2)),$1)),$0),$0),co|oh_1($0))
example_end

Sent: that 's a good idea .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: you can 't write .
Sem: lambda $0_{r}.not(mod|can_2(v|write_4(pro:per|you_1,$0),$0),$0)
example_end

Sent: I 'll get you .
Sem: lambda $0_{r}.mod|~will_2(aux|get_3(pro:sub|i_1,pro:per|you_4,$0),$0)
example_end

Sent: poor Perro he was under the pillow .
Sem: lambda $0_{r}.and(att(n:prop|perro_2,BARE($1,adj|poor_1($1))),and(aux|be-past_4(pro:sub|he_3,$0),prep|under_5(det:art|the_6($2,n|pillow_7($2)),$0)))
example_end

Sent: who 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's little Robin Red Breast .
Sem: lambda $0_{r}.n:prop|breast_6_red_5(pro:dem|that_1,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you leave his pencil in there Adam .
Sem: lambda $0_{r}.and(v|leave_2(pro:per|you_1,det:poss|his_3($1,n|pencil_4($1)),$0),prep|in_5(adv|there_6($0)))
example_end

Sent: look Adam .
Sem: lambda $0_{r}.co|look_1(you,$0)
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: do you know this one ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,pro:dem|this_4($1,pro:indef|one_5($1)),$0),$0))
example_end

Sent: now what are you writing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(and(part|write-presp_5(pro:per|you_4,$1,$0),adv|now_1($0)),$0)
example_end

Sent: who 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: can you spell your name ?
Sem: lambda $0_{r}.Q(mod|can_1(v|spell_3(pro:per|you_2,det:poss|your_4($1,n|name_5($1)),$0),$0))
example_end

Sent: mustn 't write on the book .
Sem: lambda $0_{r}.not(mod|must_1(and(v|write_3(you,$0),prep|on_4(det:art|the_5($1,n|book_6($1)),$0)),$0),$0)
example_end

Sent: pencil and paper alright .
Sem: lambda $0_{r}.and(BARE($1,n|paper_3($1)),adj|alright_4($0))
example_end

Sent: does your writing look like his ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(cop|look_4(det:poss|your_2($1,n:gerund|write-presp_3($1)),$0),conj|like_5(det:poss|his_6,$0)),$0))
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: don 't jump .
Sem: lambda $0_{r}.not(mod|do_1(v|jump_3(you,$0),$0),$0)
example_end

Sent: he can 't write when you jump .
Sem: lambda $0_{r}.not(conj|when_5(v|jump_7(pro:per|you_6,$0),mod|can_2(v|write_4(pro:sub|he_1,$0),$0)),$0)
example_end

Sent: put dirt up ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,BARE($1,n|dirt_2($1)),$0),adv|up_3($0)))
example_end

Sent: are you a busy bulldozer ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_2,and(n|bulldoze-dv_5(pro:per|you_2,$0),adj|busy_4(pro:per|you_2,$0))))
example_end

Sent: are you a busy bulldozer ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_2,and(n|bulldoze-dv_5(pro:per|you_2,$0),adj|busy_4(pro:per|you_2,$0))))
example_end

Sent: why do you like to throw your book ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|like_4(pro:per|you_3,lambda $1_{r}.v|throw_6(pro:per|you_3,det:poss|your_7($2,n|book_8($2)),$1),$0),$3($0)),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh you 're like a bulldozer ?
Sem: lambda $0_{r}.Q(and(prep|like_4(det:art|a_5($1,n|bulldoze-dv_6($1)),pro:per|you_2,$0),co|oh_1($0)))
example_end

Sent: no that 's no funny .
Sem: lambda $0_{r}.and(not(adj|fun-dn_5(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: you had such a funny expression .
Sem: lambda $0_{r}.part|have-pastp_2(pro:per|you_1,qn|such_3(det:art|a_4($1,and(adj|fun-dn_5($1),n|expression_6($1)))),$0)
example_end

Sent: must go where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|must_1(and(v|go_2(you,$0),$1($0)),$0)
example_end

Sent: Catherine too ?
Sem: BARE($0,Q(post|too_2(n:prop|catherine_1,$0)))
example_end

Sent: well Cliffy 's at his house .
Sem: lambda $0_{r}.and(prep|at_4(det:poss|his_5($1,n|house_6($1)),n:prop|cliffy_2,$0),co|well_1($0))
example_end

Sent: I guess Cliffy looks at Bozo at her house .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.and(and(cop|look-3s_4(n:prop|cliffy_3,$1),prep|at_5(n:prop|bozo_6,$1)),prep|at_7(det:poss|her_8($2,n|house_9($2)),$1)),$0)
example_end

Sent: how can you work ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|work_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: how can you work ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|work_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: you don 't have anything else to put in the box do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|have_4(pro:per|you_1,lambda $1_{r}.and(v|put-zero_8(post|else_6(pro:indef|anything_5),$1),prep|in_9(det:art|the_10($2,n|box_11($2)),$1)),$0),$0),$0),v|do_12(pro:per|you_13,$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: this is your bulldozer ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:dem|this_1,n|bulldoze-dv_4(pro:dem|this_1,$0)))
example_end

Sent: oh my Adam bulldozer alright .
Sem: lambda $0_{r}.and(co|alright_5(n:prop|adam_3's($1,n|bulldoze-dv_4($1)),$0),det:poss|my_2_oh_1($0))
example_end

Sent: don 't hit his feet .
Sem: lambda $0_{r}.not(mod|do_1(v|hit-zero_3(you,det:poss|his_4($1,n|foot-pl_5($1)),$0),$0),$0)
example_end

Sent: you like hit ball ?
Sem: lambda $0_{r}.Q(conj|like_2(pro:per|you_1,lambda $1_{r}.v|hit-zero_3(pro:per|you_1,BARE($2,n|ball_4($2)),$1),$0))
example_end

Sent: isn 't that part of your trailer ?
Sem: lambda $0_{r}.Q(not(att(n|part_4(pro:dem|that_3,$0),prep|of_5(det:poss|your_6($1,n|trailer_7($1)))),$0))
example_end

Sent: you go get it .
Sem: lambda $0_{r}.v|get_3(pro:per|you_1,pro:per|it_4,$0)
example_end

Sent: I 'll go get it .
Sem: lambda $0_{r}.mod|~will_2(v|get_4(pro:sub|i_1,pro:per|it_5,$0),$0)
example_end

Sent: how did you get them in there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|get_4(pro:per|you_3,pro:obj|them_5,$0),$1($0)),prep|in_6(adv|there_7($0))),$0)
example_end

Sent: there 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|there_1($0))
example_end

Sent: two green ?
Sem: BARE($0,Q(det:num|two_1(n|green_2($0))))
example_end

Sent: I guess he 's working .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.aux|~be_4(part|work-presp_5(pro:sub|he_3,$1),$1),$0)
example_end

Sent: that 's a man ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,n|man_4(pro:dem|that_1,$0)))
example_end

Sent: what 's his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_3($2,n|name_4($2)),$0)
example_end

Sent: how can he see to deliver mail ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|see_4(pro:sub|he_3,lambda $1_{r}.v|deliver_6(pro:sub|he_3,BARE($2,n|mail_7($2)),$1),$0),$3($0)),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: where is a tomato ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|a_3($1,n|tomato_4($1)),$0),$2($0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: she 's gone home .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-pastp_3(pro:sub|she_1,$0),n|home_4($0)),$0)
example_end

Sent: she went home in July .
Sem: lambda $0_{r}.and(and(v|go-past_2(pro:sub|she_1,$0),adv|home_3($0)),prep|in_4(n:prop|july_5,$0))
example_end

Sent: why don 't you come over here and play with the ball ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(n|play_9(pro:per|you_4,$0),$1($0)),adv|over_6(adv|here_7($0))),prep|with_10(det:art|the_11($2,n|ball_12($2)),$0)),$0),$0)
example_end

Sent: you can get it .
Sem: lambda $0_{r}.mod|can_2(aux|get_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: you go get it .
Sem: lambda $0_{r}.v|get_3(pro:per|you_1,pro:per|it_4,$0)
example_end

Sent: Daddy 's brief case .
Sem: n:prop|daddy_1's($0,n|case_4_brief_3($0))
example_end

Sent: did you get the ball ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|get_3(pro:per|you_2,det:art|the_4($1,n|ball_5($1)),$0),$0))
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: those are Daddy 's books .
Sem: lambda $0_{r}.n:prop|daddy_3's'(pro:dem|those_1,n|book-pl_5(pro:dem|those_1,$0))
example_end

Sent: would you like to have your books on the bookshelf too ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.and(and(v|have_5(pro:per|you_2,det:poss|your_6($2,n|book-pl_7($2)),$1),prep|on_8(det:art|the_9($3,n|book+shelf_10($3)),$1)),post|too_11($1)),$0),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no that 's a church .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|church_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: move your own road grader .
Sem: lambda $0_{r}.v|move_1(you,det:poss|your_2($1,and_comp(n|road_4($1),and(adj|own_3($1),n|grade-dv_5($1)))),$0)
example_end

Sent: go move the road grader .
Sem: lambda $0_{r}.v|move_2(you,det:art|the_3($1,and_comp(n|road_4($1),n|grade-dv_5($1))),$0)
example_end

Sent: you pick the road grader up .
Sem: lambda $0_{r}.and(v|pick_2(pro:per|you_1,det:art|the_3($1,and_comp(n|road_4($1),n|grade-dv_5($1))),$0),adv|up_6($0))
example_end

Sent: the dog doesn 't want any paper does he ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|want_5(det:art|the_1($1,n|dog_2($1)),qn|any_6($2,n|paper_7($2)),$0),$0),$0),mod|do-3s_8(pro:sub|he_9,$0)))
example_end

Sent: here doggie .
Sem: adv|here_1(BARE($0,n|dog-dim_2($0)))
example_end

Sent: that 's not a record .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|record_5(pro:dem|that_1,$0)),$0)
example_end

Sent: ask her what that is .
Sem: lambda $0_{r}.v|ask_1(you,pro:obj|her_2,$0)
example_end

Sent: that 's a tape recorder .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|tape_4(pro:dem|that_1,$0),n|record-dv_5(pro:dem|that_1,$0)))
example_end

Sent: don 't touch .
Sem: lambda $0_{r}.not(mod|do_1(v|touch_3(you,$0),$0),$0)
example_end

Sent: what is it doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-3s_2(part|do-presp_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: record is playing ?
Sem: lambda $0_{r}.Q(aux|be-3s_2(part|play-presp_3(BARE($1,n|record_1($1)),$0),$0))
example_end

Sent: what does it do when it plays ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|when_5(v|play-3s_7(pro:per|it_6,$0),mod|do-3s_2(v|do_4(pro:per|it_3,$1,$0),$0))
example_end

Sent: do you hear a horn playing ?
Sem: lambda $0_{r}.Q(mod|do_1(v|hear_3(pro:per|you_2,lambda $1_{r}.part|play-presp_6(det:art|a_4($2,n|horn_5($2)),$1),$0),$0))
example_end

Sent: I don 't hear a horn .
Sem: lambda $0_{r}.not(mod|do_2(v|hear_4(pro:sub|i_1,det:art|a_5($1,n|horn_6($1)),$0),$0),$0)
example_end

Sent: is there a horn on there ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_1(det:art|a_3($1,n|horn_4($1)),$0),prep|on_5(adv|there_6($0))))
example_end

Sent: did he like the water ?
Sem: lambda $0_{r}.Q(mod|do-past_1(co|like_3(pro:sub|he_2,det:art|the_4($1,n|water_5($1)),$0),$0))
example_end

Sent: what do you see in there ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|see_4(pro:per|you_3,$1,$0),adv|in_5(adv|there_6($0))),$0)
example_end

Sent: where does the ladder go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|go_5(det:art|the_3($1,n|ladder_4($1)),$0),$2($0)),$0)
example_end

Sent: can you put it on ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),adv|on_5($0)),$0))
example_end

Sent: can you put them in there ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:obj|them_4,$0),prep|in_5(adv|there_6($0))),$0))
example_end

Sent: I thought you couldn 't do it .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.not(mod|could_4(v|do_6(pro:per|you_3,pro:per|it_7,$1),$1),$1),$0)
example_end

Sent: that 's no ladder for that .
Sem: lambda $0_{r}.not(att(n|ladder_4(pro:dem|that_1,$0),prep|for_5(pro:dem|that_6)),$0)
example_end

Sent: mine paper .
Sem: n|mine_1($0,n|paper_2($0))
example_end

Sent: alright it 's yours .
Sem: lambda $0_{r}.and(pro:poss|yours_4(pro:per|it_2,$0),co|alright_1($0))
example_end

Sent: he 's going out .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-presp_3(pro:sub|he_1,$0),adv|out_4($0)),$0)
example_end

Sent: would you like some soup ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,qn|some_4($1,n|soup_5($1)),$0),$0))
example_end

Sent: what kind of soup ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|soup_4($2)))))
example_end

Sent: well you told her to sit there .
Sem: lambda $0_{r}.and(v|tell-past_3(pro:per|you_2,lambda $1_{r}.and(v|sit_6(pro:obj|her_4,$1),adv|there_7($1)),$0),co|well_1($0))
example_end

Sent: that 's the stool I use when I wash dishes .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|stool_4(pro:dem|that_1,$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Mommy 's tea ?
Sem: BARE($0,Q(n:prop|mommy_1's($1,n|tea_3($1),$0)))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: did you see the sun ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,det:art|the_4($1,n|sun_5($1)),$0),$0))
example_end

Sent: is that a lady ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|lady_4(pro:rel|that_2,$0)))
example_end

Sent: is it hot ?
Sem: lambda $0_{r}.Q(adj|hot_3(pro:per|it_2,$0))
example_end

Sent: you can 't reach it ?
Sem: lambda $0_{r}.Q(not(mod|can_2(v|reach_4(pro:per|you_1,pro:per|it_5,$0),$0),$0))
example_end

Sent: put water in it ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,BARE($1,n|water_2($1)),$0),prep|in_3(pro:per|it_4,$0)))
example_end

Sent: Adam drive record ?
Sem: lambda $0_{r}.Q(n|drive_2(n:prop|adam_1,BARE($1,n|record_3($1)),$0))
example_end

Sent: where 's your truck going ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.cop|~be_2(and(part|go-presp_5(det:poss|your_3($1,n|truck_4($1)),$0),$2($0)),$0)
example_end

Sent: no there 's your paper .
Sem: lambda $0_{r}.and(and(cop|~be_3(det:poss|your_4($1,n|paper_5($1)),$0),pro:exist|there_2($0)),co|no_1($0))
example_end

Sent: oh doggie write paper ?
Sem: lambda $0_{r}.Q(and(v|write_3(BARE($1,n|dog-dim_2($1)),BARE($2,n|paper_4($2)),$0),co|oh_1($0)))
example_end

Sent: that 's a smart doggie .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|dog-dim_5(pro:dem|that_1,$0),adj|smart_4(pro:dem|that_1,$0)))
example_end

Sent: what did the doggie write ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(v|write_5(det:art|the_3($1,n|dog-dim_4($1)),$2,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's a hole .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|hole_4(pro:dem|that_1,$0))
example_end

Sent: oh climb ?
Sem: lambda $0_{r}.Q(and(v|climb_2(you,$0),co|oh_1($0)))
example_end

Sent: what did he climb ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|climb_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: do you want to write on here ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|write_5(pro:per|you_2,$1),prep|on_6(adv|here_7($1))),$0),$0))
example_end

Sent: Daddy went to school .
Sem: lambda $0_{r}.and(v|go-past_2(n:prop|daddy_1,$0),prep|to_3(BARE($1,n|school_4($1)),$0))
example_end

Sent: those are her feet .
Sem: lambda $0_{r}.det:poss|her_3(pro:dem|those_1,n|foot-pl_4(pro:dem|those_1,$0))
example_end

Sent: how many feet does she have ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_4(v|have_6(pro:sub|she_5,BARE($1,and($2(qn|many_2($1)),n|foot-pl_3($1))),$0),$0)
example_end

Sent: how many feet do you have ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_4(v|have_6(pro:per|you_5,BARE($1,and($2(qn|many_2($1)),n|foot-pl_3($1))),$0),$0)
example_end

Sent: Cromer have ?
Sem: lambda $0_{r}.Q(v|have_2(n:prop|cromer_1,$0))
example_end

Sent: Catherine stay tonight ?
Sem: lambda $0_{r}.Q(and(n|stay_2(n:prop|catherine_1,$0),adv:tem|tonight_3($0)))
example_end

Sent: no Mommy is going to stay tonight .
Sem: lambda $0_{r}.and(aux|be-3s_3(part|go-presp_4(n:prop|mommy_2,lambda $1_{r}.and(cop|stay_6(n:prop|mommy_2,$1),adv:tem|tonight_7($1)),$0),$0),co|no_1($0))
example_end

Sent: yes Adam will stay tonight too .
Sem: lambda $0_{r}.and(mod|will_3(and(and(cop|stay_4(n:prop|adam_2,$0),adv:tem|tonight_5($0)),post|too_6($0)),$0),co|yes_1($0))
example_end

Sent: no Howe won 't stay tonight .
Sem: lambda $0_{r}.and(not(mod|will_3(and(cop|stay_5(n:prop|howe_2,$0),adv:tem|tonight_6($0)),$0),$0),co|no_1($0))
example_end

Sent: no there 's no fire back there .
Sem: lambda $0_{r}.and(and(cop|~be_3(qn|no_4($1,n|fire_5($1)),$0),adv|back_6(adv|there_7($0))),co|no_1($0))
example_end

Sent: you drawing a kitty ?
Sem: lambda $0_{r}.Q(n|drawing_2(pro:per|you_1,det:art|a_3($1,n|kitty_4($1)),$0))
example_end

Sent: what does Daddy say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(n:prop|daddy_3,$1,$0),$0)
example_end

Sent: write circle ?
Sem: lambda $0_{r}.Q(v|write_1(you,BARE($1,n|circle_2($1)),$0))
example_end

Sent: bumble bee ?
Sem: BARE($0,Q(n|bee_2_bumble_1($0)))
example_end

Sent: where is he ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:sub|he_3,$0),$1($0))
example_end

Sent: why don 't you write that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|write_5(pro:per|you_4,pro:dem|that_6,$0),$1($0)),$0),$0)
example_end

Sent: is that the bumble bee ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,n|bee_5_bumble_4(pro:rel|that_2,$0)))
example_end

Sent: do you want to read a book ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|read-zero_5(pro:per|you_2,det:art|a_6($2,n|book_7($2)),$1),$0),$0))
example_end

Sent: Donald_Duck go ?
Sem: lambda $0_{r}.Q(v|go_2(n:prop|donald_duck_1,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: did you look in your basket ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(cop|look_3(pro:per|you_2,$0),prep|in_4(det:poss|your_5($1,n|basket_6($1)),$0)),$0))
example_end

Sent: can you go with your bike ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|go_3(pro:per|you_2,$0),prep|with_4(det:poss|your_5($1,n|bike_6($1)),$0)),$0))
example_end

Sent: look a trailer ?
Sem: lambda $0_{r}.Q(and(cop|look_1(you,$0),det:art|a_2($1,n|trailer_3($1))))
example_end

Sent: what are you going to pull ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|pull_6($2,$1),$0),$0)
example_end

Sent: pull Adam 's bike ?
Sem: lambda $0_{r}.Q(v|pull_1(you,n:prop|adam_2's($1,n|bike_4($1)),$0))
example_end

Sent: no don 't take his head off .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|take_4(you,det:poss|his_5($1,n|head_6($1)),$0),adv|off_7($0)),$0),$0),co|no_1($0))
example_end

Sent: leave him on there so he can drive it .
Sem: lambda $0_{r}.conj|so_5(mod|can_7(v|drive_8(pro:sub|he_6,pro:per|it_9,$0),$0),and(v|leave_1(you,pro:obj|him_2,$0),prep|on_3(adv|there_4($0))))
example_end

Sent: yes his head is off .
Sem: det:poss|his_2($0,n|head_3($0))
example_end

Sent: do you have a comb ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|comb_5($1)),$0),$0))
example_end

Sent: is that a piggie ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|pig-dim_4(pro:rel|that_2,$0)))
example_end

Sent: I can 't see .
Sem: lambda $0_{r}.not(mod|can_2(v|see_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: no I can 't see .
Sem: lambda $0_{r}.and(not(mod|can_3(v|see_5(pro:sub|i_2,$0),$0),$0),co|no_1($0))
example_end

Sent: where 's a ladder ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|ladder_4($1)),$0),$2($0))
example_end

Sent: that 's the tattooed man .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,and(n|man_5(pro:dem|that_1,$0),part|tattoo-pastp_4(pro:dem|that_1,$0)))
example_end

Sent: tattooed man .
Sem: BARE($0,and(part|tattoo-pastp_1($0),n|man_2($0)))
example_end

Sent: tattooed man .
Sem: BARE($0,and(part|tattoo-pastp_1($0),n|man_2($0)))
example_end

Sent: may I sit beside you ?
Sem: lambda $0_{r}.Q(mod|may_1(and(v|sit_3(pro:sub|i_2,$0),prep|beside_4(pro:per|you_5,$0)),$0))
example_end

Sent: that 's a couple we know .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|couple_4(pro:dem|that_1,$0))
example_end

Sent: apple mouth ?
Sem: lambda $0_{r}.Q(n|mouth_2(BARE($1,n|apple_1($1)),$0))
example_end

Sent: you had an apple when you got up from your nap .
Sem: lambda $0_{r}.conj|when_5(and(v|get-past_7_up_8(pro:per|you_6,$0),prep|from_9(det:poss|your_10($1,n|nap_11($1)),$0)),v|have-past_2(pro:per|you_1,det:art|a_3($2,n|apple_4($2)),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam want to close the box ?
Sem: lambda $0_{r}.Q(v|want_2(n:prop|adam_1,lambda $1_{r}.v|close_4(n:prop|adam_1,det:art|the_5($2,n|box_6($2)),$1),$0))
example_end

Sent: do you want paper ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,BARE($1,n|paper_4($1)),$0),$0))
example_end

Sent: whose brief case is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_5,and_comp(adj|brief_2(pro:dem|that_5,$0),n|case_3(pro:dem|that_5,$0)))
example_end

Sent: is that part of the game ?
Sem: lambda $0_{r}.Q(att(n|part_3(pro:dem|that_2,$0),prep|of_4(det:art|the_5($1,n|game_6($1)))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh pin game .
Sem: lambda $0_{r}.and(and_comp(n|pin_2($0),n|game_3($0)),co|oh_1($0))
example_end

Sent: John who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|john_1,$0)
example_end

Sent: Adam you don 't tell him what to write .
Sem: lambda $2_{e}.lambda $0_{r}.and(not(mod|do_3(v|tell_5(pro:per|you_2,lambda $1_{r}.v|write_9(pro:obj|him_6,$2,$1),$0),$0),$0),n:prop|adam_1)
example_end

Sent: Daddy 's all_gone .
Sem: lambda $0_{r}.adj|all_gone_3(n:prop|daddy_1_~s_2,$0)
example_end

Sent: what 's his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_3($2,n|name_4($2)),$0)
example_end

Sent: don 't sit on that .
Sem: lambda $0_{r}.not(mod|do_1(and(v|sit_3(you,$0),prep|on_4(pro:dem|that_5,$0)),$0),$0)
example_end

Sent: here 's your shoe .
Sem: lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|shoe_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: no John Buzzhart .
Sem: lambda $0_{r}.and(n:prop|buzzhart_3_john_2($0),co|no_1($0))
example_end

Sent: what kind of game ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|game_4($2)))))
example_end

Sent: which one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,pro:indef|one_2($1))
example_end

Sent: oh shave a pig .
Sem: lambda $0_{r}.and(v|shave_2(you,det:art|a_3($1,n|pig_4($1)),$0),co|oh_1($0))
example_end

Sent: that one ?
Sem: BARE($0,Q(pro:dem|that_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: you haven 't seen Bozo in a long time have you ?
Sem: lambda $0_{r}.Q(and(not(aux|have_2(and(part|see-pastp_4(pro:per|you_1,n:prop|bozo_5,$0),prep|in_6(det:art|a_7($1,and(adj|long_8($1),n|time_9($1))),$0)),$0),$0),v|have_10(pro:per|you_11,$0)))
example_end

Sent: are you sitting with me ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|sit-presp_3(pro:per|you_2,$0),prep|with_4(pro:obj|me_5,$0)),$0))
example_end

Sent: oh you found bunny .
Sem: lambda $0_{r}.and(v|found_3(pro:per|you_2,BARE($1,n|bunny+rabbit_4($1)),$0),co|oh_1($0))
example_end

Sent: that 's David 's Bunny_Rabbit .
Sem: lambda $0_{r}.n:prop|david_3's'(pro:dem|that_1,n:prop|bunny_rabbit_5(pro:dem|that_1,$0))
example_end

Sent: yes I remember David .
Sem: lambda $0_{r}.and(v|remember_3(pro:sub|i_2,n:prop|david_4,$0),co|yes_1($0))
example_end

Sent: do you remember David ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,n:prop|david_4,$0),$0))
example_end

Sent: no not her shoe .
Sem: lambda $0_{r}.and(not(det:poss|her_3($1,n|shoe_4($1)),$0),co|no_1($0))
example_end

Sent: write on the paper .
Sem: lambda $0_{r}.and(v|write_1(you,$0),prep|on_2(det:art|the_3($1,n|paper_4($1)),$0))
example_end

Sent: write on his shoe ?
Sem: lambda $0_{r}.Q(and(v|write_1(you,$0),prep|on_2(det:poss|his_3($1,n|shoe_4($1)),$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: like Adam 's horsie .
Sem: prep|like_1(n:prop|adam_2's($0,n|horse-dim_4($0)))
example_end

Sent: yes there 's a horse there .
Sem: lambda $0_{r}.and(and(cop|~be_3(det:art|a_4($1,n|horse_5($1)),$0),adv|there_6($0)),co|yes_1($0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: he can 't copy me .
Sem: lambda $0_{r}.not(mod|can_2(v|copy_4(pro:sub|he_1,pro:obj|me_5,$0),$0),$0)
example_end

Sent: I don 't care .
Sem: lambda $0_{r}.not(mod|do_2(v|care_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh you 're going to give the kitty a ride in your wagon ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|give_6(pro:per|you_2,det:art|a_9($2,att(n|ride_10($2),prep|in_11(det:poss|your_12($3,n|wagon_13($3))))),det:art|the_7($4,n|kitty_8($4)),$1),$0),$0),co|oh_1($0)))
example_end

Sent: do you have a bite ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|bite_5($1)),$0),$0))
example_end

Sent: can you tell Mr Cromer about Humpty_Dumpty ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|tell_3(pro:per|you_2,n:prop|cromer_5_mr_4,$0),prep|about_6(n:prop|humpty_dumpty_7,$0)),$0))
example_end

Sent: oh he wants to shake hands .
Sem: lambda $0_{r}.and(v|want-3s_3(pro:sub|he_2,lambda $1_{r}.n|shake_5(pro:sub|he_2,BARE($2,n|hand-pl_6($2)),$1),$0),co|oh_1($0))
example_end

Sent: kitty 's fine ?
Sem: lambda $0_{r}.Q(adv|fine_3(BARE($1,n|kitty_1($1)),$0))
example_end

Sent: is that a light ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|light_4(pro:rel|that_2,$0)))
example_end

Sent: is that Adam 's shoe ?
Sem: lambda $0_{r}.Q(n:prop|adam_3's'(pro:dem|that_2,n|shoe_5(pro:dem|that_2,$0)))
example_end

Sent: can you play it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|play_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: you like to walk ?
Sem: lambda $0_{r}.Q(v|like_2(pro:per|you_1,lambda $1_{r}.v|walk_4(pro:per|you_1,$1),$0))
example_end

Sent: Mommy can 't march .
Sem: lambda $0_{r}.not(mod|can_2(v|march_4(n:prop|mommy_1,$0),$0),$0)
example_end

Sent: no Mommy can 't march .
Sem: lambda $0_{r}.and(not(mod|can_3(v|march_5(n:prop|mommy_2,$0),$0),$0),co|no_1($0))
example_end

Sent: maybe Catherine can march .
Sem: lambda $0_{r}.mod|can_3(and(v|march_4(n:prop|catherine_2,$0),adv|maybe_1($0)),$0)
example_end

Sent: no you march .
Sem: lambda $0_{r}.and(v|march_3(pro:per|you_2,$0),co|no_1($0))
example_end

Sent: where is Catherine ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(n:prop|catherine_3,$0),$1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no you write on paper with pencil .
Sem: lambda $0_{r}.and(and(and(v|write_3(pro:per|you_2,$0),prep|on_4(BARE($1,n|paper_5($1)),$0)),prep|with_6(BARE($2,n|pencil_7($2)),$0)),co|no_1($0))
example_end

Sent: you want to put that on the floor ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|put-zero_4(pro:per|you_1,pro:dem|that_5,$1),prep|on_6(det:art|the_7($2,n|floor_8($2)),$1)),$0))
example_end

Sent: good morning .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: I didn 't bring my books today .
Sem: lambda $0_{r}.not(mod|do_2(and(v|bring_4(pro:sub|i_1,det:poss|my_5($1,n|book-pl_6($1)),$0),adv:tem|today_7($0)),$0),$0)
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's a new word .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|word_5(pro:dem|that_1,$0),adj|new_4(pro:dem|that_1,$0)))
example_end

Sent: we can 't figure it out .
Sem: lambda $0_{r}.not(mod|can_2(and(v|figure_4(pro:sub|we_1,pro:per|it_5,$0),adv|out_6($0)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: fight him .
Sem: lambda $0_{r}.v|fight_1(you,pro:obj|him_2,$0)
example_end

Sent: I think that 's a stick Adam .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:dem|that_3,n|stick_6(pro:dem|that_3,$1)),$0)
example_end

Sent: what does he have ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(v|have_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: is it a sword ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|sword_4(pro:per|it_2,$0)))
example_end

Sent: or a cane ?
Sem: BARE($0,Q(det:art|a_2($1,n|cane_3($1),$0)))
example_end

Sent: fishing rod ?
Sem: BARE($0,Q(and_comp(part|fish-presp_1($0),n|rod_2($0))))
example_end

Sent: why don 't you talk ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|talk_5(pro:per|you_4,$0),$1($0)),$0),$0)
example_end

Sent: okay no more sugar Adam .
Sem: lambda $0_{r}.and(not(BARE($1,and(qn|more_3($1),n|sugar_4($1))),$0),co|okay_1($0))
example_end

Sent: you don 't need milk .
Sem: lambda $0_{r}.not(mod|do_2(v|need_4(pro:per|you_1,BARE($1,n|milk_5($1)),$0),$0),$0)
example_end

Sent: what do you have Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: are you going to put it on the table ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_5(pro:per|you_2,pro:per|it_6,$1),prep|on_7(det:art|the_8($2,n|table_9($2)),$1)),$0),$0))
example_end

Sent: do you want to take the napkins for me ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|take_5(pro:per|you_2,det:art|the_6($2,n|napkin-pl_7($2)),$1),prep|for_8(pro:obj|me_9,$1)),$0),$0))
example_end

Sent: no more sugar for you Adam .
Sem: qn|no_1($0,att(and(qn|more_2($0),n|sugar_3($0)),prep|for_4(pro:per|you_5)))
example_end

Sent: I thought I heard something on the tape .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.and(v|hear-past_4(pro:sub|i_3,BARE($2,pro:indef|something_5($2)),$1),prep|on_6(det:art|the_7($3,n|tape_8($3)),$1)),$0)
example_end

Sent: I don 't think I 've heard that before .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.aux|~have_6(and(part|hear-pastp_7(pro:sub|i_5,pro:rel|that_8,$1),adv|before_9($1)),$1),$0),$0),$0)
example_end

Sent: the man on the radio .
Sem: det:art|the_1($0,att(n|man_2($0),prep|on_3(det:art|the_4($1,n|radio_5($1)))))
example_end

Sent: you want some more espresso ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,qn|some_3($1,and(qn|more_4($1),n|espresso_5($1))),$0))
example_end

Sent: some espresso .
Sem: qn|some_1($0,n|espresso_2($0))
example_end

Sent: no sugar .
Sem: qn|no_1($0,n|sugar_2($0))
example_end

Sent: just take the spoon out if you want it .
Sem: lambda $0_{r}.conj|if_6(v|want_8(pro:per|you_7,pro:per|it_9,$0),and(and(v|take_2(you,det:art|the_3($1,v|spoon_4($1)),$0),adv|just_1($0)),adv|out_5($0)))
example_end

Sent: no you 've already put sugar in your espresso .
Sem: lambda $0_{r}.and(aux|~have_3(and(and(v|put-zero_5(pro:per|you_2,BARE($1,n|sugar_6($1)),$0),adv|already_4($0)),prep|in_7(det:poss|your_8($2,n|espresso_9($2)),$0)),$0),co|no_1($0))
example_end

Sent: put them on the chair .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:obj|them_2,$0),prep|on_3(det:art|the_4($1,n|chair_5($1)),$0))
example_end

Sent: you simply don 't want to put them in the chair ?
Sem: lambda $0_{r}.Q(not(mod|do_3(and(v|want_5(pro:per|you_1,lambda $1_{r}.and(v|put-zero_7(pro:per|you_1,pro:obj|them_8,$1),prep|in_9(det:art|the_10($2,n|chair_11($2)),$1)),$0),adv|simple-dadj_2($0)),$0),$0))
example_end

Sent: you 're going around ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|go-presp_3(pro:per|you_1,$0),adv|around_4($0)),$0))
example_end

Sent: the tape recorder .
Sem: det:art|the_1($0,and_comp(n|tape_2($0),n|record-dv_3($0)))
example_end

Sent: no Adam you can 't turn his head .
Sem: lambda $0_{r}.and(not(mod|can_4(v|turn_6(pro:per|you_3,det:poss|his_7($1,n|head_8($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: that 's a nice big brother .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(and(n|brother_6(pro:dem|that_1,$0),adj|nice_4(pro:dem|that_1,$0)),adj|big_5(pro:dem|that_1,$0)))
example_end

Sent: baby 's not talking to you ?
Sem: lambda $0_{r}.Q(not(aux|~be_2(and(part|talk-presp_4(BARE($1,n|baby_1($1)),$0),prep|to_5(pro:per|you_6,$0)),$0),$0))
example_end

Sent: bring it over Adam .
Sem: lambda $0_{r}.and(v|bring_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: it works ?
Sem: lambda $0_{r}.Q(v|work-3s_2(pro:per|it_1,$0))
example_end

Sent: like this .
Sem: prep|like_1(pro:dem|this_2)
example_end

Sent: you try .
Sem: lambda $0_{r}.v|try_2(pro:per|you_1,$0)
example_end

Sent: you 're waving ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|wave-presp_3(pro:per|you_1,$0),$0))
example_end

Sent: where is that wheel ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:dem|that_3($1,n|wheel_4($1)),$0),$2($0))
example_end

Sent: come with you ?
Sem: lambda $0_{r}.Q(and(v|come_1(you,$0),prep|with_2(pro:per|you_3,$0)))
example_end

Sent: I thought I 'd sit out here so if Paul cries it won 't make so much noise on the microphone .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.adv|so_8(not(mod|will_13(conj|if_9(v|cry-3s_11(n:prop|paul_10,$1),v|make_15(pro:per|it_12,adv|so_16(qn|much_17($2,att(n|noise_18($2),prep|on_19(det:art|the_20($3,n|microphone_21($3)))))),$1)),$1),$1),mod|~genmod_4(and(v|sit_5(pro:sub|i_3,$1),adv|out_6(adv|here_7($1))),$1)),$0)
example_end

Sent: is that a garage ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|garage_4(pro:rel|that_2,$0)))
example_end

Sent: can the car go down the ramp ?
Sem: lambda $0_{r}.Q(n|can_1(and(v|go_4(det:art|the_2($1,n|car_3($1)),$0),adv|down_5(det:art|the_6($2,n|ramp_7($2)),$0)),$0))
example_end

Sent: can it go down ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|go_3(pro:per|it_2,$0),adv|down_4($0)),$0))
example_end

Sent: the sun !
Sem: det:art|the_1($0,n|sun_2($0))
example_end

Sent: the sun isn 't shining in that window .
Sem: lambda $0_{r}.not(cop|be_3(and(part|shine-presp_5(det:art|the_1($1,n|sun_2($1)),$0),prep|in_6(pro:dem|that_7($2,n|window_8($2)),$0)),$0),$0)
example_end

Sent: it 's on the other side of the house .
Sem: lambda $0_{r}.and(cop|~be_2(pro:per|it_1,$0),adv|on_3(det:art|the_4($1,att(and(qn|other_5($1),n|side_6($1)),prep|of_7(det:art|the_8($2,n|house_9($2))))),$0))
example_end

Sent: you be what Adam ?
Sem: lambda $0_{r}.Q(pro:int|what_3(pro:per|you_1,$0))
example_end

Sent: do you like it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: no thank_you Adam .
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: no she doesn 't want any more .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|she_2,BARE($1,pro:indef|more_7($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: did you try it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|try_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: you like yours better .
Sem: lambda $0_{r}.v|like_2(pro:per|you_1,lambda $1_{r}.adj|good-cp_4(pro:poss|yours_3,$1),$0)
example_end

Sent: I 'm broken !
Sem: lambda $0_{r}.part|break-pastp_3(pro:sub|i_1,$0)
example_end

Sent: I 'm not hurt .
Sem: lambda $0_{r}.not(v|hurt-zero_4(pro:sub|i_1,$0),$0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: I 've finished mine .
Sem: lambda $0_{r}.aux|~have_2(part|finish-pastp_3(pro:sub|i_1,pro:poss|mine_4,$0),$0)
example_end

Sent: it 's very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:per|it_1,$0))
example_end

Sent: is yours good ?
Sem: lambda $0_{r}.Q(adj|good_3(pro:poss|yours_2,$0))
example_end

Sent: I 'm all finished .
Sem: lambda $0_{r}.adv|all_3(part|finish-pastp_4(pro:sub|i_1,$0))
example_end

Sent: let me see the toy .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|see_3(pro:obj|me_2,det:art|the_4($2,n|toy_5($2)),$1),$0)
example_end

Sent: can you make it go ?
Sem: lambda $0_{r}.Q(mod|can_1(v|make_3(pro:per|you_2,lambda $1_{r}.v|go_5(pro:per|it_4,$1),$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: ask Urs what she calls it .
Sem: lambda $1_{e}.lambda $0_{r}.v|ask_1(you,$1,n:prop|ursula_2,$0)
example_end

Sent: I don 't know the name for it .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,det:art|the_5($1,att(n|name_6($1),prep|for_7(pro:per|it_8))),$0),$0),$0)
example_end

Sent: don 't put your fingers on it .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,det:poss|your_4($1,n|finger-pl_5($1)),$0),prep|on_6(pro:per|it_7,$0)),$0),$0)
example_end

Sent: you might hurt your fingers .
Sem: lambda $0_{r}.mod|might_2(v|hurt-zero_3(pro:per|you_1,det:poss|your_4($1,n|finger-pl_5($1)),$0),$0)
example_end

Sent: no you do it with this .
Sem: lambda $0_{r}.and(and(v|do_3(pro:per|you_2,pro:per|it_4,$0),prep|with_5(pro:dem|this_6,$0)),co|no_1($0))
example_end

Sent: oh your telephone .
Sem: lambda $0_{r}.and(det:poss|your_2($1,n|telephone_3($1),$0),co|oh_1($0))
example_end

Sent: you going to talk on the telephone ?
Sem: lambda $0_{r}.Q(part|go-presp_2(pro:per|you_1,lambda $1_{r}.and(v|talk_4(pro:per|you_1,$1),prep|on_5(det:art|the_6($2,n|telephone_7($2)),$1)),$0))
example_end

Sent: Paul Douglas ?
Sem: BARE($0,Q(n:prop|douglas_2_paul_1($0)))
example_end

Sent: what about him ?
Sem: att(pro:int|what_1,prep|about_2(pro:obj|him_3))
example_end

Sent: he 's a baby ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:sub|he_1,n|baby_4(pro:sub|he_1,$0)))
example_end

Sent: yes he is a little baby .
Sem: lambda $0_{r}.and(det:art|a_4(pro:sub|he_2,and(n|baby_6(pro:sub|he_2,$0),adj|little_5(pro:sub|he_2,$0))),co|yes_1($0))
example_end

Sent: Paul Douglas ?
Sem: BARE($0,Q(n:prop|douglas_2_paul_1($0)))
example_end

Sent: no Adam you just shoot .
Sem: lambda $0_{r}.and(and(co|shoot_5(pro:per|you_3,$0),adv|just_4($0)),co|no_1($0))
example_end

Sent: you don 't hit anybody with it .
Sem: lambda $0_{r}.not(mod|do_2(and(v|hit-zero_4(pro:per|you_1,BARE($1,pro:indef|anybody_5($1)),$0),prep|with_6(pro:per|it_7,$0)),$0),$0)
example_end

Sent: Adam do you want to see something else ?
Sem: lambda $0_{r}.Q(v|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.v|see_6(pro:per|you_3,post|else_8(BARE($2,pro:indef|something_7($2))),$1),$0),$0))
example_end

Sent: look at this .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|at_2(pro:dem|this_3,$0))
example_end

Sent: you 're not big enough !
Sem: lambda $0_{r}.not(adv|enough_5(adj|big_4(pro:per|you_1,$0)),$0)
example_end

Sent: there 's one wheel you 're right .
Sem: lambda $0_{r}.and(and(aux|~be_2(BARE($1,det:num|one_3(n|wheel_4($1))),$0),pro:exist|there_1($0)),n|right_7(pro:per|you_5,$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: you can 't wear it tomorrow ?
Sem: lambda $0_{r}.Q(not(mod|can_2(and(v|wear_4(pro:per|you_1,pro:per|it_5,$0),adv:tem|tomorrow_6($0)),$0),$0))
example_end

Sent: simply wear it ?
Sem: lambda $0_{r}.Q(and(v|wear_2(you,pro:per|it_3,$0),adv|simple-dadj_1($0)))
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: you don 't drink cold coffee until summer time .
Sem: lambda $0_{r}.not(mod|do_2(and(v|drink_4(pro:per|you_1,BARE($1,and(adj|cold_5($1),n|coffee_6($1))),$0),prep|until_7(BARE($2,and_comp(n|summer_8($2),n|time_9($2))),$0)),$0),$0)
example_end

Sent: throw it away now ?
Sem: lambda $0_{r}.Q(and(and(v|throw_1(you,pro:per|it_2,$0),adv|away_3($0)),adv|now_4($0)))
example_end

Sent: put the coffee cups back .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,and_comp(n|coffee_3($1),v|cup-3s_4($1))),$0),adv|back_5($0))
example_end

Sent: I 'll hold them here .
Sem: lambda $0_{r}.mod|~will_2(and(v|hold_3(pro:sub|i_1,pro:obj|them_4,$0),adv|here_5($0)),$0)
example_end

Sent: wait don 't you unscrew it first ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|screw_5(pro:per|you_4,pro:per|it_6,$0),adv|first_7($0)),$0),$0),co|wait_1(you,$0)))
example_end

Sent: no not that one .
Sem: lambda $0_{r}.and(not(pro:rel|that_3($1,pro:indef|one_4($1)),$0),co|no_1($0))
example_end

Sent: the green one .
Sem: det:art|the_1($0,and_comp(n|green_2($0),pro:indef|one_3($0)))
example_end

Sent: no not that one .
Sem: lambda $0_{r}.and(not(pro:rel|that_3($1,pro:indef|one_4($1)),$0),co|no_1($0))
example_end

Sent: the green one .
Sem: det:art|the_1($0,and_comp(n|green_2($0),pro:indef|one_3($0)))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: the other one .
Sem: det:art|the_1($0,att(pro:indef|one_3,BARE($1,qn|other_2($1)),$0))
example_end

Sent: the green one .
Sem: det:art|the_1($0,and_comp(n|green_2($0),pro:indef|one_3($0)))
example_end

Sent: that 's pink .
Sem: lambda $0_{r}.adj|pink_3(pro:dem|that_1,$0)
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: I wouldn 't put it on with blocks in it .
Sem: lambda $0_{r}.not(mod|will_2(and(and(v|put-zero_4(pro:sub|i_1,pro:per|it_5,$0),adv|on_6($0)),prep|with_7(BARE($1,att(n|block-pl_8($1),prep|in_9(pro:per|it_10))),$0)),$0),$0)
example_end

Sent: don 't want what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_1(v|want_3(you,$1,$0),$0),$0)
example_end

Sent: you simply don 't want what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_3(and(v|want_5(pro:per|you_1,$1,$0),adv|simple-dadj_2($0)),$0),$0)
example_end

Sent: want beans in there ?
Sem: lambda $0_{r}.Q(and(v|want_1(you,BARE($1,n|bean-pl_2($1)),$0),prep|in_3(adv|there_4($0))))
example_end

Sent: how d you know there are beans in there ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.v|do_2(and(v|know_4(pro:per|you_3,lambda $1_{r}.and(cop|be-pres_6(BARE($2,n|bean-pl_7($2)),$1),prep|in_8(adv|there_9($1))),$0),$3($0)),$0)
example_end

Sent: no they don 't come out .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|come_5(pro:sub|they_2,$0),adv|out_6($0)),$0),$0),co|no_1($0))
example_end

Sent: you can 't wear it ?
Sem: lambda $0_{r}.Q(not(mod|can_2(v|wear_4(pro:per|you_1,pro:per|it_5,$0),$0),$0))
example_end

Sent: you heard something ?
Sem: lambda $0_{r}.Q(v|hear-past_2(pro:per|you_1,BARE($1,pro:indef|something_3($1)),$0))
example_end

Sent: what do you see out the window ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|see_4(pro:per|you_3,$1,$0),prep|out_5(det:art|the_6($2,n|window_7($2)),$0)),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I had plenty .
Sem: lambda $0_{r}.and(v|have-past_2(pro:sub|i_1,$0),n|plenty_3($0))
example_end

Sent: I 've had enough .
Sem: lambda $0_{r}.aux|~have_2(and(part|have-pastp_3(pro:sub|i_1,$0),adv|enough_4($0)),$0)
example_end

Sent: a little one .
Sem: det:art|a_1($0,att(pro:indef|one_3,BARE($1,adj|little_2($1)),$0))
example_end

Sent: it 's all_gone .
Sem: lambda $0_{r}.adj|all_gone_3(pro:per|it_1,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what about the tow truck ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,and_comp(n|tow_4($0),n|truck_5($0)))))
example_end

Sent: maybe somebody had to stop suddenly .
Sem: lambda $0_{r}.and(v|have-past_3(pro:indef|somebody_2,lambda $1_{r}.and(n|stop_5(pro:indef|somebody_2,$1),adv|sudden-dadj_6($1)),$0),adv|maybe_1($0))
example_end

Sent: where did what go ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.v|do-past_2(and(v|go_4($1,$0),$2($0)),$0)
example_end

Sent: did you find it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: no you had juice in your espresso .
Sem: lambda $0_{r}.and(and(v|have-past_3(pro:per|you_2,BARE($1,n|juice_4($1)),$0),prep|in_5(det:poss|your_6($2,n|espresso_7($2)),$0)),co|no_1($0))
example_end

Sent: you 're making trains ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|make-presp_3(pro:per|you_1,BARE($1,n|train-pl_4($1)),$0),$0))
example_end

Sent: I 'm not going any place .
Sem: lambda $0_{r}.not(cop|~be_2(part|go-presp_4(pro:sub|i_1,qn|any_5($1,n|place_6($1)),$0),$0),$0)
example_end

Sent: oh you 're going to do that puzzle ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|do_6(pro:per|you_2,pro:dem|that_7($2,n|puzzle_8($2)),$1),$0),$0),co|oh_1($0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: nobody wants to touch it .
Sem: lambda $0_{r}.v|want-3s_2(BARE($1,pro:indef|nobody_1($1)),lambda $2_{r}.v|touch_4(BARE($3,pro:indef|nobody_1($3)),pro:per|it_5,$2),$0)
example_end

Sent: did you say excuse me please ?
Sem: lambda $0_{r}.Q(and(v|do-past_1(v|say_3(pro:per|you_2,lambda $1_{r}.v|excuse_4(_,pro:obj|me_5,$1),$0),$0),co|please_6($0)))
example_end

Sent: what 's the cow 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|cow_4's($2,n|name_6($2)),$0)
example_end

Sent: oh the cow 's name is Adam .
Sem: lambda $0_{r}.and(n:prop|adam_7(n|cow_3's($1,n|name_5($1)),$0),co|oh_1($0))
example_end

Sent: you 're not funny ?
Sem: lambda $0_{r}.Q(not(adj|fun-dn_4(pro:per|you_1,$0),$0))
example_end

Sent: those are carrots .
Sem: lambda $0_{r}.n|carrot-pl_3(pro:dem|those_1,$0)
example_end

Sent: it goes there .
Sem: lambda $0_{r}.and(v|go-3s_2(pro:per|it_1,$0),adv|there_3($0))
example_end

Sent: that 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: that 's cats ?
Sem: lambda $0_{r}.Q(n|cat-pl_3(pro:dem|that_1,$0))
example_end

Sent: it 's on the floor .
Sem: lambda $0_{r}.adv|on_3(det:art|the_4($1,n|floor_5($1)),pro:per|it_1,$0)
example_end

Sent: Adam look up on the ceiling .
Sem: lambda $0_{r}.and(and(co|look_2(you,$0),adv|up_3($0)),prep|on_4(det:art|the_5($1,n|ceiling_6($1)),$0))
example_end

Sent: I see something up on the ceiling .
Sem: lambda $0_{r}.and(v|see_2(pro:sub|i_1,BARE($1,pro:indef|something_3($1)),$0),adv|up_4(prep|on_5(det:art|the_6($2,n|ceiling_7($2)),$0)))
example_end

Sent: what do you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you like tree ?
Sem: lambda $0_{r}.Q(v|like_2(pro:per|you_1,BARE($1,n|tree_3($1)),$0))
example_end

Sent: I don 't have paper ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|have_4(pro:sub|i_1,BARE($1,n|paper_5($1)),$0),$0),$0))
example_end

Sent: I dropped it .
Sem: lambda $0_{r}.v|drop-past_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: where is that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:dem|that_3,$0),$1($0))
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it sounded like busy .
Sem: lambda $0_{r}.and(v|sound-past_2(pro:per|it_1,$0),co|like_3(BARE($1,adj|busy_4($1)),$0))
example_end

Sent: why are you doing that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: it 'll be ready soon .
Sem: lambda $0_{r}.mod|~will_2(adj|soon_5(adj|ready_4(pro:per|it_1,$0)),$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: what am I doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-1s_2(part|do-presp_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: I 'm folding diapers .
Sem: lambda $0_{r}.aux|~be_2(part|fold-presp_3(pro:sub|i_1,BARE($1,n|diaper-pl_4($1)),$0),$0)
example_end

Sent: a diaper .
Sem: det:art|a_1($0,n|diaper_2($0))
example_end

Sent: I hear you .
Sem: lambda $0_{r}.v|hear_2(pro:sub|i_1,pro:per|you_3,$0)
example_end

Sent: d you wan to draw something ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|draw_5(pro:per|you_2,pro:indef|something_6,$1),$0),$0))
example_end

Sent: I 'm looking for a pencil .
Sem: lambda $0_{r}.aux|~be_2(and(part|look-presp_3(pro:sub|i_1,$0),prep|for_4(det:art|a_5($1,n|pencil_6($1)),$0)),$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what you doing Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.part|do-presp_3(pro:per|you_2,$1,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you simply want that ?
Sem: lambda $0_{r}.Q(and(v|want_3(pro:per|you_1,pro:dem|that_4,$0),adv|simple-dadj_2($0)))
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: here are some more .
Sem: lambda $0_{r}.and(cop|be-pres_2(BARE($1,pro:indef|more_4($1)),$0),adv|here_1($0))
example_end

Sent: who 's over in the meadow ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|~be_2($1,$0),adv|over_3(prep|in_4(det:art|the_5($2,n|meadow_6($2)),$0)))
example_end

Sent: what happened to her ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:obj|her_4,$0))
example_end

Sent: what do you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what d you get from the cow ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|get_4(pro:per|you_3,$1,$0),prep|from_5(det:art|the_6($2,n|cow_7($2)),$0)),$0)
example_end

Sent: oh I thought it was milk .
Sem: lambda $0_{r}.and(v|think-past_3(pro:sub|i_2,lambda $1_{r}.n|milk_6(pro:per|it_4,$1),$0),co|oh_1($0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: a pony .
Sem: det:art|a_1($0,n|pony_2($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what are these ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|these_3,$0)
example_end

Sent: do you have some chalk ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,qn|some_4($1,n|chalk_5($1)),$0),$0))
example_end

Sent: would you like some cookies ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,qn|some_4($1,n|cookie-pl_5($1)),$0),$0))
example_end

Sent: what was that word honey ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,n|word_4($2)),$0)
example_end

Sent: was that like her ?
Sem: lambda $0_{r}.Q(cop|be-past_1(v|like_3(pro:dem|that_2,pro:obj|her_4,$0),$0))
example_end

Sent: just move Bobo out_of your way .
Sem: lambda $0_{r}.and(and(n|move_2(you,n:prop|bobo_3,$0),adj|just_1($0)),prep|out_of_4(det:poss|your_5($1,n|way_6($1)),$0))
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: is that money ?
Sem: lambda $0_{r}.Q(n|money_3(pro:dem|that_2,$0))
example_end

Sent: what are you going to buy with that ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|buy_6(pro:per|you_3,$2,$1),prep|with_7(pro:dem|that_8,$1)),$0),$0)
example_end

Sent: fish swim in the water with you ?
Sem: lambda $0_{r}.Q(and(and(n|swim_2(BARE($1,n|fish_1($1)),$0),prep|in_3(det:art|the_4($2,n|water_5($2)),$0)),prep|with_6(pro:per|you_7,$0)))
example_end

Sent: where are some fish ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-pres_2(qn|some_3($1,n|fish_4($1)),$0),$2($0))
example_end

Sent: what kind of fish ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|fish_4($2)))))
example_end

Sent: red fish ?
Sem: BARE($0,Q(and(adj|red_1($0),n|fish_2($0))))
example_end

Sent: what other kind of fish ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(and(qn|other_2($1),n|kind_3($1)),prep|of_4(BARE($2,n|fish_5($2)))))
example_end

Sent: you 're swimming ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|swim-presp_3(pro:per|you_1,$0),$0))
example_end

Sent: you 're not swimming now ?
Sem: lambda $0_{r}.Q(not(aux|~be_2(and(part|swim-presp_4(pro:per|you_1,$0),adv|now_5($0)),$0),$0))
example_end

Sent: that 's enough .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),adv|enough_3($0))
example_end

Sent: no I 'll get you a spoon .
Sem: lambda $0_{r}.and(mod|~will_3(aux|get_4(pro:sub|i_2,det:art|a_6($1,n|spoon_7($1)),pro:per|you_5,$0),$0),co|no_1($0))
example_end

Sent: just leave that there .
Sem: lambda $0_{r}.and(and(n|leave_2(you,pro:rel|that_3,$0),adj|just_1($0)),adv|there_4($0))
example_end

Sent: come on .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|on_2($0))
example_end

Sent: don 't hurry ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|hurry_3(you,$0),$0),$0))
example_end

Sent: isn 't it Chippewa ?
Sem: lambda $0_{r}.Q(not(n:prop|chippewa_4(pro:per|it_3,$0),$0))
example_end

Sent: what d you have in the fish house ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,$1,$0),prep|in_5(det:art|the_6($2,and_comp(n|fish_7($2),n|house_8($2))),$0)),$0)
example_end

Sent: little fish house .
Sem: BARE($0,and_comp(n|fish_2($0),and(adj|little_1($0),n|house_3($0))))
example_end

Sent: no Adam you take one .
Sem: lambda $0_{r}.and(v|take_4(pro:per|you_3,BARE($1,pro:indef|one_5($1)),$0),co|no_1($0))
example_end

Sent: take two .
Sem: lambda $0_{r}.v|take_1(you,BARE($1,det:num|two_2($1)),$0)
example_end

Sent: oh poor little fellow .
Sem: lambda $0_{r}.and(and(adj|little_3($0),and(adj|poor_2($0),n|fellow_4($0))),co|oh_1($0))
example_end

Sent: what do you want some more of ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|want_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: d you want some more cookies ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,qn|some_4($1,and(qn|more_5($1),n|cookie-pl_6($1))),$0),$0))
example_end

Sent: if you want to step on somebody 's foot then get Bobo and step on him .
Sem: lambda $0_{r}.conj|if_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|step_5(pro:per|you_2,$1),prep|on_6(pro:indef|somebody_7's($2,n|foot_9($2)),$1)),$0),and(and(v|step_14(you,n:prop|bobo_12,$0),adv:tem|then_10($0)),prep|on_15(pro:obj|him_16,$0)))
example_end

Sent: you 're too big ?
Sem: lambda $0_{r}.Q(adv|too_3(adj|big_4(pro:per|you_1,$0)))
example_end

Sent: did he bite you ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|bite_3(pro:sub|he_2,pro:per|you_4,$0),$0))
example_end

Sent: look on the back of Bozo .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|on_2(det:art|the_3($1,att(n|back_4($1),prep|of_5(n:prop|bozo_6))),$0))
example_end

Sent: oh he 's looking happy .
Sem: lambda $0_{r}.and(aux|~be_3(part|look-presp_4(pro:sub|he_2,lambda $1_{r}.adj|happy_5(pro:sub|he_2,$1),$0),$0),co|oh_1($0))
example_end

Sent: Adam Smith ?
Sem: BARE($0,Q(n:prop|smith_2_adam_1($0)))
example_end

Sent: because you 'll break it .
Sem: lambda $0_{r}.mod|~will_3(v|break_4(pro:per|you_2,pro:per|it_5,$0),$0)
example_end

Sent: where 's your cup ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|cup_4($1)),$0),$2($0))
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: I think he said here we go .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:sub|he_3,lambda $2_{r}.and(v|go_7(pro:sub|we_6,$2),adv|here_5($2)),$1),$0)
example_end

Sent: he 's sleeping .
Sem: lambda $0_{r}.aux|~be_2(part|sleep-presp_3(pro:sub|he_1,$0),$0)
example_end

Sent: I been chug .
Sem: lambda $0_{r}.aux|be-pastp_2(v|chug_3(pro:sub|i_1,$0),$0)
example_end

Sent: I 've been chugging I guess .
Sem: lambda $0_{r}.v|guess_6(pro:sub|i_5,lambda $1_{r}.aux|be-pastp_3(aux|~have_2(part|chug-presp_4(pro:sub|i_1,$1),$1),$1),$0)
example_end

Sent: you 're turned over ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(v|turn-past_3(pro:per|you_1,$0),adv|over_4($0)),$0))
example_end

Sent: is that a ring ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|ring_4(pro:rel|that_2,$0)))
example_end

Sent: would you ask him ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|ask_3(pro:per|you_2,pro:obj|him_4,$0),$0))
example_end

Sent: like some ones ?
Sem: Q(prep|like_1(pro:indef|one-pl_3_some_2))
example_end

Sent: he doesn 't want a cookie after you 've had your dirty fingers all over it .
Sem: lambda $0_{r}.not(prep|after_7(aux|~have_9(and(part|have-pastp_10(pro:per|you_8,det:poss|your_11($1,and(v|dirty_12($1),n|finger-pl_13($1))),$0),adv|all_14(prep|over_15(pro:per|it_16,$0))),$0),mod|do_2(v|want_4(pro:sub|he_1,det:art|a_5($2,n|cookie_6($2)),$0),$0)),$0)
example_end

Sent: take it out_of your mouth and just pretend .
Sem: lambda $0_{r}.and(and(adj|pretend_8(you,pro:per|it_2,$0),prep|out_of_3(det:poss|your_4($1,n|mouth_5($1)),$0)),adv|just_7($0))
example_end

Sent: when you pretend you don 't put it in .
Sem: lambda $0_{r}.not(mod|do_5(conj|when_1(v|pretend_3(pro:per|you_2,$0),and(v|put-zero_7(pro:per|you_4,pro:per|it_8,$0),adv|in_9($0))),$0),$0)
example_end

Sent: what about the little toys in the wagon ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,att(and(adj|little_4($0),n|toy-pl_5($0)),prep|in_6(det:art|the_7($1,n|wagon_8($1)))))))
example_end

Sent: see you have a bag over there .
Sem: lambda $0_{r}.and(and(v|have_3(pro:per|you_2,det:art|a_4($1,v|bag_5($1)),$0),adv|over_6(adv|there_7($0))),v|see_1(you,$0))
example_end

Sent: what 's in your bag ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|~be_2($1,$0),prep|in_3(det:poss|your_4($2,n|bag_5($2)),$0))
example_end

Sent: three cats ?
Sem: BARE($0,Q(det:num|three_1(n|cat-pl_2($0))))
example_end

Sent: well don 't do it on that .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|do_4(you,pro:per|it_5,$0),prep|on_6(pro:dem|that_7,$0)),$0),$0),co|well_1($0))
example_end

Sent: you write on paper Adam .
Sem: lambda $0_{r}.and(v|write_2(pro:per|you_1,$0),prep|on_3(BARE($1,n|paper_4($1)),$0))
example_end

Sent: before me ?
Sem: Q(prep|before_1(pro:obj|me_2))
example_end

Sent: you woke up at fourteen o'clock .
Sem: lambda $0_{r}.and(and(v|wake-past_2(pro:per|you_1,$0),adv|up_3($0)),prep|at_4(BARE($1,det:num|fourteen_5(n|o'clock_6($1))),$0))
example_end

Sent: my clock only goes to twelve .
Sem: lambda $0_{r}.and(and(v|go-3s_4(det:poss|my_1($1,n|clock_2($1)),$0),adv|only_3($0)),prep|to_5(BARE($2,det:num|twelve_6($2)),$0))
example_end

Sent: oh it goes to fourteen .
Sem: lambda $0_{r}.and(and(v|go-3s_3(pro:per|it_2,$0),prep|to_4(BARE($1,det:num|fourteen_5($1)),$0)),co|oh_1($0))
example_end

Sent: I didn 't bring mine today .
Sem: lambda $0_{r}.not(mod|do_2(and(v|bring_4(pro:sub|i_1,n|mine_5,$0),adv:tem|today_6($0)),$0),$0)
example_end

Sent: I didn 't need it today .
Sem: lambda $0_{r}.not(mod|do_2(and(v|need_4(pro:sub|i_1,pro:per|it_5,$0),adv:tem|today_6($0)),$0),$0)
example_end

Sent: Cromer has a watch .
Sem: lambda $0_{r}.v|have-3s_2(n:prop|cromer_1,det:art|a_3($1,n|watch_4($1)),$0)
example_end

Sent: no I don 't have one .
Sem: lambda $0_{r}.and(not(mod|do_3(v|have_5(pro:sub|i_2,pro:indef|one_6,$0),$0),$0),co|no_1($0))
example_end

Sent: I don 't own one .
Sem: lambda $0_{r}.not(mod|do_2(v|own_4(pro:sub|i_1,pro:indef|one_5,$0),$0),$0)
example_end

Sent: do you know what that 's called ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.aux|~be_6(part|call-pastp_7(pro:rel|that_5,pro:int|what_4,$1),$1),$0),$0))
example_end

Sent: can you see Cromer 's watch ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_3(pro:per|you_2,n:prop|cromer_4's($1,n|watch_6($1)),$0),$0))
example_end

Sent: I don 't know what happened to you ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|happen-past_6(pro:int|what_5,$1),prep|to_7(pro:per|you_8,$1)),$0),$0),$0))
example_end

Sent: how do I know what ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:sub|i_3,$1,$0),$2($0)),$0)
example_end

Sent: I don 't think he knows that .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|know-3s_6(pro:sub|he_5,pro:dem|that_7,$1),$0),$0),$0)
example_end

Sent: how do you know that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: how do you know that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: oh well I look at the watch .
Sem: lambda $0_{r}.and(and(and(cop|look_4(pro:sub|i_3,$0),prep|at_5(det:art|the_6($1,n|watch_7($1)),$0)),co|oh_1($0)),n|well_2($0))
example_end

Sent: Adam how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_3(and(v|know_5(pro:per|you_4,$0),$1($0)),$0)
example_end

Sent: you 're not spaghetti ?
Sem: lambda $0_{r}.Q(not(n|spaghetti_4(pro:per|you_1,$0),$0))
example_end

Sent: what are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: spaghetti on your leg ?
Sem: BARE($0,Q(att(n|spaghetti_1($0),prep|on_2(det:poss|your_3($1,n|leg_4($1))))))
example_end

Sent: what was the rest of that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,att(n|rest_4($2),prep|of_5(det:dem|that_6))),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: because you 'll spill it .
Sem: lambda $0_{r}.mod|~will_3(v|spill_4(pro:per|you_2,pro:per|it_5,$0),$0)
example_end

Sent: here me comes ?
Sem: lambda $0_{r}.Q(and(v|come-3s_3(pro:obj|me_2,$0),adv|here_1($0)))
example_end

Sent: what happened to I ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:sub|i_4,$0))
example_end

Sent: no more .
Sem: qn|no_1($0,pro:indef|more_2($0))
example_end

Sent: I think you 've had enough .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~have_4(and(part|have-pastp_5(pro:per|you_3,$1),adv|enough_6($1)),$1),$0)
example_end

Sent: you may have some water .
Sem: lambda $0_{r}.mod|may_2(v|have_3(pro:per|you_1,qn|some_4($1,n|water_5($1)),$0),$0)
example_end

Sent: you don 't want some water ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|want_4(pro:per|you_1,qn|some_5($1,n|water_6($1)),$0),$0),$0))
example_end

Sent: you don 't want to like water ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|want_4(pro:per|you_1,lambda $1_{r}.co|like_6(pro:per|you_1,BARE($2,n|water_7($2)),$1),$0),$0),$0))
example_end

Sent: oh you want another water ?
Sem: lambda $0_{r}.Q(and(v|want_3(pro:per|you_2,qn|another_4($1,n|water_5($1)),$0),co|oh_1($0)))
example_end

Sent: what about grandson ?
Sem: att(pro:int|what_1,adv|about_2(BARE($0,n|son_3($0))))
example_end

Sent: whose grandson are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_4,n|son_2(pro:per|you_4,$0))
example_end

Sent: you 're not grandson you 're Adam .
Sem: lambda $0_{r}.not(and(n|son_4(pro:per|you_1,$0),n:prop|adam_7(pro:per|you_5,$0)),$0)
example_end

Sent: well you must be somebody 's grandson .
Sem: lambda $0_{r}.and(mod|must_3(pro:indef|somebody_5's'(pro:per|you_2,n|son_7(pro:per|you_2,$0)),$0),co|well_1($0))
example_end

Sent: whose grandson are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_4,n|son_2(pro:per|you_4,$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: you keep this one .
Sem: lambda $0_{r}.v|keep_2(pro:per|you_1,pro:dem|this_3($1,pro:indef|one_4($1)),$0)
example_end

Sent: what are you going to write ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|write_6_to_5($2,$1),$0),$0)
example_end

Sent: did you write a pencil Adam ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|write_3(pro:per|you_2,det:art|a_4($1,n|pencil_5($1)),$0),$0))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: let me see that Adam .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|see_3(pro:obj|me_2,pro:rel|that_4,$1),$0)
example_end

Sent: is there a picture on it ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(det:art|a_3($1,att(n|picture_4($1),prep|on_5(pro:per|it_6))),$0))
example_end

Sent: picture on the other one ?
Sem: BARE($0,Q(att(n|picture_1($0),prep|on_2(det:art|the_3($1,and(qn|other_4($1),pro:indef|one_5($1)))))))
example_end

Sent: but there wasn 't one on that .
Sem: lambda $0_{r}.not(cop|be_3(BARE($1,att(pro:indef|one_5($1),prep|on_6(pro:dem|that_7))),$0),$0)
example_end

Sent: you mean what came from that ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,lambda $1_{r}.and(v|come-past_4(pro:int|what_3,$1),prep|from_5(pro:dem|that_6,$1)),$0))
example_end

Sent: the tape was in that box .
Sem: lambda $0_{r}.and(cop|be-past_3(det:art|the_1($1,n|tape_2($1)),$0),prep|in_4(pro:dem|that_5($2,n|box_6($2)),$0))
example_end

Sent: why don 't you give Urs the box ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|give_5(pro:per|you_4,det:art|the_7($1,n|box_8($1)),n:prop|ursula_6,$0),$2($0)),$0),$0)
example_end

Sent: she 'll need it to put the tape in .
Sem: lambda $0_{r}.mod|~will_2(v|need_3(pro:sub|she_1,lambda $1_{r}.and(v|put-zero_6(pro:per|it_4,det:art|the_7($2,n|tape_8($2)),$1),adv|in_9($1)),$0),$0)
example_end

Sent: yes when she goes home she 'll need to put the tape in the box .
Sem: lambda $0_{r}.and(mod|~will_7(conj|when_2(and(v|go-3s_4(pro:sub|she_3,$0),n|home_5($0)),v|need_8(pro:sub|she_6,lambda $1_{r}.v|put-zero_10(pro:sub|she_6,det:art|the_11($2,att(n|tape_12($2),prep|in_13(det:art|the_14($3,n|box_15($3))))),$1),$0)),$0),co|yes_1($0))
example_end

Sent: sandwich too ?
Sem: BARE($0,Q(post|too_2(BARE($1,n|sandwich_1($1)),$0)))
example_end

Sent: are you tired ?
Sem: lambda $0_{r}.Q(v|tire-past_3(pro:per|you_2,$0))
example_end

Sent: that 's not what you said .
Sem: lambda $0_{r}.not(cop|~be_2(you,pro:dem|that_1,$0),$0)
example_end

Sent: that 's yours .
Sem: lambda $0_{r}.pro:poss|yours_3(pro:dem|that_1,$0)
example_end

Sent: bow and arrow .
Sem: BARE($0,n|arrow_3($0))
example_end

Sent: are you going to bring it in ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|bring_5(pro:per|you_2,pro:per|it_6,$1),adv|in_7($1)),$0),$0))
example_end

Sent: oh thank_you Adam .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: don 't put the tape in ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|put-zero_3(you,det:art|the_4($1,n|tape_5($1)),$0),adv|in_6($0)),$0),$0))
example_end

Sent: yes look at that .
Sem: lambda $0_{r}.and(and(cop|look_2(you,$0),prep|at_3(pro:dem|that_4,$0)),co|yes_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: busy bulldozer ?
Sem: BARE($0,Q(and(adj|busy_1($0),n|bulldoze-dv_2($0))))
example_end

Sent: stuck with the record ?
Sem: lambda $0_{r}.Q(and(v|stick-past_1(you,$0),prep|with_2(det:art|the_3($1,n|record_4($1)),$0)))
example_end

Sent: come on for a ride ?
Sem: lambda $0_{r}.Q(and(and(v|come_1(you,$0),adv|on_2($0)),prep|for_3(det:art|a_4($1,n|ride_5($1)),$0)))
example_end

Sent: where am I going to fit Adam ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-1s_2(and(part|go-presp_4(pro:sub|i_3,lambda $1_{r}.v|fit-zero_6(pro:sub|i_3,$1),$0),$2($0)),$0)
example_end

Sent: I don 't think I would fit in that little corner .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|will-cond_6(and(part|fit-pastp_7(pro:sub|i_5,$1),prep|in_8(pro:dem|that_9($2,and(adj|little_10($2),n|corner_11($2))),$1)),$1),$0),$0),$0)
example_end

Sent: if you put one foot on the floor you can push it .
Sem: lambda $0_{r}.mod|can_10(conj|if_1(and(v|put-zero_3(pro:per|you_2,BARE($1,det:num|one_4(n|foot_5($1))),$0),prep|on_6(det:art|the_7($2,n|floor_8($2)),$0)),v|push_11(pro:per|you_9,pro:per|it_12,$0)),$0)
example_end

Sent: like that now push .
Sem: and(adv|now_3(BARE($0,n|push_4($0))),pro:dem|that_2)
example_end

Sent: now bring it over to here .
Sem: lambda $0_{r}.and(and(v|bring_2(you,pro:per|it_3,$0),adv|now_1($0)),adv|over_4(prep|to_5(adv|here_6,$0)))
example_end

Sent: you pull it over here first .
Sem: lambda $0_{r}.and(and(v|pull_2(pro:per|you_1,pro:per|it_3,$0),adv|over_4(adv|here_5($0))),adv|first_6($0))
example_end

Sent: what shall I do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|do_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: put some pillow in it ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,qn|some_2($1,n|pillow_3($1)),$0),prep|in_4(pro:per|it_5,$0)))
example_end

Sent: aren 't you ashamed having Urs pull you in the wagon ?
Sem: lambda $0_{r}.Q(not(and(adj|ashamed_4(pro:per|you_3,$0),part|have-presp_5(you,lambda $1_{r}.and(v|pull_7(n:prop|ursula_6,pro:per|you_8,$1),prep|in_9(det:art|the_10($2,n|wagon_11($2)),$1)),$0)),$0))
example_end

Sent: you look like it .
Sem: lambda $0_{r}.and(co|look_2(pro:per|you_1,$0),co|like_3(pro:per|it_4,$0))
example_end

Sent: I thought you were going to tell her .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.aux|be-past_4(part|go-presp_5(pro:per|you_3,lambda $2_{r}.v|tell_7(pro:per|you_3,pro:obj|her_8,$2),$1),$1),$0)
example_end

Sent: oh you push yourself .
Sem: lambda $0_{r}.and(v|push_3(pro:per|you_2,pro:refl|yourself_4,$0),co|oh_1($0))
example_end

Sent: why don 't you get out and give Humpty_Dumpty a ride ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|give_8(pro:per|you_4,det:art|a_10($1,n|ride_11($1)),n:prop|humpty_dumpty_9,$0),$2($0)),adv|out_6($0)),$0),$0)
example_end

Sent: you might go to sleep .
Sem: lambda $0_{r}.mod|might_2(v|go_3(pro:per|you_1,lambda $1_{r}.v|sleep_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: where 's your magazine ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|magazine_4($1)),$0),$2($0))
example_end

Sent: do you have a story about Humpty_Dumpty ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,att(n|story_5($1),prep|about_6(n:prop|humpty_dumpty_7))),$0),$0))
example_end

Sent: what 's that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: dump truck does what with the sand ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_3(BARE($1,and_comp(n|dump_1($1),n|truck_2($1))),$2,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: oh it 's not a nail clippers .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:per|it_2,and_comp(n|nail_6(pro:per|it_2,$0),n|clip-dv_7(pro:per|it_2,$0))),$0),co|oh_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: piece of a trailer ?
Sem: BARE($0,Q(att(n|piece_1($0),prep|of_2(det:art|a_3($1,n|trailer_4($1))))))
example_end

Sent: are you mailing it ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|mail-presp_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: and work and play ?
Sem: BARE($0,Q(n|play_4($0)))
example_end

Sent: power shovel ?
Sem: BARE($0,Q(and_comp(n|power_1($0),n|shovel_2($0))))
example_end

Sent: lost your what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|lose-past_1(you,$1,$0)
example_end

Sent: what happened to the pen ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|pen_5($2)),$0))
example_end

Sent: how are you going to get it out ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|get_6(pro:per|you_3,pro:per|it_7,$1),adv|out_8($1)),$0),$2($0)),$0)
example_end

Sent: lost your what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|lose-past_1(you,$1,$0)
example_end

Sent: you lost your dirt .
Sem: lambda $0_{r}.v|lose-past_2(pro:per|you_1,det:poss|your_3($1,n|dirt_4($1)),$0)
example_end

Sent: she didn 't make any noise .
Sem: lambda $0_{r}.not(mod|do_2(v|make_4(pro:sub|she_1,qn|any_5($1,n|noise_6($1)),$0),$0),$0)
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: listen to it .
Sem: lambda $0_{r}.and(v|listen_1(you,$0),prep|to_2(pro:per|it_3,$0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: you aren 't even looking out the window .
Sem: lambda $0_{r}.not(aux|be_2(and(and(part|look-presp_5(pro:per|you_1,$0),adv|even_4($0)),prep|out_6(det:art|the_7($1,n|window_8($1)),$0)),$0),$0)
example_end

Sent: I don 't know what time fourteen o'clock is .
Sem: lambda $2_{e}.lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.$2(BARE($3,det:num|fourteen_7(n|o'clock_8($3))),n|time_6(BARE($4,det:num|fourteen_7(n|o'clock_8($4))),$1)),$0),$0),$0)
example_end

Sent: can you tell me ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tell_3(pro:per|you_2,pro:obj|me_4,$0),$0))
example_end

Sent: nineteen o'clock ?
Sem: BARE($0,Q(n|o'clock_2($0)))
example_end

Sent: what time is nineteen o'clock ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,det:num|nineteen_4(n|o'clock_5($2))),n|time_2(BARE($3,det:num|nineteen_4(n|o'clock_5($3))),$0))
example_end

Sent: Adam don 't you think you might break the clock ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|think_5(pro:per|you_4,lambda $1_{r}.mod|might_7(v|break_8(pro:per|you_6,det:art|the_9($2,n|clock_10($2)),$1),$1),$0),$0),$0))
example_end

Sent: it doesn 't belong like that .
Sem: lambda $0_{r}.not(mod|do_2(and(v|belong_4(pro:per|it_1,$0),prep|like_5(pro:dem|that_6,$0)),$0),$0)
example_end

Sent: it doesn 't go that way .
Sem: lambda $0_{r}.not(mod|do_2(v|go_4(pro:per|it_1,pro:dem|that_5($1,n|way_6($1)),$0),$0),$0)
example_end

Sent: it works ?
Sem: lambda $0_{r}.Q(v|work-3s_2(pro:per|it_1,$0))
example_end

Sent: is that coffee ?
Sem: lambda $0_{r}.Q(n|coffee_3(pro:dem|that_2,$0))
example_end

Sent: just pretend .
Sem: lambda $0_{r}.and(adj|pretend_2(you,$0),adv|just_1($0))
example_end

Sent: just pretend .
Sem: lambda $0_{r}.and(adj|pretend_2(you,$0),adv|just_1($0))
example_end

Sent: where did what go ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.v|do-past_2(and(v|go_4($1,$0),$2($0)),$0)
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: a tooth ?
Sem: BARE($0,Q(det:art|a_1($1,n|tooth_2($1),$0)))
example_end

Sent: what does Cromer have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|have_4(n:prop|cromer_3,$1,$0),$0)
example_end

Sent: no he doesn 't have any teeth yet .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|have_5(pro:sub|he_2,qn|any_6($1,n|tooth-pl_7($1)),$0),adv|yet_8($0)),$0),$0),co|no_1($0))
example_end

Sent: he 's too small .
Sem: lambda $0_{r}.adv|too_3(adj|small_4(pro:sub|he_1,$0))
example_end

Sent: no that 's the baby 's .
Sem: lambda $0_{r}.and(poss|~s_6(det:art|the_4($1,n|baby_5($1)),pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: you 're the big baby yes .
Sem: lambda $0_{r}.and(det:art|the_3(pro:per|you_1,and(n|baby_5(pro:per|you_1,$0),adj|big_4(pro:per|you_1,$0))),co|yes_6($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: well pick them up off the floor .
Sem: lambda $0_{r}.and(and(and(v|pick_2(you,pro:obj|them_3,$0),adv|up_4($0)),prep|off_5(det:art|the_6($1,n|floor_7($1)),$0)),co|well_1($0))
example_end

Sent: she can 't play on the floor .
Sem: lambda $0_{r}.not(mod|can_2(and(v|play_4(pro:sub|she_1,$0),prep|on_5(det:art|the_6($1,n|floor_7($1)),$0)),$0),$0)
example_end

Sent: put them on the table .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:obj|them_2,$0),prep|on_3(det:art|the_4($1,n|table_5($1)),$0))
example_end

Sent: well she can 't sit on the floor .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|sit_5(pro:sub|she_2,$0),prep|on_6(det:art|the_7($1,n|floor_8($1)),$0)),$0),$0),co|well_1($0))
example_end

Sent: shall we put them on the table Adam ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|put-zero_3(pro:sub|we_2,pro:obj|them_4,$0),prep|on_5(det:art|the_6($1,n|table_7($1)),$0)),$0))
example_end

Sent: what about a bench ?
Sem: att(pro:int|what_1,adv|about_2(det:art|a_3($0,n|bench_4($0))))
example_end

Sent: which bench ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|bench_2($1))
example_end

Sent: that what honey ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: come from the other one ?
Sem: lambda $0_{r}.Q(and(v|come_1(you,$0),prep|from_2(det:art|the_3($1,and(qn|other_4($1),pro:indef|one_5($1))),$0)))
example_end

Sent: what are you showing her Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|show-presp_4(pro:per|you_3,$1,det:poss|her_5,$0),$0)
example_end

Sent: there you are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:per|you_2,$0),adv|there_1($0))
example_end

Sent: did you find it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: oh that can 't fly .
Sem: lambda $0_{r}.and(not(mod|can_3(v|fly_5(pro:rel|that_2,$0),$0),$0),co|oh_1($0))
example_end

Sent: down by the bed Adam .
Sem: BARE($0,att(adv|down_1($0),prep|by_2(det:art|the_3($1,n|bed_4($1)))))
example_end

Sent: Adam where does this go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_3(and(v|go_5(pro:dem|this_4,$0),$1($0)),$0)
example_end

Sent: put some pencil in there ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,qn|some_2($1,n|pencil_3($1)),$0),prep|in_4(adv|there_5($0))))
example_end

Sent: show me how .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|show_1(_,_,pro:obj|me_2,$0),$1($0))
example_end

Sent: take it at home ?
Sem: lambda $0_{r}.Q(and(v|take_1(you,pro:per|it_2,$0),prep|at_3(BARE($1,n|home_4($1)),$0)))
example_end

Sent: Robin 's home .
Sem: n:prop|robin_1's($0,n|home_3($0))
example_end

Sent: is that a butterfly ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|butter+fly_4(pro:rel|that_2,$0)))
example_end

Sent: oh you 're going to put them back in the envelope ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.and(and(v|put-zero_6(pro:per|you_2,pro:obj|them_7,$1),adv|back_8($1)),prep|in_9(det:art|the_10($2,n|envelope_11($2)),$1)),$0),$0),co|oh_1($0)))
example_end

Sent: and talk ?
Sem: lambda $0_{r}.Q(n|talk_2(you,$0))
example_end

Sent: talk about Urs ?
Sem: lambda $0_{r}.Q(and(n|talk_1(you,$0),prep|about_2(n:prop|ursula_3,$0)))
example_end

Sent: what are you going to say about Urs ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|say_6($2,$1),prep|about_7(n:prop|ursula_8,$1)),$0),$0)
example_end

Sent: is that envelopes ?
Sem: lambda $0_{r}.Q(n|envelope-pl_3(pro:dem|that_2,$0))
example_end

Sent: do you have pennies in there ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,BARE($1,n|penny-pl_4($1)),$0),prep|in_5(adv|there_6($0))),$0))
example_end

Sent: you 're Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(pro:per|you_1,$0))
example_end

Sent: what did that come from ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|come_4(pro:rel|that_3,$1,$0),$0)
example_end

Sent: what did that come from ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|come_4(pro:rel|that_3,$1,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: well go check .
Sem: lambda $0_{r}.and(n|check_3(you,$0),co|well_1($0))
example_end

Sent: well you took your book over there .
Sem: lambda $0_{r}.and(and(v|take-past_3(pro:per|you_2,det:poss|your_4($1,n|book_5($1)),$0),adv|over_6(adv|there_7($0))),co|well_1($0))
example_end

Sent: you want to play with that one ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|play_4(pro:per|you_1,$1),prep|with_5(pro:dem|that_6($2,pro:indef|one_7($2)),$1)),$0))
example_end

Sent: your magazine .
Sem: det:poss|your_1($0,n|magazine_2($0))
example_end

Sent: that 's part of the train I think .
Sem: lambda $0_{r}.v|think_8(pro:sub|i_7,lambda $1_{r}.att(n|part_3(pro:dem|that_1,$1),prep|of_4(det:art|the_5($2,n|train_6($2)))),$0)
example_end

Sent: what about over here ?
Sem: adv|here_4(pro:int|what_1)
example_end

Sent: get it there ?
Sem: lambda $0_{r}.Q(and(aux|get_1(you,pro:per|it_2,$0),adv|there_3($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: where did that go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:rel|that_3,$0),$1($0)),$0)
example_end

Sent: well it doesn 't go like that .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|go_5(pro:per|it_2,$0),prep|like_6(pro:dem|that_7,$0)),$0),$0),co|well_1($0))
example_end

Sent: no that 's not right either .
Sem: lambda $0_{r}.and(not(adv|either_6(adv|right_5(pro:dem|that_2,$0)),$0),co|no_1($0))
example_end

Sent: no try it on the other side .
Sem: lambda $0_{r}.and(and(v|try_2(you,pro:per|it_3,$0),prep|on_4(det:art|the_5($1,and(qn|other_6($1),n|side_7($1))),$0)),co|no_1($0))
example_end

Sent: you 're drinking water like a dog !
Sem: lambda $0_{r}.aux|~be_2(and(part|drink-presp_3(pro:per|you_1,BARE($1,n|water_4($1)),$0),prep|like_5(det:art|a_6($2,n|dog_7($2)),$0)),$0)
example_end

Sent: no you just pretend .
Sem: lambda $0_{r}.and(adv|just_3(adj|pretend_4(pro:per|you_2,$0)),co|no_1($0))
example_end

Sent: yeah pretend that that 's water .
Sem: lambda $0_{r}.and(adj|pretend_2(you,lambda $1_{r}.n|water_6(pro:rel|that_4,$1),$0),co|yeah_1($0))
example_end

Sent: oh the camel 's drinking some water ?
Sem: lambda $0_{r}.Q(and(aux|~be_4(part|drink-presp_5(det:art|the_2($1,n|camel_3($1)),qn|some_6($2,n|water_7($2)),$0),$0),co|oh_1($0)))
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you folded it ?
Sem: lambda $0_{r}.Q(v|fold-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: don 't break it .
Sem: lambda $0_{r}.not(mod|do_1(v|break_3(you,pro:per|it_4,$0),$0),$0)
example_end

Sent: yes that 's a clock .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|clock_5(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: you lost your food ?
Sem: lambda $0_{r}.Q(v|lose-past_2(pro:per|you_1,det:poss|your_3($1,n|food_4($1)),$0))
example_end

Sent: the table almost tipped .
Sem: lambda $0_{r}.and(part|tip-pastp_4(det:art|the_1($1,n|table_2($1)),$0),adv|almost_3($0))
example_end

Sent: where 's your shoe ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|shoe_4($1)),$0),$2($0))
example_end

Sent: it 's already .
Sem: lambda $0_{r}.cop|~be_2(adv|already_3(pro:per|it_1,$0),$0)
example_end

Sent: it already is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_1,$0),adv|already_2($0))
example_end

Sent: where 's the other pen Adam ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,and(qn|other_4($1),n|pen_5($1))),$0),$2($0))
example_end

Sent: I think the other one is in your wagon .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(cop|be-3s_6(det:art|the_3($2,and(qn|other_4($2),pro:indef|one_5($2))),$1),prep|in_7(det:poss|your_8($3,n|wagon_9($3)),$1)),$0)
example_end

Sent: that 's not it .
Sem: lambda $0_{r}.not(pro:per|it_4(pro:dem|that_1,$0),$0)
example_end

Sent: I need something to write with .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,lambda $1_{r}.v|write_5(pro:indef|something_3_with_6,$1),$0)
example_end

Sent: I need one .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,pro:indef|one_3,$0)
example_end

Sent: may I use one ?
Sem: lambda $0_{r}.Q(mod|may_1(v|use_3(pro:sub|i_2,pro:indef|one_4,$0),$0))
example_end

Sent: who does that Adam ?
Sem: lambda $1_{e}.lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(det:dem|that_3($1,n:prop|adam_4($1,$0)),$0)
example_end

Sent: who else does ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_3($1,$0)
example_end

Sent: what 's Ricky ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|ricky_3,$0)
example_end

Sent: where did you see Ricky ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,n:prop|ricky_5,$0),$1($0)),$0)
example_end

Sent: did he catch any fish ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|catch_3(pro:sub|he_2,qn|any_4($1,n|fish_5($1)),$0),$0))
example_end

Sent: I was just looking at it .
Sem: lambda $0_{r}.cop|be-past_2(and(and(part|look-presp_4(pro:sub|i_1,$0),adv|just_3($0)),prep|at_5(pro:per|it_6,$0)),$0)
example_end

Sent: no don 't write on the book .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|write_4(you,$0),prep|on_5(det:art|the_6($1,n|book_7($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh I need a little spanking ?
Sem: lambda $0_{r}.Q(and(v|need_3(pro:sub|i_2,det:art|a_4($1,and(adj|little_5($1),n:gerund|spank-presp_6($1))),$0),co|oh_1($0)))
example_end

Sent: do you need a little spanking ?
Sem: lambda $0_{r}.Q(mod|do_1(v|need_3(pro:per|you_2,det:art|a_4($1,and(adj|little_5($1),n:gerund|spank-presp_6($1))),$0),$0))
example_end

Sent: who 's crying Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|cry-presp_3($1,$0),$0)
example_end

Sent: he got it out .
Sem: lambda $0_{r}.and(v|get-past_2(pro:sub|he_1,pro:per|it_3,$0),adv|out_4($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: because I don 't want it open .
Sem: lambda $0_{r}.not(mod|do_3(v|want_5(pro:sub|i_2,lambda $1_{r}.adj|open_7(pro:per|it_6,$1),$0),$0),$0)
example_end

Sent: you shoot him with a gun ?
Sem: lambda $0_{r}.Q(and(v|shoot_2(pro:per|you_1,pro:obj|him_3,$0),prep|with_4(det:art|a_5($1,n|gun_6($1)),$0)))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: is it a gun ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|gun_4(pro:per|it_2,$0)))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it 's a comb .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|comb_4(pro:per|it_1,$0))
example_end

Sent: Adam give him his comb please honey .
Sem: lambda $0_{r}.and(v|give_2(you,det:poss|his_4($1,n|comb_5($1)),pro:obj|him_3,$0),co|please_6($0))
example_end

Sent: I don 't want to take a bath !
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|i_1,lambda $1_{r}.v|take_6(pro:sub|i_1,det:art|a_7($2,n|bath_8($2)),$1),$0),$0),$0)
example_end

Sent: see the circus ?
Sem: lambda $0_{r}.Q(v|see_1(you,det:art|the_2($1,n|circus_3($1)),$0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I don 't know but don 't you bother it again .
Sem: lambda $0_{r}.not(conj|but_5(not(mod|do_6(and(v|bother_9(pro:per|you_8,pro:per|it_10,$0),adv|again_11($0)),$0),$0),mod|do_2(v|know_4(pro:sub|i_1,$0),$0)),$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: they 're all rolled up on some tape somewhere .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|~be_2(and(and(and(and(v|roll-past_4(pro:sub|they_1,$0),post|all_3($0)),adv|up_5($0)),prep|on_6(qn|some_7($1,n|tape_8($1)),$0)),$2($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: dum_dum doggie ?
Sem: BARE($0,Q(and_comp(co|dum_dum_1($0),n|dog-dim_2($0))))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: roping me ?
Sem: lambda $0_{r}.Q(part|rope-presp_1(you,pro:obj|me_2,$0))
example_end

Sent: that 's not rope honey .
Sem: lambda $0_{r}.not(v|rope_4(pro:dem|that_1,$0),$0)
example_end

Sent: don 't do that Adam .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,det:dem|that_4,$0),$0),$0)
example_end

Sent: you can 't do that .
Sem: lambda $0_{r}.not(mod|can_2(v|do_4(pro:per|you_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: you may hit somebody .
Sem: lambda $0_{r}.mod|may_2(n|hit_3(pro:per|you_1,BARE($1,pro:indef|somebody_4($1)),$0),$0)
example_end

Sent: you stay over there in the corner there .
Sem: lambda $0_{r}.and(and(n|stay_2(pro:per|you_1,$0),adv|over_3(adv|there_4($0))),adv|there_8(prep|in_5(det:art|the_6($1,n|corner_7($1)),$0)))
example_end

Sent: where is your rope ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:poss|your_3($1,n|rope_4($1)),$0),$2($0))
example_end

Sent: didn 't you have some shoelaces down here ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|have_4(pro:per|you_3,qn|some_5($1,n|shoe+lace_6($1)),$0),adv|down_7(adv|here_8($0))),$0),$0))
example_end

Sent: in the fireplace ?
Sem: Q(prep|in_1(det:art|the_2($0,n|fire+place_3($0))))
example_end

Sent: it 's messy ?
Sem: lambda $0_{r}.Q(adj|mess-dn_3(pro:per|it_1,$0))
example_end

Sent: where did you hear of dum_dum ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|hear_4(pro:per|you_3,$0),$1($0)),prep|of_5(co|dum_dum_6,$0)),$0)
example_end

Sent: or who is dum_dum ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(co|dum_dum_4,$0)
example_end

Sent: what is dum_dum ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(co|dum_dum_3,$0)
example_end

Sent: I 'm dum_dum ?
Sem: lambda $0_{r}.Q(co|dum_dum_3(pro:sub|i_1,$0))
example_end

Sent: a camel or a camera ?
Sem: BARE($0,Q(det:art|a_4($1,det:art|a_1($2,n|camera_5($2),$1),$0)))
example_end

Sent: a hammer .
Sem: det:art|a_1($0,n|hammer_2($0))
example_end

Sent: you had a nail didn 't you ?
Sem: lambda $0_{r}.Q(and(v|have-past_2(pro:per|you_1,det:art|a_3($1,n|nail_4($1)),$0),not(mod|do_5(pro:per|you_7,$0),$0)))
example_end

Sent: there was one before on the floor .
Sem: lambda $0_{r}.and(and(aux|be-past_2(pro:indef|one_3,$0),adv|before_4($0)),prep|on_5(det:art|the_6($1,n|floor_7($1)),$0))
example_end

Sent: where did you put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: you left a nail ?
Sem: lambda $0_{r}.Q(v|leave-past_2(pro:per|you_1,det:art|a_3($1,n|nail_4($1)),$0))
example_end

Sent: you lost a nail .
Sem: lambda $0_{r}.v|lose-past_2(pro:per|you_1,det:art|a_3($1,n|nail_4($1)),$0)
example_end

Sent: yes but where do you spit ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do_4(and(v|spit_6(pro:per|you_5,$0),$1($0)),$0),co|yes_1($0))
example_end

Sent: spit on toilet seat .
Sem: lambda $0_{r}.and(n|spit_1(you,$0),prep|on_2(BARE($1,and_comp(n|toilet_3($1),n|seat_4($1))),$0))
example_end

Sent: yes if you have_to spit you go up and spit in the toilet .
Sem: lambda $0_{r}.and(conj|if_2(mod:aux|have_to_4(v|spit_5(pro:per|you_3,$0),$0),and(and(n|spit_10(pro:per|you_6,$0),adv|up_8($0)),prep|in_11(det:art|the_12($1,n|toilet_13($1)),$0))),co|yes_1($0))
example_end

Sent: well then don 't do that again .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(v|do_5(you,pro:dem|that_6,$0),adv:tem|then_2($0)),adv|again_7($0)),$0),$0),co|well_1($0))
example_end

Sent: Adam do .
Sem: lambda $0_{r}.v|do_2(n:prop|adam_1,$0)
example_end

Sent: didn 't he go to school ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|go_4(pro:sub|he_3,$0),prep|to_5(BARE($1,n|school_6($1)),$0)),$0),$0))
example_end

Sent: where 's the other part ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,and(qn|other_4($1),n|part_5($1))),$0))
example_end

Sent: because you may hit somebody with it .
Sem: lambda $0_{r}.mod|may_3(and(n|hit_4(pro:per|you_2,BARE($1,pro:indef|somebody_5($1)),$0),prep|with_6(pro:per|it_7,$0)),$0)
example_end

Sent: you may throw it .
Sem: lambda $0_{r}.mod|may_2(v|throw_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: no throw it to me .
Sem: lambda $0_{r}.and(and(v|throw_2(you,pro:per|it_3,$0),prep|to_4(pro:obj|me_5,$0)),co|no_1($0))
example_end

Sent: I can 't catch but one .
Sem: lambda $0_{r}.not(mod|can_2(v|catch_4(pro:sub|i_1,pro:indef|one_6,$0),$0),$0)
example_end

Sent: is there one behind the door ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_1(pro:indef|one_3,$0),prep|behind_4(det:art|the_5($1,n|door_6($1)),$0)))
example_end

Sent: didn 't you put one in the box ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|put-zero_4(pro:per|you_3,BARE($1,det:num|one_5($1)),$0),prep|in_6(det:art|the_7($2,n|box_8($2)),$0)),$0),$0))
example_end

Sent: you 've got the blue one in there haven 't you ?
Sem: lambda $0_{r}.Q(and(aux|~have_2(and(part|get-pastp_3(pro:per|you_1,det:art|the_4($1,att(det:num|one_6,BARE($2,n|blue_5($2)),$1)),$0),prep|in_7(adv|there_8($0))),$0),not(aux|have_9(pro:per|you_11,$0),$0)))
example_end

Sent: that came from a coffee can it may cut you .
Sem: lambda $0_{r}.and(and(v|come-past_2(pro:rel|that_1,$0),prep|from_3(det:art|a_4($1,and_comp(n|coffee_5($1),mod|can_6($1))),$0)),mod|may_8(v|cut-zero_9(pro:per|it_7,pro:per|you_10,$0),$0))
example_end

Sent: I don 't think you can get it back on there .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(and(aux|get_7(pro:per|you_5,pro:per|it_8,$1),prep|on_10(adv|back_9(adv|there_11($1)))),$1),$0),$0),$0)
example_end

Sent: it 's broken .
Sem: lambda $0_{r}.part|break-pastp_3(pro:per|it_1,$0)
example_end

Sent: that 's too small ?
Sem: lambda $0_{r}.Q(adv|too_3(adj|small_4(pro:dem|that_1,$0)))
example_end

Sent: where one what ?
Sem: lambda $0_{e}.$0(BARE($1,pro:indef|one_2(pro:int|what_3($1))))
example_end

Sent: okay you count and let me see .
Sem: lambda $0_{r}.and(v|let-zero_5(pro:per|you_2,lambda $1_{r}.v|see_7(pro:obj|me_6,$1),$0),co|okay_1($0))
example_end

Sent: put them in my lap as you count them .
Sem: lambda $0_{r}.conj|as_6(v|count_8(pro:per|you_7,pro:obj|them_9,$0),and(v|put-zero_1(you,pro:obj|them_2,$0),prep|in_3(det:poss|my_4($1,n|lap_5($1)),$0)))
example_end

Sent: I saw more than three .
Sem: lambda $0_{r}.v|see-past_2(pro:sub|i_1,BARE($1,qn|more_3($1)),$0)
example_end

Sent: okay count again .
Sem: lambda $0_{r}.and(and(n|count_2(you,$0),adv|again_3($0)),co|okay_1($0))
example_end

Sent: that 's one .
Sem: lambda $0_{r}.pro:indef|one_3(pro:dem|that_1,$0)
example_end

Sent: four five .
Sem: BARE($0,det:num|four_1(det:num|five_2($0)))
example_end

Sent: that 's all !
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: one two three four five .
Sem: BARE($0,det:num|one_1(det:num|two_2(det:num|three_3(det:num|four_4(det:num|five_5($0))))))
example_end

Sent: one two three four five .
Sem: BARE($0,det:num|one_1(det:num|two_2(det:num|three_3(det:num|four_4(det:num|five_5($0))))))
example_end

Sent: just one .
Sem: adv|just_1(BARE($0,det:num|one_2($0)))
example_end

Sent: what kind of franks ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|frank-pl_4($2)))))
example_end

Sent: don 't shoot Mr Cowboy .
Sem: lambda $0_{r}.not(mod|do_1(v|shoot_3(you,n:prop|cowboy_5_mr_4,$0),$0),$0)
example_end

Sent: oh Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|oh_1($0))
example_end

Sent: hold it up not hang it up .
Sem: lambda $0_{r}.and(and(v|hold_1(you,pro:per|it_2,$0),adv|up_3($0)),not(and(v|hang_5(you,pro:per|it_6,$0),adv|up_7($0)),$0))
example_end

Sent: one two three four .
Sem: BARE($0,det:num|one_1(det:num|two_2(det:num|three_3(det:num|four_4($0)))))
example_end

Sent: it popped .
Sem: lambda $0_{r}.v|pop-past_2(pro:per|it_1,$0)
example_end

Sent: you slipped ?
Sem: lambda $0_{r}.Q(v|slip-past_2(pro:per|you_1,$0))
example_end

Sent: did you hurt yourself ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: oh is that a game ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:rel|that_3,n|game_5(pro:rel|that_3,$0)),co|oh_1($0)))
example_end

Sent: what 's the name of that game ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,att(n|name_4($2),prep|of_5(pro:dem|that_6($3,n|game_7($3))))),$0)
example_end

Sent: yes what 's the name of that game ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(det:art|the_4($2,att(n|name_5($2),prep|of_6(pro:dem|that_7($3,n|game_8($3))))),$0),co|yes_1($0))
example_end

Sent: turn it over .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: you 're doing what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_3(pro:per|you_1,$1,$0),$0)
example_end

Sent: playing games ?
Sem: lambda $0_{r}.Q(part|play-presp_1(you,BARE($1,n|game-pl_2($1)),$0))
example_end

Sent: play games ?
Sem: lambda $0_{r}.Q(n|play_1(you,BARE($1,v|game-3s_2($1)),$0))
example_end

Sent: I don 't think that writes .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|write-3s_6(pro:rel|that_5,$1),$0),$0),$0)
example_end

Sent: dump them in there ?
Sem: lambda $0_{r}.Q(and(v|dump_1(you,pro:obj|them_2,$0),prep|in_3(adv|there_4($0))))
example_end

Sent: you know what happened .
Sem: lambda $0_{r}.v|know_2(pro:per|you_1,lambda $1_{r}.v|happen-past_4(pro:int|what_3,$1),$0)
example_end

Sent: I 'm so big ?
Sem: lambda $0_{r}.Q(adv|so_3(adj|big_4(pro:sub|i_1,$0)))
example_end

Sent: yes I am so big .
Sem: lambda $0_{r}.and(adv|so_4(adj|big_5(pro:sub|i_2,$0)),co|yes_1($0))
example_end

Sent: I can 't ride in your wagon .
Sem: lambda $0_{r}.not(mod|can_2(and(v|ride_4(pro:sub|i_1,$0),prep|in_5(det:poss|your_6($1,n|wagon_7($1)),$0)),$0),$0)
example_end

Sent: oh was that coffee ?
Sem: lambda $0_{r}.Q(and(n|coffee_4(pro:dem|that_3,$0),co|oh_1($0)))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: wait I need that .
Sem: lambda $0_{r}.and(v|need_3(pro:sub|i_2,pro:dem|that_4,$0),v|wait_1(you,$0))
example_end

Sent: Adam don 't kick anybody .
Sem: lambda $0_{r}.not(mod|do_2(v|kick_4(you,BARE($1,pro:indef|anybody_5($1)),$0),$0),$0)
example_end

Sent: do you want me to take your shoes off ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|take_6(pro:obj|me_4,det:poss|your_7($2,n|shoe-pl_8($2)),$1),adv|off_9($1)),$0),$0))
example_end

Sent: what did you throw ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|throw_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're not supposed to throw anything in the air .
Sem: lambda $0_{r}.not(aux|~be_2(part|suppose-pastp_4(pro:per|you_1,lambda $1_{r}.and(v|throw_6(pro:per|you_1,BARE($2,pro:indef|anything_7($2)),$1),prep|in_8(det:art|the_9($3,n|air_10($3)),$1)),$0),$0),$0)
example_end

Sent: did you know that ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|know_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: you don 't know that ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|know_4(pro:per|you_1,pro:dem|that_5,$0),$0),$0))
example_end

Sent: well now you know it because I just told you .
Sem: lambda $0_{r}.and(conj|because_6(and(v|tell-past_9(pro:sub|i_7,pro:per|you_10,$0),adv|just_8($0)),and(v|know_4(pro:per|you_3,pro:per|it_5,$0),adv|now_2($0))),n|well_1($0))
example_end

Sent: you have_to do them one at a time .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|do_3(pro:per|you_1,pro:obj|them_4,$0),det:art|a_7($1,pro:indef|one_5(n|time_8($1)),$0)),$0)
example_end

Sent: my size ?
Sem: BARE($0,Q(det:poss|my_1($1,n|size_2($1),$0)))
example_end

Sent: no I 'll have_to put it up now Adam .
Sem: lambda $0_{r}.and(mod:aux|have_to_4(mod|~will_3(and(and(v|put-zero_5(pro:sub|i_2,pro:per|it_6,$0),adv|up_7($0)),adv|now_8($0)),$0),$0),co|no_1($0))
example_end

Sent: you don 't want to play games ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|want_4(pro:per|you_1,lambda $1_{r}.n|play_6(pro:per|you_1,BARE($2,n|game-pl_7($2)),$1),$0),$0),$0))
example_end

Sent: pull you for a ride ?
Sem: lambda $0_{r}.Q(and(v|pull_1(you,pro:per|you_2,$0),prep|for_3(det:art|a_4($1,n|ride_5($1)),$0)))
example_end

Sent: push yourself .
Sem: lambda $0_{r}.v|push_1(you,pro:refl|yourself_2,$0)
example_end

Sent: push with your feet .
Sem: lambda $0_{r}.and(n|push_1(you,$0),prep|with_2(det:poss|your_3($1,n|foot-pl_4($1)),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you can give yourself a ride .
Sem: lambda $0_{r}.mod|can_2(v|give_3(pro:per|you_1,det:art|a_5($1,n|ride_6($1)),pro:refl|yourself_4,$0),$0)
example_end

Sent: yes you 're giving yourself a ride .
Sem: lambda $0_{r}.and(aux|~be_3(part|give-presp_4(pro:per|you_2,det:art|a_6($1,n|ride_7($1)),pro:refl|yourself_5,$0),$0),co|yes_1($0))
example_end

Sent: your tricycle is there .
Sem: lambda $0_{r}.and(cop|be-3s_3(det:poss|your_1($1,n|tricycle_2($1)),$0),adv|there_4($0))
example_end

Sent: you have_to pull your wagon back .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|pull_3(pro:per|you_1,det:poss|your_4($1,n|wagon_5($1)),$0),adv|back_6($0)),$0)
example_end

Sent: I think it 's running into the television set isn 't it ?
Sem: lambda $0_{r}.Q(and(v|think_2(pro:sub|i_1,lambda $1_{r}.cop|~be_4(and(part|run-presp_5(pro:per|it_3,$1),prep|into_6(det:art|the_7($2,and_comp(n|television_8($2),part|set-pastp_9($2))),$1)),$1),$0),not(cop|be_10(pro:per|it_12,$0),$0)))
example_end

Sent: Adam don 't you think you may fall ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|think_5(pro:per|you_4,lambda $1_{r}.mod|may_7(v|fall_8(pro:per|you_6,$1),$1),$0),$0),$0))
example_end

Sent: what do you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: a horse ?
Sem: BARE($0,Q(det:art|a_1($1,n|horse_2($1),$0)))
example_end

Sent: in a magazine ?
Sem: Q(prep|in_1(det:art|a_2($0,n|magazine_3($0))))
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: what else do you see ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: you see another horse ?
Sem: lambda $0_{r}.Q(v|see_2(pro:per|you_1,qn|another_3($1,n|horse_4($1)),$0))
example_end

Sent: some stamps .
Sem: qn|some_1($0,n|stamp-pl_2($0))
example_end

Sent: you have_to put them on envelopes to mail them .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|put-zero_3(pro:per|you_1,lambda $1_{r}.v|mail_8(pro:obj|them_4,pro:obj|them_9,$1),$0),prep|on_5(BARE($2,n|envelope-pl_6($2)),$0)),$0)
example_end

Sent: you one envelope 's on the floor by Urs  foot .
Sem: lambda $0_{r}.and(aux|~be_4(BARE($1,det:num|one_2(n|envelope_3($1))),$0),adv|on_5(det:art|the_6($2,att(n|floor_7($2),prep|by_8(n:prop|ursula_9's($3,n|foot_11($3))))),$0))
example_end

Sent: yes you may fall if you aren 't careful .
Sem: lambda $0_{r}.and(conj|if_5(not(aux|be_7(co|careful_9(pro:per|you_6,$0),$0),$0),mod|may_3(v|fall_4(pro:per|you_2,$0),$0)),co|yes_1($0))
example_end

Sent: take the pillow out_of the wagon .
Sem: lambda $0_{r}.and(v|take_1(you,det:art|the_2($1,n|pillow_3($1)),$0),prep|out_of_4(det:art|the_5($2,n|wagon_6($2)),$0))
example_end

Sent: well it doesn 't belong up there .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|belong_5(pro:per|it_2,$0),adv|up_6(adv|there_7($0))),$0),$0),co|well_1($0))
example_end

Sent: oh you hung that up ?
Sem: lambda $0_{r}.Q(and(and(v|hang-past_3(pro:per|you_2,pro:rel|that_4,$0),adv|up_5($0)),co|oh_1($0)))
example_end

Sent: you better put those back up on the desk .
Sem: lambda $0_{r}.adj|good-cp_2(and(and(part|put-pastp_3(pro:per|you_1,det:dem|those_4,$0),adj|back_5(adv|up_6($0))),prep|on_7(det:art|the_8($1,n|desk_9($1)),$0)),$0)
example_end

Sent: those are Daddy 's glasses .
Sem: lambda $0_{r}.n:prop|daddy_3's'(pro:dem|those_1,n|glass-pl_5(pro:dem|those_1,$0))
example_end

Sent: no don 't swing it .
Sem: lambda $0_{r}.and(not(mod|do_2(v|swing_4(you,pro:per|it_5,$0),$0),$0),co|no_1($0))
example_end

Sent: you may break it dear .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: that 's right only the other way .
Sem: lambda $0_{r}.adv|right_3($0)
example_end

Sent: do you see anything ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,BARE($1,pro:indef|anything_4($1)),$0),$0))
example_end

Sent: do you see Urs ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,n:prop|ursula_4,$0),$0))
example_end

Sent: yes he 's touching you .
Sem: lambda $0_{r}.and(aux|~be_3(part|touch-presp_4(pro:sub|he_2,pro:per|you_5,$0),$0),co|yes_1($0))
example_end

Sent: because some things are surprises .
Sem: lambda $0_{r}.n|surprise-pl_5(qn|some_2($1,n|thing-pl_3($1)),$0)
example_end

Sent: not a cup ?
Sem: BARE($0,Q(not(det:art|a_2($1,n|cup_3($1)),$0)))
example_end

Sent: a naughty cup ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|naughty_2($1),n|cup_3($1)),$0)))
example_end

Sent: oh Adam what are you saying ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-pres_4(part|say-presp_6(pro:per|you_5,$1,$0),$0),co|oh_1($0))
example_end

Sent: would you like a piece ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,n|piece_5($1)),$0),$0))
example_end

Sent: you can have a pen .
Sem: lambda $0_{r}.mod|can_2(v|have_3(pro:per|you_1,det:art|a_4($1,n|pen_5($1)),$0),$0)
example_end

Sent: which one d you want ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do_3(v|want_5(pro:per|you_4,$1($2,pro:indef|one_2($2)),$0),$0)
example_end

Sent: d you want to write on this ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|write_5(pro:per|you_2,$1),prep|on_6(pro:dem|this_7,$1)),$0),$0))
example_end

Sent: I mean put the paper on this .
Sem: lambda $0_{r}.v|mean_2(pro:sub|i_1,lambda $1_{r}.and(v|put-zero_3(_,det:art|the_4($2,n|paper_5($2)),$1),prep|on_6(pro:dem|this_7,$1)),$0)
example_end

Sent: that 's it .
Sem: lambda $0_{r}.pro:dem|that_1(pro:per|it_3,$0)
example_end

Sent: what 're you going to write ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|write_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: oh have you been to see your doctor ?
Sem: lambda $0_{r}.Q(and(v|have_2(aux|be-pastp_4(pro:per|you_3,lambda $1_{r}.co|see_6(pro:per|you_3,det:poss|your_7($2,n|doctor_8($2)),$1),$0),$0),co|oh_1($0)))
example_end

Sent: what did he say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: he examined you ?
Sem: lambda $0_{r}.Q(v|examine-past_2(pro:sub|he_1,pro:per|you_3,$0))
example_end

Sent: he must have had something in his bag .
Sem: lambda $0_{r}.aux|have_3(mod|must_2(and(v|have-past_4(pro:sub|he_1,pro:indef|something_5,$0),prep|in_6(det:poss|his_7($1,n|bag_8($1)),$0)),$0),$0)
example_end

Sent: what color is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|color_2(pro:per|it_4,$0))
example_end

Sent: it 's a band .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|band_4(pro:per|it_1,$0))
example_end

Sent: a band .
Sem: det:art|a_1($0,n|band_2($0))
example_end

Sent: to hold it together .
Sem: lambda $0_{r}.and(v|hold_2(you,pro:per|it_3,$0),adv|together_4($0))
example_end

Sent: so it won 't come apart .
Sem: lambda $0_{r}.not(mod|will_3(and(v|come_5(pro:per|it_2,$0),adv|apart_6($0)),$0),$0)
example_end

Sent: sometimes he does .
Sem: lambda $0_{r}.and(v|do-3s_3(pro:sub|he_2,$0),adv|sometimes_1($0))
example_end

Sent: if he takes them apart I take them from him .
Sem: lambda $0_{r}.conj|if_1(and(v|take-3s_3(pro:sub|he_2,pro:obj|them_4,$0),adv|apart_5($0)),and(v|take_7(pro:sub|i_6,pro:obj|them_8,$0),prep|from_9(pro:obj|him_10,$0)))
example_end

Sent: he tries .
Sem: lambda $0_{r}.v|try-3s_2(pro:sub|he_1,$0)
example_end

Sent: no he couldn 't take it apart .
Sem: lambda $0_{r}.and(not(mod|could_3(and(v|take_5(pro:sub|he_2,pro:per|it_6,$0),adv|apart_7($0)),$0),$0),co|no_1($0))
example_end

Sent: yes it 's quite hard .
Sem: lambda $0_{r}.and(adv|quite_4(adv|hard_5(pro:per|it_2,$0)),co|yes_1($0))
example_end

Sent: no he didn 't break it .
Sem: lambda $0_{r}.and(not(mod|do_3(v|break_5(pro:sub|he_2,pro:per|it_6,$0),$0),$0),co|no_1($0))
example_end

Sent: d you like to ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,$0),$0))
example_end

Sent: sometimes I do .
Sem: lambda $0_{r}.and(v|do_3(pro:sub|i_2,$0),adv|sometimes_1($0))
example_end

Sent: it 's so small .
Sem: lambda $0_{r}.adv|so_3(adj|small_4(pro:per|it_1,$0))
example_end

Sent: David likes to fix things do you ?
Sem: lambda $0_{r}.Q(and(v|like-3s_2(n:prop|david_1,lambda $1_{r}.v|fix_4(n:prop|david_1,BARE($2,n|thing-pl_5($2)),$1),$0),v|do_6(pro:per|you_7,$0)))
example_end

Sent: he likes to fix things that break .
Sem: lambda $0_{r}.v|like-3s_2(pro:sub|he_1,lambda $1_{r}.v|fix_4(pro:sub|he_1,BARE($2,n|thing-pl_5($2)),$1),$0)
example_end

Sent: did it make a noise ?
Sem: lambda $0_{r}.Q(v|do-past_1(you,lambda $1_{r}.v|make_3(pro:per|it_2,det:art|a_4($2,n|noise_5($2)),$1),$0))
example_end

Sent: well how did you know it was no good ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(v|know_5(pro:per|you_4,lambda $1_{r}.not(adj|good_9(pro:per|it_6,$1),$1),$0),$2($0)),$0),co|well_1($0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: it disappeared .
Sem: lambda $0_{r}.part|appear-pastp_2(pro:per|it_1,$0)
example_end

Sent: can it write ?
Sem: lambda $0_{r}.Q(mod|can_1(v|write_3(pro:per|it_2,$0),$0))
example_end

Sent: what shall I use ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|use_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: what color d you want ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_3(v|want_5(pro:per|you_4,$1($2,n|color_2($2)),$0),$0)
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: no it 's not blue .
Sem: lambda $0_{r}.and(not(adj|blue_5(pro:per|it_2,$0),$0),co|no_1($0))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: did it click ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|click_3(pro:per|it_2,$0),$0))
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: which one d you want ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do_3(v|want_5(pro:per|you_4,$1($2,pro:indef|one_2($2)),$0),$0)
example_end

Sent: which one this color ?
Sem: lambda $1_{<<e,e>,e>}.lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|this_3($1($2,pro:indef|one_2($2)),n|color_4($1($2,pro:indef|one_2($2)),$0))
example_end

Sent: can you draw a moon ?
Sem: lambda $0_{r}.Q(mod|can_1(v|draw_3(pro:per|you_2,det:art|a_4($1,n|moon_5($1)),$0),$0))
example_end

Sent: a grapefruit ?
Sem: BARE($0,Q(det:art|a_1($1,n|grape+fruit_2($1),$0)))
example_end

Sent: what are you making ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|make-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: d you want some more paper ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,qn|some_4($1,and(qn|more_5($1),n|paper_6($1))),$0),$0))
example_end

Sent: how would you like to have a piece of red paper ?
Sem: lambda $4_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|like_4(pro:per|you_3,lambda $1_{r}.v|have_6(pro:per|you_3,det:art|a_7($2,att(n|piece_8($2),prep|of_9(BARE($3,and(n|red_10($3),n|paper_11($3)))))),$1),$0),$4($0)),$0)
example_end

Sent: shall I fold it in half ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|fold_3(pro:sub|i_2,pro:per|it_4,$0),prep|in_5(BARE($1,n|half_6($1)),$0)),$0))
example_end

Sent: what 're you making ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|make-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that was very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: what dropped in the water ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|drop-past_2($1,$0),prep|in_3(det:art|the_4($2,n|water_5($2)),$0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: it 's like suspenders .
Sem: lambda $0_{r}.conj|like_3(BARE($1,n|suspenders_4($1)),pro:per|it_1,$0)
example_end

Sent: oh you 're dressed up ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(v|dress-past_4(pro:per|you_2,$0),adv|up_5($0)),$0),co|oh_1($0)))
example_end

Sent: you look like a cowboy ?
Sem: lambda $0_{r}.Q(and(cop|look_2(pro:per|you_1,$0),conj|like_3(det:art|a_4($1,n|cow+boy_5($1)),$0)))
example_end

Sent: you 're a cowboy .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,n|cow+boy_4(pro:per|you_1,$0))
example_end

Sent: okay cowboy Adam .
Sem: lambda $0_{r}.and(n|cow+boy_2($0),co|okay_1($0))
example_end

Sent: well doesn 't your thumb go there ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|go_6(det:poss|your_4($1,n|thumb_5($1)),$0),adv|there_7($0)),$0),$0),co|well_1($0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a snowman yes .
Sem: lambda $0_{r}.and(det:art|a_1($1,n|snow+man_2($1),$0),co|yes_3($0))
example_end

Sent: no they must be David 's .
Sem: lambda $0_{r}.and(mod|must_3(poss|~s_6(n:prop|david_5,pro:sub|they_2,$0),$0),co|no_1($0))
example_end

Sent: those are David 's ?
Sem: lambda $0_{r}.Q(poss|~s_4(n:prop|david_3,pro:dem|those_1,$0))
example_end

Sent: well put them back in the bag .
Sem: lambda $0_{r}.and(and(and(v|put-zero_2(you,pro:obj|them_3,$0),adv|back_4($0)),prep|in_5(det:art|the_6($1,n|bag_7($1)),$0)),co|well_1($0))
example_end

Sent: well don 't put it on the floor .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|put-zero_4(you,pro:per|it_5,$0),prep|on_6(det:art|the_7($1,n|floor_8($1)),$0)),$0),$0),co|well_1($0))
example_end

Sent: I should think perhaps it is .
Sem: lambda $0_{r}.mod|should_2(v|think_3(pro:sub|i_1,lambda $1_{r}.and(cop|be-3s_6(pro:per|it_5,$1),adv|perhaps_4($1)),$0),$0)
example_end

Sent: is this a plate ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|this_2,n|plate_4(pro:dem|this_2,$0)))
example_end

Sent: because she has_to write .
Sem: lambda $0_{r}.mod:aux|has_to_3(v|write_4(pro:sub|she_2,$0),$0)
example_end

Sent: this is his bottle on the stove .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|this_1,att(n|bottle_4(pro:dem|this_1,$0),prep|on_5(det:art|the_6($1,n|stove_7($1)))))
example_end

Sent: what am I going to have for breakfast ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-1s_2(part|go-presp_4(pro:sub|i_3,lambda $1_{r}.and(v|have_6(pro:sub|i_3,$2,$1),prep|for_7(BARE($3,n|breakfast_8($3)),$1)),$0),$0)
example_end

Sent: what are we having for breakfast ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(n:gerund|have-presp_4(pro:sub|we_3,$1,$0),prep|for_5(BARE($2,n|breakfast_6($2)),$0)),$0)
example_end

Sent: what 're we having ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|have-presp_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: what 're we having for supper ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|have-presp_4(pro:sub|we_3,$1,$0),prep|for_5(BARE($2,n|supper_6($2)),$0)),$0)
example_end

Sent: meat and gravy .
Sem: BARE($0,n|gravy_3($0))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: and money !
Sem: BARE($0,n|money_2($0))
example_end

Sent: money gravy !
Sem: BARE($0,and_comp(n|money_1($0),n|gravy_2($0)))
example_end

Sent: I 'd like some money gravy .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:sub|i_1,qn|some_4($1,and_comp(n|money_5($1),n|gravy_6($1))),$0),$0)
example_end

Sent: some what on Adam ?
Sem: qn|some_1($0,att(det:int|what_2,prep|on_3(n:prop|adam_4),$0))
example_end

Sent: it 's a beard .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|beard_4(pro:per|it_1,$0))
example_end

Sent: will you show it to your Mother ?
Sem: lambda $0_{r}.mod|will_1(and(v|show_3(pro:per|you_2,pro:per|it_4,$0),prep|to_5(det:poss|your_6($1,n:prop|mother_7($1)),$0)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: it 's about a boat ?
Sem: lambda $0_{r}.Q(adv|about_3(det:art|a_4($1,n|boat_5($1)),pro:per|it_1,$0))
example_end

Sent: you 're making a machine ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|make-presp_3(pro:per|you_1,det:art|a_4($1,n|machine_5($1)),$0),$0))
example_end

Sent: I see .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,$0)
example_end

Sent: you broke the boat .
Sem: lambda $0_{r}.v|break-past_2(pro:per|you_1,det:art|the_3($1,n|boat_4($1)),$0)
example_end

Sent: who are the people on the boat ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,att(n|person-pl_4($2),prep|on_5(det:art|the_6($3,n|boat_7($3))))),$0)
example_end

Sent: to the writing .
Sem: prep|to_1(det:art|the_2($0,part|write-presp_3($0)))
example_end

Sent: here 's a funny little spoon for your dinner .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,att(and(adj|little_5($1),and(adj|fun-dn_4($1),n|spoon_6($1))),prep|for_7(det:poss|your_8($2,n|dinner_9($2))))),$0),pro:exist|here_1($0))
example_end

Sent: no they 're too sharp Adam .
Sem: lambda $0_{r}.and(adv|too_4(adj|sharp_5(pro:sub|they_2,$0)),co|no_1($0))
example_end

Sent: no they 're too sharp .
Sem: lambda $0_{r}.and(adv|too_4(adj|sharp_5(pro:sub|they_2,$0)),co|no_1($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: don 't stop on her feet .
Sem: lambda $0_{r}.not(mod|do_1(and(v|stop_3(you,$0),prep|on_4(det:poss|her_5($1,n|foot-pl_6($1)),$0)),$0),$0)
example_end

Sent: is it sharp ?
Sem: lambda $0_{r}.Q(adj|sharp_3(pro:per|it_2,$0))
example_end

Sent: don 't put a hole in Bobo .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,det:art|a_4($1,n|hole_5($1)),$0),prep|in_6(n:prop|bobo_7,$0)),$0),$0)
example_end

Sent: and how will you fix it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will_3(and(v|fix_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),$0)
example_end

Sent: didn 't you have it down here Adam ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|have_4(pro:per|you_3,pro:per|it_5,$0),adv|down_6(adv|here_7($0))),$0),$0))
example_end

Sent: which one is getting full ?
Sem: lambda $1_{<<e,e>,e>}.lambda $1_{<<e,e>,e>}.lambda $0_{r}.aux|be-3s_3(part|get-presp_4($1($2,pro:indef|one_2($2)),lambda $3_{r}.adj|full_5($1($2,pro:indef|one_2($2)),$3),$0),$0)
example_end

Sent: what 's happening to the other one ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|happen-presp_3($1,$0),prep|to_4(det:art|the_5($2,att(pro:indef|one_7,BARE($3,qn|other_6($3)),$2)),$0)),$0)
example_end

Sent: oh it 's going to have just a little left ?
Sem: lambda $0_{r}.Q(and(cop|~be_3(part|go-presp_4(pro:per|it_2,lambda $1_{r}.aux|have_6(adj|left_10(BARE($2,adv|just_7(adj|little_9($2))),$1),$1),$0),$0),co|oh_1($0)))
example_end

Sent: what 's happening now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|happen-presp_3($1,$0),adv|now_4($0)),$0)
example_end

Sent: oh you 're showing pictures ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|show-presp_4(pro:per|you_2,BARE($1,n|picture-pl_5($1)),$0),$0),co|oh_1($0)))
example_end

Sent: what is that movie about ?
Sem: lambda $0_{r}.adv|about_5(pro:int|what_1,pro:dem|that_3($1,n|movie_4($1)),$0)
example_end

Sent: a duck ?
Sem: BARE($0,Q(det:art|a_1($1,n|duck_2($1),$0)))
example_end

Sent: don 't touch anything just look .
Sem: lambda $0_{r}.and(not(mod|do_1(v|touch_3(you,pro:indef|anything_4,$0),$0),$0),and(cop|look_6(you,$0),adv|just_5($0)))
example_end

Sent: I hear someone taking it from it .
Sem: lambda $0_{r}.v|hear_2(pro:sub|i_1,lambda $1_{r}.and(part|take-presp_4(pro:indef|someone_3,pro:per|it_5,$1),prep|from_6(pro:per|it_7,$1)),$0)
example_end

Sent: what does it sound like ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|sound_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: she has_to push it down so it will record .
Sem: lambda $0_{r}.conj|so_6(mod|will_8(v|record_9(pro:per|it_7,$0),$0),mod:aux|has_to_2(and(v|push_3(pro:sub|she_1,pro:per|it_4,$0),adv|down_5($0)),$0))
example_end

Sent: yes what are you saying ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-pres_3(part|say-presp_5(pro:per|you_4,$1,$0),$0),co|yes_1($0))
example_end

Sent: two street lights ?
Sem: BARE($0,Q(and_comp(n|street_2($0),det:num|two_1(n|light-pl_3($0)))))
example_end

Sent: like that ?
Sem: Q(prep|like_1(pro:dem|that_2))
example_end

Sent: what 're you doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: making a hole ?
Sem: lambda $0_{r}.Q(part|make-presp_1(you,det:art|a_2($1,n|hole_3($1)),$0))
example_end

Sent: did you ask Ursula ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|ask_3(pro:per|you_2,n:prop|ursula_4,$0),$0))
example_end

Sent: no if you could blow it up .
Sem: lambda $0_{r}.and(mod|could_4(and(v|blow_5(pro:per|you_3,pro:per|it_6,$0),adv|up_7($0)),$0),co|no_1($0))
example_end

Sent: it 's very hard .
Sem: lambda $0_{r}.adv|very_3(adv|hard_4(pro:per|it_1,$0))
example_end

Sent: oh careful honey .
Sem: lambda $0_{r}.and(co|careful_2($0),co|oh_1($0))
example_end

Sent: yes your nose bleeds a lot .
Sem: lambda $0_{r}.and(v|bleed-3s_4(det:poss|your_2($1,n|nose_3($1)),det:art|a_5($2,n|lot_6($2)),$0),co|yes_1($0))
example_end

Sent: where is the spider ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|spider_4($1)),$0),$2($0))
example_end

Sent: in your nose ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|nose_3($0))))
example_end

Sent: oh my_goodness .
Sem: lambda $0_{r}.and(co|my_goodness_2($0),co|oh_1($0))
example_end

Sent: how did he get up there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|get_4(pro:sub|he_3,$0),$1($0)),adv|up_5(adv|there_6($0))),$0)
example_end

Sent: what is that you 're using ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: a knife ?
Sem: BARE($0,Q(det:art|a_1($1,n|knife_2($1),$0)))
example_end

Sent: what are you making with the knife ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|make-presp_4(pro:per|you_3,$1,$0),prep|with_5(det:art|the_6($2,n|knife_7($2)),$0)),$0)
example_end

Sent: a spoon ?
Sem: BARE($0,Q(det:art|a_1($1,n|spoon_2($1),$0)))
example_end

Sent: where did you put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: and what will you do with the paper ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_3(and(v|do_5(pro:per|you_4,$1,$0),prep|with_6(det:art|the_7($2,n|paper_8($2)),$0)),$0)
example_end

Sent: swallow it ?
Sem: lambda $0_{r}.Q(v|swallow_1(you,pro:per|it_2,$0))
example_end

Sent: because I wanted to know .
Sem: lambda $0_{r}.v|want-past_3(pro:sub|i_2,lambda $1_{r}.v|know_5(pro:sub|i_2,$1),$0)
example_end

Sent: I can make you another spoon .
Sem: lambda $0_{r}.mod|can_2(v|make_3(pro:sub|i_1,qn|another_5($1,n|spoon_6($1)),pro:per|you_4,$0),$0)
example_end

Sent: no he doesn 't play with the scissors .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|play_5(pro:sub|he_2,$0),prep|with_6(det:art|the_7($1,n|scissors_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: those are tweezers .
Sem: lambda $0_{r}.n|tweezers_3(pro:dem|those_1,$0)
example_end

Sent: for picking up things .
Sem: lambda $0_{r}.and(part|pick-presp_2(you,BARE($1,n|thing-pl_4($1)),$0),adv|up_3($0))
example_end

Sent: you want a knife ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,det:art|a_3($1,n|knife_4($1)),$0))
example_end

Sent: careful now .
Sem: BARE($0,adv|now_2(co|careful_1($0)))
example_end

Sent: it frightened you didn 't it ?
Sem: lambda $0_{r}.Q(and(v|frighten-past_2(pro:per|it_1,pro:per|you_3,$0),not(mod|do_4(pro:per|it_6,$0),$0)))
example_end

Sent: here 's a butter knife .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,and_comp(n|butter_4($1),n|knife_5($1))),$0),pro:exist|here_1($0))
example_end

Sent: yes that 's yours .
Sem: lambda $0_{r}.and(pro:poss|yours_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: what did I do to him ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:sub|i_3,$1,$0),prep|to_5(pro:obj|him_6,$0)),$0)
example_end

Sent: no you took it away .
Sem: lambda $0_{r}.and(and(v|take-past_3(pro:per|you_2,pro:per|it_4,$0),adv|away_5($0)),co|no_1($0))
example_end

Sent: I don 't think that was a worm .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|a_7(pro:dem|that_5,n|worm_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: I think that was a snake maybe .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:dem|that_3,n|snake_6(pro:dem|that_3,$1)),$0),adv|maybe_7($0))
example_end

Sent: I put it away .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:sub|i_1,pro:per|it_3,$0),adv|away_4($0))
example_end

Sent: in my purse .
Sem: prep|in_1(det:poss|my_2($0,n|purse_3($0)))
example_end

Sent: in this purse .
Sem: prep|in_1(pro:dem|this_2($0,n|purse_3($0)))
example_end

Sent: it 's just a toy snake .
Sem: lambda $0_{r}.det:art|a_4(pro:per|it_1,and_comp(n|toy_5(pro:per|it_1,$0),n|snake_6(pro:per|it_1,$0)))
example_end

Sent: it 's just a toy snake .
Sem: lambda $0_{r}.det:art|a_4(pro:per|it_1,and_comp(n|toy_5(pro:per|it_1,$0),n|snake_6(pro:per|it_1,$0)))
example_end

Sent: play with it .
Sem: lambda $0_{r}.and(n|play_1(you,$0),prep|with_2(pro:per|it_3,$0))
example_end

Sent: no you play games with it .
Sem: lambda $0_{r}.and(and(n|play_3(pro:per|you_2,BARE($1,n|game-pl_4($1)),$0),prep|with_5(pro:per|it_6,$0)),qn|no_1($0))
example_end

Sent: must be a bug ?
Sem: det:art|a_3($0,n|bug_4($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: after you open it .
Sem: lambda $0_{r}.v|open_3(pro:per|you_2,pro:per|it_4,$0)
example_end

Sent: I see a what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|see_2(pro:sub|i_1,$1,$0)
example_end

Sent: a nut ?
Sem: BARE($0,Q(det:art|a_1($1,n|nut_2($1),$0)))
example_end

Sent: but they 're backwards .
Sem: lambda $0_{r}.and(cop|~be_3(pro:sub|they_2,$0),adv|backwards_4($0))
example_end

Sent: turn them around .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:obj|them_2,$0),adv|around_3($0))
example_end

Sent: can 't you see better ?
Sem: lambda $0_{r}.Q(not(mod|can_1(v|see_4(pro:per|you_3,lambda $1_{r}.adj|good-cp_5(pro:per|you_3,$1),$0),$0),$0))
example_end

Sent: is it was a snake ?
Sem: lambda $0_{r}.Q(det:art|a_4(pro:per|it_2,n|snake_5(pro:per|it_2,$0)))
example_end

Sent: was it a snake ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|snake_4(pro:per|it_2,$0)))
example_end

Sent: it was a snake .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|snake_4(pro:per|it_1,$0))
example_end

Sent: it 's a shell .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|shell_4(pro:per|it_1,$0))
example_end

Sent: it sounds like the ocean .
Sem: lambda $0_{r}.and(v|sound-3s_2(pro:per|it_1,$0),prep|like_3(det:art|the_4($1,n|ocean_5($1)),$0))
example_end

Sent: it 's a sea shell .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|sea_4(pro:per|it_1,$0),n|shell_5(pro:per|it_1,$0)))
example_end

Sent: no it 's a real shell .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,and(n|shell_6(pro:per|it_2,$0),adj|real_5(pro:per|it_2,$0))),co|no_1($0))
example_end

Sent: if you listen very carefully you can hear something that sounds like the ocean .
Sem: lambda $0_{r}.mod|can_7(conj|if_1(and(v|listen_3(pro:per|you_2,$0),adv|very_4(adv|care-dadj_5($0))),v|hear_8(pro:per|you_6,pro:indef|something_9,$0)),$0)
example_end

Sent: hear the waves ?
Sem: lambda $0_{r}.Q(v|hear_1(you,det:art|the_2($1,n|wave-pl_3($1)),$0))
example_end

Sent: some little sea creature was in there once .
Sem: lambda $0_{r}.and(and(cop|be-past_5(qn|some_1($1,and_comp(n|sea_3($1),and(adj|little_2($1),n|creature_4($1)))),$0),prep|in_6(adv|there_7($0))),adv|once_8($0))
example_end

Sent: you let Bobo hear it .
Sem: lambda $0_{r}.v|let-zero_2(pro:per|you_1,lambda $1_{r}.v|hear_4(n:prop|bobo_3,pro:per|it_5,$1),$0)
example_end

Sent: that sounds like the stove ?
Sem: lambda $0_{r}.Q(and(n|sound-pl_2(pro:dem|that_1,$0),prep|like_3(det:art|the_4($1,n|stove_5($1)),$0)))
example_end

Sent: what part of the stove sounds like that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(v|sound-3s_6($1($2,att(n|part_2($2),prep|of_3(det:art|the_4($3,n|stove_5($3))))),$0),prep|like_7(pro:dem|that_8,$0))
example_end

Sent: from the ocean .
Sem: prep|from_1(det:art|the_2($0,n|ocean_3($0)))
example_end

Sent: I put it away .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:sub|i_1,pro:per|it_3,$0),adv|away_4($0))
example_end

Sent: in my purse .
Sem: prep|in_1(det:poss|my_2($0,n|purse_3($0)))
example_end

Sent: careful now .
Sem: BARE($0,adv|now_2(co|careful_1($0)))
example_end

Sent: what happens when you get married ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_2($1,$0),and(part|marry-pastp_6(_,pro:per|you_4,$0),$2($0)))
example_end

Sent: where 's the zipper ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|zip-dv_4($1)),$0),$2($0))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: let 's close the door alright ?
Sem: lambda $0_{r}.Q(and(v:obj|let_1(you,lambda $1_{r}.v|close_3(pro:obj|~us_2,det:art|the_4($2,n|door_5($2)),$1),$0),adj|alright_6($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you 're a kitten ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,n|kitten_4(pro:per|you_1,$0)))
example_end

Sent: now you can make dinner .
Sem: lambda $0_{r}.mod|can_3(and(v|make_4(pro:per|you_2,BARE($1,n|dinner_5($1)),$0),adv|now_1($0)),$0)
example_end

Sent: some more things for supper .
Sem: qn|some_1($0,att(and(qn|more_2($0),n|thing-pl_3($0)),prep|for_4(BARE($1,n|supper_5($1)))))
example_end

Sent: oh Adam isn 't that nice ?
Sem: lambda $0_{r}.Q(and(not(adj|nice_6(pro:dem|that_5,$0),$0),co|oh_1($0)))
example_end

Sent: he wants a bottle ?
Sem: lambda $0_{r}.Q(v|want-3s_2(pro:sub|he_1,det:art|a_3($1,n|bottle_4($1)),$0))
example_end

Sent: who 's the baby ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|baby_4($2)),$0)
example_end

Sent: yes I have one .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|i_2,pro:indef|one_4,$0),co|yes_1($0))
example_end

Sent: are you feeding the baby ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|feed-presp_3(pro:per|you_2,det:art|the_4($1,n|baby_5($1)),$0),$0))
example_end

Sent: yes I am feeding the baby .
Sem: lambda $0_{r}.and(aux|be-1s_3(part|feed-presp_4(pro:sub|i_2,det:art|the_5($1,n|baby_6($1)),$0),$0),co|yes_1($0))
example_end

Sent: may I have another bottle ?
Sem: lambda $0_{r}.Q(mod|may_1(v|have_3(pro:sub|i_2,qn|another_4($1,n|bottle_5($1)),$0),$0))
example_end

Sent: up for Bozo for breakfast ?
Sem: lambda $0_{r}.Q(adv|up_1_for_2(you,att(n:prop|bozo_3,prep|for_4(BARE($1,n|breakfast_5($1)))),$0))
example_end

Sent: oh yes they will all break if you aren 't careful .
Sem: lambda $0_{r}.and(and(conj|if_7(not(co|careful_11(pro:per|you_8,$0),$0),mod|will_4(and(v|break_6(pro:sub|they_3,$0),post|all_5($0)),$0)),co|oh_1($0)),co|yes_2($0))
example_end

Sent: what did he break ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|break_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: when is breakfast time ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(BARE($1,and_comp(n|breakfast_3($1),n|time_4($1))),$0),$2($0))
example_end

Sent: it 's night ?
Sem: lambda $0_{r}.Q(n|night+time_3(pro:per|it_1,$0))
example_end

Sent: what do we eat at night ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|eat_4(pro:sub|we_3,$1,$0),prep|at_5(BARE($2,n|night+time_6($2)),$0)),$0)
example_end

Sent: who drank that milk all up ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|drink-past_2($1,pro:dem|that_3($2,n|milk_4($2)),$0),adv|all_5(adv|up_6($0)))
example_end

Sent: didn 't Bobo have that bottle ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_4(n:prop|bobo_3,pro:dem|that_5($1,n|bottle_6($1)),$0),$0),$0))
example_end

Sent: oh he had one of these bottles ?
Sem: lambda $0_{r}.Q(and(v|have-past_3(pro:sub|he_2,BARE($1,det:num|one_4($1)),$0),co|oh_1($0)))
example_end

Sent: I will have a what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_2(v|have_3(pro:sub|i_1,$1,$0),$0)
example_end

Sent: what 're you going to do with those ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),prep|with_7(pro:dem|those_8,$1)),$0),$0)
example_end

Sent: what are you going to make ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|make_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: well I don 't know .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,$0),$0),$0),co|well_1($0))
example_end

Sent: what would you like to have ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|will-cond_2(v|like_4(pro:per|you_3,lambda $1_{r}.v|have_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: cookies and grapefruit .
Sem: BARE($0,n|grape+fruit_3($0))
example_end

Sent: yes we have one of those .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|we_2,BARE($1,pro:indef|one_4($1)),$0),co|yes_1($0))
example_end

Sent: yes we have one of those .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|we_2,BARE($1,pro:indef|one_4($1)),$0),co|yes_1($0))
example_end

Sent: one more what ?
Sem: att(BARE($0,det:num|one_1(pro:int|what_3($0))),BARE($1,adv|more_2($1)))
example_end

Sent: or marbles ?
Sem: BARE($0,Q(n|marble-pl_2($0)))
example_end

Sent: let 's have marbles .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|have_3(pro:obj|~us_2,BARE($2,n|marble-pl_4($2)),$1),$0)
example_end

Sent: this is your mixing bowl .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|this_1,and_comp(part|mix-presp_4(pro:dem|this_1,$0),n|bowl_5(pro:dem|this_1,$0)))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: are you going to make a valentine cookie ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.v|make_5(pro:per|you_2,det:art|a_6($2,and_comp(n|valentine_7($2),n|cookie_8($2))),$1),$0),$0))
example_end

Sent: Adam how d you make the cookie dough ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_3(and(v|make_5(pro:per|you_4,det:art|the_6($1,and_comp(n|cookie_7($1),n|dough_8($1))),$0),$2($0)),$0)
example_end

Sent: you 're making what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|make-presp_3(pro:per|you_1,$1,$0),$0)
example_end

Sent: yes I guess .
Sem: lambda $0_{r}.and(v|guess_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: no she has nothing else .
Sem: lambda $0_{r}.and(aux|have-3s_3(pro:sub|she_2,post|else_5(pro:indef|nothing_4),$0),co|no_1($0))
example_end

Sent: yes you may put that in there .
Sem: lambda $0_{r}.and(mod|may_3(and(v|put-zero_4(pro:per|you_2,pro:dem|that_5,$0),prep|in_6(adv|there_7($0))),$0),co|yes_1($0))
example_end

Sent: well there 're some more behind you .
Sem: lambda $0_{r}.pro:indef|more_5($0)
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: shall I get the crayons ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|get_3(pro:sub|i_2,det:art|the_4($1,n|crayon-pl_5($1)),$0),$0))
example_end

Sent: maybe we can attach it to two chairs .
Sem: lambda $0_{r}.mod|can_3(and(and(v|attach_4(pro:sub|we_2,pro:per|it_5,$0),adv|maybe_1($0)),prep|to_6(BARE($1,det:num|two_7(n|chair-pl_8($1))),$0)),$0)
example_end

Sent: oh you have some pins .
Sem: lambda $0_{r}.and(v|have_3(pro:per|you_2,qn|some_4($1,n|pin-pl_5($1)),$0),co|oh_1($0))
example_end

Sent: shall I make it straight Adam ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|make_3(pro:sub|i_2,lambda $1_{r}.n|straight_5(pro:per|it_4,$1),$0),$0))
example_end

Sent: I 'll bring some handkerchiefs .
Sem: lambda $0_{r}.mod|~will_2(v|bring_3(pro:sub|i_1,qn|some_4($1,n|handkerchief-pl_5($1)),$0),$0)
example_end

Sent: let 's hang some Kleenex up .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|hang_3(pro:obj|~us_2,qn|some_4($2,n:prop|kleenex_5($2)),$1),adv|up_6($1)),$0)
example_end

Sent: oh you 're smiling back ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|smile-presp_4(pro:per|you_2,$0),adv|back_5($0)),$0),co|oh_1($0)))
example_end

Sent: why I don 't think you 'd need to use all of it .
Sem: lambda $4_{<r,t>}.lambda $0_{r}.not(mod|do_3(and(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|~genmod_7(v|need_8(pro:per|you_6,lambda $2_{r}.v|use_10(pro:per|you_6,BARE($3,att(qn|all_11($3),prep|of_12(pro:per|it_13))),$2),$1),$1),$0),$4($0)),$0),$0)
example_end

Sent: that 's a nice white wash .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(and(n|wash_6(pro:dem|that_1,$0),adj|nice_4(pro:dem|that_1,$0)),adj|white_5(pro:dem|that_1,$0)))
example_end

Sent: while your clothes dry ?
Sem: lambda $0_{r}.Q(adj|dry_4(det:poss|your_2($1,n:pt|clothes_3($1)),$0))
example_end

Sent: this is the dining room ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:dem|this_1,and_comp(part|dine-presp_4(pro:dem|this_1,$0),n|room_5(pro:dem|this_1,$0))))
example_end

Sent: oh that 's the kitchen .
Sem: lambda $0_{r}.and(det:art|the_4(pro:dem|that_2,n|kitchen_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: you have two kitchens .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,BARE($1,det:num|two_3(n|kitchen-pl_4($1))),$0)
example_end

Sent: why is Bozo going to eat with the chickens ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|go-presp_4(n:prop|bozo_3,lambda $1_{r}.and(v|eat_6(n:prop|bozo_3,$1),prep|with_7(det:art|the_8($2,n|chicken-pl_9($2)),$1)),$0),$3($0)),$0)
example_end

Sent: oh he may spill the food .
Sem: lambda $0_{r}.and(mod|may_3(v|spill_4(pro:sub|he_2,det:art|the_5($1,n|food_6($1)),$0),$0),co|oh_1($0))
example_end

Sent: oh I didn 't know you had any chickens .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,lambda $1_{r}.part|have-pastp_7(pro:per|you_6,qn|any_8($2,n|chicken-pl_9($2)),$1),$0),$0),$0),co|oh_1($0))
example_end

Sent: you 'll play cowboys and Indians after supper ?
Sem: lambda $0_{r}.Q(mod|~will_2(and(v|play_3(pro:per|you_1,n:prop|indians_6,$0),prep|after_7(BARE($1,n|supper_8($1)),$0)),$0))
example_end

Sent: why are the Indians bad ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(adj|bad_5(det:art|the_3($2,n:prop|indians_4($2)),$0))
example_end

Sent: well why are the Indians bad ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(adj|bad_6(det:art|the_4($2,n:prop|indians_5($2)),$0)),co|well_1($0))
example_end

Sent: but that 's the living room .
Sem: lambda $0_{r}.det:art|the_4(pro:dem|that_2,and_comp(part|live-presp_5(pro:dem|that_2,$0),n|room_6(pro:dem|that_2,$0)))
example_end

Sent: it 's a nice kitchen .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and(n|kitchen_5(pro:per|it_1,$0),adj|nice_4(pro:per|it_1,$0)))
example_end

Sent: I may look at them in the kitchen .
Sem: lambda $0_{r}.mod|may_2(and(and(cop|look_3(pro:sub|i_1,$0),prep|at_4(pro:obj|them_5,$0)),prep|in_6(det:art|the_7($1,n|kitchen_8($1)),$0)),$0)
example_end

Sent: the bowl ?
Sem: BARE($0,Q(det:art|the_1($1,n|bowl_2($1),$0)))
example_end

Sent: a beater .
Sem: det:art|a_1($0,n|beat-dv_2($0))
example_end

Sent: what are we having for supper ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(n:gerund|have-presp_4(pro:sub|we_3,$1,$0),prep|for_5(BARE($2,n|supper_6($2)),$0)),$0)
example_end

Sent: just a minute .
Sem: adv|just_1(det:art|a_2($0,n|minute_3($0)))
example_end

Sent: you 're going to have some water tea ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|have_5(pro:per|you_1,qn|some_6($2,and_comp(n|water_7($2),n|tea_8($2))),$1),$0),$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: that 's Ursula 's .
Sem: lambda $0_{r}.poss|~s_4(n:prop|ursula_3,pro:dem|that_1,$0)
example_end

Sent: you said this was mine .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.pro:poss|mine_5(pro:dem|this_3,$1),$0)
example_end

Sent: don 't put that so far .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:dem|that_4,$0),adv|so_5(adv|far_6($0))),$0),$0)
example_end

Sent: you 'll be on the cord .
Sem: lambda $0_{r}.mod|~will_2(prep|on_4(det:art|the_5($1,n|cord_6($1)),pro:per|you_1,$0),$0)
example_end

Sent: oh Bozo 's bottle .
Sem: lambda $0_{r}.and(n:prop|bozo_2's($1,n|bottle_4($1),$0),co|oh_1($0))
example_end

Sent: it 's not ready ?
Sem: lambda $0_{r}.Q(not(v|ready_4(pro:per|it_1,$0),$0))
example_end

Sent: under your rolling pin .
Sem: adv|under_1(det:poss|your_2($0,and_comp(part|roll-presp_3($0),n|pin_4($0))))
example_end

Sent: I think this is a cake knife .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:dem|this_3,and_comp(n|cake_6(pro:dem|this_3,$1),n|knife_7(pro:dem|this_3,$1))),$0)
example_end

Sent: this isn 't a knife .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|this_1,n|knife_5(pro:dem|this_1,$0)),$0)
example_end

Sent: it 's a fork .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|fork_4(pro:per|it_1,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: careful of the cord .
Sem: BARE($0,co|careful_1($0))
example_end

Sent: is the tea ready ?
Sem: lambda $0_{r}.Q(adj|ready_4(det:art|the_2($1,n|tea_3($1)),$0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: I 'll let it cool .
Sem: lambda $0_{r}.mod|~will_2(v|let-zero_3(pro:sub|i_1,lambda $1_{r}.adj|cool_5(pro:per|it_4,$1),$0),$0)
example_end

Sent: what d you do with a water hydrant ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(det:art|a_6($2,and_comp(n|water_7($2),n|hydrant_8($2))),$0)),$0)
example_end

Sent: oh you don 't have a small kitchen you have a big kitchen .
Sem: lambda $0_{r}.and(not(and(mod|do_3(v|have_5(pro:per|you_2,det:art|a_6($1,and(adj|small_7($1),n|kitchen_8($1))),$0),$0),v|have_10(pro:per|you_9,det:art|a_11($2,and(adj|big_12($2),n|kitchen_13($2))),$0)),$0),co|oh_1($0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: under the sofa .
Sem: prep|under_1(det:art|the_2($0,n|sofa_3($0)))
example_end

Sent: why does your water come from the hydrant there ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(and(and(v|come_5(det:poss|your_3($1,n|water_4($1)),$0),$2($0)),prep|from_6(det:art|the_7($3,n|hydrant_8($3)),$0)),adv|there_9($0)),$0)
example_end

Sent: what did you put in the trash can ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,$1,$0),prep|in_5(det:art|the_6($2,and_comp(n|trash_7($2),mod|can_8($2))),$0)),$0)
example_end

Sent: that 's Daddy ?
Sem: lambda $0_{r}.Q(n:prop|daddy_3(pro:dem|that_1,$0))
example_end

Sent: what kind of cake do you have Adam ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_5(v|have_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|cake_4($3))))),$0),$0)
example_end

Sent: buddy cakes ?
Sem: BARE($0,Q(and_comp(n|buddy_1($0),n|cake-pl_2($0))))
example_end

Sent: what kind of cakes are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_6,att(n|kind_2(pro:dem|those_6,$0),prep|of_3(BARE($2,n|cake-pl_4($2)))))
example_end

Sent: here are two .
Sem: lambda $0_{r}.cop|be-pres_2(you,$0)
example_end

Sent: I see another one .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,qn|another_3($1,pro:indef|one_4($1)),$0)
example_end

Sent: don 't you see it ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|see_4(pro:per|you_3,pro:per|it_5,$0),$0),$0))
example_end

Sent: a dog cake .
Sem: det:art|a_1($0,and_comp(n|dog_2($0),n|cake_3($0)))
example_end

Sent: I 've never had any dog cake .
Sem: lambda $0_{r}.aux|~have_2(and(part|have-pastp_4(pro:sub|i_1,qn|any_5($1,and_comp(n|dog_6($1),n|cake_7($1))),$0),adv|never_3($0)),$0)
example_end

Sent: dog cake and picnic cake ?
Sem: BARE($0,Q(and_comp(n|picnic_4($0),and_comp(n|dog_1($0),n|cake_5($0)))))
example_end

Sent: a dog cake must be a cake for a dog .
Sem: lambda $0_{r}.mod|must_4(det:art|a_6(det:art|a_1($1,and_comp(n|dog_2($1),n|cake_3($1))),att(n|cake_7(det:art|a_1($1,and_comp(n|dog_2($1),n|cake_3($1))),$0),prep|for_8(det:art|a_9($2,n|dog_10($2))))),$0)
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: Bozo is getting some supper for his meal for the chickens ?
Sem: lambda $0_{r}.Q(aux|be-3s_2(part|get-presp_3(n:prop|bozo_1,qn|some_4($1,att(n|supper_5($1),prep|for_6(det:poss|his_7($2,att(n|meal_8($2),prep|for_9(det:art|the_10($3,n|chicken-pl_11($3)))))))),$0),$0))
example_end

Sent: you 're going out to the farm to get some eggs ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(and(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|get_9(pro:per|you_1,qn|some_10($2,n|egg-pl_11($2)),$1),$0),adv|out_4($0)),prep|to_5(det:art|the_6($3,n|farm_7($3)),$0)),$0))
example_end

Sent: he did what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(pro:sub|he_1,$1,$0)
example_end

Sent: oh and the chicken caught it .
Sem: lambda $0_{r}.and(v|catch-past_5(det:art|the_3($1,n|chicken_4($1)),pro:per|it_6,$0),co|oh_1($0))
example_end

Sent: and gave it to Bobo to eat .
Sem: lambda $0_{r}.and(v|give-past_2(you,pro:per|it_3,$0),prep|to_4(BARE($1,rel(n:prop|bobo_5($1),lambda $2_{r}.v|eat_7(you,$2))),$0))
example_end

Sent: well she 's in the kitchen .
Sem: lambda $0_{r}.and(prep|in_4(det:art|the_5($1,n|kitchen_6($1)),pro:sub|she_2,$0),co|well_1($0))
example_end

Sent: am I in your other kitchen ?
Sem: lambda $0_{r}.Q(prep|in_3(det:poss|your_4($1,and(qn|other_5($1),n|kitchen_6($1))),pro:sub|i_2,$0))
example_end

Sent: oh you want me to move ?
Sem: lambda $0_{r}.Q(and(v|want_3(pro:per|you_2,lambda $1_{r}.v|move_6(pro:obj|me_4,$1),$0),co|oh_1($0)))
example_end

Sent: I don 't think it 's broken I think it just came out .
Sem: lambda $0_{r}.not(and(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.part|break-pastp_7(pro:per|it_5,$1),$0),$0),v|think_9(pro:sub|i_8,lambda $2_{r}.and(and(v|come-past_12(pro:per|it_10,$2),adv|just_11($2)),adv|out_13($2)),$0)),$0)
example_end

Sent: no it didn 't break did it ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(v|break_5(pro:per|it_2,$0),$0),$0),mod|do-past_6(pro:per|it_7,$0)),co|no_1($0)))
example_end

Sent: those two are just alike .
Sem: lambda $0_{r}.adv|just_4(adv|alike_5(pro:dem|those_1($1,det:num|two_2($1)),$0))
example_end

Sent: well how will the light keep Paul from waking up ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(mod|will_3(and(v|keep_6(det:art|the_4($1,n|light_5($1)),n:prop|paul_7,$0),$2($0)),$0),and(n:gerund|wake-presp_9_from_8(you,$0),adv|up_10($0))),co|well_1($0))
example_end

Sent: from waking up yes .
Sem: lambda $0_{r}.and(and(n:gerund|wake-presp_2(you,$0),prep|up_3($0)),co|yes_4($0))
example_end

Sent: that 's from Pinocchio .
Sem: lambda $0_{r}.prep|from_3(n:prop|pinocchio_4,pro:dem|that_1,$0)
example_end

Sent: sixty dollars ?
Sem: BARE($0,Q(det:num|sixty_1(n|dollar-pl_2($0))))
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: what did the carpenter say ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(v|say_5(det:art|the_3($1,n|carpenter_4($1)),$2,$0),$0)
example_end

Sent: you didn 't understand what he said ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_2(v|understand_4(pro:per|you_1,$1,$0),$0),$0)
example_end

Sent: what did he say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: and what did he say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|say_5(pro:sub|he_4,$1,$0),$0)
example_end

Sent: you were talking to the door that ?
Sem: lambda $0_{r}.Q(aux|be-past_2(and(part|talk-presp_3(pro:per|you_1,pro:dem|that_7,$0),prep|to_4(det:art|the_5($1,n|door_6($1)),$0)),$0))
example_end

Sent: you were telling the door that ?
Sem: lambda $0_{r}.Q(aux|be-past_2(part|tell-presp_3(pro:per|you_1,pro:dem|that_6,det:art|the_4($1,n|door_5($1)),$0),$0))
example_end

Sent: you had an accident .
Sem: lambda $0_{r}.v|have-past_2(pro:per|you_1,det:art|a_3($1,n|accident_4($1)),$0)
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: I think you broke it .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|break-past_4(pro:per|you_3,pro:per|it_5,$1),$0)
example_end

Sent: you can throw it away if you want to .
Sem: lambda $0_{r}.conj|if_6(v|want_8(pro:per|you_7,$0),mod|can_2(and(v|throw_3(pro:per|you_1,pro:per|it_4,$0),adv|away_5($0)),$0))
example_end

Sent: I guess it 's because you weren 't playing with it gently enough .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.conj|because_5(not(cop|be_7(and(and(part|play-presp_9(pro:per|you_6,$1),prep|with_10(pro:per|it_11,$1)),adv|gentle-dadj_12(adv|enough_13($1))),$1),$1),aux|~be_4(you,$1)),$0)
example_end

Sent: which way it were ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,n|way_2(pro:per|it_3,$0))
example_end

Sent: yes that 's right .
Sem: lambda $0_{r}.and(n|right_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: I think he 's all finished by now .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.cop|~be_4(and(and(part|finish-pastp_6(pro:sub|he_3,$1),adv|all_5($1)),adv|by_7(adv|now_8($1))),$1),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: perhaps he 's finished too .
Sem: lambda $0_{r}.aux|~be_3(and(and(part|finish-pastp_4(pro:sub|he_2,$0),adv|perhaps_1($0)),post|too_5($0)),$0)
example_end

Sent: did he take his pencil sharpener ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|take_3(pro:sub|he_2,det:poss|his_4($1,and_comp(n|pencil_5($1),n|sharpen-dv_6($1))),$0),$0))
example_end

Sent: whose pencil sharpener was that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_5,and_comp(n|pencil_2(pro:dem|that_5,$0),n|sharpen-dv_3(pro:dem|that_5,$0)))
example_end

Sent: I think perhaps he was going to put it up down there wasn 't he ?
Sem: lambda $0_{r}.Q(v|think_2(pro:sub|i_1,lambda $1_{r}.and(aux|be-past_5(and(part|go-presp_6(pro:sub|he_4,lambda $2_{r}.and(and(v|put-zero_8(pro:sub|he_4,pro:per|it_9,$2),adv|up_10($2)),adv|down_11(adv|there_12($2))),$1),adv|perhaps_3($1)),$1),not(cop|be_13(pro:sub|he_15,$1),$1)),$0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: did you pick the screws up ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|pick_3(pro:per|you_2,det:art|the_4($1,n|screw-pl_5($1)),$0),adv|up_6($0)),$0))
example_end

Sent: what does that roll like ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(n|roll_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: no you have_to turn it .
Sem: lambda $0_{r}.and(mod:aux|have_to_3(v|turn_4(pro:per|you_2,pro:per|it_5,$0),$0),co|no_1($0))
example_end

Sent: does it what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_1($1(pro:per|it_2,$0),$0)
example_end

Sent: not without breaking .
Sem: lambda $0_{r}.not(n:gerund|break-presp_3(you,$0),$0)
example_end

Sent: yes you had an accident .
Sem: lambda $0_{r}.and(v|have-past_3(pro:per|you_2,det:art|a_4($1,n|accident_5($1)),$0),co|yes_1($0))
example_end

Sent: they 're all clean ?
Sem: lambda $0_{r}.Q(adv|all_3(adj|clean_4(pro:sub|they_1,$0)))
example_end

Sent: Adam did you open this package ?
Sem: lambda $0_{r}.Q(mod|do-past_2(v|open_4(pro:per|you_3,pro:dem|this_5($1,n|package_6($1)),$0),$0))
example_end

Sent: you opened it by yourself didn 't you ?
Sem: lambda $0_{r}.Q(and(and(v|open-past_2(pro:per|you_1,pro:per|it_3,$0),prep|by_4(pro:refl|yourself_5,$0)),not(mod|do_6(pro:per|you_8,$0),$0)))
example_end

Sent: would you like a pen ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,n|pen_5($1)),$0),$0))
example_end

Sent: a red one .
Sem: det:art|a_1($0,att(pro:indef|one_3,BARE($1,n|red_2($1)),$0))
example_end

Sent: no it 's a red one .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,and(pro:indef|one_6(pro:per|it_2,$0),n|red_5(pro:per|it_2,$0))),co|no_1($0))
example_end

Sent: I ate my supper all up .
Sem: lambda $0_{r}.and(v|eat-past_2(pro:sub|i_1,det:poss|my_3($1,n|supper_4($1)),$0),adv|all_5(adv|up_6($0)))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: what statue told you ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|tell-past_3($1($2,n|statue_2($2)),pro:per|you_4,$0)
example_end

Sent: I don 't believe it .
Sem: lambda $0_{r}.not(mod|do_2(v|believe_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: nothing in that hand either .
Sem: adv|either_5(att(pro:indef|nothing_1,prep|in_2(pro:dem|that_3($0,n|hand_4($0)))))
example_end

Sent: oh you better put that back in there .
Sem: lambda $0_{r}.and(and(and(and(v|put-zero_4(pro:per|you_2,pro:dem|that_5,$0),adj|good-cp_3($0)),adv|back_6($0)),prep|in_7(adv|there_8($0))),co|oh_1($0))
example_end

Sent: you go put that right back .
Sem: lambda $0_{r}.and(v|put-zero_3(pro:per|you_1,pro:dem|that_4,$0),n|right_5(n|back_6($0)))
example_end

Sent: magician yes .
Sem: lambda $0_{r}.and(n|magician_1($0),co|yes_2($0))
example_end

Sent: no he doesn 't have one does he ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|have_5(pro:sub|he_2,pro:indef|one_6,$0),$0),$0),co|no_1($0)))
example_end

Sent: your Daddy is going to get after you .
Sem: lambda $0_{r}.aux|be-3s_3(part|go-presp_4(det:poss|your_1($1,n:prop|daddy_2($1)),lambda $2_{r}.and(v|get_6(det:poss|your_1($1,n:prop|daddy_2($1)),$2),prep|after_7(pro:per|you_8,$2)),$0),$0)
example_end

Sent: for taking this out .
Sem: lambda $0_{r}.and(part|take-presp_2(you,pro:dem|this_3,$0),adv|out_4($0))
example_end

Sent: how can he play ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|play_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: how can he play without a bat ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(and(v|play_4(pro:sub|he_3,$0),$1($0)),prep|without_5(det:art|a_6($2,n|bat_7($2)),$0)),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: what are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: what kind of monster ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|monster_4($2)))))
example_end

Sent: a sea green monster .
Sem: det:art|a_1($0,and(and_comp(n|sea_2($0),n|green_3($0)),n|monster_4($0)))
example_end

Sent: what kind of monster are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_6,att(n|kind_2(pro:per|you_6,$0),prep|of_3(BARE($2,n|monster_4($2)))))
example_end

Sent: a mompsy ?
Sem: BARE($0,Q(det:art|a_1($1,chi|mompsy_2($1),$0)))
example_end

Sent: what 's a mompsy ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,chi|mompsy_4($2)),$0)
example_end

Sent: who did use them all ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(v|use_3($1,post|all_5($2,pro:obj|them_4($2)),$0),$0)
example_end

Sent: a boy what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_1($2,n|boy_2($2)),$0)
example_end

Sent: the light 's green .
Sem: lambda $0_{r}.n|green_4(det:art|the_1($1,n|light_2($1)),$0)
example_end

Sent: that 's part of my body ?
Sem: lambda $0_{r}.Q(att(n|part_3(pro:dem|that_1,$0),prep|of_4(det:poss|my_5($1,n|body_6($1)))))
example_end

Sent: oh what part is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_5,n|part_3(pro:dem|that_5,$0)),co|oh_1($0))
example_end

Sent: alright you read book .
Sem: lambda $0_{r}.and(v|read-zero_3(pro:per|you_2,BARE($1,n|book_4($1)),$0),co|alright_1($0))
example_end

Sent: ups_a_daisy you dropped your shoe .
Sem: lambda $0_{r}.and(v|drop-past_3(pro:per|you_2,det:poss|your_4($1,n|shoe_5($1)),$0),co|ups_a_daisy_1($0))
example_end

Sent: Papa bear .
Sem: BARE($0,and_comp(n:prop|papa_1($0),n|bear_2($0)))
example_end

Sent: did you see bunny ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,BARE($1,n|bunny+rabbit_4($1)),$0),$0))
example_end

Sent: the deer looks like Bambi .
Sem: lambda $0_{r}.cop|look-3s_3(det:art|the_1($1,n|deer_2($1)),n:prop|bambi_5_like_4,$0)
example_end

Sent: bunny running ?
Sem: lambda $0_{r}.Q(part|run-presp_2(BARE($1,n|bunny+rabbit_1($1)),$0))
example_end

Sent: if he 's not careful yes they will stick him .
Sem: lambda $0_{r}.and(mod|will_8(conj|if_1(not(co|careful_5(pro:sub|he_2,$0),$0),v|stick_9(pro:sub|they_7,pro:obj|him_10,$0)),$0),co|yes_6($0))
example_end

Sent: Mr Bear is dancing .
Sem: lambda $0_{r}.aux|be-3s_3(part|dance-presp_4(n:prop|bear_2_mr_1,$0),$0)
example_end

Sent: he 's dancing .
Sem: lambda $0_{r}.aux|~be_2(part|dance-presp_3(pro:sub|he_1,$0),$0)
example_end

Sent: Mr Bear is dancing .
Sem: lambda $0_{r}.aux|be-3s_3(part|dance-presp_4(n:prop|bear_2_mr_1,$0),$0)
example_end

Sent: I just read them .
Sem: lambda $0_{r}.and(v|read-zero_3(pro:sub|i_1,pro:obj|them_4,$0),adv|just_2($0))
example_end

Sent: now you take them over to Ursula .
Sem: lambda $0_{r}.and(and(and(v|take_3(pro:per|you_2,pro:obj|them_4,$0),adv|now_1($0)),adv|over_5($0)),prep|to_6(n:prop|ursula_7,$0))
example_end

Sent: they 're Ursula 's books .
Sem: lambda $0_{r}.n:prop|ursula_3's'(pro:sub|they_1,n|book-pl_5(pro:sub|they_1,$0))
example_end

Sent: no I just read them .
Sem: lambda $0_{r}.and(and(v|read-zero_4(pro:sub|i_2,pro:obj|them_5,$0),adv|just_3($0)),co|no_1($0))
example_end

Sent: you dropped a book .
Sem: lambda $0_{r}.v|drop-past_2(pro:per|you_1,det:art|a_3($1,n|book_4($1)),$0)
example_end

Sent: poor Ursula ?
Sem: BARE($0,Q(att(n:prop|ursula_2,BARE($1,adj|poor_1($1)),$0)))
example_end

Sent: she needs her books .
Sem: lambda $0_{r}.v|need-3s_2(pro:sub|she_1,det:poss|her_3($1,n|book-pl_4($1)),$0)
example_end

Sent: poor Cromer ?
Sem: BARE($0,Q(att(n:prop|cromer_2,BARE($1,adj|poor_1($1)),$0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no that 's a lion .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|lion_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: hungry lion .
Sem: BARE($0,and(adj|hungry_1($0),n|lion_2($0)))
example_end

Sent: hungry lion .
Sem: BARE($0,and(adj|hungry_1($0),n|lion_2($0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: you go tell Ursula then .
Sem: lambda $0_{r}.v|go_2(pro:per|you_1,lambda $1_{r}.and(v|tell_3(pro:per|you_1,n:prop|ursula_4,$1),adv:tem|then_5($1)),$0)
example_end

Sent: I can 't see it .
Sem: lambda $0_{r}.not(mod|can_2(v|see_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: I thought you were going to tell her .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.aux|be-past_4(part|go-presp_5(pro:per|you_3,lambda $2_{r}.v|tell_7(pro:per|you_3,pro:obj|her_8,$2),$1),$1),$0)
example_end

Sent: you have_to take it over there where she is .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod:aux|have_to_2(and(v|take_3(pro:per|you_1,pro:per|it_4,$0),adv|over_5(adv|there_6($0))),$0),and(cop|be-3s_9(pro:sub|she_8,$0),$1($0)))
example_end

Sent: oh you 're going walking ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|go-presp_4(pro:per|you_2,BARE($1,part|walk-presp_5($1)),$0),$0),co|oh_1($0)))
example_end

Sent: did you step on the book ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|step_3(pro:per|you_2,$0),prep|on_4(det:art|the_5($1,n|book_6($1)),$0)),$0))
example_end

Sent: that 's alright then if you didn 't do it on purpose .
Sem: lambda $0_{r}.conj|if_5(not(mod|do_7(and(v|do_9(pro:per|you_6,pro:per|it_10,$0),n|purpose_12($0)),$0),$0),adv:tem|then_4(adj|alright_3(pro:dem|that_1,$0)))
example_end

Sent: that 's red .
Sem: lambda $0_{r}.adj|red_3(pro:dem|that_1,$0)
example_end

Sent: do you see a deer ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,det:art|a_4($1,n|deer_5($1)),$0),$0))
example_end

Sent: he 's hungry ?
Sem: lambda $0_{r}.Q(adj|hungry_3(pro:sub|he_1,$0))
example_end

Sent: you turn it around .
Sem: lambda $0_{r}.and(v|turn_2(pro:per|you_1,pro:per|it_3,$0),adv|around_4($0))
example_end

Sent: I don 't think that really goes there do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(and(v|go-3s_7(pro:rel|that_5,$1),adv|real-dadj_6($1)),adv|there_8($1)),$0),$0),$0),v|do_9(pro:per|you_10,$0)))
example_end

Sent: yes that 's pretty .
Sem: lambda $0_{r}.and(adv|pretty_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: one pretty ?
Sem: BARE($0,Q(att(pro:indef|one_1,BARE($1,adv|pretty_2($1)),$0)))
example_end

Sent: off Perro ?
Sem: Q(prep|off_1(n:prop|perro_2))
example_end

Sent: yes it 's alright .
Sem: lambda $0_{r}.and(adj|alright_4(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: knock over ?
Sem: lambda $0_{r}.Q(and(n|knock_1(you,$0),adv|over_2($0)))
example_end

Sent: go over ?
Sem: lambda $0_{r}.Q(and(v|go_1(you,$0),adv|over_2($0)))
example_end

Sent: do you think that belongs there ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.and(v|belong-3s_5(pro:rel|that_4,$1),adv|there_6($1)),$0),$0))
example_end

Sent: you 're turning it over .
Sem: lambda $0_{r}.aux|~be_2(and(part|turn-presp_3(pro:per|you_1,pro:per|it_4,$0),adv|over_5($0)),$0)
example_end

Sent: you 're turning it around .
Sem: lambda $0_{r}.aux|~be_2(and(part|turn-presp_3(pro:per|you_1,pro:per|it_4,$0),adv|around_5($0)),$0)
example_end

Sent: turning it around .
Sem: lambda $0_{r}.and(part|turn-presp_1(you,pro:per|it_2,$0),adv|around_3($0))
example_end

Sent: that 's your brush .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|that_1,n|brush_4(pro:dem|that_1,$0))
example_end

Sent: that 's not a hammer .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|hammer_5(pro:dem|that_1,$0)),$0)
example_end

Sent: that 's not a hammer .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|hammer_5(pro:dem|that_1,$0)),$0)
example_end

Sent: oh it looks like a hammer ?
Sem: lambda $0_{r}.Q(and(cop|look-3s_3(pro:per|it_2,det:art|a_5($1,n|hammer_6_like_4($1)),$0),co|oh_1($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's not a doggie .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|dog-dim_5(pro:dem|that_1,$0)),$0)
example_end

Sent: no that 's a deer .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|deer_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: oh you 're a big boy ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:per|you_2,and(n|boy_6(pro:per|you_2,$0),adj|big_5(pro:per|you_2,$0))),co|oh_1($0)))
example_end

Sent: why are you turning that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|turn-presp_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: well yes it 's heavy .
Sem: lambda $0_{r}.and(and(adj|heavy_5(pro:per|it_3,$0),co|well_1($0)),co|yes_2($0))
example_end

Sent: what are you brushing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|brush-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're turning it over .
Sem: lambda $0_{r}.aux|~be_2(and(part|turn-presp_3(pro:per|you_1,pro:per|it_4,$0),adv|over_5($0)),$0)
example_end

Sent: what does this say today ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(and(v|say_4(pro:dem|this_3,$1,$0),adv:tem|today_5($0)),$0)
example_end

Sent: oh you hurt your head on the table .
Sem: lambda $0_{r}.and(and(v|hurt-zero_3(pro:per|you_2,det:poss|your_4($1,n|head_5($1)),$0),prep|on_6(det:art|the_7($2,n|table_8($2)),$0)),co|oh_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what happened Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|happen-past_2($1,$0)
example_end

Sent: the chair didn 't hit your head did it ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|hit-zero_5(det:art|the_1($1,n|chair_2($1)),det:poss|your_6($2,n|head_7($2)),$0),$0),$0),mod|do-past_8(pro:per|it_9,$0)))
example_end

Sent: no the head hit the table .
Sem: lambda $0_{r}.and(v|hit-zero_4(det:art|the_2($1,n|head_3($1)),det:art|the_5($2,n|table_6($2)),$0),qn|no_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: did you step on the books ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|step_3(pro:per|you_2,$0),prep|on_4(det:art|the_5($1,n|book-pl_6($1)),$0)),$0))
example_end

Sent: Perro 's going to read the book .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(n:prop|perro_1,lambda $1_{r}.v|read-zero_5(n:prop|perro_1,det:art|the_6($2,n|book_7($2)),$1),$0),$0)
example_end

Sent: oh Adam will read the book ?
Sem: lambda $0_{r}.Q(and(mod|will_3(v|read-zero_4(n:prop|adam_2,det:art|the_5($1,n|book_6($1)),$0),$0),co|oh_1($0)))
example_end

Sent: you 're excused .
Sem: lambda $0_{r}.aux|~be_2(part|excuse-pastp_3(pro:per|you_1,$0),$0)
example_end

Sent: turn what over ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|turn_1(you,$1,$0),adv|over_3($0))
example_end

Sent: good morning .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: good morning .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: good morning .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: I thought you were going to read to Perro .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.aux|be-past_4(part|go-presp_5(pro:per|you_3,lambda $2_{r}.and(v|read-zero_7(pro:per|you_3,$2),prep|to_8(n:prop|perro_9,$2)),$1),$1),$0)
example_end

Sent: good morning to you .
Sem: BARE($0,att(and(adj|good_1($0),n|morning_2($0)),prep|to_3(pro:per|you_4)))
example_end

Sent: oh good morning .
Sem: lambda $0_{r}.and(and(adj|good_2($0),n|morning_3($0)),co|oh_1($0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh laughing .
Sem: lambda $0_{r}.and(part|laugh-presp_2(you,$0),co|oh_1($0))
example_end

Sent: what did Donald_Duck safety book say ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-past_2(v|say_6(BARE($1,and_comp(and_comp(n:prop|donald_duck_3($1),n|safety_4($1)),n|book_5($1))),$2,$0),$0)
example_end

Sent: you don 't play with plugs do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|play_4(pro:per|you_1,BARE($1,n|plug-pl_6_with_5($1)),$0),$0),$0),v|do_7(pro:per|you_8,$0)))
example_end

Sent: you don 't play with cords either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|play_4(pro:per|you_1,BARE($1,n|cord-pl_6_with_5($1)),$0),adv|either_7($0)),$0),$0)
example_end

Sent: put it down .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),adv|down_3($0))
example_end

Sent: no it doesn 't go there .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|go_5(pro:per|it_2,$0),adv|there_6($0)),$0),$0),co|no_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you don 't play with matches either do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|play_4(pro:per|you_1,BARE($1,n|match-pl_6_with_5($1)),$0),coord|either_7($0)),$0),$0),v|do_8(pro:per|you_9,$0)))
example_end

Sent: yeah you dropped it .
Sem: lambda $0_{r}.and(v|drop-past_3(pro:per|you_2,pro:per|it_4,$0),co|yeah_1($0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: well what happened to five six seven ?
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|happen-past_3($1,$0),prep|to_4(BARE($2,det:num|five_5($2)),$0)),co|well_1($0))
example_end

Sent: where did what go ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.v|do-past_2(and(v|go_4($1,$0),$2($0)),$0)
example_end

Sent: that 's no broom .
Sem: lambda $0_{r}.not(n|broom_4(pro:dem|that_1,$0),$0)
example_end

Sent: that 's brush .
Sem: lambda $0_{r}.n|brush_3(pro:dem|that_1,$0)
example_end

Sent: oh it looks like a broom does it ?
Sem: lambda $0_{r}.Q(and(and(cop|look-3s_3(pro:per|it_2,det:art|a_5($1,n|broom_6_like_4($1)),$0),mod|do-3s_7(pro:per|it_8,$0)),co|oh_1($0)))
example_end

Sent: I can 't put it together .
Sem: lambda $0_{r}.not(mod|can_2(and(v|put-zero_4(pro:sub|i_1,pro:per|it_5,$0),adv|together_6($0)),$0),$0)
example_end

Sent: you have_to go get the car .
Sem: lambda $0_{r}.mod:aux|have_to_2(v|get_4(pro:per|you_1,det:art|the_5($1,n|car_6($1)),$0),$0)
example_end

Sent: you 're welcome .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: the car got tickled ?
Sem: lambda $0_{r}.Q(aux|get-past_3(part|tickle-pastp_4(det:art|the_1($1,n|car_2($1)),$0),$0))
example_end

Sent: yes that is pretty .
Sem: lambda $0_{r}.and(aux|be-3s_3(adv|pretty_4(pro:rel|that_2,$0),$0),co|yes_1($0))
example_end

Sent: does it go there ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|go_3(pro:per|it_2,$0),adv|there_4($0)),$0))
example_end

Sent: you 're turning it over .
Sem: lambda $0_{r}.aux|~be_2(and(part|turn-presp_3(pro:per|you_1,pro:per|it_4,$0),adv|over_5($0)),$0)
example_end

Sent: oh funny .
Sem: lambda $0_{r}.and(adj|fun-dn_2($0),co|oh_1($0))
example_end

Sent: car dropped ?
Sem: lambda $0_{r}.Q(v|drop-past_2(BARE($1,n|car_1($1)),$0))
example_end

Sent: you missed that ?
Sem: lambda $0_{r}.Q(v|miss-past_2(pro:per|you_1,pro:dem|that_3,$0))
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: what 's he going to sit against if you take all the pillows off .
Sem: lambda $3_{e}.lambda $0_{r}.conj|if_8(and(v|take_10(pro:per|you_9,qn|all_11(det:art|the_12($1,n|pillow-pl_13($1))),$0),adv|off_14($0)),aux|~be_2(part|go-presp_4(pro:sub|he_3,lambda $2_{r}.and(v|sit_6($3,$2),adv|against_7($2)),$0),$0))
example_end

Sent: how can he sit comfortably if you take all the pillows off ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|if_6(and(v|take_8(pro:per|you_7,qn|all_9(det:art|the_10($1,n|pillow-pl_11($1))),$0),adv|off_12($0)),mod|can_2(and(and(v|sit_4(pro:sub|he_3,$0),$2($0)),adv|comfort-dadj_5($0)),$0))
example_end

Sent: you 're going to give him one .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|give_5(pro:per|you_1,pro:indef|one_7,pro:obj|him_6,$1),$0),$0)
example_end

Sent: who uses a pillow on the floor for exercising ?
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|use-3s_2($1,det:art|a_3($2,n|pillow_4($2)),$0),prep|on_5(det:art|the_6($3,n|floor_7($3)),$0)),prep|for_8(BARE($4,n:gerund|exercise-presp_9($4)),$0))
example_end

Sent: all finished with your exercises ?
Sem: lambda $0_{r}.Q(and(and(v|finish-past_2(you,$0),post|all_1($0)),prep|with_3(det:poss|your_4($1,n|exercise-pl_5($1)),$0)))
example_end

Sent: why don 't you put the pillows up ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|put-zero_5(pro:per|you_4,det:art|the_6($1,n|pillow-pl_7($1)),$0),$2($0)),adv|up_8($0)),$0),$0)
example_end

Sent: would you like to have this ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|have_5(pro:per|you_2,pro:dem|this_6,$1),$0),$0))
example_end

Sent: a big lion .
Sem: det:art|a_1($0,and(adj|big_2($0),n|lion_3($0)))
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: that 's a baby giraffe .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|giraffe_5(pro:dem|that_1,$0),n|baby_4(pro:dem|that_1,$0)))
example_end

Sent: just one wheel left .
Sem: lambda $0_{r}.and(v|leave-past_4(BARE($1,det:num|one_2(n|wheel_3($1))),$0),adv|just_1($0))
example_end

Sent: saggy baggy .
Sem: BARE($0,adj|sag-dv_1($0))
example_end

Sent: what 's the elephant doing ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_5(det:art|the_3($1,n|elephant_4($1)),$2,$0),$0)
example_end

Sent: that 's a porcupine .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|porcupine_4(pro:dem|that_1,$0))
example_end

Sent: that 's a hippopotamus .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|hippopotamus_4(pro:dem|that_1,$0))
example_end

Sent: and this ?
Sem: BARE($0,Q(pro:dem|this_2($0)))
example_end

Sent: this is a panda .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n|panda_4(pro:dem|this_1,$0))
example_end

Sent: no that 's not a giraffe .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:dem|that_2,n|giraffe_6(pro:dem|that_2,$0)),$0),co|no_1($0))
example_end

Sent: a polar bear .
Sem: det:art|a_1($0,and_comp(adj|polar_2($0),n|bear_3($0)))
example_end

Sent: he 's sitting on top of ice .
Sem: lambda $0_{r}.aux|~be_2(and(part|sit-presp_3(pro:sub|he_1,$0),prep|on_4(BARE($1,att(n|top_5($1),prep|of_6(BARE($2,n|ice_7($2))))),$0)),$0)
example_end

Sent: this one 's the leopard .
Sem: lambda $0_{r}.det:art|the_4(pro:dem|this_1($1,pro:indef|one_2($1)),n|leopard_5(pro:dem|this_1($1,pro:indef|one_2($1)),$0))
example_end

Sent: do you see a seal ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,det:art|a_4($1,n|seal_5($1)),$0),$0))
example_end

Sent: is that a seal ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|seal_4(pro:rel|that_2,$0)))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: sitting on the broom ?
Sem: lambda $0_{r}.Q(and(part|sit-presp_1(you,$0),prep|on_2(det:art|the_3($1,n|broom_4($1)),$0)))
example_end

Sent: would you like one ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,pro:indef|one_4,$0),$0))
example_end

Sent: that 's for you .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),conj|for_3(pro:per|you_4,$0))
example_end

Sent: do you want a piece of this ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,det:art|a_4($1,att(n|piece_5($1),prep|of_6(pro:dem|this_7))),$0),$0))
example_end

Sent: what are you writing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|write-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh you 're writing Cromer ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|write-presp_4(pro:per|you_2,$0),n:prop|cromer_5($0)),$0),co|oh_1($0)))
example_end

Sent: you dropped your pencil .
Sem: lambda $0_{r}.v|drop-past_2(pro:per|you_1,det:poss|your_3($1,n|pencil_4($1)),$0)
example_end

Sent: you have some paper .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,qn|some_3($1,n|paper_4($1)),$0)
example_end

Sent: there 's one on the table .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),prep|on_4(det:art|the_5($1,n|table_6($1)),$0))
example_end

Sent: no give her her pencil back Adam because you 've been breaking pencils lately .
Sem: lambda $0_{r}.and(conj|because_8(aux|be-pastp_11(aux|~have_10(and(part|break-presp_12(pro:per|you_9,BARE($1,n|pencil-pl_13($1)),$0),adv|late-dadj_14($0)),$0),$0),and(v|give_2(you,det:poss|her_4($2,n|pencil_5($2)),pro:obj|her_3,$0),adj|back_6($0))),co|no_1($0))
example_end

Sent: that 's for you .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),conj|for_3(pro:per|you_4,$0))
example_end

Sent: that 's a flute .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|flute_4(pro:dem|that_1,$0))
example_end

Sent: what kind of bird is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|bird_4($2)))))
example_end

Sent: here 's my mail from this morning .
Sem: lambda $0_{r}.and(and(cop|~be_2(det:poss|my_3($1,n|mail_4($1)),$0),pro:exist|here_1($0)),prep|from_5(pro:dem|this_6($2,n|morning_7($2)),$0))
example_end

Sent: letters the mailman brought .
Sem: lambda $0_{r}.v|bring-past_4(det:art|the_2($1,n|mail+man_3($1)),BARE($2,n|letter-pl_1($2)),$0)
example_end

Sent: that 's a flute .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|flute_4(pro:dem|that_1,$0))
example_end

Sent: may I show you ?
Sem: lambda $0_{r}.mod|may_1(v|show_3(pro:sub|i_2,pro:per|you_4,$0),$0)
example_end

Sent: you show me .
Sem: lambda $0_{r}.v|show_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: get up there and sit down .
Sem: lambda $0_{r}.and(and(v|sit_5(you,$0),adv|up_2(adv|there_3($0))),adv|down_6($0))
example_end

Sent: can you see the snow ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_3(pro:per|you_2,det:art|the_4($1,n|snow_5($1)),$0),$0))
example_end

Sent: oh you want to watch it .
Sem: lambda $0_{r}.and(v|want_3(pro:per|you_2,lambda $1_{r}.v|watch_5(pro:per|you_2,pro:per|it_6,$1),$0),co|oh_1($0))
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: I don 't think that 's yellow .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.adj|yellow_7(pro:dem|that_5,$1),$0),$0),$0)
example_end

Sent: if that 's yellow what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|if_1(adj|yellow_4(pro:dem|that_2,$0),$1(pro:dem|this_8,n|color_6(pro:dem|this_8,$0)))
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: you 'll bend it .
Sem: lambda $0_{r}.mod|~will_2(v|bend_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: because it will disrupt the machine .
Sem: lambda $0_{r}.mod|will_3(v|disrupt_4(pro:per|it_2,det:art|the_5($1,n|machine_6($1)),$0),$0)
example_end

Sent: whose pencils are they ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:sub|they_4($1($2,n|pencil-pl_2($2)),$0)
example_end

Sent: one door !
Sem: BARE($0,det:num|one_1(n|door_2($0)))
example_end

Sent: will you read it to me ?
Sem: lambda $0_{r}.Q(mod|will_1(and(v|read-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|to_5(pro:obj|me_6,$0)),$0))
example_end

Sent: can you find the seal ?
Sem: lambda $0_{r}.Q(mod|can_1(v|find_3(pro:per|you_2,det:art|the_4($1,n|seal_5($1)),$0),$0))
example_end

Sent: looks like Chatter .
Sem: lambda $0_{r}.cop|look-3s_1(you,n:prop|chatter_3_like_2,$0)
example_end

Sent: oh that 's all .
Sem: lambda $0_{r}.and(pro:indef|all_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: it 's a camera .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|camera_4(pro:per|it_1,$0))
example_end

Sent: is that a hammer Adam ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|hammer_4(pro:rel|that_2,$0)))
example_end

Sent: here a hammer ?
Sem: BARE($0,Q(adv|here_1(det:art|a_2($1,n|hammer_3($1)),$0)))
example_end

Sent: oh that 's not a hammer .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:dem|that_2,n|hammer_6(pro:dem|that_2,$0)),$0),co|oh_1($0))
example_end

Sent: oh Chicken_Little .
Sem: lambda $0_{r}.and(n:prop|chicken_little_2($0),co|oh_1($0))
example_end

Sent: where did you see Chicken_Little ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,n:prop|chicken_little_5,$0),$1($0)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: well what is it that you love ?
Sem: lambda $0_{r}.and(v|love_7(pro:per|you_6,$0),co|well_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's not a hammer .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|hammer_5(pro:dem|that_1,$0)),$0)
example_end

Sent: it 's from David and Robin .
Sem: lambda $0_{r}.att(n:prop|robin_6(pro:per|it_1,$0),prep|from_3(n:prop|david_4))
example_end

Sent: you 're welcome .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: what does a windmill do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|do_5(det:art|a_3($1,n|windmill_4($1)),$2,$0),$0)
example_end

Sent: silly boy .
Sem: BARE($0,and(co|silly_1($0),n|boy_2($0)))
example_end

Sent: yes you have_to blow your nose don 't you .
Sem: lambda $0_{r}.and(and(mod:aux|have_to_3(v|blow_4(pro:per|you_2,det:poss|your_5($1,n|nose_6($1)),$0),$0),not(mod|do_7(pro:per|you_9,$0),$0)),co|yes_1($0))
example_end

Sent: that 's a nice flute .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|flute_5(pro:dem|that_1,$0),adj|nice_4(pro:dem|that_1,$0)))
example_end

Sent: no that 's a flute .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|flute_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: it 's just from the rug honey .
Sem: lambda $0_{r}.adj|just_3(prep|from_4(det:art|the_5($1,n|rug_6($1)),pro:per|it_1,$0))
example_end

Sent: oh turning like a windmill ?
Sem: lambda $0_{r}.Q(and(and(part|turn-presp_2(you,$0),prep|like_3(det:art|a_4($1,n|windmill_5($1)),$0)),co|oh_1($0)))
example_end

Sent: what else has wings like that ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|have-3s_3($1,BARE($2,n|wing-pl_4($2)),$0),prep|like_5(pro:dem|that_6,$0))
example_end

Sent: oh here it is .
Sem: lambda $0_{r}.and(and(cop|be-3s_4(pro:per|it_3,$0),adv|here_2($0)),co|oh_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: part of your car ?
Sem: BARE($0,Q(att(n|part_1($0),prep|of_2(det:poss|your_3($1,n|car_4($1))))))
example_end

Sent: poor Adam .
Sem: att(n:prop|adam_2,BARE($0,adj|poor_1($0)))
example_end

Sent: did you hurt yourself ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: what happened Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|happen-past_2($1,$0)
example_end

Sent: screw happened !
Sem: lambda $0_{r}.v|happen-past_2(BARE($1,n|screw_1($1)),$0)
example_end

Sent: you didn 't even have a screw .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_5(pro:per|you_1,det:art|a_6($1,n|screw_7($1)),$0),v|even_4($0)),$0),$0)
example_end

Sent: you didn 't have a screw .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,det:art|a_5($1,n|screw_6($1)),$0),$0),$0)
example_end

Sent: are you playing peekaboo with me ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|play-presp_3(pro:per|you_2,BARE($1,v|peekaboo_4($1)),$0),prep|with_5(pro:obj|me_6,$0)),$0))
example_end

Sent: you peekaboo back out in the kitchen with your juice .
Sem: lambda $0_{r}.and(and(and(and(v|peekaboo_2(pro:per|you_1,$0),adv|back_3($0)),adv|out_4($0)),prep|in_5(det:art|the_6($1,n|kitchen_7($1)),$0)),prep|with_8(det:poss|your_9($2,n|juice_10($2)),$0))
example_end

Sent: is that juice ?
Sem: lambda $0_{r}.Q(n|juice_3(pro:dem|that_2,$0))
example_end

Sent: get broom .
Sem: lambda $0_{r}.v|get_1(you,BARE($1,n|broom_2($1)),$0)
example_end

Sent: what 's all_gone ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(co|all_gone_3($1,$0),$0)
example_end

Sent: oh you 're going to draw a picture .
Sem: lambda $0_{r}.and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|draw_6(pro:per|you_2,det:art|a_7($2,n|picture_8($2)),$1),$0),$0),co|oh_1($0))
example_end

Sent: no it 's not broken .
Sem: lambda $0_{r}.and(not(cop|~be_3(part|break-pastp_5(pro:per|it_2,$0),$0),$0),co|no_1($0))
example_end

Sent: well he doesn 't want that paper .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|he_2,pro:dem|that_6($1,n|paper_7($1)),$0),$0),$0),co|well_1($0))
example_end

Sent: he has some nice paper .
Sem: lambda $0_{r}.v|have-3s_2(pro:sub|he_1,qn|some_3($1,and(adj|nice_4($1),n|paper_5($1))),$0)
example_end

Sent: what do you want me to write ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.v|write_7(pro:obj|me_5,$2,$1),$0),$0)
example_end

Sent: just checking ?
Sem: lambda $0_{r}.Q(and(part|check-presp_2(you,$0),adv|just_1($0)))
example_end

Sent: does that fit there Adam ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|fit-zero_3(pro:dem|that_2,$0),adv|there_4($0)),$0))
example_end

Sent: does that one fit ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|fit-zero_4(pro:dem|that_2($1,pro:indef|one_3($1)),$0),$0))
example_end

Sent: does it fit ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|fit-zero_3(pro:per|it_2,$0),$0))
example_end

Sent: does it fit there ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|fit-zero_3(pro:per|it_2,$0),adv|there_4($0)),$0))
example_end

Sent: does it fit that way ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|fit-zero_3(pro:per|it_2,$0),pro:dem|that_4($1,n|way_5($1),$0)),$0))
example_end

Sent: does boy ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(BARE($1,n|boy_2($1)),$0))
example_end

Sent: where did you put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: no Adam I 'll have_to take the flute away if you do that .
Sem: lambda $0_{r}.and(conj|if_10(v|do_12(pro:per|you_11,pro:dem|that_13,$0),mod:aux|have_to_5(mod|~will_4(and(v|take_6(pro:sub|i_3,det:art|the_7($1,n|flute_8($1)),$0),adv|away_9($0)),$0),$0)),co|no_1($0))
example_end

Sent: how many ends does it have ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-3s_4(v|have_6(pro:per|it_5,BARE($1,and($2(qn|many_2($1)),n|end-pl_3($1))),$0),$0)
example_end

Sent: a little hole .
Sem: det:art|a_1($0,and(adj|little_2($0),n|hole_3($0)))
example_end

Sent: that doesn 't belong there either .
Sem: lambda $0_{r}.not(mod|do_2(and(and(v|belong_4(pro:dem|that_1,$0),adv|there_5($0)),adv|either_6($0)),$0),$0)
example_end

Sent: you spilled your juice .
Sem: lambda $0_{r}.v|spill-past_2(pro:per|you_1,det:poss|your_3($1,n|juice_4($1)),$0)
example_end

Sent: shall we open it ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|open_3(pro:sub|we_2,pro:per|it_4,$0),$0))
example_end

Sent: yes paper 's in there .
Sem: lambda $0_{r}.and(and(poss|~s_3(BARE($1,n|paper_2($1)),$0),adv|in_4(adv|there_5($0))),co|yes_1($0))
example_end

Sent: did you find a pencil ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,det:art|a_4($1,n|pencil_5($1)),$0),$0))
example_end

Sent: that 's tape .
Sem: lambda $0_{r}.n|tape_3(pro:dem|that_1,$0)
example_end

Sent: we 'll use that one tomorrow .
Sem: lambda $0_{r}.mod|~will_2(and(v|use_3(pro:sub|we_1,pro:dem|that_4($1,pro:indef|one_5($1)),$0),adv:tem|tomorrow_6($0)),$0)
example_end

Sent: shall we use it tomorrow ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|use_3(pro:sub|we_2,pro:per|it_4,$0),adv:tem|tomorrow_5($0)),$0))
example_end

Sent: are you putting it back ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|put-presp_3(pro:per|you_2,pro:per|it_4,$0),adv|back_5($0)),$0))
example_end

Sent: does it fit ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|fit-zero_3(pro:per|it_2,$0),$0))
example_end

Sent: does the box of tape fit ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|fit-zero_6(det:art|the_2($1,att(n|box_3($1),prep|of_4(BARE($2,n|tape_5($2))))),$0),$0))
example_end

Sent: there are so many papers .
Sem: lambda $0_{r}.cop|be-pres_2(BARE($1,and(adv|so_3(qn|many_4($1)),n|paper-pl_5($1))),$0)
example_end

Sent: shall we do a game ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|do_3(pro:sub|we_2,det:art|a_4($1,n|game_5($1)),$0),$0))
example_end

Sent: can you give the baby in the bed ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|give_3(pro:per|you_2,det:art|the_4($1,n|baby_5($1)),$0),prep|in_6(det:art|the_7($2,n|bed_8($2)),$0)),$0))
example_end

Sent: can you give me the boy in the bath ?
Sem: lambda $0_{r}.Q(mod|can_1(v|give_3(pro:per|you_2,det:art|the_5($1,att(n|boy_6($1),prep|in_7(det:art|the_8($2,n|bath+tub_9($2))))),pro:obj|me_4,$0),$0))
example_end

Sent: here he is in the bed .
Sem: lambda $0_{r}.and(and(cop|be-3s_3(pro:sub|he_2,$0),adv|here_1($0)),prep|in_4(det:art|the_5($1,n|bed_6($1)),$0))
example_end

Sent: is the boy in the bed ?
Sem: lambda $0_{r}.Q(prep|in_4(det:art|the_5($1,n|bed_6($1)),det:art|the_2($2,n|boy_3($2)),$0))
example_end

Sent: that 's a bath .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|bath+tub_4(pro:dem|that_1,$0))
example_end

Sent: that 's a boy in the bath .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(n|boy_4(pro:dem|that_1,$0),prep|in_5(det:art|the_6($1,n|bath+tub_7($1)))))
example_end

Sent: can you say that boy in the bath ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,pro:rel|that_4($1,att(n|boy_5($1),prep|in_6(det:art|the_7($2,n|bath+tub_8($2))))),$0),$0))
example_end

Sent: may I have them .
Sem: lambda $0_{r}.mod|may_1(v|have_3(pro:sub|i_2,pro:obj|them_4,$0),$0)
example_end

Sent: you 're going to put them back ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|put-zero_5(pro:per|you_1,pro:obj|them_6,$1),adv|back_7($1)),$0),$0))
example_end

Sent: can you give me the dog in the house ?
Sem: lambda $0_{r}.Q(mod|can_1(v|give_3(pro:per|you_2,det:art|the_5($1,att(n|dog_6($1),prep|in_7(det:art|the_8($2,n|house_9($2))))),pro:obj|me_4,$0),$0))
example_end

Sent: is there a doggie in this house ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_1(det:art|a_3($1,n|dog-dim_4($1)),$0),prep|in_5(pro:dem|this_6($2,n|house_7($2)),$0)))
example_end

Sent: where is he ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:sub|he_3,$0),$1($0))
example_end

Sent: sit on the rug ?
Sem: lambda $0_{r}.Q(and(v|sit_1(you,$0),prep|on_2(det:art|the_3($1,n|rug_4($1)),$0)))
example_end

Sent: his face cloth got stuck in the drain .
Sem: lambda $0_{r}.aux|get-past_4(and(part|stick-pastp_5(det:poss|his_1($1,and_comp(n|face_2($1),n|cloth_3($1))),$0),prep|in_6(det:art|the_7($2,n|drain_8($2)),$0)),$0)
example_end

Sent: it got stuck in the drain ?
Sem: lambda $0_{r}.Q(aux|get-past_2(and(part|stick-pastp_3(pro:per|it_1,$0),prep|in_4(det:art|the_5($1,n|drain_6($1)),$0)),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: which one has the doghouse ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|have-3s_3($1($2,pro:indef|one_2($2)),det:art|the_4($3,n|dog+house_5($3)),$0)
example_end

Sent: can you find it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|find_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: are those too many Adam ?
Sem: lambda $0_{r}.Q(adv|too_3(qn|many_4(pro:dem|those_2,$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: is there a boy in there ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_1(det:art|a_3($1,n|boy_4($1)),$0),prep|in_5(adv|there_6($0))))
example_end

Sent: where is the boy ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|boy_4($1)),$0),$2($0))
example_end

Sent: do you have a bed like that ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,det:art|a_4($1,n|bed_5($1)),$0),prep|like_6(pro:dem|that_7,$0)),$0))
example_end

Sent: you saw the pictures .
Sem: lambda $0_{r}.v|see-past_2(pro:per|you_1,det:art|the_3($1,n|picture-pl_4($1)),$0)
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: in the kitchen ?
Sem: Q(prep|in_1(det:art|the_2($0,n|kitchen_3($0))))
example_end

Sent: no you saw a giraffe on the television .
Sem: lambda $0_{r}.and(and(v|see-past_3(pro:per|you_2,det:art|a_4($1,n|giraffe_5($1)),$0),prep|on_6(det:art|the_7($2,n|television_8($2)),$0)),co|no_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's a kangaroo .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|kangaroo_4(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: here 's a leopard .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|leopard_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: look at this .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|at_2(pro:dem|this_3,$0))
example_end

Sent: that 's a reindeer .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|reindeer_4(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: oh taking a shower ?
Sem: lambda $0_{r}.Q(and(part|take-presp_2(you,det:art|a_3($1,n|shower_4($1)),$0),co|oh_1($0)))
example_end

Sent: that 's a lion .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|lion_4(pro:dem|that_1,$0))
example_end

Sent: hungry lion yes .
Sem: lambda $0_{r}.and(and(adj|hungry_1($0),n|lion_2($0)),co|yes_3($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh close the mouth .
Sem: lambda $0_{r}.and(v|close_2(you,det:art|the_3($1,n|mouth_4($1)),$0),co|oh_1($0))
example_end

Sent: that 's a hippopotamus .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|hippopotamus_4(pro:dem|that_1,$0))
example_end

Sent: that 's a porcupine .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|porcupine_4(pro:dem|that_1,$0))
example_end

Sent: what does the knife do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|do_5(det:art|the_3($1,n|knife_4($1)),$2,$0),$0)
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's a monkey .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|monkey_4(pro:dem|that_1,$0))
example_end

Sent: what is the monkey eating ?
Sem: lambda $2_{e}.lambda $0_{r}.cop|be-3s_2(part|eat-presp_5(det:art|the_3($1,n|monkey_4($1)),$2,$0),$0)
example_end

Sent: eating crayon ?
Sem: lambda $0_{r}.Q(part|eat-presp_1(you,BARE($1,n|crayon_2($1)),$0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is he ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|he_3,$0)
example_end

Sent: that 's a fox .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|fox_4(pro:dem|that_1,$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is he ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|he_3,$0)
example_end

Sent: that 's a panda .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|panda_4(pro:dem|that_1,$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: his legs are strong .
Sem: lambda $0_{r}.adj|strong_4(det:poss|his_1($1,n|leg-pl_2($1)),$0)
example_end

Sent: sing a song .
Sem: lambda $0_{r}.v|sing_1(you,det:art|a_2($1,n|song_3($1)),$0)
example_end

Sent: I don 't think that car is broken .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.part|break-pastp_8(pro:dem|that_5($2,n|car_6($2)),$1),$0),$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: fixing the shoe .
Sem: lambda $0_{r}.part|fix-presp_1(you,det:art|the_2($1,n|shoe_3($1)),$0)
example_end

Sent: who fixes shoes ?
Sem: lambda $1_{e}.lambda $0_{r}.v|fix-3s_2($1,BARE($2,n|shoe-pl_3($2)),$0)
example_end

Sent: who me tickle ?
Sem: lambda $1_{e}.lambda $0_{r}.n|tickle_3($1,pro:obj|me_2,$0)
example_end

Sent: who tickle me ?
Sem: lambda $1_{e}.lambda $0_{r}.v|tickle_2($1,pro:obj|me_3,$0)
example_end

Sent: I tickle you .
Sem: lambda $0_{r}.v|tickle_2(pro:sub|i_1,pro:per|you_3,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: do you know his name ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,det:poss|his_4($1,n|name_5($1)),$0),$0))
example_end

Sent: no name ?
Sem: BARE($0,Q(qn|no_1($1,n|name_2($1),$0)))
example_end

Sent: is that pretty ?
Sem: lambda $0_{r}.Q(adv|pretty_3(pro:dem|that_2,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's the elephant 's trunk .
Sem: lambda $0_{r}.att(n|trunk_6(pro:dem|that_1,$0),poss|~s_5(det:art|the_3($1,n|elephant_4($1))))
example_end

Sent: where are his feet ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|his_3($1,n|foot-pl_4($1)),$0))
example_end

Sent: how many feet ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|foot-pl_3($0)))
example_end

Sent: how many eyes ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|eye-pl_3($0)))
example_end

Sent: ten eyes ?
Sem: BARE($0,Q(det:num|ten_1(n|eye-pl_2($0))))
example_end

Sent: yes you did miss .
Sem: lambda $0_{r}.and(v|do-past_3(n|miss_4(pro:per|you_2,$0),$0),co|yes_1($0))
example_end

Sent: yes you missed .
Sem: lambda $0_{r}.and(v|miss-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: we don 't want all these beetles .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|we_1,qn|all_5(pro:dem|these_6($1,n|beetle-pl_7($1))),$0),$0),$0)
example_end

Sent: oh that 's a big one .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and(pro:indef|one_6(pro:dem|that_2,$0),adj|big_5(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: we didn 't go to the grocery store .
Sem: lambda $0_{r}.not(mod|do_2(and(v|go_4(pro:sub|we_1,$0),prep|to_5(det:art|the_6($1,and_comp(n|grocery_7($1),n|store_8($1))),$0)),$0),$0)
example_end

Sent: where did we go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:sub|we_3,$0),$1($0)),$0)
example_end

Sent: yes we went in the car .
Sem: lambda $0_{r}.and(and(v|go-past_3(pro:sub|we_2,$0),prep|in_4(det:art|the_5($1,n|car_6($1)),$0)),co|yes_1($0))
example_end

Sent: and what did you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: a big doggie eating ?
Sem: lambda $0_{r}.Q(part|eat-presp_4(det:art|a_1($1,and(adj|big_2($1),n|dog-dim_3($1))),$0))
example_end

Sent: do you remember what the place was called ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,lambda $1_{r}.part|call-pastp_8(_,pro:int|what_4,det:art|the_5($2,n|place_6($2)),$1),$0),$0))
example_end

Sent: no zoo .
Sem: qn|no_1($0,n|zoo_2($0))
example_end

Sent: yeah we saw the parrot .
Sem: lambda $0_{r}.and(v|see-past_3(pro:sub|we_2,det:art|the_4($1,n|parrot_5($1)),$0),co|yeah_1($0))
example_end

Sent: you didn 't see an elephant .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:per|you_1,det:art|a_5($1,n|elephant_6($1)),$0),$0),$0)
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: a lamb ?
Sem: BARE($0,Q(det:art|a_1($1,n|lamb_2($1),$0)))
example_end

Sent: is that what it says ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(pro:dem|that_2,lambda $1_{r}.v|say-3s_5(pro:per|it_4,pro:int|what_3,$1),$0))
example_end

Sent: big dog .
Sem: BARE($0,and(adj|big_1($0),n|dog_2($0)))
example_end

Sent: yeah big doggie was eating .
Sem: lambda $0_{r}.and(aux|be-past_4(part|eat-presp_5(BARE($1,and(adj|big_2($1),n|dog-dim_3($1))),$0),$0),co|yeah_1($0))
example_end

Sent: oh broke a pencil .
Sem: lambda $0_{r}.and(v|break-past_2(you,det:art|a_3($1,n|pencil_4($1)),$0),co|oh_1($0))
example_end

Sent: you mustn 't play with a pencil in your hand .
Sem: lambda $0_{r}.not(mod|must_2(and(v|play_4(pro:per|you_1,$0),prep|with_5(det:art|a_6($1,att(n|pencil_7($1),prep|in_8(det:poss|your_9($2,n|hand_10($2))))),$0)),$0),$0)
example_end

Sent: oh those are shoes .
Sem: lambda $0_{r}.and(n|shoe-pl_4(pro:dem|those_2,$0),co|oh_1($0))
example_end

Sent: lots_of boots ?
Sem: BARE($0,Q(qn|lots_of_1($1,n|boot-pl_2($1),$0)))
example_end

Sent: a big needle .
Sem: det:art|a_1($0,and(adj|big_2($0),n|needle_3($0)))
example_end

Sent: oh another needle .
Sem: lambda $0_{r}.and(qn|another_2($1,n|needle_3($1),$0),co|oh_1($0))
example_end

Sent: I don 't know what is it ?
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh Cromer 's pencil .
Sem: lambda $0_{r}.and(n:prop|cromer_2's($1,n|pencil_4($1),$0),co|oh_1($0))
example_end

Sent: oh is that the sky ?
Sem: lambda $0_{r}.Q(and(det:art|the_4(pro:rel|that_3,n|sky_5(pro:rel|that_3,$0)),co|oh_1($0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: is that Humpty_Dumpty ?
Sem: lambda $0_{r}.Q(n:prop|humpty_dumpty_3(pro:rel|that_2,$0))
example_end

Sent: who spanked Humpty_Dumpty 's face ?
Sem: lambda $1_{e}.lambda $0_{r}.v|spank-past_2($1,n:prop|humpty_dumpty_3's($2,n|face_5($2)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh he 's under your finger .
Sem: lambda $0_{r}.and(and(aux|~be_3(pro:sub|he_2,$0),adv|under_4(det:poss|your_5($1,n|finger_6($1)),$0)),co|oh_1($0))
example_end

Sent: where is he ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:sub|he_3,$0),$1($0))
example_end

Sent: write on the other side honey .
Sem: lambda $0_{r}.and(v|write_1(you,$0),prep|on_2(det:art|the_3($1,and(qn|other_4($1),n|side_5($1))),$0))
example_end

Sent: you need a chair .
Sem: lambda $0_{r}.v|need_2(pro:per|you_1,det:art|a_3($1,n|chair_4($1)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where is he ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:sub|he_3,$0),$1($0))
example_end

Sent: there 's Humpty_Dumpty ?
Sem: lambda $0_{r}.Q(and(cop|~be_2(n:prop|humpty_dumpty_3,$0),pro:exist|there_1($0)))
example_end

Sent: where did you say he was ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|say_4(pro:per|you_3,lambda $1_{r}.cop|be-past_6(pro:sub|he_5,$1),$0),$2($0)),$0)
example_end

Sent: a muffin man ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|muffin_2($1),n|man_3($1)),$0)))
example_end

Sent: where 's the muffin man ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,and_comp(n|muffin_4($1),n|man_5($1))),$0),$2($0))
example_end

Sent: you 'll be back ?
Sem: lambda $0_{r}.Q(mod|~will_2(and(cop|be_3(pro:per|you_1,$0),adv|back_4($0)),$0))
example_end

Sent: where does the muffin man live ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(adj|live_6(det:art|the_3($1,and_comp(n|muffin_4($1),n|man_5($1))),$0),$2($0)),$0)
example_end

Sent: careful don 't hit Ursla .
Sem: lambda $0_{r}.and(BARE($1,co|careful_1($1)),not(mod|do_2(n|hit_4(you,n:prop|ursla_5,$0),$0),$0))
example_end

Sent: yes I 'm alright .
Sem: lambda $0_{r}.and(adj|alright_4(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: is that a refrigerator ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|refrigerator_4(pro:rel|that_2,$0)))
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: on your side of the paper .
Sem: prep|on_1(det:poss|your_2($0,att(n|side_3($0),prep|of_4(det:art|the_5($1,n|paper_6($1))))))
example_end

Sent: shall we use a new piece ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|use_3(pro:sub|we_2,det:art|a_4($1,and(adj|new_5($1),n|piece_6($1))),$0),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: my turn .
Sem: det:poss|my_1($0,n|turn_2($0))
example_end

Sent: oh what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_3(part|do-presp_5(pro:per|you_4,$1,$0),$0),co|oh_1($0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: on the paper .
Sem: prep|on_1(det:art|the_2($0,n|paper_3($0)))
example_end

Sent: you wrote on my finger .
Sem: lambda $0_{r}.and(v|write-past_2(pro:per|you_1,$0),prep|on_3(det:poss|my_4($1,n|finger_5($1)),$0))
example_end

Sent: there 's nothing in here to read .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|nothing_3,lambda $1_{r}.v|read-zero_7(pro:indef|nothing_3,$1),$0),prep|in_4(adv|here_5($0)))
example_end

Sent: Mommy 's read it .
Sem: lambda $0_{r}.poss|~s_2(v|read-zero_3(n:prop|mommy_1,pro:per|it_4,$0),$0)
example_end

Sent: no that 's not shampoo .
Sem: lambda $0_{r}.and(not(v|shampoo_5(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: that 's dressing .
Sem: lambda $0_{r}.part|dress-presp_3(pro:rel|that_1,$0)
example_end

Sent: salad dressing .
Sem: BARE($0,and_comp(n|salad_1($0),part|dress-presp_2($0)))
example_end

Sent: what you put on salad .
Sem: lambda $1_{e}.lambda $0_{r}.and(v|put-zero_3(pro:per|you_2,$1,$0),prep|on_4(BARE($2,n|salad_5($2)),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you do what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_2(pro:per|you_1,$1,$0)
example_end

Sent: you 're picking the ball .
Sem: lambda $0_{r}.aux|~be_2(part|pick-presp_3(pro:per|you_1,det:art|the_4($1,n|ball_5($1)),$0),$0)
example_end

Sent: and what did you do with my piece of paper ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(and(v|do_5(pro:per|you_4,$1,$0),prep|with_6(det:poss|my_7($2,att(n|piece_8($2),prep|of_9(BARE($3,n|paper_10($3))))),$0)),$0)
example_end

Sent: why would he want that in his face ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|want_4(pro:sub|he_3,pro:dem|that_5,$0),$1($0)),prep|in_6(det:poss|his_7($2,n|face_8($2)),$0)),$0)
example_end

Sent: no what do I do ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do_3(v|do_5(pro:sub|i_4,$1,$0),$0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you take the card .
Sem: lambda $0_{r}.v|take_2(pro:per|you_1,det:art|the_3($1,n|card_4($1)),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: where 's your page ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|page_4($1)),$0),$2($0))
example_end

Sent: that 's no the one that has the markings on it .
Sem: lambda $0_{r}.not(det:art|the_4(pro:dem|that_1,pro:indef|one_5(pro:dem|that_1,$0)),$0)
example_end

Sent: no you don 't pull on books .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|pull_5(pro:per|you_2,$0),prep|on_6(BARE($1,n|book-pl_7($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: you don 't throw books either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|throw_4(pro:per|you_1,BARE($1,n|book-pl_5($1)),$0),adv|either_6($0)),$0),$0)
example_end

Sent: can you read it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|read-zero_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: you don 't find pictures ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|find_4(pro:per|you_1,BARE($1,n|picture-pl_5($1)),$0),$0),$0))
example_end

Sent: you may fall .
Sem: lambda $0_{r}.mod|may_2(v|fall_3(pro:per|you_1,$0),$0)
example_end

Sent: if I let go you 'll fall and hurt yourself .
Sem: lambda $0_{r}.mod|~will_6(conj|if_1(v|let-zero_3_go_4(pro:sub|i_2,$0),v|hurt-zero_9(pro:per|you_5,pro:refl|yourself_10,$0)),$0)
example_end

Sent: you 're tires .
Sem: lambda $0_{r}.n|tire-pl_3(pro:per|you_1,$0)
example_end

Sent: oh I thought you were tired .
Sem: lambda $0_{r}.and(v|think-past_3(pro:sub|i_2,lambda $1_{r}.part|tire-pastp_6(pro:per|you_4,$1),$0),co|oh_1($0))
example_end

Sent: I did .
Sem: lambda $0_{r}.v|do-past_2(pro:sub|i_1,$0)
example_end

Sent: you fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0))
example_end

Sent: oh you 're in the rodeo .
Sem: lambda $0_{r}.and(and(aux|~be_3(pro:per|you_2,$0),prep|in_4(det:art|the_5($1,n|rodeo_6($1)),$0)),co|oh_1($0))
example_end

Sent: oh what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0),co|oh_1($0))
example_end

Sent: are you riding a horse ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|ride-presp_3(pro:per|you_2,det:art|a_4($1,n|horse_5($1)),$0),$0))
example_end

Sent: what are you riding ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|ride-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh you 're going to ride a horse .
Sem: lambda $0_{r}.and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|ride_6(pro:per|you_2,det:art|a_7($2,n|horse_8($2)),$1),$0),$0),co|oh_1($0))
example_end

Sent: yes he is heavy .
Sem: lambda $0_{r}.and(adj|heavy_4(pro:sub|he_2,$0),co|yes_1($0))
example_end

Sent: you 're okay ?
Sem: lambda $0_{r}.Q(adj|okay_3(pro:per|you_1,$0))
example_end

Sent: no but that 's not ground .
Sem: lambda $0_{r}.and(not(n|ground_6(pro:dem|that_3,$0),$0),co|no_1($0))
example_end

Sent: you don 't use a pencil for that do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|use_4(pro:per|you_1,det:art|a_5($1,n|pencil_6($1)),$0),prep|for_7(pro:dem|that_8,$0)),$0),$0),v|do_9(pro:per|you_10,$0)))
example_end

Sent: you write with a pencil .
Sem: lambda $0_{r}.and(v|write_2(pro:per|you_1,$0),prep|with_3(det:art|a_4($1,n|pencil_5($1)),$0))
example_end

Sent: that 's not a hammer .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|hammer_5(pro:dem|that_1,$0)),$0)
example_end

Sent: you don 't use that either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|use_4(pro:per|you_1,pro:dem|that_5,$0),adv|either_6($0)),$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: pushing what away ?
Sem: lambda $1_{e}.lambda $0_{r}.and(part|push-presp_1(you,$1,$0),adv|away_3($0))
example_end

Sent: you 're pushing that shadow away ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|push-presp_3(pro:per|you_1,pro:dem|that_4($1,n|shadow_5($1)),$0),adv|away_6($0)),$0))
example_end

Sent: whose shadow ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|shadow_2($1))
example_end

Sent: your shadow .
Sem: det:poss|your_1($0,n|shadow_2($0))
example_end

Sent: I don 't see your shadow .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,det:poss|your_5($1,n|shadow_6($1)),$0),$0),$0)
example_end

Sent: Ricky 's in there ?
Sem: lambda $0_{r}.Q(and(poss|~s_2(n:prop|ricky_1,$0),adv|in_3(adv|there_4($0))))
example_end

Sent: you 're okay ?
Sem: lambda $0_{r}.Q(adj|okay_3(pro:per|you_1,$0))
example_end

Sent: you can 't ride that horse can you ?
Sem: lambda $0_{r}.Q(and(not(mod|can_2(v|ride_4(pro:per|you_1,pro:dem|that_5($1,n|horse_6($1)),$0),$0),$0),mod|can_7(pro:per|you_8,$0)))
example_end

Sent: it 's a big horse ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,and(n|horse_5(pro:per|it_1,$0),adj|big_4(pro:per|it_1,$0))))
example_end

Sent: oh you can ride that one .
Sem: lambda $0_{r}.and(mod|can_3(v|ride_4(pro:per|you_2,pro:dem|that_5($1,pro:indef|one_6($1)),$0),$0),co|oh_1($0))
example_end

Sent: you can 't ride Perro .
Sem: lambda $0_{r}.not(mod|can_2(v|ride_4(pro:per|you_1,n:prop|perro_5,$0),$0),$0)
example_end

Sent: no you can 't ride on the tail .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|ride_5(pro:per|you_2,$0),prep|on_6(det:art|the_7($1,n|tail_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: no you don 't need a blanket .
Sem: lambda $0_{r}.and(not(mod|do_3(v|need_5(pro:per|you_2,det:art|a_6($1,n|blanket_7($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: funny Pinocchio !
Sem: att(n:prop|pinocchio_2,BARE($0,adj|fun-dn_1($0)))
example_end

Sent: what do you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you didn 't kick Perro .
Sem: lambda $0_{r}.not(mod|do_2(v|kick_4(pro:per|you_1,n:prop|perro_5,$0),$0),$0)
example_end

Sent: whom did you kick with your shoe ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|kick_4(pro:per|you_3,$1,$0),prep|with_5(det:poss|your_6($2,n|shoe_7($2)),$0)),$0)
example_end

Sent: you hit Mr Cromer with your shoes .
Sem: lambda $0_{r}.and(v|hit-zero_2(pro:per|you_1,n:prop|cromer_4_mr_3,$0),prep|with_5(det:poss|your_6($1,n|shoe-pl_7($1)),$0))
example_end

Sent: you kicked him with your shoe .
Sem: lambda $0_{r}.and(v|kick-past_2(pro:per|you_1,pro:obj|him_3,$0),prep|with_4(det:poss|your_5($1,n|shoe_6($1)),$0))
example_end

Sent: kiss it !
Sem: lambda $0_{r}.v|kiss_1(you,pro:per|it_2,$0)
example_end

Sent: you want him to kiss your dirty shoes .
Sem: lambda $0_{r}.v|want_2(pro:per|you_1,lambda $1_{r}.v|kiss_5(pro:obj|him_3,det:poss|your_6($2,and(adj|dirt-dn_7($2),n|shoe-pl_8($2))),$1),$0)
example_end

Sent: he has dirty feet doesn 't he ?
Sem: lambda $0_{r}.Q(and(aux|have-3s_2(pro:sub|he_1,BARE($1,and(v|dirty_3($1),n|foot-pl_4($1))),$0),not(mod|do_5(pro:sub|he_7,$0),$0)))
example_end

Sent: no that 's not yours is it ?
Sem: lambda $0_{r}.Q(and(and(not(pro:poss|yours_5(pro:dem|that_2,$0),$0),aux|be-3s_6(pro:per|it_7,$0)),co|no_1($0)))
example_end

Sent: that one doesn 't work that way .
Sem: lambda $0_{r}.not(mod|do_3(v|work_5(pro:dem|that_1($1,pro:indef|one_2($1)),pro:dem|that_6($2,n|way_7($2)),$0),$0),$0)
example_end

Sent: that one 's different .
Sem: lambda $0_{r}.adj|different_4(pro:dem|that_1($1,pro:indef|one_2($1)),$0)
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: let who ?
Sem: lambda $1_{e}.lambda $0_{r}.v|let-zero_1(you,$1,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: don 't step on it .
Sem: lambda $0_{r}.not(mod|do_1(and(v|step_3(you,$0),prep|on_4(pro:per|it_5,$0)),$0),$0)
example_end

Sent: Daddy 's going to ride in the car ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(n:prop|daddy_1,lambda $1_{r}.and(n|ride_5(n:prop|daddy_1,$1),prep|in_6(det:art|the_7($2,n|car_8($2)),$1)),$0),$0))
example_end

Sent: he 's not a copy cat .
Sem: lambda $0_{r}.not(det:art|a_4(pro:sub|he_1,and_comp(n|copy_5(pro:sub|he_1,$0),n|cat_6(pro:sub|he_1,$0))),$0)
example_end

Sent: you 're a copy cat .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,and_comp(n|copy_4(pro:per|you_1,$0),n|cat_5(pro:per|you_1,$0)))
example_end

Sent: don 't break the points Adam he needs that to write with .
Sem: lambda $0_{r}.not(and(mod|do_1(v|break_3(you,det:art|the_4($1,n|point-pl_5($1)),$0),$0),v|need-3s_8(pro:sub|he_7,lambda $2_{r}.v|write_11(pro:rel|that_9_with_12,$2),$0)),$0)
example_end

Sent: I think he meant let me play with Mr Cromer .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|mean-past_4(pro:sub|he_3,lambda $2_{r}.v|let-zero_5(_,lambda $3_{r}.and(v|play_7(pro:obj|me_6,$3),prep|with_8(n:prop|cromer_10_mr_9,$3)),$2),$1),$0)
example_end

Sent: where did you put that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: something broke ?
Sem: lambda $0_{r}.Q(adj|broke_2(pro:indef|something_1,$0))
example_end

Sent: don 't break Mr Cromer 's pencil .
Sem: lambda $0_{r}.not(mod|do_1(v|break_3(you,n:prop|cromer_5_mr_4's($1,n|pencil_7($1)),$0),$0),$0)
example_end

Sent: he won 't be able to write anymore .
Sem: lambda $0_{r}.not(mod|will_2(adj|able_5(pro:sub|he_1,lambda $1_{r}.and(v|write_7(pro:sub|he_1,$1),adv|anymore_8($1)),$0),$0),$0)
example_end

Sent: where are you putting that Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|put-presp_4(pro:per|you_3,pro:rel|that_5,$0),$1($0)),$0)
example_end

Sent: don 't what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_1(you,$1,$0),$0)
example_end

Sent: where is the point ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|point_4($1)),$0),$2($0))
example_end

Sent: show me the point .
Sem: lambda $0_{r}.v|show_1(you,det:art|the_3($1,n|point_4($1)),pro:obj|me_2,$0)
example_end

Sent: put your finger on the point .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:poss|your_2($1,n|finger_3($1)),$0),prep|on_4(det:art|the_5($2,n|point_6($2)),$0))
example_end

Sent: birdie toe .
Sem: BARE($0,and_comp(n|bird-dim_1($0),n|toe_2($0)))
example_end

Sent: that 's the point .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|point_4(pro:dem|that_1,$0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: no thanks .
Sem: not(BARE($0,co|thanks_2($0)))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you dropped your hat ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,det:poss|your_3($1,n|hat_4($1)),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: don 't hit the table so hard .
Sem: lambda $0_{r}.not(mod|do_1(and(v|hit-zero_3(you,det:art|the_4($1,n|table_5($1)),$0),adv|so_6(adv|hard_7($0))),$0),$0)
example_end

Sent: you fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0))
example_end

Sent: why did you fall down ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|fall_4(pro:per|you_3,$0),$1($0)),adv|down_5($0)),$0)
example_end

Sent: I 'm not hungry .
Sem: lambda $0_{r}.not(adj|hungry_4(pro:sub|i_1,$0),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I don 't want a spoon .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|i_1,det:art|a_5($1,n|spoon_6($1)),$0),$0),$0)
example_end

Sent: oh you 're going to eat ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|eat_6(pro:per|you_2,$1),$0),$0),co|oh_1($0)))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: you already brought the supper .
Sem: lambda $0_{r}.and(v|bring-past_3(pro:per|you_1,det:art|the_4($1,n|supper_5($1)),$0),adv|already_2($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: oh it 's macaroni ?
Sem: lambda $0_{r}.Q(and(n|macaroni_4(pro:per|it_2,$0),co|oh_1($0)))
example_end

Sent: let me eat the macaroni ?
Sem: lambda $0_{r}.Q(v|let-zero_1(you,lambda $1_{r}.v|eat_3(pro:obj|me_2,det:art|the_4($2,n|macaroni_5($2)),$1),$0))
example_end

Sent: that 's very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:dem|that_1,$0))
example_end

Sent: did you bake that yourself ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(v|bake_3(pro:per|you_2,pro:rel|that_4,$0),pro:refl|yourself_5($0)),$0))
example_end

Sent: like a piece of meat ?
Sem: Q(prep|like_1(det:art|a_2($0,att(n|piece_3($0),prep|of_4(BARE($1,n|meat_5($1)))))))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: maybe you dropped it out in the kitchen .
Sem: lambda $0_{r}.and(and(v|drop-past_3(pro:per|you_2,pro:per|it_4,$0),adv|maybe_1($0)),adv|out_5(prep|in_6(det:art|the_7($1,n|kitchen_8($1)),$0)))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: what kind of meat is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_6,att(n|kind_2(pro:per|it_6,$0),prep|of_3(BARE($2,n|meat_4($2)))))
example_end

Sent: big meat .
Sem: BARE($0,and(adj|big_1($0),n|meat_2($0)))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: don 't push Adam that 's not nice .
Sem: lambda $0_{r}.not(and(mod|do_1(v|push_3(you,$0),$0),not(adj|nice_8(pro:dem|that_5,$0),$0)),$0)
example_end

Sent: what are you getting now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|get-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: I don 't think you need a fork .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:per|you_5,det:art|a_7($2,n|fork_8($2)),$1),$0),$0),$0)
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: bite your pants ?
Sem: lambda $0_{r}.Q(v|bite_1(you,det:poss|your_2($1,n:pt|pants_3($1)),$0))
example_end

Sent: who bit your pants ?
Sem: lambda $1_{e}.lambda $0_{r}.n|bit_2($1,det:poss|your_3($2,n:pt|pants_4($2)),$0)
example_end

Sent: doggie did ?
Sem: lambda $0_{r}.Q(v|do-past_2(BARE($1,n|dog-dim_1($1)),$0))
example_end

Sent: which doggie ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|dog-dim_2($1))
example_end

Sent: you got lots_of bites didn 't you ?
Sem: lambda $0_{r}.Q(and(part|get-pastp_2(pro:per|you_1,qn|lots_of_3($1,n|bite-pl_4($1)),$0),not(mod|do_5(pro:per|you_7,$0),$0)))
example_end

Sent: why do you have_to put the hat on when you 're out there .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|when_9(and(aux|~be_11(pro:per|you_10,$0),adv|out_12(adv|there_13($0))),mod:aux|have_to_4(mod|do_2(and(and(v|put-zero_5(pro:per|you_3,det:art|the_6($1,n|hat_7($1)),$0),$2($0)),adv|on_8($0)),$0),$0))
example_end

Sent: why do you have_to wear a hat ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod:aux|have_to_4(mod|do_2(and(v|wear_5(pro:per|you_3,det:art|a_6($1,n|hat_7($1)),$0),$2($0)),$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: cowboy lost the hat ?
Sem: lambda $0_{r}.Q(v|lose-past_2(BARE($1,n|cow+boy_1($1)),det:art|the_3($2,n|hat_4($2)),$0))
example_end

Sent: you don 't wear a bandana .
Sem: lambda $0_{r}.not(mod|do_2(v|wear_4(pro:per|you_1,det:art|a_5($1,n|bandana_6($1)),$0),$0),$0)
example_end

Sent: cowboy likes a boot ?
Sem: lambda $0_{r}.Q(v|like-3s_2(BARE($1,n|cow+boy_1($1)),det:art|a_3($2,n|boot_4($2)),$0))
example_end

Sent: why does the cowboy like boots .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(prep|like_5(det:art|the_3($1,n|cow+boy_4($1)),BARE($2,n|boot-pl_6($2)),$0),$3($0)),$0)
example_end

Sent: you don 't have any boots on .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:per|you_1,qn|any_5($1,n|boot-pl_6($1)),$0),prep|on_7($0)),$0),$0)
example_end

Sent: you have a hat on .
Sem: lambda $0_{r}.and(v|have_2(pro:per|you_1,det:art|a_3($1,n|hat_4($1)),$0),adv|on_5($0))
example_end

Sent: what else do you have on Adam .
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(and(v|have_5(pro:per|you_4,$1,$0),prep|on_6($0)),$0)
example_end

Sent: you don 't have any bandana .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,qn|any_5($1,n|bandana_6($1)),$0),$0),$0)
example_end

Sent: who took them ?
Sem: lambda $1_{e}.lambda $0_{r}.v|take-past_2($1,pro:obj|them_3,$0)
example_end

Sent: Santa did ?
Sem: lambda $0_{r}.Q(v|do-past_2(n:prop|santa_1,$0))
example_end

Sent: oh he can 't write with a spoon .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|write_5(pro:sub|he_2,$0),prep|with_6(det:art|a_7($1,n|spoon_8($1)),$0)),$0),$0),co|oh_1($0))
example_end

Sent: you write with a pencil .
Sem: lambda $0_{r}.and(v|write_2(pro:per|you_1,$0),prep|with_3(det:art|a_4($1,n|pencil_5($1)),$0))
example_end

Sent: put it in your hat .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|in_3(det:poss|your_4($1,n|hat_5($1)),$0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're going to fall .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|fall_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: just a minute Santa Claus .
Sem: adv|just_1(det:art|a_2($0,n|minute_3($0)))
example_end

Sent: oh Santa Claus has boots on just like you .
Sem: lambda $0_{r}.and(and(and(aux|have-3s_4(n:prop|claus_3_santa_2,BARE($1,v|boot-3s_5($1)),$0),adv|on_6($0)),adv|just_7(prep|like_8(pro:per|you_9,$0))),co|oh_1($0))
example_end

Sent: let you need them on ?
Sem: lambda $0_{r}.Q(and(v|need_3(pro:per|you_2,pro:obj|them_4,$0),adv|on_5($0)))
example_end

Sent: oh the saddle and bridle are all_gone ?
Sem: lambda $0_{r}.Q(and(adj|all_gone_7(det:art|the_2($1,n|bridle_5($1)),$0),co|oh_1($0)))
example_end

Sent: what happened to them ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:obj|them_4,$0))
example_end

Sent: Mommy 's pointing ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|point-presp_3(n:prop|mommy_1,$0),$0))
example_end

Sent: your saddle and bridle .
Sem: det:poss|your_1($0,n|bridle_4($0))
example_end

Sent: oh that 's what cowboy 's horses wear .
Sem: lambda $0_{r}.and(cop|~be_3(pro:dem|that_2,lambda $1_{r}.v|wear_8(n|cow+boy_5's($2,n|horse-pl_7($2)),pro:int|what_4,$1),$0),co|oh_1($0))
example_end

Sent: who get out ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|get_2($1,$0),adv|out_3($0))
example_end

Sent: cowboys did ?
Sem: lambda $0_{r}.Q(v|do-past_2(BARE($1,n|cow+boy_1($1)),$0))
example_end

Sent: watch your head .
Sem: lambda $0_{r}.v|watch_1(you,det:poss|your_2($1,n|head_3($1)),$0)
example_end

Sent: oh you 'll be back ?
Sem: lambda $0_{r}.Q(and(mod|~will_3(and(cop|be_4(pro:per|you_2,$0),adv|back_5($0)),$0),co|oh_1($0)))
example_end

Sent: where are you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-pres_2(pro:per|you_3,$0),$1($0))
example_end

Sent: you 're where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|~be_2(pro:per|you_1,$0),$1($0))
example_end

Sent: a little while ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|little_2($1),n|while_3($1)),$0)))
example_end

Sent: other bunkhouse .
Sem: BARE($0,and(qn|other_1($0),n|bunkhouse_2($0)))
example_end

Sent: somebody went away .
Sem: lambda $0_{r}.and(v|go-past_2(pro:indef|somebody_1,$0),adv|away_3($0))
example_end

Sent: you 're going to dance with Cromer ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|dance_5(pro:per|you_1,$1),prep|with_6(n:prop|cromer_7,$1)),$0),$0))
example_end

Sent: no Adam don 't put that in the microphone .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|put-zero_5(you,pro:dem|that_6,$0),prep|in_7(det:art|the_8($1,n|microphone_9($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: that can 't go in there .
Sem: lambda $0_{r}.not(mod|can_2(and(v|go_4(pro:rel|that_1,$0),prep|in_5(adv|there_6($0))),$0),$0)
example_end

Sent: no don 't put it in the microphone .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|put-zero_4(you,pro:per|it_5,$0),prep|in_6(det:art|the_7($1,n|microphone_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: that 's not a screw .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|screw_5(pro:dem|that_1,$0)),$0)
example_end

Sent: is that part of the broom ?
Sem: lambda $0_{r}.Q(att(n|part_3(pro:dem|that_2,$0),prep|of_4(det:art|the_5($1,n|broom_6($1)))))
example_end

Sent: Adam no !
Sem: lambda $0_{r}.co|no_2($0)
example_end

Sent: she needs to write with the pencil .
Sem: lambda $0_{r}.v|need-3s_2(pro:sub|she_1,lambda $1_{r}.and(v|write_4(pro:sub|she_1,$1),prep|with_5(det:art|the_6($2,n|pencil_7($2)),$1)),$0)
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: Jesus stands up what ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|stand-3s_2_up_3(n:prop|jesus_1,$0),$1($0))
example_end

Sent: oh horsie .
Sem: lambda $0_{r}.and(n|horse-dim_2($0),co|oh_1($0))
example_end

Sent: another Jesus ?
Sem: BARE($0,Q(qn|another_1($1,n:prop|jesus_2($1),$0)))
example_end

Sent: Jesus does what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(n:prop|jesus_1,$1,$0)
example_end

Sent: Jesus walks ?
Sem: lambda $0_{r}.Q(v|walk-3s_2(n:prop|jesus_1,$0))
example_end

Sent: no Adam that 's not nice .
Sem: lambda $0_{r}.and(not(adj|nice_6(pro:dem|that_3,$0),$0),co|no_1($0))
example_end

Sent: write on your paper .
Sem: lambda $0_{r}.and(v|write_1(you,$0),prep|on_2(det:poss|your_3($1,n|paper_4($1)),$0))
example_end

Sent: no don 't get on the table .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|get_4(you,det:art|the_6($1,n|table_7($1)),$0),prep|on_5($0)),$0),$0),co|no_1($0))
example_end

Sent: get off the table honey .
Sem: lambda $0_{r}.and(v|get_1(you,det:art|the_3($1,n|table_4($1)),$0),prep|off_2($0))
example_end

Sent: the table may fall .
Sem: lambda $0_{r}.mod|may_3(v|fall_4(det:art|the_1($1,n|table_2($1)),$0),$0)
example_end

Sent: you knocked it off .
Sem: lambda $0_{r}.and(v|knock-past_2(pro:per|you_1,pro:per|it_3,$0),adv|off_4($0))
example_end

Sent: careful with the pencil honey .
Sem: BARE($0,co|careful_1($0))
example_end

Sent: we 're Jesus .
Sem: lambda $0_{r}.n:prop|jesus_3(pro:sub|we_1,$0)
example_end

Sent: no don 't you hit anybody with the pencil .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|hit-zero_5(pro:per|you_4,pro:indef|anybody_6,$0),prep|with_7(det:art|the_8($1,n|pencil_9($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: stop crying .
Sem: lambda $0_{r}.n|stop_1(you,lambda $1_{r}.part|cry-presp_2(you,$1),$0)
example_end

Sent: Adam be careful with the pencil .
Sem: BARE($0,co|careful_3($0))
example_end

Sent: you 're rolling the tape ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|roll-presp_3(pro:per|you_1,det:art|the_4($1,n|tape_5($1)),$0),$0))
example_end

Sent: careful with your pencil honey .
Sem: BARE($0,co|careful_1($0))
example_end

Sent: Adam no don 't do that to the rug .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|do_5(you,pro:dem|that_6,$0),prep|to_7(det:art|the_8($1,n|rug_9($1)),$0)),$0),$0),co|no_2($0))
example_end

Sent: don 't put the screwdriver on the rug like that .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|put-zero_3(you,det:art|the_4($1,n|screw+driver_5($1)),$0),prep|on_6(det:art|the_7($2,n|rug_8($2)),$0)),prep|like_9(pro:dem|that_10,$0)),$0),$0)
example_end

Sent: not for digging .
Sem: not(prep|for_2(BARE($0,n:gerund|dig-presp_3($0))))
example_end

Sent: you use a shovel for digging .
Sem: lambda $0_{r}.and(v|use_2(pro:per|you_1,det:art|a_3($1,n|shovel_4($1)),$0),prep|for_5(BARE($2,n:gerund|dig-presp_6($2)),$0))
example_end

Sent: yes but you don 't have a shovel do you ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_4(v|have_6(pro:per|you_3,det:art|a_7($1,n|shovel_8($1)),$0),$0),$0),v|do_9(pro:per|you_10,$0)),co|yes_1($0)))
example_end

Sent: why don 't you go work on your firetruck with the screwdriver ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(n|work_6(pro:per|you_4,det:poss|your_8($1,n|fire+truck_9($1)),$0),$2($0)),prep|on_7($0)),prep|with_10(det:art|the_11($3,n|screw+driver_12($3)),$0)),$0),$0)
example_end

Sent: what about the screws on your firetruck .
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,att(n|screw-pl_4($0),prep|on_5(det:poss|your_6($1,n|fire+truck_7($1)))))))
example_end

Sent: are they all there ?
Sem: lambda $0_{r}.Q(and(cop|be-pres_1(pro:sub|they_2,$0),post|all_3(adv|there_4($0))))
example_end

Sent: she doesn 't have anything to show you in that bag .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|she_1,att(pro:indef|anything_5,prep|in_9(pro:dem|that_10($1,n|bag_11($1)))),$0),$0),$0)
example_end

Sent: do you want to see some more pictures ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|see_5(pro:per|you_2,qn|some_6($2,and(qn|more_7($2),n|picture-pl_8($2))),$1),$0),$0))
example_end

Sent: where 's Robin on there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(cop|~be_2(n:prop|robin_3,$0),$1($0)),prep|on_4(adv|there_5($0)))
example_end

Sent: no that 's not David .
Sem: lambda $0_{r}.and(not(n:prop|david_5(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: can you see what they 're doing ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_3(pro:per|you_2,lambda $1_{r}.aux|~be_6(part|do-presp_7(pro:sub|they_5,pro:int|what_4,$1),$1),$0),$0))
example_end

Sent: they are working .
Sem: lambda $0_{r}.aux|be-pres_2(part|work-presp_3(pro:sub|they_1,$0),$0)
example_end

Sent: oh Robin is a little boy ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(n:prop|robin_2,and(n|boy_6(n:prop|robin_2,$0),adj|little_5(n:prop|robin_2,$0))),co|oh_1($0)))
example_end

Sent: you don 't like it ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|like_4(pro:per|you_1,pro:per|it_5,$0),$0),$0))
example_end

Sent: no there 's nothing in there .
Sem: lambda $0_{r}.and(and(cop|~be_3(pro:indef|nothing_4,$0),prep|in_5(adv|there_6($0))),co|no_1($0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: no that 's Urs  bag .
Sem: lambda $0_{r}.and(n:prop|ursula_4's'(pro:dem|that_2,n|bag_6(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: no don 't take it out .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|take_4(you,pro:per|it_5,$0),adv|out_6($0)),$0),$0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you ask Urs .
Sem: lambda $0_{r}.v|ask_2(pro:per|you_1,n:prop|ursula_3,$0)
example_end

Sent: that 's her bag .
Sem: lambda $0_{r}.det:poss|her_3(pro:dem|that_1,n|bag_4(pro:dem|that_1,$0))
example_end

Sent: what are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_3,$0)
example_end

Sent: yes I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: bu I don 't think she wants the glove on now .
Sem: lambda $0_{r}.not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.and(and(v|want-3s_7(pro:sub|she_6,det:art|the_8($2,n|glove_9($2)),$1),prep|on_10($1)),adv|now_11($1)),$0),$0),$0)
example_end

Sent: she can 't write with the glove on .
Sem: lambda $0_{r}.not(mod|can_2(and(v|write_4(pro:sub|she_1,$0),adv|on_8(prep|with_5(det:art|the_6($1,n|glove_7($1)),$0))),$0),$0)
example_end

Sent: you can put them on your hand .
Sem: lambda $0_{r}.mod|can_2(and(v|put-zero_3(pro:per|you_1,pro:obj|them_4,$0),prep|on_5(det:poss|your_6($1,n|hand_7($1)),$0)),$0)
example_end

Sent: you keep that .
Sem: lambda $0_{r}.v|keep_2(pro:per|you_1,pro:dem|that_3,$0)
example_end

Sent: you put them on your hand .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,pro:obj|them_3,$0),prep|on_4(det:poss|your_5($1,n|hand_6($1)),$0))
example_end

Sent: is that the right one ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,and(pro:indef|one_5(pro:rel|that_2,$0),adj|right_4(pro:rel|that_2,$0))))
example_end

Sent: you put it on .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,pro:per|it_3,$0),adv|on_4($0))
example_end

Sent: that 's a fastener .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|fasten-dv_4(pro:dem|that_1,$0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: he doesn 't have fingers .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|he_1,BARE($1,n|finger-pl_5($1)),$0),$0),$0)
example_end

Sent: small doggie .
Sem: BARE($0,and(adj|small_1($0),n|dog-dim_2($0)))
example_end

Sent: he doesn 't have fingers either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:sub|he_1,BARE($1,n|finger-pl_5($1)),$0),adv|either_6($0)),$0),$0)
example_end

Sent: he doesn 't have fingers .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|he_1,BARE($1,n|finger-pl_5($1)),$0),$0),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: well what do you have in the trash can ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do_3(and(v|have_5(pro:per|you_4,$1,$0),prep|in_6(det:art|the_7($2,and_comp(n|trash_8($2),mod|can_9($2))),$0)),$0),co|well_1($0))
example_end

Sent: why don 't you put that on the table ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|put-zero_5(pro:per|you_4,pro:dem|that_6,$0),$1($0)),prep|on_7(det:art|the_8($2,n|table_9($2)),$0)),$0),$0)
example_end

Sent: come take Urs  gloves off .
Sem: lambda $0_{r}.and(v|take_2(you,n:prop|ursula_3's($1,n|glove-pl_5($1)),$0),prep|off_6($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: you got them .
Sem: lambda $0_{r}.v|get-past_2(pro:per|you_1,pro:obj|them_3,$0)
example_end

Sent: where did you get them ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|you_3,pro:obj|them_5,$0),$1($0)),$0)
example_end

Sent: from the bag .
Sem: prep|from_1(det:art|the_2($0,n|bag_3($0)))
example_end

Sent: alright put them back .
Sem: lambda $0_{r}.and(and(v|put-zero_2(you,pro:obj|them_3,$0),adv|back_4($0)),co|alright_1($0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: Adam you have another one out here .
Sem: lambda $0_{r}.and(v|have_3(pro:per|you_2,qn|another_4($1,pro:indef|one_5($1)),$0),adv|out_6(adv|here_7($0)))
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: no we don 't need our forks .
Sem: lambda $0_{r}.and(not(mod|do_3(v|need_5(pro:sub|we_2,det:poss|our_6($1,n|fork-pl_7($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: I already have mine .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|i_1,pro:poss|mine_4,$0),adv|already_2($0))
example_end

Sent: okay thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|okay_1($0))
example_end

Sent: little talk .
Sem: BARE($0,and(adj|little_1($0),n|talk_2($0)))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: read a magazine ?
Sem: lambda $0_{r}.Q(v|read-zero_1(you,det:art|a_2($1,n|magazine_3($1)),$0))
example_end

Sent: is that what you have a magazine ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(pro:dem|that_2,lambda $1_{r}.v|have_5(pro:per|you_4,pro:int|what_3,$1),$0))
example_end

Sent: what are you reading in the magazine ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|read-presp_4(pro:per|you_3,$1,$0),prep|in_5(det:art|the_6($2,n|magazine_7($2)),$0)),$0)
example_end

Sent: let me want fork .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|want_3(pro:obj|me_2,BARE($2,n|fork_4($2)),$1),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that in the bottle ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(att(pro:dem|that_3,prep|in_4(det:art|the_5($2,n|bottle_6($2)))),$0)
example_end

Sent: it 's hot .
Sem: lambda $0_{r}.adj|hot_3(pro:per|it_1,$0)
example_end

Sent: radiator is hot ?
Sem: lambda $0_{r}.Q(adj|hot_3(BARE($1,n|radiator_1($1)),$0))
example_end

Sent: bandana belongs to the cowboy ?
Sem: lambda $0_{r}.Q(and(v|belong-3s_2(BARE($1,n|bandana_1($1)),$0),prep|to_3(det:art|the_4($2,n|cow+boy_5($2)),$0)))
example_end

Sent: oh that 's corn ?
Sem: lambda $0_{r}.Q(and(n|corn_4(pro:dem|that_2,$0),co|oh_1($0)))
example_end

Sent: what kind of corn is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_6,att(n|kind_2(pro:per|it_6,$0),prep|of_3(BARE($2,n|corn_4($2)))))
example_end

Sent: corn on the cob ?
Sem: BARE($0,Q(att(n|corn_1($0),prep|on_2(det:art|the_3($1,n|cob_4($1))))))
example_end

Sent: you 've finished your corn haven 't you ?
Sem: lambda $0_{r}.Q(and(aux|~have_2(part|finish-pastp_3(pro:per|you_1,det:poss|your_4($1,n|corn_5($1)),$0),$0),not(aux|have_6(pro:per|you_8,$0),$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what kind of smoke is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|smoke_4($2)))))
example_end

Sent: you 're sitting at the table ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|sit-presp_3(pro:per|you_1,$0),prep|at_4(det:art|the_5($1,n|table_6($1)),$0)),$0))
example_end

Sent: well what kind of smoke is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_7,att(n|kind_3(pro:dem|that_7,$0),prep|of_4(BARE($2,n|smoke_5($2))))),co|well_1($0))
example_end

Sent: oh cigarette smoke .
Sem: lambda $0_{r}.and(and_comp(n|cigarette_2($0),n|smoke_3($0)),co|oh_1($0))
example_end

Sent: put the pencil right on the table .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|pencil_3($1)),$0),adv|right_4(prep|on_5(det:art|the_6($2,n|table_7($2)),$0)))
example_end

Sent: why don 't you write a tomato for me ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|write_5(pro:per|you_4,det:art|a_6($1,n|tomato_7($1)),$0),$2($0)),prep|for_8(pro:obj|me_9,$0)),$0),$0)
example_end

Sent: okay you draw a cowboy hat .
Sem: lambda $0_{r}.and(v|draw_3(pro:per|you_2,det:art|a_4($1,and_comp(n|cow+boy_5($1),n|hat_6($1))),$0),co|okay_1($0))
example_end

Sent: oh that 's a nice cowboy hat .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and_comp(n|cow+boy_6(pro:dem|that_2,$0),and(n|hat_7(pro:dem|that_2,$0),adj|nice_5(pro:dem|that_2,$0)))),co|oh_1($0))
example_end

Sent: what is in there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|be-3s_2($1,$0),prep|in_3(adv|there_4($0)))
example_end

Sent: come on Adam .
Sem: lambda $0_{r}.and(v|come_1(you,$0),prep|on_2($0))
example_end

Sent: leave those mops alone and come out here .
Sem: lambda $0_{r}.and(and(v|come_6(you,pro:dem|those_2($1,n|mop-pl_3($1)),$0),adv|alone_4($0)),adv|out_7(adv|here_8($0)))
example_end

Sent: no you don 't do that on Mommy 's rug .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|do_5(pro:per|you_2,pro:dem|that_6,$0),prep|on_7(n:prop|mommy_8's($1,n|rug_10($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: you 're a big boy .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,and(n|boy_5(pro:per|you_1,$0),adj|big_4(pro:per|you_1,$0)))
example_end

Sent: Adam what about your poor doggies who are sitting out here waiting for you ?
Sem: att(det:int|what_2,prep|about_3(det:poss|your_4($0,and(adj|poor_5($0),n|dog-dim_6($0)))))
example_end

Sent: no you don 't do that Adam what do you say ?
Sem: lambda $0_{r}.Q(and(not(and(mod|do_3(v|do_5(pro:per|you_2,det:dem|that_6,$0),$0),mod|do_9(v|say_11(pro:per|you_10,pro:int|what_8,$0),$0)),$0),co|no_1($0)))
example_end

Sent: excuse me please .
Sem: lambda $0_{r}.and(v|excuse_1(you,pro:obj|me_2,$0),co|please_3($0))
example_end

Sent: no where could she go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|could_3(and(v|go_5(pro:sub|she_4,$0),$1($0)),$0),co|no_1($0))
example_end

Sent: where could she sit ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|could_2(and(v|sit_4(pro:sub|she_3,$0),$1($0)),$0)
example_end

Sent: yes you sit down there and read a story to the microphone .
Sem: lambda $0_{r}.and(and(and(v|read-zero_7(pro:per|you_2,det:art|a_8($1,n|story_9($1)),$0),adv|down_4(adv|there_5($0))),prep|to_10(det:art|the_11($2,n|microphone_12($2)),$0)),co|yes_1($0))
example_end

Sent: are you going to listen to a story ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|listen_5(pro:per|you_2,$1),prep|to_6(det:art|a_7($2,n|story_8($2)),$1)),$0),$0))
example_end

Sent: well your story books are out here aren 't they ?
Sem: lambda $0_{r}.Q(and(and(and(cop|be-pres_5(det:poss|your_2($1,and_comp(n|story_3($1),n|book-pl_4($1))),$0),adv|out_6(adv|here_7($0))),not(aux|be_8(pro:sub|they_10,$0),$0)),co|well_1($0)))
example_end

Sent: will you read it to me ?
Sem: lambda $0_{r}.Q(mod|will_1(and(v|read-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|to_5(pro:obj|me_6,$0)),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you can 't read without your hat .
Sem: lambda $0_{r}.not(mod|can_2(and(v|read-zero_4(pro:per|you_1,$0),prep|without_5(det:poss|your_6($1,n|hat_7($1)),$0)),$0),$0)
example_end

Sent: a nice train ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|nice_2($1),n|train_3($1)),$0)))
example_end

Sent: yes I 'd like to listen to shadow .
Sem: lambda $0_{r}.and(mod|~genmod_3(v|like_4(pro:sub|i_2,lambda $1_{r}.and(v|listen_6(pro:sub|i_2,$1),prep|to_7(BARE($2,n|shadow_8($2)),$1)),$0),$0),co|yes_1($0))
example_end

Sent: very nice .
Sem: BARE($0,adv|very_1(adj|nice_2($0)))
example_end

Sent: that 's a good one .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(pro:indef|one_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: a big one .
Sem: det:art|a_1($0,att(pro:indef|one_3,BARE($1,adj|big_2($1)),$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: a saddle and a bridle .
Sem: det:art|a_4($0,det:art|a_1($1,n|bridle_5($1),$0))
example_end

Sent: that 's a nice story .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|story_5(pro:dem|that_1,$0),adj|nice_4(pro:dem|that_1,$0)))
example_end

Sent: yes that 's a nice story .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and(n|story_6(pro:dem|that_2,$0),adj|nice_5(pro:dem|that_2,$0))),co|yes_1($0))
example_end

Sent: where did all the pieces go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_6(qn|all_3(det:art|the_4($1,n|piece-pl_5($1))),$0),$2($0)),$0)
example_end

Sent: you can use the table Adam if you want to .
Sem: lambda $0_{r}.conj|if_7(v|want_9(pro:per|you_8,$0),mod|can_2(v|use_3(pro:per|you_1,det:art|the_4($1,n|table_5($1)),$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: I think he 's standing on his feet .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~be_4(and(part|stand-presp_5(pro:sub|he_3,$1),prep|on_6(det:poss|his_7($2,n|foot-pl_8($2)),$1)),$1),$0)
example_end

Sent: that goes there doesn 't it ?
Sem: lambda $0_{r}.Q(and(and(v|go-3s_2(pro:rel|that_1,$0),adv|there_3($0)),not(mod|do_4(pro:per|it_6,$0),$0)))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: I don 't know why .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),$1($0)),$0),$0)
example_end

Sent: can you ride it Adam ?
Sem: lambda $0_{r}.Q(mod|can_1(v|ride_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: well he was dreaming .
Sem: lambda $0_{r}.and(aux|be-past_3(part|dream-presp_4(pro:sub|he_2,$0),$0),co|well_1($0))
example_end

Sent: is that a song on a record ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,att(n|song_4(pro:rel|that_2,$0),prep|on_5(det:art|a_6($1,n|record_7($1))))))
example_end

Sent: but you say it ?
Sem: lambda $0_{r}.Q(v|say_3(pro:per|you_2,pro:per|it_4,$0))
example_end

Sent: did the horse hurt you ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_4(det:art|the_2($1,n|horse_3($1)),pro:per|you_5,$0),$0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: why do you say he has wheels ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.v|do_2(and(v|say_4(pro:per|you_3,lambda $1_{r}.aux|have-3s_6(pro:sub|he_5,BARE($2,n|wheel-pl_7($2)),$1),$0),$3($0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what color are his eyes .
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_4($2,n|eye-pl_5($2)),n|color_2(det:poss|his_4($2,n|eye-pl_5($2)),$0))
example_end

Sent: d you know ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,$0),$0))
example_end

Sent: well how would you turn it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|will-cond_3(and(v|turn_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),$0),co|well_1($0))
example_end

Sent: you ran over a bean bag .
Sem: lambda $0_{r}.and(v|run-past_2(pro:per|you_1,$0),prep|over_3(det:art|a_4($1,and_comp(n|bean_5($1),n|bag_6($1))),$0))
example_end

Sent: are you in a rodeo ?
Sem: lambda $0_{r}.Q(prep|in_3(det:art|a_4($1,n|rodeo_5($1)),pro:per|you_2,$0))
example_end

Sent: your horse threw you off ?
Sem: lambda $0_{r}.Q(and(v|throw-past_3(det:poss|your_1($1,n|horse_2($1)),pro:per|you_4,$0),adv|off_5($0)))
example_end

Sent: you have_to watch out for Paul 's fingers .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|watch_4(pro:per|you_1,$1),$0)
example_end

Sent: watch Paul .
Sem: lambda $0_{r}.n|watch_1(you,$0)
example_end

Sent: yes you almost ran over me .
Sem: lambda $0_{r}.and(and(and(v|run-past_4(pro:per|you_2,$0),adv|almost_3($0)),prep|over_5(pro:obj|me_6,$0)),co|yes_1($0))
example_end

Sent: in your garage ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|garage_3($0))))
example_end

Sent: what are you going to put in your garage ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|put-zero_6(pro:per|you_3,$2,$1),prep|in_7(det:poss|your_8($3,n|garage_9($3)),$1)),$0),$0)
example_end

Sent: horses should have a barn .
Sem: lambda $0_{r}.mod|should_2(v|have_3(BARE($1,n|horse-pl_1($1)),det:art|a_4($2,n|barn_5($2)),$0),$0)
example_end

Sent: does it close ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(adj|close_3(pro:per|it_2,$0),$0))
example_end

Sent: want some sugar horse ?
Sem: lambda $0_{r}.Q(v|want_1(you,qn|some_2($1,n|sugar_3($1)),$0))
example_end

Sent: here horsie .
Sem: lambda $0_{r}.adv|here_1(BARE($1,n|horse-dim_2($1)),$0)
example_end

Sent: here Paul give the horsie some sugar .
Sem: lambda $0_{r}.and(v|give_3(you,qn|some_6($1,n|sugar_7($1)),det:art|the_4($2,n|horse-dim_5($2)),$0),adv|here_1($0))
example_end

Sent: hi Adam .
Sem: lambda $0_{r}.co|hi_1($0)
example_end

Sent: that 's no mixer .
Sem: lambda $0_{r}.not(n|mix-dv_4(pro:dem|that_1,$0),$0)
example_end

Sent: Adam let Paul try this .
Sem: lambda $0_{r}.part|let-pastp_2(you,lambda $1_{r}.v|try_4(n:prop|paul_3,pro:dem|this_5,$1),$0)
example_end

Sent: stop crying Paul .
Sem: lambda $0_{r}.n|stop_1(you,lambda $1_{r}.part|cry-presp_2(you,$1),$0)
example_end

Sent: why are you doing that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: where is the pie ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|pie_4($1)),$0))
example_end

Sent: that must be a special kind of horse .
Sem: lambda $0_{r}.mod|must_2(det:art|a_4(pro:dem|that_1,att(and(n|kind_6(pro:dem|that_1,$0),n|special_5(pro:dem|that_1,$0)),prep|of_7(BARE($1,n|horse_8($1))))),$0)
example_end

Sent: what kind of horse is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_6,att(n|kind_2(pro:dem|this_6,$0),prep|of_3(BARE($2,n|horse_4($2)))))
example_end

Sent: but you made him ?
Sem: lambda $0_{r}.Q(v|make-past_3(pro:per|you_2,pro:obj|him_4,$0))
example_end

Sent: does he have a name ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(pro:sub|he_2,det:art|a_4($1,n|name_5($1)),$0),$0))
example_end

Sent: does he have a name ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(pro:sub|he_2,det:art|a_4($1,n|name_5($1)),$0),$0))
example_end

Sent: what 's his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_3($2,n|name_4($2)),$0)
example_end

Sent: did you get stepped on ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|get_3(pro:per|you_2,lambda $1_{r}.and(part|step-pastp_4(you,$1),adv|on_5($1)),$0),$0))
example_end

Sent: what is the horse killing ?
Sem: lambda $2_{e}.lambda $0_{r}.cop|be-3s_2(part|kill-presp_5(det:art|the_3($1,n|horse_4($1)),$2,$0),$0)
example_end

Sent: yes but what is it supposed to be ?
Sem: lambda $0_{r}.and(v|suppose-past_6(pro:per|it_5,$0),co|yes_1($0))
example_end

Sent: to kill the noise ?
Sem: lambda $0_{r}.Q(v|kill_2(you,det:art|the_3($1,n|noise_4($1)),$0))
example_end

Sent: you mean stop the noise .
Sem: lambda $0_{r}.adj|mean_2(pro:per|you_1,lambda $1_{r}.n|stop_3(_,det:art|the_4($2,n|noise_5($2)),$1),$0)
example_end

Sent: I guess .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,$0)
example_end

Sent: how do they do what ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:sub|they_3,$1,$0),$2($0)),$0)
example_end

Sent: well I don 't ride in it because I 'm too big .
Sem: lambda $0_{r}.and(not(conj|because_8(adv|too_11(adj|big_12(pro:sub|i_9,$0)),mod|do_3(and(v|ride_5(pro:sub|i_2,$0),prep|in_6(pro:per|it_7,$0)),$0)),$0),adv|well_1($0))
example_end

Sent: there 's a make believe place right there where you put your foot .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(and(cop|~be_2(det:art|a_3($1,and(and_comp(v|believe_5($1),v|make_4($1)),n|place_6($1))),$0),adv|right_7(adv|there_8($0))),and(v|put-zero_11(pro:per|you_10,det:poss|your_12($2,n|foot_13($2)),$0),$3($0)))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: yes if there 's nothing in your way .
Sem: lambda $0_{r}.and(cop|~be_4(att(pro:indef|nothing_5,prep|in_6(det:poss|your_7($1,n|way_8($1)))),$0),co|yes_1($0))
example_end

Sent: I don 't know really .
Sem: lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),adv|real-dadj_5($0)),$0),$0)
example_end

Sent: don 't have an accident now .
Sem: lambda $0_{r}.not(mod|do_1(and(v|have_3(you,det:art|a_4($1,n|accident_5($1)),$0),adv|now_6($0)),$0),$0)
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: no no dirty .
Sem: lambda $0_{r}.and(adj|dirt-dn_3($0),qn|no_2($0))
example_end

Sent: can you say ball ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,BARE($1,n|ball_4($1)),$0),$0))
example_end

Sent: oh it 's not ?
Sem: lambda $0_{r}.Q(and(not(cop|~be_3(pro:per|it_2,$0),$0),co|oh_1($0)))
example_end

Sent: I 'm going to someone 's house now ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(and(part|go-presp_3(pro:sub|i_1,$0),prep|to_4(pro:indef|someone_5($1,n|house_7($1)),$0)),adv|now_8($0)),$0))
example_end

Sent: whose house ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|house_2($1))
example_end

Sent: I 'm out .
Sem: lambda $0_{r}.adv|out_3(pro:sub|i_1,$0)
example_end

Sent: I 'm out .
Sem: lambda $0_{r}.adv|out_3(pro:sub|i_1,$0)
example_end

Sent: get back in the airplane ?
Sem: lambda $0_{r}.Q(and(and(v|get_1(you,$0),adv|back_2($0)),prep|in_3(det:art|the_4($1,n|airplane_5($1)),$0)))
example_end

Sent: Adam is playing with the airplane .
Sem: lambda $0_{r}.aux|be-3s_2(and(part|play-presp_3(n:prop|adam_1,$0),prep|with_4(det:art|the_5($1,n|airplane_6($1)),$0)),$0)
example_end

Sent: oh why is it doing that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_3(and(part|do-presp_5(pro:per|it_4,pro:dem|that_6,$0),$1($0)),$0),co|oh_1($0))
example_end

Sent: oh that 's not an accident .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:dem|that_2,n|accident_6(pro:dem|that_2,$0)),$0),co|oh_1($0))
example_end

Sent: how does an airplane come down ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|come_5_down_6(det:art|a_3($1,n|airplane_4($1)),$0),$2($0)),$0)
example_end

Sent: does it come straight down ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|come_3(pro:per|it_2,$0),adv|straight_4(adv|down_5($0))),$0))
example_end

Sent: he drives ?
Sem: lambda $0_{r}.Q(v|drive-3s_2(pro:sub|he_1,$0))
example_end

Sent: why does he do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|do_4(pro:sub|he_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: because it doesn 't have a motor .
Sem: lambda $0_{r}.not(mod|do_3(v|have_5(pro:per|it_2,det:art|a_6($1,n|motor_7($1)),$0),$0),$0)
example_end

Sent: I don 't really know where a motor is on an airplane .
Sem: lambda $0_{r}.not(mod|do_2(and(v|know_5(pro:sub|i_1,lambda $1_{r}.and(and(cop|be-3s_9(det:art|a_7($2,n|motor_8($2)),$1),adv:int|where_6($1)),prep|on_10(det:art|a_11($3,n|airplane_12($3)),$1)),$0),adv|real-dadj_4($0)),$0),$0)
example_end

Sent: why don 't you ask Ursula .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|ask_5(pro:per|you_4,_,n:prop|ursula_6,$0),$1($0)),$0),$0)
example_end

Sent: perhaps she knows .
Sem: lambda $0_{r}.and(v|know-3s_3(pro:sub|she_2,$0),co|perhaps_1($0))
example_end

Sent: this is the landing wheel .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,and_comp(part|land-presp_4(pro:dem|this_1,$0),n|wheel_5(pro:dem|this_1,$0)))
example_end

Sent: after you get up in the air it fold back .
Sem: lambda $0_{r}.conj|after_1(and(v|get_3_up_4(pro:per|you_2,$0),prep|in_5(det:art|the_6($1,n|air_7($1)),$0)),and(v|fold_9(pro:per|it_8,$0),adv|back_10($0)))
example_end

Sent: it must be lost .
Sem: lambda $0_{r}.cop|be_3(mod|must_2(part|lose-pastp_4(pro:per|it_1,$0),$0),$0)
example_end

Sent: what doesn 't move ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_2(v|move_4($1,$0),$0),$0)
example_end

Sent: what 's the matter Paulie ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|matter_4($2)),$0)
example_end

Sent: oh no I don 't think you should throw it .
Sem: lambda $0_{r}.and(and(not(mod|do_4(v|think_6(pro:sub|i_3,lambda $1_{r}.mod|should_8(v|throw_9(pro:per|you_7,pro:per|it_10,$1),$1),$0),$0),$0),co|oh_1($0)),co|no_2($0))
example_end

Sent: oh no I don 't think you 're supposed to do that .
Sem: lambda $0_{r}.and(and(not(mod|do_4(v|think_6(pro:sub|i_3,lambda $1_{r}.aux|~be_8(v|suppose-past_9(pro:per|you_7,lambda $2_{r}.v|do_11(pro:per|you_7,pro:dem|that_12,$2),$1),$1),$0),$0),$0),co|oh_1($0)),co|no_2($0))
example_end

Sent: it 's not a real airplane .
Sem: lambda $0_{r}.not(det:art|a_4(pro:per|it_1,and(n|airplane_6(pro:per|it_1,$0),adj|real_5(pro:per|it_1,$0))),$0)
example_end

Sent: why do I put my hand on it ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(and(v|put-zero_4(pro:sub|i_3,det:poss|my_5($1,n|hand_6($1)),$0),$2($0)),prep|on_7(pro:per|it_8,$0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it 's just lost .
Sem: lambda $0_{r}.adj|just_3(v|lose-past_4(pro:per|it_1,$0))
example_end

Sent: then wind it up again .
Sem: lambda $0_{r}.and(and(and(v|wind_2(you,pro:per|it_3,$0),adv:tem|then_1($0)),adv|up_4($0)),adv|again_5($0))
example_end

Sent: how can a what ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(n|can_2($1,$0),$2($0))
example_end

Sent: what does an airplane do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|do_5(det:art|a_3($1,n|airplane_4($1)),$2,$0),$0)
example_end

Sent: you know ?
Sem: lambda $0_{r}.Q(v|know_2(pro:per|you_1,$0))
example_end

Sent: it doesn 't have any wings .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|it_1,qn|any_5($1,n|wing-pl_6($1)),$0),$0),$0)
example_end

Sent: no no don 't do that .
Sem: lambda $0_{r}.and(not(mod|do_3(v|do_5(you,pro:dem|that_6,$0),$0),$0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it 's going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|it_1,lambda $1_{r}.v|do_5(pro:per|it_1,$2,$1),$0),$0)
example_end

Sent: well I don 't think a horse can fly .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|can_8(v|fly_9(det:art|a_6($2,n|horse_7($2)),$1),$1),$0),$0),$0),co|well_1($0))
example_end

Sent: I don 't suppose he can catch it .
Sem: lambda $0_{r}.not(mod|do_2(v|suppose_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(v|catch_7(pro:sub|he_5,pro:per|it_8,$1),$1),$0),$0),$0)
example_end

Sent: I 'll have the green one .
Sem: lambda $0_{r}.mod|~will_2(v|have_3(pro:sub|i_1,det:art|the_4($1,and(n|green_5($1),pro:indef|one_6($1))),$0),$0)
example_end

Sent: I missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:sub|i_1,$0)
example_end

Sent: you throw it .
Sem: lambda $0_{r}.v|throw_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: you throw first .
Sem: lambda $0_{r}.and(v|throw_2(pro:per|you_1,$0),adv|first_3($0))
example_end

Sent: that 's green ?
Sem: lambda $0_{r}.Q(adj|green_3(pro:dem|that_1,$0))
example_end

Sent: count them .
Sem: lambda $0_{r}.v|count_1(you,pro:obj|them_2,$0)
example_end

Sent: count them .
Sem: lambda $0_{r}.v|count_1(you,pro:obj|them_2,$0)
example_end

Sent: one two three .
Sem: BARE($0,det:num|one_1($0))
example_end

Sent: will you throw ?
Sem: lambda $0_{r}.Q(mod|will_1(v|throw_3(pro:per|you_2,$0),$0))
example_end

Sent: he doesn 't want to throw .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|he_1,lambda $1_{r}.v|throw_6(pro:sub|he_1,$1),$0),$0),$0)
example_end

Sent: I 'll throw it for him .
Sem: lambda $0_{r}.mod|~will_2(and(v|throw_3(pro:sub|i_1,pro:per|it_4,$0),prep|for_5(pro:obj|him_6,$0)),$0)
example_end

Sent: somebody missed ?
Sem: lambda $0_{r}.Q(v|miss-past_2(pro:indef|somebody_1,$0))
example_end

Sent: Paul has what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|have-3s_2(n:prop|paul_1,$1,$0)
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: you didn 't miss .
Sem: lambda $0_{r}.not(mod|do_2(v|miss_4(pro:per|you_1,$0),$0),$0)
example_end

Sent: why did you have_to do that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(mod:aux|have_to_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,$1),$0),$2($0)),$0)
example_end

Sent: what kind of cake is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_6,att(n|kind_2(pro:per|it_6,$0),prep|of_3(BARE($2,n|cake_4($2)))))
example_end

Sent: how old is Mommy ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(adj|old_2(n:prop|mommy_4,$0))
example_end

Sent: oh you 're six and I 'm seven .
Sem: BARE($0,det:num|seven_8($0))
example_end

Sent: what kind of gun is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|gun_4($2)))))
example_end

Sent: a bullet gun ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|bullet_2($1),n|gun_3($1)),$0)))
example_end

Sent: what does a bullet gun do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|do_6(det:art|a_3($1,and_comp(n|bullet_4($1),n|gun_5($1))),$2,$0),$0)
example_end

Sent: will you give me a slice ?
Sem: lambda $0_{r}.Q(mod|will_1(v|give_3(pro:per|you_2,det:art|a_5($1,n|slice_6($1)),pro:obj|me_4,$0),$0))
example_end

Sent: thank_you very much .
Sem: lambda $0_{r}.and(co|thank_you_1(you,$0),qn|much_4($0))
example_end

Sent: well what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|well_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: that 's very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:dem|that_1,$0))
example_end

Sent: what d you call that ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|call_4(pro:per|you_3,$1,pro:dem|that_5,$0),$0)
example_end

Sent: you smell me ?
Sem: lambda $0_{r}.Q(v|smell_2(pro:per|you_1,pro:obj|me_3,$0))
example_end

Sent: how do I smell ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|smell_4(pro:sub|i_3,$0),$1($0)),$0)
example_end

Sent: that 's the strange odor you smelled .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,and(n|odor_5(pro:dem|that_1,$0),adj|strange_4(pro:dem|that_1,$0)))
example_end

Sent: I 'll tie your shoes .
Sem: lambda $0_{r}.mod|~will_2(v|tie_3(pro:sub|i_1,det:poss|your_4($1,n|shoe-pl_5($1)),$0),$0)
example_end

Sent: are you a dancer Adam ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_2,n|dance-dv_4(pro:per|you_2,$0)))
example_end

Sent: what d you have on your shoulder ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,$1,$0),prep|on_5(det:poss|your_6($2,n|shoulder_7($2)),$0)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: but the cow ?
Sem: BARE($0,Q(det:art|the_2($1,n|cow_3($1),$0)))
example_end

Sent: oh is that the rope ?
Sem: lambda $0_{r}.Q(and(det:art|the_4(pro:rel|that_3,n|rope_5(pro:rel|that_3,$0)),co|oh_1($0)))
example_end

Sent: I don 't like shooting .
Sem: lambda $0_{r}.not(mod|do_2(v|like_4(pro:sub|i_1,lambda $1_{r}.part|shoot-presp_5(pro:sub|i_1,$1),$0),$0),$0)
example_end

Sent: didn 't one go in your garage ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|go_4(BARE($1,pro:indef|one_3($1)),$0),prep|in_5(det:poss|your_6($2,n|garage_7($2)),$0)),$0),$0))
example_end

Sent: what other one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,and(qn|other_2($1),pro:indef|one_3($1)))
example_end

Sent: count them again .
Sem: lambda $0_{r}.and(v|count_1(you,pro:obj|them_2,$0),adv|again_3($0))
example_end

Sent: how can you be missing two if you have four now .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.conj|if_7(and(v|have_9(pro:per|you_8,BARE($1,det:num|four_10($1)),$0),adv|now_11($0)),aux|be_4(mod|can_2(and(part|miss-presp_5(pro:per|you_3,BARE($2,det:num|two_6($2)),$0),$3($0)),$0),$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: oh it 's a cave .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|cave_5(pro:per|it_2,$0)),co|oh_1($0))
example_end

Sent: yes they 're nice .
Sem: lambda $0_{r}.and(adj|nice_4(pro:sub|they_2,$0),co|yes_1($0))
example_end

Sent: does this have a name ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(pro:dem|this_2,det:art|a_4($1,n|name_5($1)),$0),$0))
example_end

Sent: where 's the name ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|name_4($1)),$0))
example_end

Sent: would you like to cut them ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|cut-zero_5(pro:per|you_2,pro:obj|them_6,$1),$0),$0))
example_end

Sent: you 'd like to cut them .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:per|you_1,lambda $1_{r}.v|cut-zero_5(pro:per|you_1,pro:obj|them_6,$1),$0),$0)
example_end

Sent: I 'll get some scissors .
Sem: lambda $0_{r}.mod|~will_2(v|get_3(pro:sub|i_1,pro:indef|some_4($1,n|scissors_5($1)),$0),$0)
example_end

Sent: are you tired ?
Sem: lambda $0_{r}.Q(v|tire-past_3(pro:per|you_2,$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: how can I wear it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|wear_4(pro:sub|i_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a worm .
Sem: det:art|a_1($0,n|worm_2($0))
example_end

Sent: not in your mouth .
Sem: not(prep|in_2(det:poss|your_3($0,n|mouth_4($0))))
example_end

Sent: they 're not right ?
Sem: lambda $0_{r}.Q(not(n|right_4(pro:sub|they_1,$0),$0))
example_end

Sent: what 's wrong with them ?
Sem: BARE($0,adj|wrong_3($0))
example_end

Sent: well then they must be right .
Sem: lambda $0_{r}.and(mod|must_4(adv:tem|then_2(n|right_6(pro:sub|they_3,$0)),$0),co|well_1($0))
example_end

Sent: why 're you getting tired of cutting ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|get-presp_4(pro:per|you_3,lambda $1_{r}.and(part|tire-pastp_5(pro:per|you_3,$1),prep|of_6(BARE($2,n:gerund|cut-presp_7($2)),$1)),$0),$3($0)),$0)
example_end

Sent: you need some what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|need_2(pro:per|you_1,$1,$0)
example_end

Sent: what is that for ?
Sem: lambda $0_{r}.prep|for_4(pro:int|what_1,pro:dem|that_3,$0)
example_end

Sent: this is shaving cream .
Sem: lambda $0_{r}.and_comp(part|shave-presp_3(pro:dem|this_1,$0),n|cream_4(pro:dem|this_1,$0))
example_end

Sent: yes Paul wants to shave .
Sem: lambda $0_{r}.and(v|want-3s_3(n:prop|paul_2,lambda $1_{r}.v|shave_5(n:prop|paul_2,$1),$0),co|yes_1($0))
example_end

Sent: d you have a razor blade Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,and_comp(n|razor_5($1),n|blade_6($1))),$0),$0))
example_end

Sent: one side is alright .
Sem: lambda $0_{r}.adj|alright_4(BARE($1,det:num|one_1(n|side_2($1))),$0)
example_end

Sent: I don 't see a mirror there .
Sem: lambda $0_{r}.not(mod|do_2(and(v|see_4(pro:sub|i_1,det:art|a_5($1,n|mirror_6($1)),$0),adv|there_7($0)),$0),$0)
example_end

Sent: a mirror .
Sem: det:art|a_1($0,n|mirror_2($0))
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: razor blades .
Sem: BARE($0,and_comp(n|razor_1($0),n|blade-pl_2($0)))
example_end

Sent: it doesn 't seem to stay very well .
Sem: lambda $0_{r}.not(mod|do_2(cop|seem_4(pro:per|it_1,lambda $1_{r}.and(cop|stay_6(pro:per|it_1,$1),adv|very_7(adv|well_8($1))),$0),$0),$0)
example_end

Sent: I think it 'd be better if you took your hat off .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.conj|if_7(and(v|take-past_9(pro:per|you_8,det:poss|your_10($2,n|hat_11($2)),$1),adv|off_12($1)),mod|~genmod_4(adj|good-cp_6(pro:per|it_3,$1),$1)),$0)
example_end

Sent: what does Daddy do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|do_4(n:prop|daddy_3,$1,$0),$0)
example_end

Sent: where does a beard grow ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|grow_5(det:art|a_3($1,n|beard_4($1)),$0),$2($0)),$0)
example_end

Sent: oh you 've finished shaving ?
Sem: lambda $0_{r}.Q(and(aux|~have_3(part|finish-pastp_4(pro:per|you_2,lambda $1_{r}.part|shave-presp_5(pro:per|you_2,$1),$0),$0),co|oh_1($0)))
example_end

Sent: wait till it stops .
Sem: lambda $0_{r}.co|wait_1(you,lambda $1_{r}.v|stop-3s_4(pro:per|it_3,$1),$0)
example_end

Sent: you 're going to shave again ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|shave_5(pro:per|you_1,$1),adv|again_6($1)),$0),$0))
example_end

Sent: you like to shave .
Sem: lambda $0_{r}.v|like_2(pro:per|you_1,lambda $1_{r}.v|shave_4(pro:per|you_1,$1),$0)
example_end

Sent: don 't put it in your mouth .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|mouth_7($1)),$0)),$0),$0)
example_end

Sent: why don 't you go get one of Paul 's diapers ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|go_5(pro:per|you_4,lambda $1_{r}.v|get_6(pro:per|you_4,att(pro:indef|one_7,prep|of_8(BARE($2,att(n|diaper-pl_11($2),poss|~s_10(n:prop|paul_9))))),$1),$0),$3($0)),$0),$0)
example_end

Sent: oh my_goodness .
Sem: lambda $0_{r}.and(co|my_goodness_2($0),co|oh_1($0))
example_end

Sent: you 've finished shaving .
Sem: lambda $0_{r}.aux|~have_2(part|finish-pastp_3(pro:per|you_1,lambda $1_{r}.part|shave-presp_4(pro:per|you_1,$1),$0),$0)
example_end

Sent: oh I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|oh_1($0))
example_end

Sent: ladies don 't have_to shave .
Sem: lambda $0_{r}.not(mod|do_2(mod:aux|have_to_4(BARE($1,n|lady-pl_1($1)),lambda $2_{r}.v|shave_6(BARE($3,n|lady-pl_1($3)),$2),$0),$0),$0)
example_end

Sent: David doesn 't shave yet .
Sem: lambda $0_{r}.not(mod|do_2(and(v|shave_4(n:prop|david_1,$0),adv|yet_5($0)),$0),$0)
example_end

Sent: I don 't feel anything there .
Sem: lambda $0_{r}.not(mod|do_2(and(v|feel_4(pro:sub|i_1,BARE($1,pro:indef|anything_5($1)),$0),adv|there_6($0)),$0),$0)
example_end

Sent: why 're you going to shave again ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|shave_6(pro:per|you_3,$1),adv|again_7($1)),$0),$2($0)),$0)
example_end

Sent: are you going to shave again ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|shave_5(pro:per|you_2,$1),adv|again_6($1)),$0),$0))
example_end

Sent: can you see what you 're doing ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_3(pro:per|you_2,lambda $1_{r}.aux|~be_6(part|do-presp_7(pro:per|you_5,pro:int|what_4,$1),$1),$0),$0))
example_end

Sent: I think you are sitting on the razor .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|be-pres_4(and(part|sit-presp_5(pro:per|you_3,$1),prep|on_6(det:art|the_7($2,n|razor_8($2)),$1)),$1),$0)
example_end

Sent: he 's been trying this for the past several days .
Sem: lambda $0_{r}.aux|be-pastp_3(aux|~be_2(and(part|try-presp_4(pro:sub|he_1,pro:dem|this_5,$0),prep|for_6(det:art|the_7($1,and(and(adj|past_8($1),qn|several_9($1)),n|day-pl_10($1))),$0)),$0),$0)
example_end

Sent: oh d you know anybody else who might do that ?
Sem: lambda $0_{r}.Q(and(v|do_2(v|know_4(pro:per|you_3,BARE($1,and(post|else_6($1),pro:indef|anybody_5($1))),$0),$0),co|oh_1($0)))
example_end

Sent: your Daddy ?
Sem: BARE($0,Q(det:poss|your_1($1,n:prop|daddy_2($1),$0)))
example_end

Sent: a red blown chest ?
Sem: BARE($0,Q(det:art|a_1($1,and(part|blow-pastp_3($1),and(n|red_2($1),n|chest_4($1))),$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: your Daddy will what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_3($1(det:poss|your_1($2,n:prop|daddy_2($2)),$0),$0)
example_end

Sent: will surprise ?
Sem: lambda $0_{r}.Q(mod|will_1(n|surprise_2(you,$0),$0))
example_end

Sent: will surprise that you shave ?
Sem: lambda $0_{r}.Q(mod|will_1(adj|surprise_2(you,$0),$0))
example_end

Sent: when you finish you must put the top because Paul will spill it right out .
Sem: lambda $0_{r}.conj|because_9(mod|will_11(and(v|spill_12(n:prop|paul_10,pro:per|it_13,$0),adv|right_14(adv|out_15($0))),$0),mod|must_5(conj|when_1(v|finish_3(pro:per|you_2,$0),v|put-zero_6(pro:per|you_4,det:art|the_7($1,n|top_8($1)),$0)),$0))
example_end

Sent: red ball shoes ?
Sem: BARE($0,Q(and_comp(n|ball_2($0),and(adj|red_1($0),n|shoe-pl_3($0)))))
example_end

Sent: what is a chess ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|chess_4($2)),$0)
example_end

Sent: red ball chess ?
Sem: BARE($0,Q(and_comp(n|ball_2($0),and(adj|red_1($0),n|chess_3($0)))))
example_end

Sent: what is a chess ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|chess_4($2)),$0)
example_end

Sent: what is a chest ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|chest_4($2)),$0)
example_end

Sent: a pair of shoes ?
Sem: BARE($0,Q(det:art|a_1($1,att(n|pair_2($1),prep|of_3(BARE($2,n|shoe-pl_4($2)))),$0)))
example_end

Sent: some blood on you ?
Sem: BARE($0,Q(qn|some_1($1,att(n|blood_2($1),prep|on_3(pro:per|you_4)),$0)))
example_end

Sent: when you were shaving ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-past_3(and(part|shave-presp_4(pro:per|you_2,$0),$1($0)),$0)
example_end

Sent: why d you have blood on you ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(and(v|have_4(pro:per|you_3,BARE($1,n|blood_5($1)),$0),$2($0)),prep|on_6(pro:per|you_7,$0)),$0)
example_end

Sent: a cold is blood ?
Sem: lambda $0_{r}.Q(n|blood_4(det:art|a_1($1,n|cold_2($1)),$0))
example_end

Sent: how is that ?
Sem: lambda $0_{r}.Q(adv:int|how_1(pro:dem|that_3,$0))
example_end

Sent: a lion !
Sem: det:art|a_1($0,n|lion_2($0))
example_end

Sent: goodness you must have used it all .
Sem: lambda $0_{r}.and(aux|have_4(mod|must_3(part|use-pastp_5(pro:per|you_2,adv|all_7($1,pro:per|it_6($1)),$0),$0),$0),co|goodness_1($0))
example_end

Sent: I guess so .
Sem: lambda $0_{r}.and(n|guess_2(pro:sub|i_1,$0),adv|so_3($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is blood ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,n|blood_3($2)),$0)
example_end

Sent: you 're silly .
Sem: lambda $0_{r}.adj|silly_3(pro:per|you_1,$0)
example_end

Sent: did you learn that song at home ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(v|learn_3(pro:per|you_2,pro:dem|that_4($1,n|song_5($1)),$0),prep|at_6(BARE($2,n|home_7($2)),$0)),$0))
example_end

Sent: what d you see on the tv when they sing that ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|when_8(v|sing_10(pro:sub|they_9,pro:dem|that_11,$0),mod|do_2(and(v|see_4(pro:per|you_3,$1,$0),prep|on_5(det:art|the_6($2,n|tv_7($2)),$0)),$0))
example_end

Sent: don 't they show a picture perhaps of a little boy or a little girl ?
Sem: lambda $0_{r}.not(mod|do_1(and(v|show_4(pro:sub|they_3,det:art|a_5($1,n|picture_6($1)),$0),adv|perhaps_7(prep|of_8(det:art|a_13($2,det:art|a_9($3,and(adj|little_14($3),and(adj|little_10($3),n|girl_15($3))),$2)),$0))),$0),$0)
example_end

Sent: what 're they doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:sub|they_3,$1,$0),$0)
example_end

Sent: you don 't what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_2($1(pro:per|you_1,$0),$0),$0)
example_end

Sent: d you see that on Captain Kangaroo ?
Sem: lambda $0_{r}.Q(mod|do_1(and(co|see_3(pro:per|you_2,det:dem|that_4,$0),prep|on_5(n:prop|captain_6_kangaroo_7,$0)),$0))
example_end

Sent: look what you put on the floor ?
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|put-zero_4(pro:per|you_3,$1,$0),prep|on_5(det:art|the_6($2,n|floor_7($2)),$0)),co|look_1($0))
example_end

Sent: let Paul have one honey .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|have_3(n:prop|paul_2,det:num|one_4,$1),$0)
example_end

Sent: you did what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(pro:per|you_1,$1,$0)
example_end

Sent: there 's one over there .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),adv|over_4(adv|there_5($0)))
example_end

Sent: he looks like one of George Washington 's troops .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:sub|he_1,$0),prep|like_3(BARE($1,att(pro:indef|one_4($1),prep|of_5(n:prop|george_6_washington_7's($2,n|troop-pl_9($2))))),$0))
example_end

Sent: one of the members of George Washington 's army .
Sem: BARE($0,det:num|one_1($0))
example_end

Sent: I think we just need one more under here .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(and(v|need_5(pro:sub|we_3,adv|more_7($2,det:num|one_6($2)),$1),adv|just_4($1)),adv|under_8(adv|here_9($1))),$0)
example_end

Sent: it 's your hat Paul .
Sem: lambda $0_{r}.det:poss|your_3(pro:per|it_1,n|hat_4(pro:per|it_1,$0))
example_end

Sent: let Paul wear it .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|wear_3(n:prop|paul_2,pro:per|it_4,$1),$0)
example_end

Sent: I don 't want to .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: why don 't we let Paul wear it if you don 't want to .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(conj|if_9(not(mod|do_11(v|want_13(pro:per|you_10,$0),$0),$0),mod|do_2(and(v|let-zero_5(pro:sub|we_4,lambda $1_{r}.v|wear_7(n:prop|paul_6,pro:per|it_8,$1),$0),$2($0)),$0)),$0)
example_end

Sent: who is George Washington ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|george_3_washington_4,$0)
example_end

Sent: no don 't wipe it off .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|wipe_4(you,pro:per|it_5,$0),adv|off_6($0)),$0),$0),co|no_1($0))
example_end

Sent: you missed it .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: use the diaper .
Sem: lambda $0_{r}.v|use_1(you,det:art|the_2($1,n|diaper_3($1)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what d you need ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|need_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: but it doesn 't stay in .
Sem: lambda $0_{r}.not(mod|do_3(and(n|stay_5(pro:per|it_2,$0),adv|in_6($0)),$0),$0)
example_end

Sent: you lost your blade .
Sem: lambda $0_{r}.v|lose-past_2(pro:per|you_1,det:poss|your_3($1,n|blade_4($1)),$0)
example_end

Sent: now wipe the blade .
Sem: lambda $0_{r}.and(v|wipe_2(you,det:art|the_3($1,n|blade_4($1)),$0),adv|now_1($0))
example_end

Sent: wipe the blade .
Sem: lambda $0_{r}.v|wipe_1(you,det:art|the_2($1,n|blade_3($1)),$0)
example_end

Sent: don 't rub it in too much .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|rub_3(you,pro:per|it_4,$0),prep|in_5($0)),adv|too_6(qn|much_7($0))),$0),$0)
example_end

Sent: well if you wish .
Sem: lambda $0_{r}.and(v|wish_4(pro:per|you_3,$0),co|well_1($0))
example_end

Sent: d you want to shave my hand ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|shave_5(pro:per|you_2,det:poss|my_6($2,n|hand_7($2)),$1),$0),$0))
example_end

Sent: why d you call it cream ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|call_4(pro:per|you_3,BARE($1,v|cream_6($1)),pro:per|it_5,$0),$2($0)),$0)
example_end

Sent: yes that 's cream .
Sem: lambda $0_{r}.and(n|cream_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: I see .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,$0)
example_end

Sent: well you shave it off .
Sem: lambda $0_{r}.and(and(v|shave_3(pro:per|you_2,pro:per|it_4,$0),adv|off_5($0)),co|well_1($0))
example_end

Sent: I 'm waiting for you to shave it off my hand .
Sem: lambda $0_{r}.aux|~be_2(and(part|wait-presp_3(pro:sub|i_1,lambda $1_{r}.and(v|shave_7(pro:sub|i_1,pro:per|it_8,$1),prep|off_9(det:poss|my_10($2,n|hand_11($2)),$1)),$0),prep|for_4(pro:per|you_5,$0)),$0)
example_end

Sent: why 're you going to do that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,pro:dem|that_7,$1),$0),$2($0)),$0)
example_end

Sent: I did not .
Sem: lambda $0_{r}.not(mod|do-past_2(pro:sub|i_1,$0),$0)
example_end

Sent: did I Paul ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:sub|i_2,$0))
example_end

Sent: shame on you Paul .
Sem: BARE($0,att(n|shame_1($0),prep|on_2(pro:per|you_3)))
example_end

Sent: it ran under the railroad track .
Sem: lambda $0_{r}.and(v|run-past_2(pro:per|it_1,$0),prep|under_3(det:art|the_4($1,and_comp(n|railroad_5($1),n|track_6($1))),$0))
example_end

Sent: how did it get under there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|get_4(pro:per|it_3,$0),$1($0)),adv|there_6($0)),$0)
example_end

Sent: no you shaved those one once .
Sem: lambda $0_{r}.and(and(v|shave-past_3(pro:per|you_2,pro:dem|those_4($1,pro:indef|one_5($1)),$0),adv|once_6($0)),co|no_1($0))
example_end

Sent: that you 're making ?
Sem: lambda $0_{r}.Q(aux|~be_3(part|make-presp_4(pro:per|you_2,pro:rel|that_1,$0),$0))
example_end

Sent: is it Ursula 's too ?
Sem: lambda $0_{r}.Q(post|too_5(poss|~s_4(n:prop|ursula_3,pro:per|it_2,$0)))
example_end

Sent: oh hers is in July .
Sem: lambda $0_{r}.and(prep|in_4(n:prop|july_5,pro:poss|hers_2,$0),co|oh_1($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: yes that 's a track .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|track_5(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's for shaving .
Sem: lambda $0_{r}.prep|for_3(BARE($1,n:gerund|shave-presp_4($1)),pro:dem|that_1,$0)
example_end

Sent: you used it all .
Sem: lambda $0_{r}.v|use-past_2(pro:per|you_1,adv|all_4($1,pro:per|it_3($1)),$0)
example_end

Sent: why d you need cream ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:per|you_3,BARE($1,n|cream_5($1)),$0),$2($0)),$0)
example_end

Sent: how could you hold it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|could_2(and(v|hold_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: you mean a razor ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,det:art|a_3($1,n|razor_4($1)),$0))
example_end

Sent: oh that 's an electric shaver .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and_comp(n|electric_5(pro:dem|that_2,$0),n|shave-dv_6(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: that 's an electric shaver .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|shave-dv_5(pro:dem|that_1,$0),n|electric_4(pro:dem|that_1,$0)))
example_end

Sent: yes I think so .
Sem: lambda $0_{r}.and(and(v|think_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: Adam you look like you 're breaking out with something .
Sem: lambda $0_{r}.conj|like_4(aux|~be_6(and(and(part|break-presp_7(pro:per|you_5,$0),adv|out_8($0)),prep|with_9(pro:indef|something_10,$0)),$0),cop|look_3(_,pro:per|you_2,$0))
example_end

Sent: on your forehead .
Sem: prep|on_1(det:poss|your_2($0,n|forehead_3($0)))
example_end

Sent: across your nose .
Sem: prep|across_1(det:poss|your_2($0,n|nose_3($0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: please don 't .
Sem: lambda $0_{r}.and(not(mod|do_2(you,$0),$0),co|please_1($0))
example_end

Sent: I 'm no clown .
Sem: lambda $0_{r}.qn|no_3(pro:sub|i_1,n|clown_4(pro:sub|i_1,$0))
example_end

Sent: please don 't .
Sem: lambda $0_{r}.and(not(mod|do_2(you,$0),$0),co|please_1($0))
example_end

Sent: but we 're not clowns in a circus .
Sem: lambda $0_{r}.not(att(n|clown-pl_5(pro:sub|we_2,$0),prep|in_6(det:art|a_7($1,n|circus_8($1)))),$0)
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: Adam Mommy saw you hit Paul right in the face .
Sem: lambda $0_{r}.v|see-past_3(n:prop|mommy_2,lambda $1_{r}.and(v|hit-zero_5(pro:per|you_4,n:prop|paul_6,$1),n|right_7(prep|in_8(det:art|the_9($2,n|face_10($2)),$1))),$0)
example_end

Sent: now don 't do that again .
Sem: lambda $0_{r}.not(mod|do_2(and(and(v|do_4(you,pro:dem|that_5,$0),adv|now_1($0)),adv|again_6($0)),$0),$0)
example_end

Sent: I 'll have_to spank you right in front of Urs .
Sem: lambda $0_{r}.mod|~will_2(mod:aux|have_to_3(pro:sub|i_1,lambda $1_{r}.v|spank_5(pro:sub|i_1,$1),$0),$0)
example_end

Sent: because I spank you when you 're naughty ?
Sem: lambda $0_{r}.Q(conj|when_5(adj|naughty_8(pro:per|you_6,$0),v|spank_3(pro:sub|i_2,pro:per|you_4,$0)))
example_end

Sent: you had a string in your hair .
Sem: lambda $0_{r}.and(v|have-past_2(pro:per|you_1,det:art|a_3($1,n|string_4($1)),$0),prep|in_5(det:poss|your_6($2,n|hair_7($2)),$0))
example_end

Sent: I was giving it to you .
Sem: lambda $0_{r}.aux|be-past_2(and(part|give-presp_3(pro:sub|i_1,pro:per|it_4,$0),prep|to_5(pro:per|you_6,$0)),$0)
example_end

Sent: Adam d you see anything in the room that sounds like toy ?
Sem: lambda $0_{r}.Q(v|do_2(and(v|see_4(pro:per|you_3,BARE($1,pro:indef|anything_5($1)),$0),prep|in_6(det:art|the_7($2,n|room_8($2)),$0)),$0))
example_end

Sent: what has a beginning sound like toy ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|have-3s_2($1,det:art|a_3($2,att(and_comp(n|beginning_4($2),adj|sound_5($2)),co|like_6(BARE($3,n|toy_7($3))))),$0)
example_end

Sent: well yes a ball is a toy .
Sem: lambda $0_{r}.and(and(det:art|a_6(det:art|a_3($1,n|ball_4($1)),n|toy_7(det:art|a_3($1,n|ball_4($1)),$0)),co|well_1($0)),co|yes_2($0))
example_end

Sent: train yes .
Sem: lambda $0_{r}.and(n|train_1($0),co|yes_2($0))
example_end

Sent: that rhymes with it .
Sem: lambda $0_{r}.and(n|rhyme-pl_2(pro:dem|that_1,$0),prep|with_3(pro:per|it_4,$0))
example_end

Sent: a toy house .
Sem: det:art|a_1($0,and_comp(n|toy_2($0),n|house_3($0)))
example_end

Sent: anything else ?
Sem: BARE($0,Q(post|else_2(pro:indef|anything_1,$0)))
example_end

Sent: can you think of anything else that has a beginning sound like toy ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|think_3(pro:per|you_2,$0),prep|of_4(att(pro:indef|anything_5,BARE($1,post|else_6($1))),$0)),$0))
example_end

Sent: can you say toy ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,BARE($1,n|toy_4($1)),$0),$0))
example_end

Sent: yes truck .
Sem: lambda $0_{r}.and(n|truck_2($0),co|yes_1($0))
example_end

Sent: were you on a farm Adam ?
Sem: lambda $0_{r}.Q(prep|on_3(det:art|a_4($1,n|farm_5($1)),pro:per|you_2,$0))
example_end

Sent: did you go on the train or come back on the train ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(and(and(v|come_8(pro:per|you_2,$0),prep|on_4(det:art|the_5($1,n|train_6($1)),$0)),adv|back_9($0)),prep|on_10(det:art|the_11($2,n|train_12($2)),$0)),$0))
example_end

Sent: how did you get there Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|get_4(pro:per|you_3,$0),$1($0)),adv|there_5($0)),$0)
example_end

Sent: your tummy is full .
Sem: lambda $0_{r}.adj|full_4(det:poss|your_1($1,n|tummy_2($1)),$0)
example_end

Sent: what did you have for lunch today at nursery school ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(and(and(v|have_4(pro:per|you_3,$1,$0),prep|for_5(BARE($2,n|lunch_6($2)),$0)),adv:tem|today_7($0)),prep|at_8(BARE($3,and_comp(n|nursery_9($3),n|school_10($3))),$0)),$0)
example_end

Sent: pineapple and what else ?
Sem: BARE($0,Q(att(pro:int|what_3,BARE($1,post|else_4($1)),$0)))
example_end

Sent: pineapple for dessert ?
Sem: BARE($0,Q(att(n|pineapple_1($0),prep|for_2(BARE($1,n|dessert_3($1))))))
example_end

Sent: and what else did you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_4(v|have_6(pro:per|you_5,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a bow ?
Sem: BARE($0,Q(det:art|a_1($1,n|bow_2($1),$0)))
example_end

Sent: rock you ?
Sem: lambda $0_{r}.Q(v|rock_1(you,pro:per|you_2,$0))
example_end

Sent: did you see any cows ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,qn|any_4($1,n|cow-pl_5($1)),$0),$0))
example_end

Sent: you did so .
Sem: lambda $0_{r}.and(v|do-past_2(pro:per|you_1,$0),adv|so_3($0))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: and saw the cows being milked ?
Sem: lambda $0_{r}.Q(v|see-past_2(you,lambda $1_{r}.part|be-presp_5(part|milk-pastp_6(det:art|the_3($2,n|cow-pl_4($2)),$1),$1),$0))
example_end

Sent: were men milking them or machines Adam ?
Sem: lambda $0_{r}.cop|be-past_1(part|milk-presp_3(BARE($1,Q(n|machine-pl_6($1))),pro:obj|them_4,$0),$0)
example_end

Sent: that 's a squeaky scooter .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|scooter_5(pro:dem|that_1,$0),adj|squeak-dv_4(pro:dem|that_1,$0)))
example_end

Sent: it must be Robin 's .
Sem: lambda $0_{r}.mod|must_2(poss|~s_5(n:prop|robin_4,pro:per|it_1,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know how to ride a scooter .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|ride_7(_,det:art|a_8($2,n|scooter_9($2)),$1),adv:int|how_5($1)),$0),$0),$0)
example_end

Sent: you have_to go talk to Ursula .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|go_4(pro:per|you_1,$1),$0)
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: yes I think so .
Sem: lambda $0_{r}.and(and(v|think_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: because you were laughing .
Sem: lambda $0_{r}.aux|be-past_3(part|laugh-presp_4(pro:per|you_2,$0),$0)
example_end

Sent: whose name is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|name_2(pro:dem|that_4,$0))
example_end

Sent: yes that 's Robin .
Sem: lambda $0_{r}.and(n:prop|robin_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: you were sleeping before he went to sleep .
Sem: lambda $0_{r}.adv|before_4(v|go-past_6(pro:sub|he_5,lambda $1_{r}.v|sleep_8(pro:sub|he_5,$1),$0),aux|be-past_2(n:gerund|sleep-presp_3(pro:per|you_1,$0),$0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: no you push yourself with this foot .
Sem: lambda $0_{r}.and(and(v|push_3(pro:per|you_2,pro:refl|yourself_4,$0),prep|with_5(pro:dem|this_6($1,n|foot_7($1)),$0)),co|no_1($0))
example_end

Sent: keep that foot on there .
Sem: lambda $0_{r}.and(v|keep_1(you,pro:dem|that_2($1,n|foot_3($1)),$0),adv|there_5($0))
example_end

Sent: I asked you first .
Sem: lambda $0_{r}.and(v|ask-past_2(pro:sub|i_1,pro:per|you_3,$0),adv|first_4($0))
example_end

Sent: I don 't know either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),adv|either_5($0)),$0),$0)
example_end

Sent: yes when it goes fast .
Sem: lambda $0_{r}.and(and(v|go-3s_4(pro:per|it_3,$0),n|fast_5($0)),co|yes_1($0))
example_end

Sent: now push yourself with this foot .
Sem: lambda $0_{r}.and(and(v|push_2(you,pro:refl|yourself_3,$0),adv|now_1($0)),prep|with_4(pro:dem|this_5($1,n|foot_6($1)),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you change feet so you can back up ?
Sem: lambda $0_{r}.Q(conj|so_4(mod|can_6(and(adv|back_7(pro:per|you_5,$0),adv|up_8($0)),$0),v|change_2(pro:per|you_1,BARE($1,n|foot-pl_3($1)),$0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: why would you put two wheels there ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|put-zero_4(pro:per|you_3,BARE($1,det:num|two_5(n|wheel-pl_6($1))),$0),$2($0)),adv|there_7($0)),$0)
example_end

Sent: will you see what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_1(v|see_3(pro:per|you_2,$1,$0),$0)
example_end

Sent: this is the bow .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,n|bow_4(pro:dem|this_1,$0))
example_end

Sent: an arrow .
Sem: det:art|a_1($0,n|arrow_2($0))
example_end

Sent: what happened on the train ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|on_3(det:art|the_4($2,n|train_5($2)),$0))
example_end

Sent: what did you do on the train ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|on_5(det:art|the_6($2,n|train_7($2)),$0)),$0)
example_end

Sent: when we came back they were beds .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(n|bed-pl_7(pro:sub|they_5,$0),and(v|come-past_3_back_4(pro:sub|we_2,$0),$1($0)))
example_end

Sent: maybe I have something for an arrow .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|i_2,att(pro:indef|something_4,prep|for_5(det:art|a_6($1,n|arrow_7($1)))),$0),adv|maybe_1($0))
example_end

Sent: one of the tinker toys .
Sem: BARE($0,det:num|one_1($0))
example_end

Sent: well pick them up .
Sem: lambda $0_{r}.and(and(v|pick_2(you,pro:obj|them_3,$0),adv|up_4($0)),co|well_1($0))
example_end

Sent: it won 't go very far .
Sem: lambda $0_{r}.not(mod|will_2(and(v|go_4(pro:per|it_1,$0),adv|very_5(adv|far_6($0))),$0),$0)
example_end

Sent: it doesn 't have an arrow .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|it_1,det:art|a_5($1,n|arrow_6($1)),$0),$0),$0)
example_end

Sent: Robin has some arrows at home .
Sem: lambda $0_{r}.and(v|have-3s_2(n:prop|robin_1,qn|some_3($1,n|arrow-pl_4($1)),$0),prep|at_5(BARE($2,n|home_6($2)),$0))
example_end

Sent: next time ?
Sem: BARE($0,Q(and(adj|next_1($0),n|time_2($0))))
example_end

Sent: this is last night day .
Sem: lambda $0_{r}.and_comp(n|night_4(pro:dem|this_1,$0),and(n|day_5(pro:dem|this_1,$0),adv|last_3(pro:dem|this_1,$0)))
example_end

Sent: whoops you had an accident .
Sem: lambda $0_{r}.and(v|have-past_3(pro:per|you_2,det:art|a_4($1,n|accident_5($1)),$0),co|whoops_1($0))
example_end

Sent: a dozen of eggs .
Sem: prep|of_3(BARE($0,det:art|a_1($1,n|dozen_2($1),n|egg-pl_4($0))))
example_end

Sent: that you eat ?
Sem: lambda $0_{r}.Q(v|eat_3(pro:per|you_2,$0))
example_end

Sent: a dozen of eggs song ?
Sem: Q(prep|of_3(BARE($0,and_comp(n|egg-pl_4($0),det:art|a_1($1,n|dozen_2($1),n|song_5($0))))))
example_end

Sent: where did you learn that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|learn_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: did you learn another one today ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|learn_3(pro:per|you_2,qn|another_4($1,pro:indef|one_5($1)),$0),adv:tem|today_6($0)),$0))
example_end

Sent: what was it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's another joke ?
Sem: lambda $0_{r}.Q(qn|another_3(pro:dem|that_1,n|joke_4(pro:dem|that_1,$0)))
example_end

Sent: Robin had a white mouse .
Sem: lambda $0_{r}.v|have-past_2(n:prop|robin_1,det:art|a_3($1,and(adj|white_4($1),n|mouse_5($1))),$0)
example_end

Sent: a real one ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|real_2($1),pro:indef|one_3($1)),$0)))
example_end

Sent: a mouse .
Sem: det:art|a_1($0,n|mouse_2($0))
example_end

Sent: Robin has a little cage for the mouse .
Sem: lambda $0_{r}.and(v|have-3s_2(n:prop|robin_1,det:art|a_3($1,and(adj|little_4($1),n|cage_5($1))),$0),prep|for_6(det:art|the_7($2,n|mouse_8($2)),$0))
example_end

Sent: yes a little cage for the mouse .
Sem: lambda $0_{r}.and(det:art|a_2($1,att(and(adj|little_3($1),n|cage_4($1)),prep|for_5(det:art|the_6($2,n|mouse_7($2)))),$0),co|yes_1($0))
example_end

Sent: animals don 't wake up ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(v|wake_4(BARE($1,n|animal-pl_1($1)),$0),adv|up_5($0)),$0),$0))
example_end

Sent: what animals wake up in the morning time ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(v|wake_3_up_4($1($2,n|animal-pl_2($2)),$0),prep|in_5(det:art|the_6($3,and_comp(n|morning_7($3),n|time_8($3))),$0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: oh it 's cutting grass .
Sem: lambda $0_{r}.and(cop|~be_3(part|cut-presp_4(pro:per|it_2,BARE($1,n|grass_5($1)),$0),$0),co|oh_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: careful Adam you don 't want it to break it .
Sem: lambda $0_{r}.and(not(mod|do_4(v|want_6(pro:per|you_3,lambda $1_{r}.v|break_9(pro:per|you_3,pro:per|it_10,$1),$0),$0),$0),co|careful_1($0))
example_end

Sent: this is what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_1,$0)
example_end

Sent: you aren 't supposed to turn that .
Sem: lambda $0_{r}.not(aux|be_2(v|suppose-past_4(pro:per|you_1,lambda $1_{r}.v|turn_6(pro:per|you_1,pro:dem|that_7,$1),$0),$0),$0)
example_end

Sent: when does it fall ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|fall_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: but it 's falling .
Sem: lambda $0_{r}.aux|~be_3(part|fall-presp_4(pro:per|it_2,$0),$0)
example_end

Sent: now why is it falling ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_3(and(part|fall-presp_5(pro:per|it_4,$0),$1($0)),$0),adv|now_1($0))
example_end

Sent: when you turn the corner what happens ?
Sem: lambda $2_{e}.lambda $0_{r}.conj|when_1(v|turn_3(pro:per|you_2,det:art|the_4($1,n|corner_5($1)),$0),v|happen-3s_7($2,$0))
example_end

Sent: d you know why it falls ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.and(v|fall-3s_6(pro:per|it_5,$1),adv:int|why_4($1)),$0),$0))
example_end

Sent: go backwards and see what happens .
Sem: lambda $0_{r}.and(v|see_4(you,lambda $1_{r}.v|happen-3s_6(pro:int|what_5,$1),$0),adv|backwards_2($0))
example_end

Sent: why don 't you back out ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(adv|back_5_out_6(pro:per|you_4,$0),$1($0)),$0),$0)
example_end

Sent: when you turn the corner then it falls .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(v|fall-3s_8(pro:per|it_7,$0),adv:tem|then_6($0)),and(v|turn_3(pro:per|you_2,det:art|the_4($1,n|corner_5($1)),$0),$2($0)))
example_end

Sent: well why don 't you ride it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(not(mod|do_3(and(v|ride_6(pro:per|you_5,pro:per|it_7,$0),$1($0)),$0),$0),co|well_1($0))
example_end

Sent: show Paul how to ride the scooter .
Sem: lambda $0_{r}.n|show_1(you,n:prop|paul_2,lambda $1_{r}.and(v|ride_5(_,det:art|the_6($2,n|scooter_7($2)),$1),adv:int|how_3($1)),$0)
example_end

Sent: I 'll get you some water .
Sem: lambda $0_{r}.mod|~will_2(and(aux|get_3(pro:sub|i_1,qn|some_5($1,n|water_6($1)),$0),pro:per|you_4($0)),$0)
example_end

Sent: Adam maybe your fire engine will stay on better .
Sem: lambda $0_{r}.mod|will_6(and(and(cop|stay_7(det:poss|your_3($1,and_comp(n|fire_4($1),n|engine_5($1))),$0),adv|maybe_2($0)),adv|on_8(adj|good-cp_9($0))),$0)
example_end

Sent: you know what you might do Adam ?
Sem: lambda $0_{r}.Q(v|know_2(pro:per|you_1,lambda $1_{r}.mod|might_5(v|do_6(pro:per|you_4,pro:int|what_3,$1),$1),$0))
example_end

Sent: maybe you could tie it on .
Sem: lambda $0_{r}.mod|could_3(and(and(v|tie_4(pro:per|you_2,pro:per|it_5,$0),adv|maybe_1($0)),adv|on_6($0)),$0)
example_end

Sent: d you want to tie it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|tie_5(pro:per|you_2,pro:per|it_6,$1),$0),$0))
example_end

Sent: need some help ?
Sem: lambda $0_{r}.Q(v|need_1(you,qn|some_2($1,co|help_3($1)),$0))
example_end

Sent: you will hold it ?
Sem: lambda $0_{r}.Q(mod|will_2(v|hold_3(pro:per|you_1,pro:per|it_4,$0),$0))
example_end

Sent: no Paul no no .
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: he wants his car honey .
Sem: lambda $0_{r}.v|want-3s_2(pro:sub|he_1,det:poss|his_3($1,n|car_4($1)),$0)
example_end

Sent: he was playing with this one .
Sem: lambda $0_{r}.aux|be-past_2(and(part|play-presp_3(pro:sub|he_1,$0),prep|with_4(pro:dem|this_5($1,pro:indef|one_6($1)),$0)),$0)
example_end

Sent: you didn 't have any car .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,qn|any_5($1,n|car_6($1)),$0),$0),$0)
example_end

Sent: would you like a drink of water ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,att(n|drink_5($1),prep|of_6(BARE($2,n|water_7($2))))),$0),$0))
example_end

Sent: you hit his finger .
Sem: lambda $0_{r}.v|hit-zero_2(pro:per|you_1,det:poss|his_3($1,n|finger_4($1)),$0)
example_end

Sent: I think you hit his finger .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|hit-zero_4(pro:per|you_3,det:poss|his_5($2,n|finger_6($2)),$1),$0)
example_end

Sent: don 't do that anymore .
Sem: lambda $0_{r}.not(mod|do_1(and(v|do_3(you,pro:dem|that_4,$0),adv|anymore_5($0)),$0),$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: he 's giving you the other one .
Sem: lambda $0_{r}.aux|~be_2(part|give-presp_3(pro:sub|he_1,det:art|the_5($1,att(pro:indef|one_7,BARE($2,qn|other_6($2)),$1)),pro:per|you_4,$0),$0)
example_end

Sent: he didn 't really knock it down .
Sem: lambda $0_{r}.not(mod|do_2(and(and(v|knock_5(pro:sub|he_1,pro:per|it_6,$0),adv|real-dadj_4($0)),adv|down_7($0)),$0),$0)
example_end

Sent: because the knots came out .
Sem: lambda $0_{r}.and(v|come-past_4(det:art|the_2($1,n|knot-pl_3($1)),$0),adv|out_5($0))
example_end

Sent: because the knots in the string came out .
Sem: lambda $0_{r}.and(v|come-past_7(det:art|the_2($1,att(n|knot-pl_3($1),prep|in_4(det:art|the_5($2,n|string_6($2))))),$0),adv|out_8($0))
example_end

Sent: why are you tying it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|tie-presp_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: no I don 't really think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(v|think_6(pro:sub|i_2,$0),adv|real-dadj_5($0)),co|so_7($0)),$0),$0),co|no_1($0))
example_end

Sent: did you find some ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,qn|some_4,$0),$0))
example_end

Sent: I didn 't think you 'd notice .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|~genmod_6(n|notice_7(pro:per|you_5,$1),$1),$0),$0),$0)
example_end

Sent: yes if you 'd like to play blocks .
Sem: lambda $0_{r}.and(mod|~genmod_4(co|like_5(pro:per|you_3,lambda $1_{r}.n|play_7(pro:per|you_3,BARE($2,n|block-pl_8($2)),$1),$0),$0),co|yes_1($0))
example_end

Sent: you have_to go get some from the basket .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|go_4(pro:per|you_1,$1),$0)
example_end

Sent: it doesn 't need to have a top .
Sem: lambda $0_{r}.not(mod|do_2(v|need_4(pro:per|it_1,lambda $1_{r}.v|have_6(pro:per|it_1,det:art|a_7($2,n|top_8($2)),$1),$0),$0),$0)
example_end

Sent: because you 'll be careful .
Sem: lambda $0_{r}.mod|~will_3(adj|care-dn_5(pro:per|you_2,$0),$0)
example_end

Sent: I don 't think it has a top .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.aux|have-3s_6(pro:per|it_5,det:art|a_7($2,n|top_8($2)),$1),$0),$0),$0)
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: oh what letter is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_5,n|letter_3(pro:dem|that_5,$0)),co|oh_1($0))
example_end

Sent: it almost shot the wall .
Sem: lambda $0_{r}.and(v|shoot-past_3(pro:per|it_1,det:art|the_4($1,n|wall_5($1)),$0),adv|almost_2($0))
example_end

Sent: did you tell Ursula about the elephants walking down the street ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|tell_3(pro:per|you_2,_,n:prop|ursula_4,$0),prep|about_5(det:art|the_6($1,n|elephant-pl_7($1)),$0)),$0))
example_end

Sent: was somebody riding on the elephant Adam ?
Sem: lambda $0_{r}.Q(cop|be-past_1(and(on|riding_3(pro:indef|somebody_2,$0),prep|on_4(det:art|the_5($1,n|elephant_6($1)),$0)),$0))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: where were they going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-past_2(and(part|go-presp_4(pro:sub|they_3,$0),$1($0)),$0)
example_end

Sent: yes they were going to get on their train .
Sem: lambda $0_{r}.and(aux|be-past_3(part|go-presp_4(pro:sub|they_2,lambda $1_{r}.and(v|get_6(pro:sub|they_2,$1),prep|on_7(det:poss|their_8($2,n|train_9($2)),$1)),$0),$0),co|yes_1($0))
example_end

Sent: it took Robin a long time Adam .
Sem: lambda $0_{r}.v|take-past_2(you,det:art|a_4($1,and(adj|long_5($1),n|time_6($1))),n:prop|robin_3,$0)
example_end

Sent: you can 't just use one hand .
Sem: lambda $0_{r}.not(mod|can_2(and(n|use_5(pro:per|you_1,BARE($1,pro:indef|one_6(n|hand_7($1))),$0),adj|just_4($0)),$0),$0)
example_end

Sent: oh that 's an animal ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:dem|that_2,n|animal_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: what kind of animal ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|animal_4($2)))))
example_end

Sent: an elephant in a train .
Sem: det:art|a_1($0,att(n|elephant_2($0),prep|in_3(det:art|a_4($1,n|train_5($1)))))
example_end

Sent: what does the elephant do in a circus ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(and(v|do_5(det:art|the_3($1,n|elephant_4($1)),$2,$0),prep|in_6(det:art|a_7($3,n|circus_8($3)),$0)),$0)
example_end

Sent: the elephant what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_1($2,n|elephant_2($2)),$0)
example_end

Sent: no you hold this .
Sem: lambda $0_{r}.and(v|hold_3(pro:per|you_2,pro:dem|this_4,$0),co|no_1($0))
example_end

Sent: oh you 've learned how to do it .
Sem: lambda $0_{r}.and(aux|~have_3(part|learn-pastp_4(pro:per|you_2,lambda $1_{r}.and(v|do_7(_,pro:per|it_8,$1),adv:int|how_5($1)),$0),$0),co|oh_1($0))
example_end

Sent: you stand up with some legs .
Sem: lambda $0_{r}.and(and(v|stand_2(pro:per|you_1,$0),adv|up_3($0)),prep|with_4(qn|some_5($1,n|leg-pl_6($1)),$0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I think he 's getting some molars .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~be_4(part|get-presp_5(pro:sub|he_3,qn|some_6($2,n|molar-pl_7($2)),$1),$1),$0)
example_end

Sent: back teeth .
Sem: BARE($0,and(adj|back_1($0),n|tooth-pl_2($0)))
example_end

Sent: yes that 's right .
Sem: lambda $0_{r}.and(n|right_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: no I don 't think I 'd like to .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|~genmod_7(v|like_8(pro:sub|i_6,$1),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: won 't you please go get it ?
Sem: lambda $0_{r}.Q(and(not(mod|will_1(v|go_5(pro:per|you_3,lambda $1_{r}.v|get_6(pro:per|you_3,pro:per|it_7,$1),$0),$0),$0),co|please_4($0)))
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: I was just happy because you were doing such a good job .
Sem: lambda $0_{r}.conj|because_5(aux|be-past_7(part|do-presp_8(pro:per|you_6,det:art|a_10($1,and(adj|good_11($1),and(qn|such_9($1),n|job_12($1)))),$0),$0),adv|just_3(adj|happy_4(pro:sub|i_1,$0)))
example_end

Sent: he said a toaster .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|he_1,det:art|a_3($1,n|toast-dv_4($1)),$0)
example_end

Sent: oh you saw the toaster oh yes .
Sem: lambda $0_{r}.and(and(v|see-past_3(pro:per|you_2,det:art|the_4($1,n|toast-dv_5($1)),$0),co|oh_1($0)),co|oh_6_yes_7($0))
example_end

Sent: was it Science Museum ?
Sem: lambda $0_{r}.Q(n:prop|science_3_museum_4(pro:per|it_2,$0))
example_end

Sent: or the Museum of Fine Arts ?
Sem: BARE($0,Q(det:art|the_2($1,and_comp(att(BARE($2,n:prop|arts_6($2)),n:prop|fine_5,$1),n:prop|museum_3($1)),$0)))
example_end

Sent: or the Children 's Museum ?
Sem: BARE($0,Q(det:art|the_2($1,n:prop|museum_5_children_3($1),$0)))
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: a snake .
Sem: det:art|a_1($0,n|snake_2($0))
example_end

Sent: a real bird .
Sem: det:art|a_1($0,and(adj|real_2($0),n|bird_3($0)))
example_end

Sent: what kind of birds were they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_6,att(n|kind_2(pro:sub|they_6,$0),prep|of_3(BARE($2,n|bird-pl_4($2)))))
example_end

Sent: you don 't remember ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|remember_4(pro:per|you_1,$0),$0),$0))
example_end

Sent: oh it 's my turn ?
Sem: lambda $0_{r}.Q(and(det:poss|my_4(pro:per|it_2,n|turn_5(pro:per|it_2,$0)),co|oh_1($0)))
example_end

Sent: it works ?
Sem: lambda $0_{r}.Q(v|work-3s_2(pro:per|it_1,$0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: at the same time ?
Sem: Q(prep|at_1(det:art|the_2($0,and(adj|same_3($0),n|time_4($0)))))
example_end

Sent: well how are you going to do that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(aux|be-pres_3(and(part|go-presp_5(pro:per|you_4,lambda $1_{r}.v|do_7(pro:per|you_4,pro:dem|that_8,$1),$0),$2($0)),$0),co|well_1($0))
example_end

Sent: does that look like a macaroni Adam ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(cop|look_3(_,pro:dem|that_2,$0),conj|like_4(det:art|a_5($1,n|macaroni_6($1)),$0)),$0))
example_end

Sent: where 're the peppers ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|pepper-pl_4($1)),$0))
example_end

Sent: what 's a pepper ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|pepper_4($2)),$0)
example_end

Sent: why don 't you look further inside the bag and see what you find ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|see_11(pro:per|you_4,lambda $1_{r}.v|find_14(pro:per|you_13,pro:int|what_12,$1),$0),$2($0)),adv|further_6($0)),$0),$0)
example_end

Sent: well why don 't you save that for a little while .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(not(mod|do_3(and(and(v|save_6(pro:per|you_5,pro:dem|that_7,$0),$1($0)),prep|for_8(det:art|a_9($2,and(adj|little_10($2),n|while_11($2))),$0)),$0),$0),co|well_1($0))
example_end

Sent: you just have_to get the paper off .
Sem: lambda $0_{r}.and(mod:aux|have_to_3(pro:per|you_1,lambda $1_{r}.v|get_5(pro:per|you_1,$1),$0),adv|just_2($0))
example_end

Sent: go ahead .
Sem: lambda $0_{r}.and(v|go_1(you,$0),adv|ahead_2($0))
example_end

Sent: you 're getting it .
Sem: lambda $0_{r}.aux|~be_2(n:gerund|get-presp_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh that 's a good idea .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and(n|idea_6(pro:dem|that_2,$0),adj|good_5(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: each one ?
Sem: BARE($0,Q(qn|each_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: and did they have a race Adam ?
Sem: lambda $0_{r}.Q(v|do-past_2(v|have_4(pro:sub|they_3,det:art|a_5($1,n|race_6($1)),$0),$0))
example_end

Sent: did they roll ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|roll_3(pro:sub|they_2,$0),$0))
example_end

Sent: oh how could they all win ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|could_3(and(v|win_6(post|all_5($1,pro:sub|they_4($1)),$0),$2($0)),$0),co|oh_1($0))
example_end

Sent: what d you have_to do to win ?
Sem: lambda $0_{r}.Q(mod|do_2(mod:aux|have_to_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,$1),$0),$0))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: why don 't you do one thing at a time ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|do_5(pro:per|you_4,BARE($1,det:num|one_6(n|thing_7($1))),$0),$2($0)),prep|at_8(det:art|a_9($3,n|time_10($3)),$0)),$0),$0)
example_end

Sent: I didn 't know that airplanes had a horn .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|have-past_7(BARE($2,n|airplane-pl_6($2)),det:art|a_8($3,n|horn_9($3)),$1),$0),$0),$0)
example_end

Sent: what 's a full house ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,and(adj|full_4($2),n|house_5($2))),$0)
example_end

Sent: careful don 't break it .
Sem: lambda $0_{r}.and(not(mod|do_2(v|break_4(you,pro:per|it_5,$0),$0),$0),co|careful_1($0))
example_end

Sent: does it turn now ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|turn_3(pro:per|it_2,$0),adv|now_4($0)),$0))
example_end

Sent: no the wheel .
Sem: lambda $0_{r}.and(det:art|the_2($1,n|wheel_3($1),$0),qn|no_1($0))
example_end

Sent: why did you take my racers ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|take_4(pro:per|you_3,det:poss|my_5($1,n|race-dv_6($1)),$0),$2($0)),$0)
example_end

Sent: this is green .
Sem: lambda $0_{r}.n|green_3(pro:dem|this_1,$0)
example_end

Sent: green like the green light .
Sem: BARE($0,n|green_1($0))
example_end

Sent: what does this mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(adj|mean_4(pro:dem|this_3,$1,$0),$0)
example_end

Sent: how could an airplane go through a tunnel ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|could_2(and(v|go_5(det:art|a_3($1,n|airplane_4($1)),det:art|a_7($2,n|tunnel_8_through_6($2)),$0),$3($0)),$0)
example_end

Sent: what should we say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|should_2(v|say_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: what happens when he has a flat tire ?
Sem: lambda $2_{e}.lambda $0_{r}.conj|when_3(v|have-3s_5(pro:sub|he_4,det:art|a_6($1,and(n|flat_7($1),n|tire_8($1))),$0),v|happen-3s_2($2,$0))
example_end

Sent: with a flat tire ?
Sem: Q(prep|with_1(det:art|a_2($0,and_comp(n|flat_3($0),n|tire_4($0)))))
example_end

Sent: Adam did you tell her about your accident ?
Sem: lambda $0_{r}.Q(mod|do-past_2(and(v|tell_4(pro:per|you_3,_,pro:obj|her_5,$0),prep|about_6(det:poss|your_7($1,n|accident_8($1)),$0)),$0))
example_end

Sent: you caught your toe ?
Sem: lambda $0_{r}.Q(v|catch-past_2(pro:per|you_1,det:poss|your_3($1,n|toe_4($1)),$0))
example_end

Sent: no you didn 't cut your finger .
Sem: lambda $0_{r}.and(not(mod|do_3(v|cut-zero_5(pro:per|you_2,det:poss|your_6($1,n|finger_7($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: yes last year .
Sem: lambda $0_{r}.and(and(adj|last_2($0),n|year_3($0)),co|yes_1($0))
example_end

Sent: but what happened to your toe ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_3($1,$0),prep|to_4(det:poss|your_5($2,n|toe_6($2)),$0))
example_end

Sent: his tricycle .
Sem: det:poss|his_1($0,n|tricycle_2($0))
example_end

Sent: was it very bad ?
Sem: lambda $0_{r}.Q(adv|very_3(adj|bad_4(pro:per|it_2,$0)))
example_end

Sent: we had to use the pliers .
Sem: lambda $0_{r}.v|have-past_2(pro:sub|we_1,lambda $1_{r}.v|use_4(pro:sub|we_1,det:art|the_5($2,n:pt|pliers_6($2)),$1),$0)
example_end

Sent: well we can play a guessing game .
Sem: lambda $0_{r}.and(mod|can_3(v|play_4(pro:sub|we_2,det:art|a_5($1,and_comp(part|guess-presp_6($1),n|game_7($1))),$0),$0),co|well_1($0))
example_end

Sent: let 's play it .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|play_3(pro:obj|~us_2,pro:per|it_4,$1),$0)
example_end

Sent: I don 't think that 's a car .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|a_7(pro:dem|that_5,n|car_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: you don 't think that 's a truck .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:per|you_1,lambda $1_{r}.det:art|a_7(pro:dem|that_5,n|truck_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: well I don 't think that 's a bow .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.det:art|a_8(pro:dem|that_6,n|bow_9(pro:dem|that_6,$1)),$0),$0),$0),co|well_1($0))
example_end

Sent: I think it might be something that flies in the air .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|might_4(pro:indef|something_6(pro:per|it_3,$1),$1),$0)
example_end

Sent: I don 't think it 's an airplane .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|a_7(pro:per|it_5,n|airplane_8(pro:per|it_5,$1)),$0),$0),$0)
example_end

Sent: a spear ?
Sem: BARE($0,Q(det:art|a_1($1,n|spear_2($1),$0)))
example_end

Sent: what else can fly in the air ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_3(and(v|fly_4($1,$0),prep|in_5(det:art|the_6($2,n|air_7($2)),$0)),$0)
example_end

Sent: a bird ?
Sem: BARE($0,Q(det:art|a_1($1,n|bird_2($1),$0)))
example_end

Sent: it doesn 't have any wings .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|it_1,qn|any_5($1,n|wing-pl_6($1)),$0),$0),$0)
example_end

Sent: you have_to do something to it first .
Sem: lambda $0_{r}.and(mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|do_4(pro:per|you_1,$1),$0),adv|first_8($0))
example_end

Sent: I think perhaps you 'll have_to put it together in some way .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|~will_5(and(mod:aux|have_to_6(pro:per|you_4,lambda $2_{r}.v|put-zero_8(pro:per|you_4,$2),$1),adv|perhaps_3($1)),$1),$0)
example_end

Sent: first you have_to find out what it is .
Sem: lambda $0_{r}.and(mod:aux|have_to_3(pro:per|you_2,lambda $1_{r}.v|find_5(pro:per|you_2,$1),$0),adv|first_1($0))
example_end

Sent: you might not like it .
Sem: lambda $0_{r}.not(mod|might_2(v|like_4(pro:per|you_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: she might have that for Robin .
Sem: lambda $0_{r}.mod|might_2(and(v|have_3(pro:sub|she_1,pro:dem|that_4,$0),prep|for_5(n:prop|robin_6,$0)),$0)
example_end

Sent: don 't you think Robin needs a kite ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|think_4(pro:per|you_3,lambda $1_{r}.v|need-3s_6(n:prop|robin_5,det:art|a_7($2,n|kite_8($2)),$1),$0),$0),$0))
example_end

Sent: put it down .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),adv|down_3($0))
example_end

Sent: I think you might need some help with that .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|might_4(v|need_5(pro:per|you_3,qn|some_6($2,att(n|help_7($2),prep|with_8(pro:dem|that_9))),$1),$1),$0)
example_end

Sent: what 's a short ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,adj|short_4($2)),$0)
example_end

Sent: what are you going to eat on that kite Adam ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|eat_6(pro:per|you_3,$2,$1),prep|on_7(pro:dem|that_8($3,n|kite_9($3)),$1)),$0),$0)
example_end

Sent: hi Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|hi_1($0))
example_end

Sent: hi sleepy head .
Sem: lambda $0_{r}.and(and(adj|sleep-dn_2($0),n|head_3($0)),co|hi_1($0))
example_end

Sent: that 's the first part .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,and(n|part_5(pro:dem|that_1,$0),adj|first_4(pro:dem|that_1,$0)))
example_end

Sent: then you have_to take it outside on a windy day .
Sem: lambda $0_{r}.and(mod:aux|have_to_3(pro:per|you_2,lambda $1_{r}.v|take_5(pro:per|you_2,$1),$0),adv:tem|then_1($0))
example_end

Sent: why d you need string ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:per|you_3,BARE($1,n|string_5($1)),$0),$2($0)),$0)
example_end

Sent: watch the little cars .
Sem: lambda $0_{r}.v|watch_1(you,det:art|the_2($1,and(adj|little_3($1),n|car-pl_4($1))),$0)
example_end

Sent: he has a flat tire ?
Sem: lambda $0_{r}.Q(v|have-3s_2(pro:sub|he_1,det:art|a_3($1,and_comp(adj|flat_4($1),n|tire_5($1))),$0))
example_end

Sent: oh he didn 't have a flat tire ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|have_5(pro:sub|he_2,det:art|a_6($1,and_comp(adj|flat_7($1),n|tire_8($1))),$0),$0),$0),co|oh_1($0)))
example_end

Sent: what happens when you win ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|when_3(v|win_5(pro:per|you_4,$0),v|happen-3s_2($1,$0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: then what 're you going to do with it ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_3(part|go-presp_5(pro:per|you_4,lambda $1_{r}.and(v|do_7(pro:per|you_4,$2,$1),prep|with_8(pro:per|it_9,$1)),$0),$0)
example_end

Sent: when you use that Adam always shoot it away from people .
Sem: lambda $0_{r}.conj|when_1(v|use_3(pro:per|you_2,pro:rel|that_4,$0),and(and(and(v|shoot_7(you,pro:per|it_8,$0),adv|always_6($0)),adv|away_9($0)),prep|from_10(BARE($1,n|person-pl_11($1)),$0)))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: I think Daddy won 't come in again .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.not(mod|will_4(and(and(v|come_6(n:prop|daddy_3,$1),adv|in_7($1)),adv|again_8($1)),$1),$1),$0)
example_end

Sent: why would you shoot Indians ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|shoot_4(pro:per|you_3,n:prop|indians_5,$0),$1($0)),$0)
example_end

Sent: I see you 've learned how to use it Adam .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,lambda $1_{r}.aux|~have_4(part|learn-pastp_5(pro:per|you_3,lambda $2_{r}.and(v|use_8(_,pro:per|it_9,$2),adv:int|how_6($2)),$1),$1),$0)
example_end

Sent: crawl under the bed .
Sem: lambda $0_{r}.and(v|crawl_1(you,$0),prep|under_2(det:art|the_3($1,n|bed_4($1)),$0))
example_end

Sent: oh don 't do that .
Sem: lambda $0_{r}.and(not(mod|do_2(v|do_4(you,pro:dem|that_5,$0),$0),$0),co|oh_1($0))
example_end

Sent: now shoot over toward Paul 's bed .
Sem: lambda $0_{r}.and(and(and(v|shoot_2(you,$0),adv|now_1($0)),adv|over_3($0)),prep|toward_4(n:prop|paul_5's($1,n|bed_7($1)),$0))
example_end

Sent: no because he 's not in there sleeping .
Sem: lambda $0_{r}.and(not(aux|~be_4(and(part|sleep-presp_8(pro:sub|he_3,$0),adv|in_6(adv|there_7($0))),$0),$0),co|no_1($0))
example_end

Sent: where did that go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:rel|that_3,$0),$1($0)),$0)
example_end

Sent: over that way further .
Sem: adv|further_4(adv|over_1(pro:dem|that_2($0,n|way_3($0))))
example_end

Sent: see if you can hit the pillow in Paul 's bed .
Sem: lambda $0_{r}.v|see_1(you,lambda $1_{r}.mod|can_4(and(v|hit-zero_5(pro:per|you_3,det:art|the_6($2,n|pillow_7($2)),$1),prep|in_8(n:prop|paul_9's($3,n|bed_11($3)),$1)),$1),$0)
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you almost did it ?
Sem: lambda $0_{r}.Q(and(mod|do-past_3(pro:per|you_1,pro:per|it_4,$0),adv|almost_2($0)))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: come back over here because you may hit me .
Sem: lambda $0_{r}.conj|because_5(mod|may_7(v|hit-zero_8(pro:per|you_6,pro:obj|me_9,$0),$0),and(and(v|come_1(you,$0),adv|back_2($0)),adv|here_4($0)))
example_end

Sent: Paul what are you reading ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(on|reading_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: a book ?
Sem: BARE($0,Q(det:art|a_1($1,n|book_2($1),$0)))
example_end

Sent: are you reading a book ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(on|reading_3(pro:per|you_2,det:art|a_4($1,n|book_5($1)),$0),$0))
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: almost made a spear .
Sem: lambda $0_{r}.and(v|make-past_2(you,det:art|a_3($1,n|spear_4($1)),$0),adv|almost_1($0))
example_end

Sent: oh is a spear like an arrow ?
Sem: lambda $0_{r}.Q(and(prep|like_5(det:art|a_6($1,n|arrow_7($1)),det:art|a_3($2,n|spear_4($2)),$0),co|oh_1($0)))
example_end

Sent: how is it like an arrow ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(conj|like_4(det:art|a_5($2,n|arrow_6($2)),pro:per|it_3,$0))
example_end

Sent: you don 't shoot it with a bow ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(v|shoot_4(pro:per|you_1,pro:per|it_5,$0),prep|with_6(det:art|a_7($1,n|bow_8($1)),$0)),$0),$0))
example_end

Sent: oh do you shoot a spear with a bow ?
Sem: lambda $0_{r}.Q(and(v|do_2(and(v|shoot_4(pro:per|you_3,det:art|a_5($1,n|spear_6($1)),$0),prep|with_7(det:art|a_8($2,n|bow_9($2)),$0)),$0),co|oh_1($0)))
example_end

Sent: a long spear ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|long_2($1),n|spear_3($1)),$0)))
example_end

Sent: yes that 's not nice to say .
Sem: lambda $0_{r}.and(not(adj|nice_5(pro:dem|that_2,lambda $1_{r}.v|say_7(pro:dem|that_2,$1),$0),$0),co|yes_1($0))
example_end

Sent: oh you silly boy .
Sem: lambda $0_{r}.and(and(n|boy_4(pro:per|you_2,$0),co|silly_3(pro:per|you_2,$0)),co|oh_1($0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: why does it have what on it ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(and(and(v|have_4(pro:per|it_3,$1,$0),$2($0)),prep|on_6(pro:per|it_7,$0)),$0)
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: well you would have hurt yourself .
Sem: lambda $0_{r}.and(aux|have_4(mod|will-cond_3(part|hurt-pastp_5(pro:per|you_2,pro:refl|yourself_6,$0),$0),$0),co|well_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: jump on your toe is soft ?
Sem: lambda $0_{r}.Q(adj|soft_6(BARE($1,att(n|jump_1($1),prep|on_2(det:poss|your_3($2,n|toe_4($2))))),$0))
example_end

Sent: the thread out .
Sem: adv|out_3(det:art|the_1($0,v|thread_2($0)))
example_end

Sent: isn 't that fun ?
Sem: lambda $0_{r}.Q(not(adj|fun_4(pro:dem|that_3,$0),$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: am I going to what ?
Sem: lambda $0_{r}.aux|be-1s_1(part|go-presp_3(pro:sub|i_2,$0),$0)
example_end

Sent: that 's her pocketbook .
Sem: lambda $0_{r}.det:poss|her_3(pro:dem|that_1,n|pocket+book_4(pro:dem|that_1,$0))
example_end

Sent: have you seen everything ?
Sem: lambda $0_{r}.Q(v|have_1(part|see-pastp_3(pro:per|you_2,pro:indef|everything_4,$0),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is it Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh teasing .
Sem: lambda $0_{r}.and(part|tease-presp_2(you,$0),co|oh_1($0))
example_end

Sent: you 're teasing Cromer ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|tease-presp_3(pro:per|you_1,n:prop|cromer_4,$0),$0))
example_end

Sent: no that 's not a car .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:dem|that_2,n|car_6(pro:dem|that_2,$0)),$0),co|no_1($0))
example_end

Sent: what kind of pen ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|pen_4($2)))))
example_end

Sent: what kind of car ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|car_4($2)))))
example_end

Sent: red car ?
Sem: BARE($0,Q(and(adj|red_1($0),n|car_2($0))))
example_end

Sent: yellow car ?
Sem: BARE($0,Q(and(n|yellow_1($0),n|car_2($0))))
example_end

Sent: what do you do with it ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(pro:per|it_6,$0)),$0)
example_end

Sent: where what go ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(v|go_3($1,$0),$2($0))
example_end

Sent: did he go to the corral ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(v|go_3(pro:sub|he_2,$0),prep|to_4(det:art|the_5($1,n|corral_6($1)),$0)),$0))
example_end

Sent: you 're doing tricks ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|do-presp_3(pro:per|you_1,BARE($1,n|trick-pl_4($1)),$0),$0))
example_end

Sent: doing tricks ?
Sem: lambda $0_{r}.Q(part|do-presp_1(you,BARE($1,n|trick-pl_2($1)),$0))
example_end

Sent: what kind of tricks ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|trick-pl_4($2)))))
example_end

Sent: chair tricks ?
Sem: BARE($0,Q(and_comp(n|chair_1($0),v|trick-3s_2($0))))
example_end

Sent: oh you 're laughing ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|laugh-presp_4(pro:per|you_2,$0),$0),co|oh_1($0)))
example_end

Sent: chair tricks ?
Sem: BARE($0,Q(and_comp(n|chair_1($0),v|trick-3s_2($0))))
example_end

Sent: do I remember chair tricks ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:sub|i_2,BARE($1,and_comp(n|chair_4($1),n|trick-pl_5($1))),$0),$0))
example_end

Sent: you 're pressing a button ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|press-presp_3(pro:per|you_1,det:art|a_4($1,n|button_5($1)),$0),$0))
example_end

Sent: and what happens ?
Sem: lambda $1_{e}.lambda $0_{r}.v|happen-3s_3(you,$1,$0)
example_end

Sent: to the horse 's tail ?
Sem: Q(prep|to_1(n|horse_3's($0,n|tail_5($0))))
example_end

Sent: rope tricks ?
Sem: BARE($0,Q(and_comp(n|rope_1($0),v|trick-3s_2($0))))
example_end

Sent: oh you fell down on Mommy 's floor ?
Sem: lambda $0_{r}.Q(and(and(and(v|fall-past_3(pro:per|you_2,$0),adv|down_4($0)),prep|on_5(n:prop|mommy_6's($1,n|floor_8($1)),$0)),co|oh_1($0)))
example_end

Sent: no don 't throw that .
Sem: lambda $0_{r}.and(not(mod|do_2(v|throw_4(you,pro:dem|that_5,$0),$0),$0),co|no_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: oh your rope tricks .
Sem: lambda $0_{r}.and(det:poss|your_2($1,and_comp(n|rope_3($1),n|trick-pl_4($1)),$0),co|oh_1($0))
example_end

Sent: try him up there .
Sem: lambda $0_{r}.and(v|try_1(you,pro:obj|him_2,$0),adv|up_3(adv|there_4($0)))
example_end

Sent: well it doesn 't really belong there .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(v|belong_6(pro:per|it_2,$0),adv|real-dadj_5($0)),adv|there_7($0)),$0),$0),co|well_1($0))
example_end

Sent: yes I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: what happened to him ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:obj|him_4,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: Rusty 's down there ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(n:prop|rusty_1,$0),adv|down_3(adv|there_4($0))))
example_end

Sent: cowboy 's grass ?
Sem: BARE($0,Q(n|cow+boy_1's($1,n|grass_3($1),$0)))
example_end

Sent: oh don 't take it from you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|take_4(you,pro:per|it_5,$0),prep|from_6(pro:per|you_7,$0)),$0),$0),co|oh_1($0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you can 't play with that .
Sem: lambda $0_{r}.not(mod|can_2(and(v|play_4(pro:per|you_1,$0),prep|with_5(pro:dem|that_6,$0)),$0),$0)
example_end

Sent: it 's a can top .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|can_4(pro:per|it_1,$0),n|top_5(pro:per|it_1,$0)))
example_end

Sent: strong and healthy .
Sem: BARE($0,adj|health-dn_3($0))
example_end

Sent: what will make you strong and healthy ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_2(v|make_3($1,lambda $2_{r}.adj|health-dn_7(pro:per|you_4,$2),$0),$0)
example_end

Sent: that 's not a rocket .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|rocket_5(pro:dem|that_1,$0)),$0)
example_end

Sent: that 's not a rocket .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|rocket_5(pro:dem|that_1,$0)),$0)
example_end

Sent: that 's a Wheaties box .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n:prop|wheaties_4(pro:dem|that_1,$0),n|box_5(pro:dem|that_1,$0)))
example_end

Sent: you go over near the door .
Sem: lambda $0_{r}.and(and(v|go_2(pro:per|you_1,$0),adv|over_3($0)),prep|near_4(det:art|the_5($1,n|door_6($1)),$0))
example_end

Sent: you got your rocket ?
Sem: lambda $0_{r}.Q(v|get-past_2(pro:per|you_1,det:poss|your_3($1,n|rocket_4($1)),$0))
example_end

Sent: where are you trying to send your rocket ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|try-presp_4(pro:per|you_3,lambda $1_{r}.v|send_6(pro:per|you_3,det:poss|your_7($2,n|rocket_8($2)),$1),$0),$3($0)),$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: what are you doing with the rocket ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),prep|with_5(det:art|the_6($2,n|rocket_7($2)),$0)),$0)
example_end

Sent: okay well that 's enough .
Sem: lambda $0_{r}.and(and(adv|enough_5(pro:dem|that_3,$0),co|okay_1($0)),co|well_2($0))
example_end

Sent: you might hurt him .
Sem: lambda $0_{r}.mod|might_2(v|hurt-zero_3(pro:per|you_1,pro:obj|him_4,$0),$0)
example_end

Sent: isn 't the rocket heavy ?
Sem: lambda $0_{r}.Q(not(adj|heavy_5(det:art|the_3($1,n|rocket_4($1)),$0),$0))
example_end

Sent: what kind of flag ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|flag_4($2)))))
example_end

Sent: Adam don 't throw the ball okay ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|throw_4(you,det:art|the_5($1,n|ball_6($1)),$0),$0),$0),adj|okay_7($0)))
example_end

Sent: what 's wrong with it ?
Sem: BARE($0,adj|wrong_3($0))
example_end

Sent: oh it 's a trailer ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:per|it_2,n|trailer_5(pro:per|it_2,$0)),co|oh_1($0)))
example_end

Sent: push Rusty down ?
Sem: lambda $0_{r}.Q(and(n|push_1(you,n:prop|rusty_2,$0),adv|down_3($0)))
example_end

Sent: go where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|go_1(you,$0),$1($0))
example_end

Sent: well I can 't do that .
Sem: lambda $0_{r}.and(not(mod|can_3(v|do_5(pro:sub|i_2,pro:dem|that_6,$0),$0),$0),co|well_1($0))
example_end

Sent: what 's the trailer doing ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_5(det:art|the_3($1,n|trailer_4($1)),$2,$0),$0)
example_end

Sent: watching you ?
Sem: lambda $0_{r}.Q(part|watch-presp_1(you,pro:per|you_2,$0))
example_end

Sent: I wouldn 't throw my hat .
Sem: lambda $0_{r}.not(mod|will_2(v|throw_4(pro:sub|i_1,det:poss|my_5($1,n|hat_6($1)),$0),$0),$0)
example_end

Sent: careful of the light Adam .
Sem: BARE($0,co|careful_1($0))
example_end

Sent: you fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: you 're going to leave your horses down there ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|leave_5(pro:per|you_1,det:poss|your_6($2,n|horse-pl_7($2)),$1),adv|down_8(adv|there_9($1))),$0),$0))
example_end

Sent: yes I 'm watching you .
Sem: lambda $0_{r}.and(aux|~be_3(part|watch-presp_4(pro:sub|i_2,pro:per|you_5,$0),$0),co|yes_1($0))
example_end

Sent: no Adam you don 't climb up there .
Sem: lambda $0_{r}.and(not(mod|do_4(and(v|climb_6(pro:per|you_3,$0),adv|up_7(adv|there_8($0))),$0),$0),co|no_1($0))
example_end

Sent: come down .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|down_2($0))
example_end

Sent: no I don 't want that book thank_you .
Sem: lambda $0_{r}.and(and(not(mod|do_3(v|want_5(pro:sub|i_2,pro:dem|that_6($1,n|book_7($1)),$0),$0),$0),co|no_1($0)),n|thank_you_8($0))
example_end

Sent: come down or else you can 't player over there anymore .
Sem: lambda $0_{r}.post|else_4_or_3(not(mod|can_6(and(and(n|play-dv_8(pro:per|you_5,$0),adv|over_9(adv|there_10($0))),adv|anymore_11($0)),$0),$0),and(v|come_1(you,$0),adv|down_2($0)))
example_end

Sent: get down .
Sem: lambda $0_{r}.and(v|get_1(you,$0),adv|down_2($0))
example_end

Sent: I don 't know what happened to you ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|happen-past_6(pro:int|what_5,$1),prep|to_7(pro:per|you_8,$1)),$0),$0),$0))
example_end

Sent: oh what happened to the cowboy ?
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|happen-past_3($1,$0),prep|to_4(det:art|the_5($2,n|cow+boy_6($2)),$0)),co|oh_1($0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: don 't know .
Sem: lambda $0_{r}.not(mod|do_1(v|know_3(you,$0),$0),$0)
example_end

Sent: he doesn 't see you putting any boots on .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|he_1,lambda $1_{r}.and(part|put-presp_6(pro:per|you_5,qn|any_7($2,n|boot-pl_8($2)),$1),prep|on_9($1)),$0),$0),$0)
example_end

Sent: you aren 't putting any boots on .
Sem: lambda $0_{r}.not(aux|be_2(and(part|put-presp_4(pro:per|you_1,qn|any_5($1,n|boot-pl_6($1)),$0),prep|on_7($0)),$0),$0)
example_end

Sent: Adam you 're going to fall .
Sem: lambda $0_{r}.aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|fall_6(pro:per|you_2,$1),$0),$0)
example_end

Sent: how can you see when you 've broken it .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.conj|when_5(aux|~have_7(part|break-pastp_8(pro:per|you_6,pro:per|it_9,$0),$0),mod|can_2(and(v|see_4(pro:per|you_3,$0),$1($0)),$0))
example_end

Sent: what do you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: see you what ?
Sem: lambda $0_{r}.v|see_1(you,pro:per|you_2,$0)
example_end

Sent: it 's broken .
Sem: lambda $0_{r}.part|break-pastp_3(pro:per|it_1,$0)
example_end

Sent: no it doesn 't come out .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|come_5(pro:per|it_2,$0),adv|out_6($0)),$0),$0),co|no_1($0))
example_end

Sent: it won 't come out .
Sem: lambda $0_{r}.not(mod|will_2(and(v|come_4(pro:per|it_1,$0),adv|out_5($0)),$0),$0)
example_end

Sent: well she needs her pencil .
Sem: lambda $0_{r}.and(v|need-3s_3(pro:sub|she_2,det:poss|her_4($1,n|pencil_5($1)),$0),co|well_1($0))
example_end

Sent: do you want a pencil ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,det:art|a_4($1,n|pencil_5($1)),$0),$0))
example_end

Sent: here 's your pencil over here .
Sem: lambda $0_{r}.and(and(cop|~be_2(det:poss|your_3($1,n|pencil_4($1)),$0),pro:exist|here_1($0)),adv|over_5(adv|here_6($0)))
example_end

Sent: get out_of the way ?
Sem: lambda $0_{r}.Q(and(v|get_1(you,$0),prep|out_of_2(det:art|the_3($1,n|way_4($1)),$0)))
example_end

Sent: who 's in your way ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|~be_2($1,$0),prep|in_3(det:poss|your_4($2,n|way_5($2)),$0))
example_end

Sent: that doesn 't belong on the floor .
Sem: lambda $0_{r}.not(mod|do_2(and(v|belong_4(pro:dem|that_1,$0),prep|on_5(det:art|the_6($1,n|floor_7($1)),$0)),$0),$0)
example_end

Sent: ask Ursula what that is .
Sem: lambda $0_{r}.v|ask_1(you,n:prop|ursula_2,$0)
example_end

Sent: you ask her .
Sem: lambda $0_{r}.v|ask_2(pro:per|you_1,pro:obj|her_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: give it back to Ursla .
Sem: lambda $0_{r}.and(v|give_1(you,pro:per|it_2,$0),adv|back_3(prep|to_4(n:prop|ursla_5,$0)))
example_end

Sent: it 's a brush for a typewriter with an eraser on this end .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,att(att(n|brush_4(pro:per|it_1,$0),prep|for_5(det:art|a_6($1,n|type+writer_7($1)))),prep|with_8(det:art|a_9($2,att(n|erase-dv_10($2),prep|on_11(pro:dem|this_12($3,n|end_13($3))))))))
example_end

Sent: that 's Urs  .
Sem: lambda $0_{r}.poss|~s_4(n:prop|ursula_3,pro:dem|that_1,$0)
example_end

Sent: I don 't think that 's yours .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.pro:poss|yours_7(pro:rel|that_5,$1),$0),$0),$0)
example_end

Sent: no let Urs look now Adam .
Sem: lambda $0_{r}.and(part|let-pastp_2(you,lambda $1_{r}.and(cop|look_4(n:prop|ursula_3,$1),adv|now_5($1)),$0),co|no_1($0))
example_end

Sent: what is it Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: let her finish looking in her pocket book now .
Sem: lambda $0_{r}.and(v|let-zero_1(you,lambda $1_{r}.and(part|look-presp_4(pro:obj|her_2,$1),prep|in_5(det:poss|her_6($2,and_comp(n|pocket_7($2),n|book_8($2))),$1)),$0),adv|now_9($0))
example_end

Sent: a picture of somebody .
Sem: det:art|a_1($0,att(n|picture_2($0),prep|of_3(pro:indef|somebody_4)))
example_end

Sent: Adam wait .
Sem: lambda $0_{r}.v|wait_2(you,$0)
example_end

Sent: oh that 's dollar ?
Sem: lambda $0_{r}.Q(and(n|dollar_4(pro:dem|that_2,$0),co|oh_1($0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: buy money pay ?
Sem: lambda $0_{r}.Q(v|pay_3(you,BARE($1,n|money_2($1)),$0))
example_end

Sent: this doesn 't cut .
Sem: lambda $0_{r}.not(mod|do_2(v|cut-zero_4(pro:dem|this_1,$0),$0),$0)
example_end

Sent: here are some more paper clips .
Sem: lambda $0_{r}.and(cop|be-pres_2(qn|some_3(qn|more_4($1,and_comp(n|paper_5($1),n|clip-pl_6($1)))),$0),adv|here_1($0))
example_end

Sent: what are you going to do ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: are you going to put them back in the box ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_5(pro:per|you_2,pro:obj|them_6,$1),adv|back_7(prep|in_8(det:art|the_9($2,n|box_10($2)),$1))),$0),$0))
example_end

Sent: oh then put it .
Sem: lambda $0_{r}.and(and(v|put-zero_3(you,pro:per|it_4,$0),adv:tem|then_2($0)),co|oh_1($0))
example_end

Sent: what do you do with the pipe ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(det:art|the_6($2,n|pipe_7($2)),$0)),$0)
example_end

Sent: oh button press .
Sem: lambda $0_{r}.and(and_comp(n|button_2($0),n|press_3($0)),co|oh_1($0))
example_end

Sent: what happens when you press the button ?
Sem: lambda $2_{e}.lambda $0_{r}.conj|when_3(v|press_5(pro:per|you_4,det:art|the_6($1,n|button_7($1)),$0),v|happen-3s_2($2,$0))
example_end

Sent: got it ?
Sem: lambda $0_{r}.Q(v|get-past_1(you,pro:per|it_2,$0))
example_end

Sent: what did you get ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|get_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you caught it ?
Sem: lambda $0_{r}.Q(v|catch-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: what did you catch ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|catch_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: meadow pond .
Sem: BARE($0,and_comp(adj|meadow_1($0),n|pond_2($0)))
example_end

Sent: oh a meadow pond .
Sem: lambda $0_{r}.and(det:art|a_2($1,and_comp(adj|meadow_3($1),n|pond_4($1)),$0),co|oh_1($0))
example_end

Sent: what about the meadow pond ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,and_comp(n|meadow_4($0),n|pond_5($0)))))
example_end

Sent: you jumped over it ?
Sem: lambda $0_{r}.Q(and(v|jump-past_2(pro:per|you_1,$0),adv|over_3(pro:per|it_4,$0)))
example_end

Sent: I don 't think you can jump over the pipe .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(and(v|jump_7(pro:per|you_5,$1),adv|over_8(det:art|the_9($2,n|pipe_10($2)),$1)),$1),$0),$0),$0)
example_end

Sent: yes you did jump over the pipe didn 't you ?
Sem: lambda $0_{r}.Q(and(and(v|do-past_3(and(n|jump_4(pro:per|you_2,$0),adv|over_5(det:art|the_6($1,n|pipe_7($1)),$0)),$0),not(mod|do_8(pro:per|you_10,$0),$0)),co|yes_1($0)))
example_end

Sent: you missed it .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: missed it ?
Sem: lambda $0_{r}.Q(v|miss-past_1(you,pro:per|it_2,$0))
example_end

Sent: Adam what happens when you press the button ?
Sem: lambda $2_{e}.lambda $0_{r}.conj|when_4(v|press_6(pro:per|you_5,det:art|the_7($1,n|button_8($1)),$0),v|happen-3s_3($2,$0))
example_end

Sent: what does the button do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|do_5(det:art|the_3($1,n|button_4($1)),$2,$0),$0)
example_end

Sent: press over the candle maker .
Sem: lambda $0_{r}.and(n|press_1(you,$0),adv|over_2(BARE($1,and_comp(det:art|the_3($2,n|candle+stick_4($2),$1),n|make-dv_5($1))),$0))
example_end

Sent: when did you press the button ?
Sem: lambda $0_{r}.Q(mod|do-past_2(v|press_4(pro:per|you_3,det:art|the_5($1,n|button_6($1)),$0),$0))
example_end

Sent: where were you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(pro:per|you_3,$0),$1($0))
example_end

Sent: when you pressed the button where were you Adam ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|when_1(v|press-past_3(pro:per|you_2,det:art|the_4($1,n|button_5($1)),$0),and(cop|be-past_7(pro:per|you_8,$0),$2($0)))
example_end

Sent: where were you when you pressed the button ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|when_4(v|press-past_6(pro:per|you_5,det:art|the_7($1,n|button_8($1)),$0),and(cop|be-past_2(pro:per|you_3,$0),$2($0)))
example_end

Sent: what were you riding in ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-past_2(and(part|ride-presp_4(pro:per|you_3,$1,$0),adv|in_5($0)),$0)
example_end

Sent: in a what ?
Sem: det:art|a_2($0,pro:int|what_3($0))
example_end

Sent: in taxi ?
Sem: Q(prep|in_1(BARE($0,n|taxi_2($0))))
example_end

Sent: you dropped a taxi wheel ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,det:art|a_3($1,and_comp(n|taxi_4($1),n|wheel_5($1))),$0))
example_end

Sent: if you like to .
Sem: lambda $0_{r}.v|like_3(pro:per|you_2,$0)
example_end

Sent: oh what happened to the taxi wheels ?
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|happen-past_3($1,$0),prep|to_4(det:art|the_5($2,and_comp(n|taxi_6($2),n|wheel-pl_7($2))),$0)),co|oh_1($0))
example_end

Sent: here are some .
Sem: lambda $0_{r}.and(cop|be-pres_2(qn|some_3,$0),adv|here_1($0))
example_end

Sent: oh that 's for Cromer ?
Sem: lambda $0_{r}.Q(and(and(cop|~be_3(pro:dem|that_2,$0),prep|for_4(n:prop|cromer_5,$0)),co|oh_1($0)))
example_end

Sent: Urs has one ?
Sem: lambda $0_{r}.Q(aux|have-3s_2(n:prop|ursula_1,pro:indef|one_3,$0))
example_end

Sent: what shall I buy with my dollar ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(and(v|buy_4(pro:sub|i_3,$1,$0),prep|with_5(det:poss|my_6($2,n|dollar_7($2)),$0)),$0)
example_end

Sent: I don 't know where to find a unicorn .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|find_7(_,det:art|a_8($2,n|unicorn_9($2)),$1),adv:int|where_5($1)),$0),$0),$0)
example_end

Sent: well where 's your unicorn ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(aux|~be_3(det:poss|your_4($1,n|unicorn_5($1)),$0),$2($0)),co|well_1($0))
example_end

Sent: you took our money now you have_to give us a unicorn .
Sem: lambda $0_{r}.and(v|take-past_2(pro:per|you_1,det:poss|our_3($1,n|money_4($1)),$0),mod:aux|have_to_7(and(v|give_8(pro:per|you_6,det:art|a_10($2,n|unicorn_11($2)),pro:obj|us_9,$0),adv|now_5($0)),$0))
example_end

Sent: why I thought you were buying us a unicorn .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(v|think-past_3(pro:sub|i_2,lambda $1_{r}.aux|be-past_5(part|buy-presp_6(pro:per|you_4,det:art|a_8($2,n|unicorn_9($2)),pro:obj|us_7,$1),$1),$0),$3($0))
example_end

Sent: the unicorn didn 't want to come ?
Sem: lambda $0_{r}.Q(not(mod|do_3(v|want_5(det:art|the_1($1,n|unicorn_2($1)),lambda $2_{r}.v|come_7(det:art|the_1($1,n|unicorn_2($1)),$2),$0),$0),$0))
example_end

Sent: help you reach ?
Sem: lambda $0_{r}.Q(v|help_1(you,lambda $1_{r}.v|reach_3(pro:per|you_2,$1),$0))
example_end

Sent: that 's for the unicorn ?
Sem: lambda $0_{r}.Q(and(cop|~be_2(pro:dem|that_1,$0),conj|for_3(det:art|the_4($1,n|unicorn_5($1)),$0)))
example_end

Sent: where 's the unicorn ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|unicorn_4($1)),$0),$2($0))
example_end

Sent: buy this one ?
Sem: lambda $0_{r}.Q(v|buy_1(you,pro:dem|this_2($1,pro:indef|one_3($1)),$0))
example_end

Sent: in it ?
Sem: Q(prep|in_1(pro:per|it_2))
example_end

Sent: putting them in Rusty 's hat ?
Sem: lambda $0_{r}.Q(and(part|put-presp_1(you,pro:obj|them_2,$0),prep|in_3(n:prop|rusty_4's($1,n|hat_6($1)),$0)))
example_end

Sent: Rusty didn 't want them in his hat ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(v|want_4(n:prop|rusty_1,pro:obj|them_5,$0),prep|in_6(det:poss|his_7($1,n|hat_8($1)),$0)),$0),$0))
example_end

Sent: why are you throwing ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|throw-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: are you tired ?
Sem: lambda $0_{r}.Q(v|tire-past_3(pro:per|you_2,$0))
example_end

Sent: what does she have_to buy ?
Sem: lambda $1_{e}.lambda $0_{r}.mod:aux|have_to_4(v|do-3s_2(v|buy_5(pro:sub|she_3,$1,$0),$0),$0)
example_end

Sent: what did he do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: what did Rusty do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(n:prop|rusty_3,$1,$0),$0)
example_end

Sent: well what are you buying ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-pres_3(part|buy-presp_5(pro:per|you_4,$1,$0),$0),co|well_1($0))
example_end

Sent: what did you buy ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|buy_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I see you have some crumpled dollars .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,lambda $1_{r}.v|have_4(pro:per|you_3,qn|some_5($2,and(v|crumple-past_6($2),n|dollar-pl_7($2))),$1),$0)
example_end

Sent: you 're going shopping ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,BARE($1,part|shop-presp_4($1)),$0),$0))
example_end

Sent: what did you do with the dollars ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(det:art|the_6($2,n|dollar-pl_7($2)),$0)),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: let Urs do it .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|do_3(n:prop|ursula_2,pro:per|it_4,$1),$0)
example_end

Sent: can you put them back in the bag ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:obj|them_4,$0),adv|back_5(prep|in_6(det:art|the_7($1,n|bag_8($1)),$0))),$0))
example_end

Sent: I know what you might like .
Sem: lambda $0_{r}.v|know_2(pro:sub|i_1,lambda $1_{r}.mod|might_5(prep|like_6(pro:per|you_4,pro:int|what_3,$1),$1),$0)
example_end

Sent: I have very long gloves .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,adv|very_3(BARE($1,and(adj|long_4($1),n|glove-pl_5($1)))),$0)
example_end

Sent: you plug this in .
Sem: lambda $0_{r}.and(v|plug_2(pro:per|you_1,pro:dem|this_3,$0),adv|in_4($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: we have_to put this up now .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(and(v|put-zero_3(pro:sub|we_1,pro:dem|this_4,$0),adv|up_5($0)),adv|now_6($0)),$0)
example_end

Sent: what do you hear ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|hear_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: can you hear Urs ?
Sem: lambda $0_{r}.Q(mod|can_1(v|hear_3(pro:per|you_2,n:prop|ursula_4,$0),$0))
example_end

Sent: no it 's not a toy .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:per|it_2,n|toy_6(pro:per|it_2,$0)),$0),co|no_1($0))
example_end

Sent: are you going home Adam ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|go-presp_3(pro:per|you_2,$0),adv|home_4($0)),$0))
example_end

Sent: there you are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:per|you_2,$0),adv|there_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: button let you press ?
Sem: lambda $0_{r}.Q(v|let-zero_2(you,lambda $1_{r}.v|press_4(pro:per|you_3,$1),$0))
example_end

Sent: a box ?
Sem: BARE($0,Q(det:art|a_1($1,n|box_2($1),$0)))
example_end

Sent: Cromer can 't change your diaper .
Sem: lambda $0_{r}.not(mod|can_2(v|change_4(n:prop|cromer_1,det:poss|your_5($1,n|diaper_6($1)),$0),$0),$0)
example_end

Sent: she can 't change your diaper either .
Sem: lambda $0_{r}.not(mod|can_2(and(v|change_4(pro:sub|she_1,det:poss|your_5($1,n|diaper_6($1)),$0),adv|either_7($0)),$0),$0)
example_end

Sent: no don 't put your foot up there .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|put-zero_4(you,det:poss|your_5($1,n|foot_6($1)),$0),adv|up_7(adv|there_8($0))),$0),$0),co|no_1($0))
example_end

Sent: Urs can 't change your diaper like that .
Sem: lambda $0_{r}.not(mod|can_2(and(v|change_4(n:prop|ursula_1,det:poss|your_5($1,n|diaper_6($1)),$0),prep|like_7(pro:dem|that_8,$0)),$0),$0)
example_end

Sent: do you want me to change your diaper ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|change_6(pro:obj|me_4,det:poss|your_7($2,n|diaper_8($2)),$1),$0),$0))
example_end

Sent: oh you 're telling the microphone ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|tell-presp_4(pro:per|you_2,det:art|the_5($1,n|microphone_6($1)),$0),$0),co|oh_1($0)))
example_end

Sent: will you ask them to excuse you ?
Sem: lambda $0_{r}.Q(mod|will_1(v|ask_3(pro:per|you_2,lambda $1_{r}.v|excuse_6(pro:obj|them_4,pro:per|you_7,$1),$0),$0))
example_end

Sent: did he catch you ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|catch_3(pro:sub|he_2,pro:per|you_4,$0),$0))
example_end

Sent: you 're playing peekaboo with Cromer ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|play-presp_3(pro:per|you_1,BARE($1,v|peekaboo_4($1)),$0),prep|with_5(n:prop|cromer_6,$0)),$0))
example_end

Sent: did he catch you ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|catch_3(pro:sub|he_2,pro:per|you_4,$0),$0))
example_end

Sent: where did Adam go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(n:prop|adam_3,$0),$1($0)),$0)
example_end

Sent: oh you caught him ?
Sem: lambda $0_{r}.Q(and(v|catch-past_3(pro:per|you_2,pro:obj|him_4,$0),co|oh_1($0)))
example_end

Sent: oh you fell down in the bunkhouse .
Sem: lambda $0_{r}.and(and(and(v|fall-past_3(pro:per|you_2,$0),adv|down_4($0)),prep|in_5(det:art|the_6($1,n|bunkhouse_7($1)),$0)),co|oh_1($0))
example_end

Sent: you fell down with your shoes .
Sem: lambda $0_{r}.and(v|fall-past_2_down_3(pro:per|you_1,$0),prep|with_4(det:poss|your_5($1,n|shoe-pl_6($1)),$0))
example_end

Sent: with your shoes ?
Sem: Q(prep|with_1(det:poss|your_2($0,n|shoe-pl_3($0))))
example_end

Sent: I put it in my pocket .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:sub|i_1,pro:per|it_3,$0),prep|in_4(det:poss|my_5($1,n|pocket_6($1)),$0))
example_end

Sent: don 't break the point Adam .
Sem: lambda $0_{r}.not(mod|do_1(v|break_3(you,det:art|the_4($1,n|point_5($1)),$0),$0),$0)
example_end

Sent: now you 're getting it .
Sem: lambda $0_{r}.aux|~be_3(and(n:gerund|get-presp_4(pro:per|you_2,pro:per|it_5,$0),adv|now_1($0)),$0)
example_end

Sent: drop it on the point ?
Sem: lambda $0_{r}.Q(and(v|drop_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|point_5($1)),$0)))
example_end

Sent: how many glasses ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|glass-pl_3($0)))
example_end

Sent: oh there it goes ?
Sem: lambda $0_{r}.Q(and(and(v|go-3s_4(pro:per|it_3,$0),adv|there_2($0)),co|oh_1($0)))
example_end

Sent: no don 't play with glasses .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|play_4(you,$0),prep|with_5(BARE($1,n|glass-pl_6($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: how many pencils do you have ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_4(v|have_6(pro:per|you_5,BARE($1,and($2(qn|many_2($1)),n|pencil-pl_3($1))),$0),$0)
example_end

Sent: big one ?
Sem: BARE($0,Q(att(pro:indef|one_2,BARE($1,adj|big_1($1)),$0)))
example_end

Sent: do you like grapefruit ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,n|grape+fruit_4($1)),$0),$0))
example_end

Sent: do you like grapefruit ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,n|grape+fruit_4($1)),$0),$0))
example_end

Sent: you like cereal .
Sem: lambda $0_{r}.v|like_2(pro:per|you_1,BARE($1,n|cereal_3($1)),$0)
example_end

Sent: do you like grapefruit ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,n|grape+fruit_4($1)),$0),$0))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: when I eat grapefruit .
Sem: lambda $0_{r}.v|eat_3(pro:sub|i_2,BARE($1,n|grape+fruit_4($1)),$0)
example_end

Sent: okay you have your bib on ?
Sem: lambda $0_{r}.Q(and(and(v|have_3(pro:per|you_2,det:poss|your_4($1,n|bib_5($1)),$0),adv|on_6($0)),co|okay_1($0)))
example_end

Sent: you like it .
Sem: lambda $0_{r}.v|like_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: he dropped his pencil .
Sem: lambda $0_{r}.v|drop-past_2(pro:sub|he_1,det:poss|his_3($1,n|pencil_4($1)),$0)
example_end

Sent: yes now you pick it up .
Sem: lambda $0_{r}.and(and(and(v|pick_4(pro:per|you_3,pro:per|it_5,$0),adv|now_2($0)),adv|up_6($0)),co|yes_1($0))
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: who turned around ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|turn-past_2($1,$0),adv|around_3($0))
example_end

Sent: you 've got a tunnel ?
Sem: lambda $0_{r}.Q(aux|~have_2(part|get-pastp_3(pro:per|you_1,det:art|a_4($1,n|tunnel_5($1)),$0),$0))
example_end

Sent: sounded like radiator but maybe he means elevator .
Sem: lambda $0_{r}.and(and(v|mean-3s_7(pro:sub|he_6,BARE($1,n|elevator_8($1)),$0),co|like_2(BARE($2,n|radiator_3($2)),$0)),adv|maybe_5($0))
example_end

Sent: where are they ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-pres_2(pro:sub|they_3,$0),$1($0))
example_end

Sent: don 't go down ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|go_3(you,$0),adv|down_4($0)),$0),$0))
example_end

Sent: where do you want to go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|go_6(pro:per|you_3,$1),$0),$2($0)),$0)
example_end

Sent: Daddy went down ?
Sem: lambda $0_{r}.Q(and(v|go-past_2(n:prop|daddy_1,$0),adv|down_3($0)))
example_end

Sent: how many pencils ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|pencil-pl_3($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: this is a radiator .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n|radiator_4(pro:dem|this_1,$0))
example_end

Sent: this is a radiator .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n|radiator_4(pro:dem|this_1,$0))
example_end

Sent: so you mean elevator .
Sem: lambda $0_{r}.and(adj|mean_3(pro:per|you_2,BARE($1,n|elevator_4($1)),$0),co|so_1($0))
example_end

Sent: this is a radiator .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n|radiator_4(pro:dem|this_1,$0))
example_end

Sent: where are you putting them ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|put-presp_4(pro:per|you_3,pro:obj|them_5,$0),$1($0)),$0)
example_end

Sent: there 's some .
Sem: lambda $0_{r}.and(cop|~be_2(qn|some_3,$0),pro:exist|there_1($0))
example_end

Sent: oh peek you .
Sem: lambda $0_{r}.and(v|peek_2(you,pro:per|you_3,$0),co|oh_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: see what you can do ?
Sem: lambda $0_{r}.Q(v|see_1(you,lambda $1_{r}.mod|can_4(v|do_5(pro:per|you_3,pro:int|what_2,$1),$1),$0))
example_end

Sent: that 's good .
Sem: lambda $0_{r}.adj|good_3(pro:dem|that_1,$0)
example_end

Sent: put it on the wall ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|wall_5($1)),$0)))
example_end

Sent: what do you call that ?
Sem: lambda $0_{r}.v|call_4(pro:per|you_3,pro:dem|that_5,$0)
example_end

Sent: I 'm watching .
Sem: lambda $0_{r}.aux|~be_2(part|watch-presp_3(pro:sub|i_1,$0),$0)
example_end

Sent: no go get your rubber band .
Sem: lambda $0_{r}.and(v|get_3(you,det:poss|your_4($1,and_comp(n|rubber_5($1),n|band_6($1))),$0),co|no_1($0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: did you have any more ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|have_3(pro:per|you_2,qn|any_4($1,pro:indef|more_5($1)),$0),$0))
example_end

Sent: yes you sit outside .
Sem: lambda $0_{r}.and(and(v|sit_3(pro:per|you_2,$0),adv|outside_4($0)),co|yes_1($0))
example_end

Sent: whose blanket ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|blanket_2($1))
example_end

Sent: oh does Adam have a blanket ?
Sem: lambda $0_{r}.Q(and(mod|do-3s_2(v|have_4(n:prop|adam_3,det:art|a_5($1,n|blanket_6($1)),$0),$0),co|oh_1($0)))
example_end

Sent: why do you need your blanket ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:per|you_3,det:poss|your_5($1,n|blanket_6($1)),$0),$2($0)),$0)
example_end

Sent: I think it 's out in the kitchen .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(cop|~be_4(pro:per|it_3,$1),adv|out_5(prep|in_6(det:art|the_7($2,n|kitchen_8($2)),$1))),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: are you taking your nap ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|take-presp_3(pro:per|you_2,det:poss|your_4($1,n|nap_5($1)),$0),$0))
example_end

Sent: do you wan to write ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|write_5(pro:per|you_2,$1),$0),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh is that a small one ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:rel|that_3,and(pro:indef|one_6(pro:rel|that_3,$0),adj|small_5(pro:rel|that_3,$0))),co|oh_1($0)))
example_end

Sent: well you give him the pen .
Sem: lambda $0_{r}.and(v|give_3(pro:per|you_2,det:art|the_5($1,n|pen_6($1)),pro:obj|him_4,$0),co|well_1($0))
example_end

Sent: Adam dropped the pencil .
Sem: lambda $0_{r}.v|drop-past_2(n:prop|adam_1,det:art|the_3($1,n|pencil_4($1)),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: oh a trombone .
Sem: lambda $0_{r}.and(det:art|a_2($1,n|trombone_3($1),$0),co|oh_1($0))
example_end

Sent: can you play the trombone ?
Sem: lambda $0_{r}.Q(mod|can_1(v|play_3(pro:per|you_2,det:art|the_4($1,n|trombone_5($1)),$0),$0))
example_end

Sent: a fish ?
Sem: BARE($0,Q(det:art|a_1($1,n|fish_2($1),$0)))
example_end

Sent: what kind of fish ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|fish_4($2)))))
example_end

Sent: swim with you ?
Sem: lambda $0_{r}.Q(and(n|swim_1(you,$0),prep|with_2(pro:per|you_3,$0)))
example_end

Sent: looks like a real tiny fish .
Sem: lambda $0_{r}.and(cop|look-3s_1(you,$0),adj|real_4(prep|like_2(det:art|a_3($1,and(adj|tiny_5($1),n|fish_6($1))),$0)))
example_end

Sent: that 's a circle .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|circle_4(pro:dem|that_1,$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: where is the cowboy ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|cow+boy_4($1)),$0),$2($0))
example_end

Sent: does he have boots on ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|have_3(pro:sub|he_2,BARE($1,n|boot-pl_4($1)),$0),adv|on_5($0)),$0))
example_end

Sent: can you draw his boots ?
Sem: lambda $0_{r}.Q(mod|can_1(v|draw_3(pro:per|you_2,det:poss|his_4($1,n|boot-pl_5($1)),$0),$0))
example_end

Sent: oh his spurs .
Sem: lambda $0_{r}.and(det:poss|his_2($1,n|spur-pl_3($1),$0),co|oh_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: it 's Goldilocks .
Sem: lambda $0_{r}.n:prop|goldilocks_3(pro:per|it_1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: cowboy bill ?
Sem: BARE($0,Q(and_comp(n|cow+boy_1($0),n|bill_2($0))))
example_end

Sent: looks like a road .
Sem: lambda $0_{r}.and(cop|look-3s_1(you,$0),prep|like_2(det:art|a_3($1,n|road_4($1)),$0))
example_end

Sent: is it a road ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|road_4(pro:per|it_2,$0)))
example_end

Sent: looks like another one is it ?
Sem: lambda $0_{r}.Q(and(and(cop|look-3s_1(you,$0),prep|like_2(qn|another_3($1,pro:indef|one_4($1)),$0)),cop|be-3s_5(pro:per|it_6,$0)))
example_end

Sent: a road another road ?
Sem: BARE($0,Q(and(det:art|a_1($1,n|road_2($1)),qn|another_3($2,n|road_4($2)),$0)))
example_end

Sent: it 's a cowboy ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,n|cow+boy_4(pro:per|it_1,$0)))
example_end

Sent: he has a what on ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|have-3s_2(pro:sub|he_1,$1,$0),adv|on_5($0))
example_end

Sent: whose boots are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_4,n|boot-pl_2(pro:dem|those_4,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: is that a hat ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|hat_4(pro:rel|that_2,$0)))
example_end

Sent: oh it 's a boy .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|boy_5(pro:per|it_2,$0)),co|oh_1($0))
example_end

Sent: does he have hat on ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|have_3(pro:sub|he_2,BARE($1,n|hat_4($1)),$0),adv|on_5($0)),$0))
example_end

Sent: whose bandana is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|bandana_2(pro:dem|that_4,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: looks like a square .
Sem: lambda $0_{r}.and(cop|look-3s_1(you,$0),prep|like_2(det:art|a_3($1,n|square_4($1)),$0))
example_end

Sent: is it a square ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|square_4(pro:per|it_2,$0)))
example_end

Sent: it 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:per|it_1,$1(pro:per|it_1,$0))
example_end

Sent: it 's a clown he said .
Sem: lambda $0_{r}.v|say-past_6(pro:sub|he_5,lambda $1_{r}.det:art|a_3(pro:per|it_1,n|clown_4(pro:per|it_1,$1)),$0)
example_end

Sent: it 's clown Adam .
Sem: lambda $0_{r}.n|clown_3(pro:per|it_1,$0)
example_end

Sent: is Adam a clown ?
Sem: lambda $0_{r}.Q(det:art|a_3(n:prop|adam_2,n|clown_4(n:prop|adam_2,$0)))
example_end

Sent: Adam 's busy ?
Sem: lambda $0_{r}.Q(adj|busy_3(n:prop|adam_1,$0))
example_end

Sent: what is Adam busy doing ?
Sem: lambda $2_{e}.lambda $0_{r}.v|busy_4(n:prop|adam_3,lambda $1_{r}.part|do-presp_5(n:prop|adam_3,$2,$1),$0)
example_end

Sent: it is your home .
Sem: lambda $0_{r}.det:poss|your_3(pro:per|it_1,n|home_4(pro:per|it_1,$0))
example_end

Sent: is it my home ?
Sem: lambda $0_{r}.Q(det:poss|my_3(pro:per|it_2,n|home_4(pro:per|it_2,$0)))
example_end

Sent: yes I came on my bicycle .
Sem: lambda $0_{r}.and(and(v|come-past_3(pro:sub|i_2,$0),prep|on_4(det:poss|my_5($1,n|cycle_6($1)),$0)),co|yes_1($0))
example_end

Sent: is it another clown .
Sem: lambda $0_{r}.qn|another_3(pro:per|it_2,n|clown_4(pro:per|it_2,$0))
example_end

Sent: oh that 's a rope ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:dem|that_2,n|rope_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: rope for tricks ?
Sem: BARE($0,Q(att(n|rope_1($0),prep|for_2(BARE($1,n|trick-pl_3($1))))))
example_end

Sent: whose rope is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|rope_2(pro:per|it_4,$0))
example_end

Sent: that one ?
Sem: BARE($0,Q(pro:dem|that_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: another fish ?
Sem: BARE($0,Q(qn|another_1($1,n|fish_2($1),$0)))
example_end

Sent: is that a fish ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|fish_4(pro:rel|that_2,$0)))
example_end

Sent: it 's a boy .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|boy_4(pro:per|it_1,$0))
example_end

Sent: did you reach the towel ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|reach_3(pro:per|you_2,det:art|the_4($1,n|towel_5($1)),$0),$0))
example_end

Sent: no you didn 't reach it ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|reach_5(pro:per|you_2,pro:per|it_6,$0),$0),$0),co|no_1($0)))
example_end

Sent: what did you do in the kitchen ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|in_5(det:art|the_6($2,n|kitchen_7($2)),$0)),$0)
example_end

Sent: is it a flag ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|flag_4(pro:per|it_2,$0)))
example_end

Sent: it 's a pipe ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,n|pipe_4(pro:per|it_1,$0)))
example_end

Sent: looks like a circle .
Sem: lambda $0_{r}.and(cop|look-3s_1(you,$0),prep|like_2(det:art|a_3($1,n|circle_4($1)),$0))
example_end

Sent: let 's put this on the other side .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|put-zero_3(pro:obj|~us_2,pro:dem|this_4,$1),prep|on_5(det:art|the_6($2,and(qn|other_7($2),n|side_8($2))),$1)),$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: oh yes he needs that one .
Sem: lambda $0_{r}.and(and(v|need-3s_4(pro:sub|he_3,pro:dem|that_5($1,pro:indef|one_6($1)),$0),co|oh_1($0)),co|yes_2($0))
example_end

Sent: he needs that .
Sem: lambda $0_{r}.v|need-3s_2(pro:sub|he_1,pro:dem|that_3,$0)
example_end

Sent: I 'll write you a note then you can have one .
Sem: lambda $0_{r}.adv:tem|then_7(mod|can_9(v|have_10(pro:per|you_8,pro:indef|one_11,$0),$0),mod|~will_2(v|write_3(pro:sub|i_1,det:art|a_5($1,n|note_6($1)),pro:per|you_4,$0),$0))
example_end

Sent: you want me to fold it ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.v|fold_5(pro:obj|me_3,pro:per|it_6,$1),$0))
example_end

Sent: yes what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: coat hanger ?
Sem: BARE($0,Q(and_comp(n|coat_1($0),n|hang-dv_2($0))))
example_end

Sent: I can 't see .
Sem: lambda $0_{r}.not(mod|can_2(v|see_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: like penguins ?
Sem: Q(prep|like_1(BARE($0,n|penguin-pl_2($0))))
example_end

Sent: penguins don 't fly do they ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|fly_4(BARE($1,n|penguin-pl_1($1)),$0),$0),$0),mod|do_5(pro:sub|they_6,$0)))
example_end

Sent: they do fly .
Sem: lambda $0_{r}.mod|do_2(v|fly_3(pro:sub|they_1,$0),$0)
example_end

Sent: no they don 't fly I don 't think .
Sem: lambda $0_{r}.not(mod|do_7(v|think_9(pro:sub|i_6,lambda $1_{r}.and(not(mod|do_3(v|fly_5(pro:sub|they_2,$1),$1),$1),co|no_1($1)),$0),$0),$0)
example_end

Sent: no they don 't .
Sem: lambda $0_{r}.and(not(mod|do_3(pro:sub|they_2,$0),$0),co|no_1($0))
example_end

Sent: no he can 't fly like a kite .
Sem: lambda $0_{r}.and(not(mod|can_3(and(n|fly_5(pro:sub|he_2,$0),prep|like_6(det:art|a_7($1,n|kite_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: you did what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(pro:per|you_1,$1,$0)
example_end

Sent: penguins can 't fly .
Sem: lambda $0_{r}.not(mod|can_2(v|fly_4(BARE($1,n|penguin-pl_1($1)),$0),$0),$0)
example_end

Sent: you 're going in the water ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|go-presp_3(pro:per|you_1,$0),prep|in_4(det:art|the_5($1,n|water_6($1)),$0)),$0))
example_end

Sent: in the water ?
Sem: Q(prep|in_1(det:art|the_2($0,n|water_3($0))))
example_end

Sent: cold outside yes .
Sem: lambda $0_{r}.and(and(n|cold_1($0),prep|outside_2($0)),co|yes_3($0))
example_end

Sent: yes the wind 's blowing .
Sem: lambda $0_{r}.and(aux|~be_4(part|blow-presp_5(det:art|the_2($1,n|wind_3($1)),$0),$0),co|yes_1($0))
example_end

Sent: did you see all the snow ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|see_3(pro:per|you_2,adv|all_4(det:art|the_5($1,n|snow_6($1))),$0),$0))
example_end

Sent: drummer show .
Sem: BARE($0,and_comp(n|drum-dv_1($0),n|show_2($0)))
example_end

Sent: oh look up the cowboy 's hat ?
Sem: lambda $0_{r}.Q(and(and(co|look_2(you,$0),prep|up_3(n|cow+boy_5's($1,det:art|the_4($2,n|hat_7($2),$1)),$0)),co|oh_1($0)))
example_end

Sent: didn 't you go out in the snow ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(and(v|go_4(pro:per|you_3,$0),adv|out_5($0)),prep|in_6(det:art|the_7($1,n|snow_8($1)),$0)),$0),$0))
example_end

Sent: you didn 't go for a walk in the snow ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(and(v|go_4(pro:per|you_1,$0),prep|for_5(det:art|a_6($1,n|walk_7($1)),$0)),prep|in_8(det:art|the_9($2,n|snow_10($2)),$0)),$0),$0))
example_end

Sent: did you go over to the library in the snow ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(and(and(v|go_3(pro:per|you_2,$0),adv|over_4($0)),prep|to_5(det:art|the_6($1,n|library_7($1)),$0)),prep|in_8(det:art|the_9($2,n|snow_10($2)),$0)),$0))
example_end

Sent: and ride the elevator ?
Sem: lambda $0_{r}.Q(v|ride_2(you,det:art|the_3($1,n|elevator_4($1)),$0))
example_end

Sent: in the library ?
Sem: Q(prep|in_1(det:art|the_2($0,n|library_3($0))))
example_end

Sent: Daddy took you for a walk ?
Sem: lambda $0_{r}.Q(and(v|take-past_2(n:prop|daddy_1,pro:per|you_3,$0),prep|for_4(det:art|a_5($1,n|walk_6($1)),$0)))
example_end

Sent: did you touch the snow Adam ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|touch_3(pro:per|you_2,det:art|the_4($1,n|snow_5($1)),$0),$0))
example_end

Sent: did you throw some ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|throw_3(pro:per|you_2,qn|some_4,$0),$0))
example_end

Sent: you threw some snow like Joshua ?
Sem: lambda $0_{r}.Q(and(v|throw-past_2(pro:per|you_1,qn|some_3($1,n|snow_4($1)),$0),co|like_5(n:prop|joshua_6,$0)))
example_end

Sent: Joshua throws like a penguin ?
Sem: lambda $0_{r}.Q(and(v|throw-3s_2(n:prop|joshua_1,$0),prep|like_3(det:art|a_4($1,n|penguin_5($1)),$0)))
example_end

Sent: penguins can 't throw can they ?
Sem: lambda $0_{r}.Q(and(not(mod|can_2(v|throw_4(BARE($1,n|penguin-pl_1($1)),$0),$0),$0),mod|can_5(pro:sub|they_6,$0)))
example_end

Sent: yes they are big and heavy .
Sem: lambda $0_{r}.and(adj|heavy_6(pro:sub|they_2,$0),co|yes_1($0))
example_end

Sent: listen to you ?
Sem: lambda $0_{r}.Q(and(v|listen_1(you,$0),prep|to_2(pro:per|you_3,$0)))
example_end

Sent: what are you saying ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|say-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: yes I see you .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,pro:per|you_4,$0),co|yes_1($0))
example_end

Sent: do you see me ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,pro:obj|me_4,$0),$0))
example_end

Sent: it 's how I wonder what you are .
Sem: lambda $0_{r}.aux|~be_2(pro:per|it_1,lambda $1_{r}.and(v|wonder_5(pro:sub|i_4,lambda $2_{r}.pro:int|what_6(pro:per|you_7,$2),$1),adv:int|how_3($1)),$0)
example_end

Sent: oh is that a train whistle ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:rel|that_3,and_comp(n|train_5(pro:rel|that_3,$0),n|whistle_6(pro:rel|that_3,$0))),co|oh_1($0)))
example_end

Sent: what 's its name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|its_3($2,n|name_4($2)),$0)
example_end

Sent: oh it 's a horn .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|horn_5(pro:per|it_2,$0)),co|oh_1($0))
example_end

Sent: that 's what makes it whistle .
Sem: lambda $0_{r}.pro:int|what_3(pro:dem|that_1,$0)
example_end

Sent: there 's a shell on the end .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|shell_4($1)),$0),prep|on_5(det:art|the_6($2,n|end_7($2)),$0))
example_end

Sent: he 's checking his watch .
Sem: lambda $0_{r}.aux|~be_2(part|check-presp_3(pro:sub|he_1,det:poss|his_4($1,n|watch_5($1)),$0),$0)
example_end

Sent: make a noise ?
Sem: lambda $0_{r}.Q(v|make_1(you,det:art|a_2($1,n|noise_3($1)),$0))
example_end

Sent: go and ask Ursula about that .
Sem: lambda $0_{r}.and(v|ask_3(_,_,n:prop|ursula_4,$0),prep|about_5(pro:dem|that_6,$0))
example_end

Sent: what happened to the paper ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|paper_5($2)),$0))
example_end

Sent: what happened Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|happen-past_2($1,$0)
example_end

Sent: no it 's tape .
Sem: lambda $0_{r}.and(n|tape_4(pro:per|it_2,$0),co|no_1($0))
example_end

Sent: oh no she doesn 't need that now .
Sem: lambda $0_{r}.and(and(not(mod|do_4(and(v|need_6(pro:sub|she_3,pro:dem|that_7,$0),adv|now_8($0)),$0),$0),co|oh_1($0)),co|no_2($0))
example_end

Sent: this is a cork .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n|cork_4(pro:dem|this_1,$0))
example_end

Sent: put the cork on the cup .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|cork_3($1)),$0),prep|on_4(det:art|the_5($2,n|cup_6($2)),$0))
example_end

Sent: Adam can you put the cork in the cup ?
Sem: lambda $0_{r}.Q(mod|can_2(and(v|put-zero_4(pro:per|you_3,det:art|the_5($1,n|cork_6($1)),$0),prep|in_7(det:art|the_8($2,n|cup_9($2)),$0)),$0))
example_end

Sent: put the cork on the cup .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|cork_3($1)),$0),prep|on_4(det:art|the_5($2,n|cup_6($2)),$0))
example_end

Sent: can you put it on top of the cup ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|on_5(BARE($1,att(n|top_6($1),prep|of_7(det:art|the_8($2,n|cup_9($2))))),$0)),$0))
example_end

Sent: put the cork on the cup .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|cork_3($1)),$0),prep|on_4(det:art|the_5($2,n|cup_6($2)),$0))
example_end

Sent: Adam put the penny in the cup .
Sem: lambda $0_{r}.and(v|put-zero_2(you,det:art|the_3($1,n|penny_4($1)),$0),prep|in_5(det:art|the_6($2,n|cup_7($2)),$0))
example_end

Sent: put the penny on the cup .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|penny_3($1)),$0),prep|on_4(det:art|the_5($2,n|cup_6($2)),$0))
example_end

Sent: where are the pennies ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|penny-pl_4($1)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you 'd forgotten you had the cap on top .
Sem: lambda $0_{r}.mod|~genmod_2(part|forget-pastp_3(pro:per|you_1,lambda $1_{r}.and(v|have-past_5(pro:per|you_4,det:art|the_6($2,n|cap_7($2)),$1),prep|on_8(BARE($3,n|top_9($3)),$1)),$0),$0)
example_end

Sent: what about turkey pie ?
Sem: att(pro:int|what_1,prep|about_2(BARE($0,and_comp(n|turkey_3($0),n|pie_4($0)))))
example_end

Sent: those are sardines .
Sem: lambda $0_{r}.n|sardine-pl_3(pro:dem|those_1,$0)
example_end

Sent: no not sardines sardines .
Sem: lambda $0_{r}.and(not(BARE($1,n|sardine-pl_4($1)),$0),co|no_1($0))
example_end

Sent: what about turkey pie ?
Sem: att(pro:int|what_1,prep|about_2(BARE($0,and_comp(n|turkey_3($0),n|pie_4($0)))))
example_end

Sent: do you like turkey pie ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,and_comp(n|turkey_4($1),n|pie_5($1))),$0),$0))
example_end

Sent: did you find the penny ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,det:art|the_4($1,n|penny_5($1)),$0),$0))
example_end

Sent: don 't touch .
Sem: lambda $0_{r}.not(mod|do_1(v|touch_3(you,$0),$0),$0)
example_end

Sent: don 't touch that .
Sem: lambda $0_{r}.not(mod|do_1(v|touch_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: it 's going around ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|go-presp_3(pro:per|it_1,$0),adv|around_4($0)),$0))
example_end

Sent: turkey pine go ?
Sem: lambda $0_{r}.Q(v|go_3(BARE($1,and_comp(n|turkey_1($1),n|pine_2($1))),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a star yes .
Sem: lambda $0_{r}.and(det:art|a_1($1,n|star_2($1),$0),co|yes_3($0))
example_end

Sent: all stars don 't belong to Texaco .
Sem: lambda $0_{r}.not(mod|do_3(and(v|belong_5(qn|all_1($1,n|star-pl_2($1)),$0),prep|to_6(n:prop|texaco_7,$0)),$0),$0)
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: apple cider .
Sem: BARE($0,and_comp(n|apple_1($0),n|cider_2($0)))
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: apple cider .
Sem: BARE($0,and_comp(n|apple_1($0),n|cider_2($0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: spider yes .
Sem: lambda $0_{r}.and(meta|spider_1($0),co|yes_2($0))
example_end

Sent: spider in the book ?
Sem: BARE($0,Q(att(n|spider_1($0),prep|in_2(det:art|the_3($1,n|book_4($1))))))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: would you like some cranberry juice ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,qn|some_4($1,and_comp(n|cranberry_5($1),n|juice_6($1))),$0),$0))
example_end

Sent: there 's a shell there .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|shell_4($1)),$0),adv|there_5($0))
example_end

Sent: did you ask Ursula about the shell ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|ask_3(pro:per|you_2,_,n:prop|ursula_4,$0),prep|about_5(det:art|the_6($1,n|shell_7($1)),$0)),$0))
example_end

Sent: the coffee pot ?
Sem: BARE($0,Q(det:art|the_1($1,and_comp(n|coffee_2($1),n|pot_3($1)),$0)))
example_end

Sent: oh is this a train whistle ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:dem|this_3,and_comp(n|train_5(pro:dem|this_3,$0),n|whistle_6(pro:dem|this_3,$0))),co|oh_1($0)))
example_end

Sent: where did you get my thread ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|you_3,det:poss|my_5($1,n|thread_6($1)),$0),$2($0)),$0)
example_end

Sent: where did you get it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: no play with that hurt self .
Sem: lambda $0_{r}.and(qn|no_1($1,att(n|play_2($1),prep|with_3(pro:dem|that_4))),v|hurt-zero_5(you,n|self_6,$0))
example_end

Sent: why will I hurt myself if you won 't hurt yourself ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.conj|if_6(not(mod|will_8(v|hurt-zero_10(pro:per|you_7,pro:refl|yourself_11,$0),$0),$0),mod|will_2(and(v|hurt-zero_4(pro:sub|i_3,pro:refl|myself_5,$0),$1($0)),$0))
example_end

Sent: that 's yours .
Sem: lambda $0_{r}.pro:poss|yours_3(pro:dem|that_1,$0)
example_end

Sent: I 'll hurt myself if I play with your toy .
Sem: lambda $0_{r}.conj|if_5(and(v|play_7(pro:sub|i_6,$0),prep|with_8(det:poss|your_9($1,n|toy_10($1)),$0)),mod|~will_2(v|hurt-zero_3(pro:sub|i_1,pro:refl|myself_4,$0),$0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: play with mommy 's slipper .
Sem: lambda $0_{r}.and(n|play_1(you,$0),prep|with_2(n|mommy_3's($1,n|slipper_5($1)),$0))
example_end

Sent: no that 's a microphone .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|microphone_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: who does ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2($1,$0)
example_end

Sent: oh the dog .
Sem: lambda $0_{r}.and(det:art|the_2($1,n|dog_3($1),$0),co|oh_1($0))
example_end

Sent: the doggie plays with mommy 's slipper ?
Sem: lambda $0_{r}.Q(and(n|play-pl_3(det:art|the_1($1,n|dog-dim_2($1)),$0),prep|with_4(n|mommy_5's($2,n|slipper_7($2)),$0)))
example_end

Sent: big and strong .
Sem: BARE($0,adj|strong_3($0))
example_end

Sent: Cromer is big and strong .
Sem: lambda $0_{r}.adj|strong_5(n:prop|cromer_1,$0)
example_end

Sent: who is Joey ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|joey_3,$0)
example_end

Sent: who does ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2($1,$0)
example_end

Sent: something about feet .
Sem: att(pro:indef|something_1,prep|about_2(BARE($0,n|foot-pl_3($0))))
example_end

Sent: oh you 're playing with the slipper .
Sem: lambda $0_{r}.and(aux|~be_3(and(part|play-presp_4(pro:per|you_2,$0),prep|with_5(det:art|the_6($1,n|slipper_7($1)),$0)),$0),co|oh_1($0))
example_end

Sent: that 's a train .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|train_4(pro:dem|that_1,$0))
example_end

Sent: what happened to the cork Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|cork_5($2)),$0))
example_end

Sent: excuse me .
Sem: lambda $0_{r}.v|excuse_1(you,pro:obj|me_2,$0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: she didn 't say tape recorder .
Sem: lambda $0_{r}.and(not(mod|do_2(v|say_4(pro:sub|she_1,$0),$0),$0),BARE($1,and_comp(n|tape_5($1),n|record-dv_6($1))))
example_end

Sent: she said cork .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|she_1,BARE($1,n|cork_3($1)),$0)
example_end

Sent: part of the tape recorder .
Sem: BARE($0,att(n|part_1($0),prep|of_2(det:art|the_3($1,and_comp(n|tape_4($1),n|record-dv_5($1))))))
example_end

Sent: tape recorder ?
Sem: BARE($0,Q(and_comp(n|tape_1($0),n|record-dv_2($0))))
example_end

Sent: that 's not a taper .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,chi|taper_5(pro:dem|that_1,$0)),$0)
example_end

Sent: it 's a tape recorder .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|tape_4(pro:per|it_1,$0),n|record-dv_5(pro:per|it_1,$0)))
example_end

Sent: this is a microphone .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n|microphone_4(pro:dem|this_1,$0))
example_end

Sent: no that 's tape .
Sem: lambda $0_{r}.and(n|tape_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: you dropped your mittens ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,det:poss|your_3($1,n|mitten-pl_4($1)),$0))
example_end

Sent: you dropped your boots ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,det:poss|your_3($1,n|boot-pl_4($1)),$0))
example_end

Sent: you dropped your mitten ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,det:poss|your_3($1,n|mitten_4($1)),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you dropped your boot ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,det:poss|your_3($1,n|boot_4($1)),$0))
example_end

Sent: who lost their mittens ?
Sem: lambda $1_{e}.lambda $0_{r}.v|lose-past_2($1,det:poss|their_3($2,n|mitten-pl_4($2)),$0)
example_end

Sent: oh you dropped your boots ?
Sem: lambda $0_{r}.Q(and(v|drop-past_3(pro:per|you_2,det:poss|your_4($1,n|boot-pl_5($1)),$0),co|oh_1($0)))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: keep mitten on ?
Sem: lambda $0_{r}.Q(and(v|keep_1(you,BARE($1,n|mitten_2($1)),$0),adv|on_3($0)))
example_end

Sent: careful honey .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: careful of the tape recorder .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: tape recorder ?
Sem: BARE($0,Q(and_comp(n|tape_1($0),n|record-dv_2($0))))
example_end

Sent: oh that 's the mitten ?
Sem: lambda $0_{r}.Q(and(det:art|the_4(pro:dem|that_2,n|mitten_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: whose mitten is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|mitten_2(pro:dem|that_4,$0))
example_end

Sent: little boy sleeping .
Sem: lambda $0_{r}.part|sleep-presp_3(BARE($1,and(adj|little_1($1),n|boy_2($1))),$0)
example_end

Sent: where does the little boy live ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|live_6(det:art|the_3($1,and(adj|little_4($1),n|boy_5($1))),$0),$2($0)),$0)
example_end

Sent: lives in a house .
Sem: BARE($0,att(n|life-pl_1($0),prep|in_2(det:art|a_3($1,n|house_4($1)))))
example_end

Sent: what are you going to do now ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,$2,$1),$0),adv|now_7($0)),$0)
example_end

Sent: oh you dropped your mitten ?
Sem: lambda $0_{r}.Q(and(v|drop-past_3(pro:per|you_2,det:poss|your_4($1,n|mitten_5($1)),$0),co|oh_1($0)))
example_end

Sent: sleeping in the bed .
Sem: lambda $0_{r}.and(part|sleep-presp_1(you,$0),prep|in_2(det:art|the_3($1,n|bed_4($1)),$0))
example_end

Sent: Adam don 't put that back there .
Sem: lambda $0_{r}.not(mod|do_2(and(v|put-zero_4(you,pro:dem|that_5,$0),adv|back_6(adv|there_7($0))),$0),$0)
example_end

Sent: take your wrench out .
Sem: lambda $0_{r}.and(v|take_1(you,det:poss|your_2($1,v|wrench_3($1)),$0),adv|out_4($0))
example_end

Sent: didn 't Daddy say don 't play back there ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|say_4(n:prop|daddy_3,lambda $1_{r}.not(mod|do_5(and(and(v|play_7(you,$1),adv|back_8($1)),adv|there_9($1)),$1),$1),$0),$0),$0))
example_end

Sent: sit here on the side if you want to .
Sem: lambda $0_{r}.conj|if_6(v|want_8(pro:per|you_7,$0),and(v|sit_1(you,$0),adv|here_2($0)))
example_end

Sent: where are your pliers ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|your_3($1,n:pt|pliers_4($1)),$0))
example_end

Sent: you 're sitting on the cord .
Sem: lambda $0_{r}.aux|~be_2(and(part|sit-presp_3(pro:per|you_1,$0),prep|on_4(det:art|the_5($1,n|cord_6($1)),$0)),$0)
example_end

Sent: why do you want to play over there ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.and(v|play_6(pro:per|you_3,$1),adv|over_7(adv|there_8($1))),$0),$2($0)),$0)
example_end

Sent: what do you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: well get down and get it .
Sem: lambda $0_{r}.and(and(v|get_5(you,pro:per|it_6,$0),adv|down_3($0)),co|well_1($0))
example_end

Sent: yes but it 's alright if you drop something .
Sem: lambda $0_{r}.and(conj|if_6(v|drop_8(pro:per|you_7,pro:indef|something_9,$0),adj|alright_5(pro:per|it_3,$0)),co|yes_1($0))
example_end

Sent: poor Adam did you hurt your head ?
Sem: lambda $0_{r}.Q(mod|do-past_3(v|hurt-zero_5(pro:per|you_4,det:poss|your_6($1,n|head_7($1)),$0),$0))
example_end

Sent: can you tell what happened ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tell_3(pro:per|you_2,lambda $1_{r}.v|happen-past_5(pro:int|what_4,$1),$0),$0))
example_end

Sent: what happened to you Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:per|you_4,$0))
example_end

Sent: where is the other part of your train .
Sem: lambda $0_{r}.adv:int|where_1(det:art|the_3($1,att(and(qn|other_4($1),n|part_5($1)),prep|of_6(det:poss|your_7($2,n|train_8($2))))),$0)
example_end

Sent: didn 't you drop your pennies on the floor ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|drop_4(pro:per|you_3,det:poss|your_5($1,n|penny-pl_6($1)),$0),prep|on_7(det:art|the_8($2,n|floor_9($2)),$0)),$0),$0))
example_end

Sent: these are sardines .
Sem: lambda $0_{r}.n|sardine-pl_3(pro:dem|these_1,$0)
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: like sookie .
Sem: co|like_1(chi|sookie_2)
example_end

Sent: running with bread ?
Sem: lambda $0_{r}.Q(and(part|run-presp_1(you,$0),prep|with_2(BARE($1,n|bread_3($1)),$0)))
example_end

Sent: well why don 't you take the bread back out to the kitchen ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(not(mod|do_3(and(and(and(and(v|take_6(pro:per|you_5,det:art|the_7($1,n|bread_8($1)),$0),$2($0)),adv|back_9($0)),adv|out_10($0)),prep|to_11(det:art|the_12($3,n|kitchen_13($3)),$0)),$0),$0),co|well_1($0))
example_end

Sent: you imp .
Sem: lambda $0_{r}.n|imp_2(pro:per|you_1,$0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: oh does it stop for a street light ?
Sem: lambda $0_{r}.Q(and(mod|do-3s_2(and(v|stop_4(pro:per|it_3,$0),prep|for_5(det:art|a_6($1,and_comp(n|street_7($1),n|light_8($1))),$0)),$0),co|oh_1($0)))
example_end

Sent: nine four .
Sem: BARE($0,and_comp(det:num|four_2($0),det:num|nine_1($0)))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: you 'll see what else .
Sem: lambda $0_{r}.mod|~will_2(v|see_3(pro:per|you_1,$0),$0)
example_end

Sent: I 've got a pen .
Sem: lambda $0_{r}.aux|~have_2(part|get-pastp_3(pro:sub|i_1,det:art|a_4($1,n|pen_5($1)),$0),$0)
example_end

Sent: you 've got a pen ?
Sem: lambda $0_{r}.Q(aux|~have_2(part|get-pastp_3(pro:per|you_1,det:art|a_4($1,n|pen_5($1)),$0),$0))
example_end

Sent: would you like a pen ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,n|pen_5($1)),$0),$0))
example_end

Sent: would you like to put him on your finger ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_5(pro:per|you_2,pro:obj|him_6,$1),prep|on_7(det:poss|your_8($2,n|finger_9($2)),$1)),$0),$0))
example_end

Sent: a seal .
Sem: det:art|a_1($0,n|seal_2($0))
example_end

Sent: the seal flies in the water ?
Sem: lambda $0_{r}.Q(and(n|fly-pl_3(det:art|the_1($1,n|seal_2($1)),$0),prep|in_4(det:art|the_5($2,n|water_6($2)),$0)))
example_end

Sent: that 's a little empty jar .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(and(n|jar_6(pro:dem|that_1,$0),adj|little_4(pro:dem|that_1,$0)),adj|empty_5(pro:dem|that_1,$0)))
example_end

Sent: what 's funny about an empty jar ?
Sem: BARE($0,adj|fun-dn_3($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: what are you going to put in the jar ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|put-zero_6(pro:per|you_3,$2,$1),prep|in_7(det:art|the_8($3,n|jar_9($3)),$1)),$0),$0)
example_end

Sent: that 's a paper clip .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|paper_4(pro:dem|that_1,$0),n|clip_5(pro:dem|that_1,$0)))
example_end

Sent: holding all the papers together .
Sem: lambda $0_{r}.and(part|hold-presp_1(you,qn|all_2(det:art|the_3($1,n|paper-pl_4($1))),$0),adv|together_5($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: talking about the lady ?
Sem: lambda $0_{r}.Q(and(part|talk-presp_1(you,$0),prep|about_2(det:art|the_3($1,n|lady_4($1)),$0)))
example_end

Sent: what do seals eat ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_2(v|eat_4(BARE($1,n|seal-pl_3($1)),$2,$0),$0)
example_end

Sent: eat supper ?
Sem: lambda $0_{r}.Q(v|eat_1(you,BARE($1,n|supper_2($1)),$0))
example_end

Sent: what do they have for supper ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:sub|they_3,$1,$0),prep|for_5(BARE($2,n|supper_6($2)),$0)),$0)
example_end

Sent: do they like milk ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:sub|they_2,BARE($1,n|milk_4($1)),$0),$0))
example_end

Sent: it 's not doing anything .
Sem: lambda $0_{r}.not(cop|~be_2(part|do-presp_4(pro:per|it_1,pro:indef|anything_5,$0),$0),$0)
example_end

Sent: see the seal I .
Sem: lambda $0_{r}.v|see_1(you,det:art|the_2($1,n|seal_3($1)),$0)
example_end

Sent: can you say that Adam ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,pro:rel|that_4,$0),$0))
example_end

Sent: can you say that ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: see the seal I .
Sem: lambda $0_{r}.v|see_1(you,det:art|the_2($1,n|seal_3($1)),$0)
example_end

Sent: what can you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: see the seal I .
Sem: lambda $0_{r}.v|see_1(you,det:art|the_2($1,n|seal_3($1)),$0)
example_end

Sent: oh that 's right .
Sem: lambda $0_{r}.and(n|right_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: may I sit here ?
Sem: lambda $0_{r}.Q(mod|may_1(and(v|sit_3(pro:sub|i_2,$0),adv|here_4($0)),$0))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: close eye ?
Sem: lambda $0_{r}.Q(adj|close_1(you,BARE($1,n|eye_2($1)),$0))
example_end

Sent: trash can .
Sem: BARE($0,and_comp(n|trash_1($0),mod|can_2($0)))
example_end

Sent: you dropped it in the trash can .
Sem: lambda $0_{r}.and(v|drop-past_2(pro:per|you_1,pro:per|it_3,$0),prep|in_4(det:art|the_5($1,and_comp(n|trash_6($1),mod|can_7($1))),$0))
example_end

Sent: can you say that Adam you dropped it in the trash can .
Sem: lambda $0_{r}.and(mod|can_1(v|say_3(pro:per|you_2,pro:rel|that_4,$0),$0),and(v|drop-past_7(pro:per|you_6,pro:per|it_8,$0),prep|in_9(det:art|the_10($1,and_comp(n|trash_11($1),mod|can_12($1))),$0)))
example_end

Sent: oh no the top didn 't fall in .
Sem: lambda $0_{r}.and(and(not(mod|do_5(and(v|fall_7(det:art|the_3($1,n|top_4($1)),$0),adv|in_8($0)),$0),$0),co|oh_1($0)),co|no_2($0))
example_end

Sent: where is the top ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|top_4($1)),$0))
example_end

Sent: no the top is on the floor .
Sem: lambda $0_{r}.and(prep|on_5(det:art|the_6($1,n|floor_7($1)),det:art|the_2($2,n|top_3($2)),$0),qn|no_1($0))
example_end

Sent: wears Adam two shirt .
Sem: lambda $0_{r}.v|wear-3s_1(n:prop|adam_2,BARE($1,det:num|two_3(n|shirt_4($1))),$0)
example_end

Sent: go to bed ?
Sem: lambda $0_{r}.Q(and(v|go_1(you,$0),prep|to_2(BARE($1,n|bed_3($1)),$0)))
example_end

Sent: oh you use the pliers to cut flowers .
Sem: lambda $0_{r}.and(v|use_3(pro:per|you_2,lambda $1_{r}.v|cut-zero_7(det:art|the_4($2,n:pt|pliers_5($2)),BARE($3,n|flower-pl_8($3)),$1),$0),co|oh_1($0))
example_end

Sent: where are the pencils ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|pencil-pl_4($1)),$0))
example_end

Sent: where did the pencil go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_5(det:art|the_3($1,n|pencil_4($1)),$0),$2($0)),$0)
example_end

Sent: why are the pencils in the refrigerator ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(prep|in_5(det:art|the_6($2,n|refrigerator_7($2)),det:art|the_3($3,n|pencil-pl_4($3)),$0))
example_end

Sent: one for Adam .
Sem: att(pro:indef|one_1,prep|for_2(n:prop|adam_3))
example_end

Sent: he 's trying his new words out .
Sem: lambda $0_{r}.aux|~be_2(and(part|try-presp_3(pro:sub|he_1,det:poss|his_4($1,and(adj|new_5($1),n|word-pl_6($1))),$0),adv|out_7($0)),$0)
example_end

Sent: has Adam two pencils .
Sem: lambda $0_{r}.aux|have-3s_1(n:prop|adam_2,BARE($1,det:num|two_3(n|pencil-pl_4($1))),$0)
example_end

Sent: oh you wear boots .
Sem: lambda $0_{r}.and(v|wear_3(pro:per|you_2,BARE($1,n|boot-pl_4($1)),$0),co|oh_1($0))
example_end

Sent: in the snow .
Sem: prep|in_1(det:art|the_2($0,n|snow_3($0)))
example_end

Sent: you wear mittens in the snow .
Sem: lambda $0_{r}.and(v|wear_2(pro:per|you_1,BARE($1,n|mitten-pl_3($1)),$0),prep|in_4(det:art|the_5($2,n|snow_6($2)),$0))
example_end

Sent: say do you like ham .
Sem: lambda $0_{r}.and(v|do_2(conj|like_4(pro:per|you_3,BARE($1,n|ham_5($1)),$0),$0),co|say_1($0))
example_end

Sent: go to Ursula 's school .
Sem: lambda $0_{r}.and(v|go_1(you,$0),prep|to_2(n:prop|ursula_3's($1,n|school_5($1)),$0))
example_end

Sent: you mean the microphone fell down ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,lambda $1_{r}.v|fall-past_5_down_6(det:art|the_3($2,n|microphone_4($2)),$1),$0))
example_end

Sent: where is snow mitten ?
Sem: lambda $0_{r}.Q(adv:int|where_1(BARE($1,and_comp(n|snow_3($1),n|mitten_4($1))),$0))
example_end

Sent: they 're in the drawer upstairs .
Sem: lambda $0_{r}.adv|upstairs_6(prep|in_3(det:art|the_4($1,n|drawer_5($1)),pro:sub|they_1,$0))
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: get mittens and hat .
Sem: lambda $0_{r}.v|get_1(you,BARE($1,n|hat_4($1)),$0)
example_end

Sent: where are you going when you get the mittens ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|when_5(v|get_7(pro:per|you_6,det:art|the_8($1,n|mitten-pl_9($1)),$0),aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$2($0)),$0))
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: same color ?
Sem: BARE($0,Q(and(adj|same_1($0),n|color_2($0))))
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: which one is blue ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.adj|blue_4($1($2,pro:indef|one_2($2)),$0)
example_end

Sent: don 't sit on Mr Cromer 's briefcase .
Sem: lambda $0_{r}.not(mod|do_1(and(v|sit_3(you,$0),prep|on_4(n:prop|mr_5_cromer_6's($1,n|briefcase_8($1)),$0)),$0),$0)
example_end

Sent: get up .
Sem: lambda $0_{r}.and(v|get_1(you,$0),adv|up_2($0))
example_end

Sent: who fell down ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|fall-past_2($1,$0),adv|down_3($0))
example_end

Sent: pretty seal .
Sem: BARE($0,and(adj|pretty_1($0),n|seal_2($0)))
example_end

Sent: yes he 's pretty .
Sem: lambda $0_{r}.and(adv|pretty_4(pro:sub|he_2,$0),co|yes_1($0))
example_end

Sent: Adam can you say this throw the big ball you .
Sem: lambda $0_{r}.and(and(mod|can_2(v|say_4(pro:per|you_3,pro:dem|this_5,$0),$0),v|throw_6(you,det:art|the_7($1,and(adj|big_8($1),n|ball_9($1))),$0)),pro:per|you_10)
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: big fire .
Sem: BARE($0,and(adj|big_1($0),n|fire_2($0)))
example_end

Sent: Adam can you say sits in the chair the boy .
Sem: lambda $0_{r}.mod|can_2(v|say_4(pro:per|you_3,lambda $1_{r}.and(v|sit-3s_5(you,$1),prep|in_6(det:art|the_7($2,n|chair_8($2)),$1)),$0),$0)
example_end

Sent: can you say climb the big ladder you .
Sem: lambda $0_{r}.mod|can_1(v|say_3(pro:per|you_2,lambda $1_{r}.v|climb_4(_,det:art|the_5($2,and(adj|big_6($2),n|ladder_7($2))),$1),$0),$0)
example_end

Sent: what 's Catherine doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(n:prop|catherine_3,$1,$0),$0)
example_end

Sent: Catherine 's eye ?
Sem: BARE($0,Q(n:prop|catherine_1's($1,n|eye_3($1),$0)))
example_end

Sent: why taper ?
Sem: lambda $0_{e}.$0(BARE($1,chi|taper_2($1)))
example_end

Sent: you have_to pour the water out .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|pour_4(pro:per|you_1,$1),$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam can you say sits in the boy chair .
Sem: lambda $0_{r}.mod|can_2(v|say_4(pro:per|you_3,lambda $1_{r}.and(v|sit-3s_5(you,$1),prep|in_6(det:art|the_7($2,and_comp(n|boy_8($2),n|chair_9($2))),$1)),$0),$0)
example_end

Sent: can you say goes to school Cromer .
Sem: lambda $0_{r}.mod|can_1(v|say_3(pro:per|you_2,lambda $1_{r}.and(v|go-3s_4(n:prop|cromer_7,$1),prep|to_5(BARE($2,n|school_6($2)),$1)),$0),$0)
example_end

Sent: can you say climb the you big ladder .
Sem: lambda $0_{r}.mod|can_1(v|say_3(pro:per|you_2,lambda $1_{r}.v|climb_4(pro:per|you_6,det:art|the_5($2,and(adj|big_7($2),n|ladder_8($2))),$1),$0),$0)
example_end

Sent: can you say wears two shirts Adam .
Sem: lambda $0_{r}.mod|can_1(v|say_3(pro:per|you_2,lambda $1_{r}.v|wear-3s_4(_,BARE($2,det:num|two_5(n|shirt-pl_6($2))),$1),$0),$0)
example_end

Sent: can you say drives the man busy bulldozer .
Sem: lambda $0_{r}.and(mod|can_1(v|say_3(pro:per|you_2,$0),$0),n|drive-pl_4(det:art|the_5($1,n|man_6($1)),BARE($2,and(adj|busy_7($2),n|bulldoze-dv_8($2))),$0))
example_end

Sent: you mean a street car ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,det:art|a_3($1,and_comp(n|street_4($1),n|car_5($1))),$0))
example_end

Sent: can you say drives the busy bulldozer man .
Sem: lambda $0_{r}.and(mod|can_1(v|say_3(pro:per|you_2,$0),$0),n|drive-pl_4(BARE($1,n|man_8($1)),det:art|the_5($2,and(adj|busy_6($2),n|bulldoze-dv_7($2))),$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: that coffee tastes good .
Sem: lambda $0_{r}.and(v|taste-3s_3(pro:dem|that_1($1,n|coffee_2($1)),$0),adj|good_4($0))
example_end

Sent: do you like coffee ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,n|coffee_4($1)),$0),$0))
example_end

Sent: where 's your coffee ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|your_3($1,n|coffee_4($1)),$0))
example_end

Sent: Adam can you say find the little truck I .
Sem: lambda $0_{r}.mod|can_2(v|say_4(pro:per|you_3,lambda $1_{r}.v|find_5(_,det:art|the_6($2,and(adj|little_7($2),n|truck_8($2))),$1),$0),$0)
example_end

Sent: little fall ?
Sem: BARE($0,Q(and(adj|little_1($0),n|fall_2($0))))
example_end

Sent: does this make a noise when you pour it ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|do-3s_1(v|make_3(pro:dem|this_2,det:art|a_4($1,n|noise_5($1)),$0),$0),and(v|pour_8(pro:per|you_7,pro:per|it_9,$0),$2($0)))
example_end

Sent: what happened to the airplane ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|airplane_5($2)),$0))
example_end

Sent: carry fire ?
Sem: lambda $0_{r}.Q(v|carry_1(you,BARE($1,n|fire_2($1)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: you 're saying no now .
Sem: lambda $0_{r}.aux|~be_2(and(part|say-presp_3(pro:per|you_1,lambda $1_{r}.meta|no_4($1),$0),adv|now_5($0)),$0)
example_end

Sent: Peter Piper picked .
Sem: lambda $0_{r}.v|pick-past_3(n:prop|peter_1_piper_2,$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it sounded like freight .
Sem: lambda $0_{r}.and(v|sound-past_2(pro:per|it_1,$0),co|like_3(BARE($1,n|freight_4($1)),$0))
example_end

Sent: the chair ?
Sem: BARE($0,Q(det:art|the_1($1,n|chair_2($1),$0)))
example_end

Sent: you need a saw .
Sem: lambda $0_{r}.v|need_2(pro:per|you_1,det:art|a_3($1,n|saw_4($1)),$0)
example_end

Sent: you need carpenter 's tools .
Sem: lambda $0_{r}.v|need_2(pro:per|you_1,n|carpenter_3's($1,n|tool-pl_5($1)),$0)
example_end

Sent: what happened to the hammer ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|hammer_5($2)),$0))
example_end

Sent: peekaboo to you .
Sem: lambda $0_{r}.and(v|peekaboo_1(you,$0),prep|to_2(pro:per|you_3,$0))
example_end

Sent: if you want to .
Sem: lambda $0_{r}.v|want_3(pro:per|you_2,$0)
example_end

Sent: where 's the top to it ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,att(adj|top_4($1),prep|to_5(pro:per|it_6))),$0))
example_end

Sent: I see your hammer .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,det:poss|your_3($1,n|hammer_4($1)),$0)
example_end

Sent: show Adam ?
Sem: lambda $0_{r}.n|show_1(_,_,n:prop|adam_2,$0)
example_end

Sent: do you want to sing a song for Ursula and Cromer ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|sing_5(pro:per|you_2,det:art|a_6($2,n|song_7($2)),$1),prep|for_8(n:prop|cromer_11,$1)),$0),$0))
example_end

Sent: don 't stand on the chair .
Sem: lambda $0_{r}.not(mod|do_1(and(v|stand_3(you,$0),prep|on_4(det:art|the_5($1,n|chair_6($1)),$0)),$0),$0)
example_end

Sent: oh it 's an airplane .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|airplane_5(pro:per|it_2,$0)),co|oh_1($0))
example_end

Sent: oh is there a nail there ?
Sem: lambda $0_{r}.Q(and(and(cop|be-3s_2(det:art|a_4($1,n|nail_5($1)),$0),adv|there_6($0)),co|oh_1($0)))
example_end

Sent: I don 't think there is one here .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(cop|be-3s_6(pro:indef|one_7,$1),adv|here_8($1)),$0),$0),$0)
example_end

Sent: don 't get on the chair .
Sem: lambda $0_{r}.not(mod|do_1(and(v|get_3(you,$0),prep|on_4(det:art|the_5($1,n|chair_6($1)),$0)),$0),$0)
example_end

Sent: you 'll break it .
Sem: lambda $0_{r}.mod|~will_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: what did Mommy say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(n:prop|mommy_3,$1,$0),$0)
example_end

Sent: you didn 't hit your nose you hit your mouth .
Sem: lambda $0_{r}.and(not(mod|do_2(v|hit-zero_4(pro:per|you_1,det:poss|your_5($1,n|nose_6($1)),$0),$0),$0),v|hit-zero_8(pro:per|you_7,det:poss|your_9($2,n|mouth_10($2)),$0))
example_end

Sent: I can 't rock in this .
Sem: lambda $0_{r}.not(mod|can_2(and(v|rock_4(pro:sub|i_1,$0),prep|in_5(pro:dem|this_6,$0)),$0),$0)
example_end

Sent: if you sit in that chair .
Sem: lambda $0_{r}.and(v|sit_3(pro:per|you_2,$0),prep|in_4(pro:dem|that_5($1,n|chair_6($1)),$0))
example_end

Sent: poor Ursula 's head ?
Sem: BARE($0,Q(n:prop|ursula_2's($1,and(adj|poor_1($1),n|head_4($1)),$0)))
example_end

Sent: don 't you have something to show her ?
Sem: lambda $0_{r}.not(mod|do_1(v|have_4(pro:per|you_3,pro:indef|something_5,$0),$0),$0)
example_end

Sent: don 't go in her bag .
Sem: lambda $0_{r}.not(mod|do_1(and(v|go_3(you,$0),prep|in_4(det:poss|her_5($1,n|bag_6($1)),$0)),$0),$0)
example_end

Sent: it 's a round disk .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and(n|disk_5(pro:per|it_1,$0),adj|round_4(pro:per|it_1,$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is it Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: fire engine ?
Sem: BARE($0,Q(and_comp(n|fire_1($0),n|engine_2($0))))
example_end

Sent: do you think maybe Robin put that in her bag ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.and(and(v|put-zero_6(n:prop|robin_5,pro:dem|that_7,$1),adv|maybe_4($1)),prep|in_8(det:poss|her_9($2,n|bag_10($2)),$1)),$0),$0))
example_end

Sent: that 's Ursula 's .
Sem: lambda $0_{r}.poss|~s_4(n:prop|ursula_3,pro:dem|that_1,$0)
example_end

Sent: there 's your pencil .
Sem: lambda $0_{r}.cop|~be_2(det:poss|your_3($1,n|pencil_4($1)),$0)
example_end

Sent: talk to Ursula Mommy !
Sem: lambda $0_{r}.and(n|talk_1(you,$0),prep|to_2(n:prop|ursula_3,$0))
example_end

Sent: don 't you have something to tell her ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_4(pro:per|you_3,BARE($1,rel(pro:indef|something_5($1),lambda $2_{r}.v|tell_7(_,_,pro:obj|her_8,$2))),$0),$0),$0))
example_end

Sent: how can she write when you 're on her paper ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|when_5(adv|on_8(det:poss|her_9($1,n|paper_10($1)),pro:per|you_6,$0),mod|can_2(and(v|write_4(pro:sub|she_3,$0),$2($0)),$0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: do you want to see a picture that Robin crayoned ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|see_5(pro:per|you_2,det:art|a_6($2,n|picture_7($2)),$1),$0),$0))
example_end

Sent: Yogi 's riding in the car .
Sem: lambda $0_{r}.aux|~be_2(and(part|ride-presp_3(n:prop|yogi_1,$0),prep|in_4(det:art|the_5($1,n|car_6($1)),$0)),$0)
example_end

Sent: what color is the car ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_4($2,n|car_5($2)),n|color_2(det:art|the_4($2,n|car_5($2)),$0))
example_end

Sent: no that 's a car .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|car_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: what 's on the other side ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),prep|on_3(det:art|the_4($2,and(qn|other_5($2),n|side_6($2))),$0))
example_end

Sent: no that 's not Yogi .
Sem: lambda $0_{r}.and(not(n:prop|yogi_5(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: that 's a disk .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|disk_4(pro:dem|that_1,$0))
example_end

Sent: from a game .
Sem: prep|from_1(det:art|a_2($0,n|game_3($0)))
example_end

Sent: a disk from a game .
Sem: det:art|a_1($0,att(n|disk_2($0),prep|from_3(det:art|a_4($1,n|game_5($1)))))
example_end

Sent: from a game .
Sem: prep|from_1(det:art|a_2($0,n|game_3($0)))
example_end

Sent: part of a game .
Sem: BARE($0,att(n|part_1($0),prep|of_2(det:art|a_3($1,n|game_4($1)))))
example_end

Sent: it 's at his house so he can play with it .
Sem: lambda $0_{r}.co|so_6(mod|can_8(and(v|play_9(pro:sub|he_7,$0),prep|with_10(pro:per|it_11,$0)),$0),prep|at_3(det:poss|his_4($1,n|house_5($1)),pro:per|it_1,$0))
example_end

Sent: David is Ursula 's little boy .
Sem: lambda $0_{r}.n:prop|ursula_3's'(n:prop|david_1,and(n|boy_6(n:prop|david_1,$0),adj|little_5(n:prop|david_1,$0)))
example_end

Sent: were the men clean or dirty ?
Sem: lambda $0_{r}.Q(adj|dirt-dn_6(det:art|the_2($1,n|man-pl_3($1)),$0))
example_end

Sent: he does look like Yogi .
Sem: lambda $0_{r}.v|do-3s_2(and(cop|look_3(pro:sub|he_1,$0),conj|like_4(n:prop|yogi_5,$0)),$0)
example_end

Sent: did you catch water at the game ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|catch_3(pro:per|you_2,BARE($1,n|water_4($1)),$0),prep|at_5(det:art|the_6($2,n|game_7($2)),$0)),$0))
example_end

Sent: boots catch water in the rain ?
Sem: lambda $0_{r}.Q(and(v|catch_2(BARE($1,n|boot-pl_1($1)),BARE($2,n|water_3($2)),$0),prep|in_4(det:art|the_5($3,n|rain_6($3)),$0)))
example_end

Sent: wear mittens in the snow ?
Sem: lambda $0_{r}.Q(and(v|wear_1(you,BARE($1,n|mitten-pl_2($1)),$0),prep|in_3(det:art|the_4($2,n|snow_5($2)),$0)))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: ship boat ?
Sem: BARE($0,Q(and_comp(n|ship_1($0),n|boat_2($0))))
example_end

Sent: oh boat .
Sem: lambda $0_{r}.and(n|boat_2($0),co|oh_1($0))
example_end

Sent: you mean boat ship .
Sem: lambda $0_{r}.adj|mean_2(pro:per|you_1,BARE($1,n|ship_4($1)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's not a pin .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|pin_5(pro:dem|that_1,$0)),$0)
example_end

Sent: look at it .
Sem: lambda $0_{r}.cop|look_1(you,pro:per|it_3_at_2,$0)
example_end

Sent: may I see ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,$0),$0))
example_end

Sent: that 's an orange seed .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|orange_4(pro:dem|that_1,$0),n|seed_5(pro:dem|that_1,$0)))
example_end

Sent: boot funny ?
Sem: lambda $0_{r}.Q(adj|fun-dn_2(BARE($1,n|boot_1($1)),$0))
example_end

Sent: you 're jabbering .
Sem: lambda $0_{r}.aux|~be_2(part|jabber-presp_3(pro:per|you_1,$0),$0)
example_end

Sent: that was a marvelous speech .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|speech_5(pro:dem|that_1,$0),adj|marvelous_4(pro:dem|that_1,$0)))
example_end

Sent: Adam do you remember snow ?
Sem: lambda $0_{r}.Q(v|do_2(v|remember_4(pro:per|you_3,BARE($1,n|snow_5($1)),$0),$0))
example_end

Sent: do you know what snow looks like ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.and(cop|look-3s_6(_,BARE($2,n|snow_5($2)),$1),prep|like_7(pro:int|what_4,$1)),$0),$0))
example_end

Sent: wear mittens in the snow ?
Sem: lambda $0_{r}.Q(and(v|wear_1(you,BARE($1,n|mitten-pl_2($1)),$0),prep|in_3(det:art|the_4($2,n|snow_5($2)),$0)))
example_end

Sent: I don 't wear mittens .
Sem: lambda $0_{r}.not(mod|do_2(v|wear_4(pro:sub|i_1,BARE($1,n|mitten-pl_5($1)),$0),$0),$0)
example_end

Sent: when it snows .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|snow-3s_3(you,$0),$1($0))
example_end

Sent: in the snow .
Sem: prep|in_1(det:art|the_2($0,n|snow_3($0)))
example_end

Sent: where will you go in the snow ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will_2(and(and(v|go_4(pro:per|you_3,$0),$1($0)),prep|in_5(det:art|the_6($2,n|snow_7($2)),$0)),$0)
example_end

Sent: the mittens will go in the snow ?
Sem: lambda $0_{r}.Q(mod|will_3(and(v|go_4(det:art|the_1($1,n|mitten-pl_2($1)),$0),prep|in_5(det:art|the_6($2,n|snow_7($2)),$0)),$0))
example_end

Sent: well where will you go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|will_3(and(v|go_5(pro:per|you_4,$0),$1($0)),$0),co|well_1($0))
example_end

Sent: go in the street ?
Sem: lambda $0_{r}.Q(and(v|go_1(you,$0),prep|in_2(det:art|the_3($1,n|street_4($1)),$0)))
example_end

Sent: can you find the moon ?
Sem: lambda $0_{r}.Q(mod|can_1(v|find_3(pro:per|you_2,det:art|the_4($1,n|moon_5($1)),$0),$0))
example_end

Sent: when did you put the pencil in there ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|put-zero_4(pro:per|you_3,det:art|the_5($1,n|pencil_6($1)),$0),$2($0)),adv|there_8($0)),$0)
example_end

Sent: is it alright ?
Sem: lambda $0_{r}.Q(co|alright_3(pro:per|it_2,$0))
example_end

Sent: you ran into Mr Cromer 's feet .
Sem: lambda $0_{r}.and(v|run-past_2(pro:per|you_1,$0),prep|into_3(n:prop|mr_4_cromer_5's($1,n|foot-pl_7($1)),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: did you hit something .
Sem: lambda $0_{r}.v|do-past_1(v|hit-zero_3(pro:per|you_2,pro:indef|something_4,$0),$0)
example_end

Sent: that 's a round disk .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|disk_5(pro:dem|that_1,$0),adj|round_4(pro:dem|that_1,$0)))
example_end

Sent: round disk .
Sem: BARE($0,and(adj|round_1($0),n|disk_2($0)))
example_end

Sent: no one has thrown it away .
Sem: lambda $0_{r}.aux|have-3s_3(and(part|throw-pastp_4(qn|no_1($1,pro:indef|one_2($1)),pro:per|it_5,$0),adv|away_6($0)),$0)
example_end

Sent: piece of pie ?
Sem: BARE($0,Q(att(n|piece_1($0),prep|of_2(BARE($1,n|pie_3($1))))))
example_end

Sent: can you say thank_you ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,BARE($1,n|thank_you_4($1)),$0),$0))
example_end

Sent: yes she gave it to you .
Sem: lambda $0_{r}.and(and(v|give-past_3(pro:sub|she_2,pro:per|it_4,$0),prep|to_5(pro:per|you_6,$0)),co|yes_1($0))
example_end

Sent: is it an egg ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|egg_4(pro:per|it_2,$0)))
example_end

Sent: that 's not for eating .
Sem: lambda $0_{r}.not(and(cop|~be_2(pro:dem|that_1,$0),prep|for_4(BARE($1,n:gerund|eat-presp_5($1)),$0)),$0)
example_end

Sent: you can open it up .
Sem: lambda $0_{r}.mod|can_2(and(v|open_3(pro:per|you_1,pro:per|it_4,$0),adv|up_5($0)),$0)
example_end

Sent: she said you could open it .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|she_1,lambda $1_{r}.mod|could_4(v|open_5(pro:per|you_3,pro:per|it_6,$1),$1),$0)
example_end

Sent: egg apple ?
Sem: BARE($0,Q(and_comp(n|egg_1($0),n|apple_2($0))))
example_end

Sent: oh is that Christmas ?
Sem: lambda $0_{r}.Q(and(n:prop|christmas_4(pro:rel|that_3,$0),co|oh_1($0)))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you dropped it ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it looks like an egg ?
Sem: lambda $0_{r}.Q(and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,n|egg_5($1)),$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: keep going .
Sem: lambda $0_{r}.v|keep_1(you,BARE($1,n:gerund|go-presp_2($1)),$0)
example_end

Sent: tiny isn 't it ?
Sem: lambda $0_{r}.Q(and(BARE($1,adj|tiny_1($1)),not(cop|be_2(pro:per|it_4,$0),$0)))
example_end

Sent: something broke ?
Sem: lambda $0_{r}.Q(adj|broke_2(pro:indef|something_1,$0))
example_end

Sent: no it didn 't .
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: that looks like something in a box .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:dem|that_1,$0),prep|like_3(BARE($1,att(pro:indef|something_4($1),prep|in_5(det:art|a_6($2,n|box_7($2))))),$0))
example_end

Sent: yes it 's yours .
Sem: lambda $0_{r}.and(pro:poss|yours_4(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: who opened it ?
Sem: lambda $1_{e}.lambda $0_{r}.v|open-past_2($1,pro:per|it_3,$0)
example_end

Sent: you just opened it .
Sem: lambda $0_{r}.and(v|open-past_3(pro:per|you_1,pro:per|it_4,$0),adv|just_2($0))
example_end

Sent: oh you dropped something .
Sem: lambda $0_{r}.and(v|drop-past_3(pro:per|you_2,BARE($1,pro:indef|something_4($1)),$0),co|oh_1($0))
example_end

Sent: you dropped something over there .
Sem: lambda $0_{r}.and(v|drop-past_2(pro:per|you_1,BARE($1,pro:indef|something_3($1)),$0),adv|over_4(adv|there_5($0)))
example_end

Sent: you dropped a pocket book ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,det:art|a_3($1,and_comp(n|pocket_4($1),n|book_5($1))),$0))
example_end

Sent: oh that 's mine ?
Sem: lambda $0_{r}.Q(and(pro:poss|mine_4(pro:dem|that_2,$0),co|oh_1($0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: don 't have it ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_3(you,pro:per|it_4,$0),$0),$0))
example_end

Sent: did you say thank_you to Ursla ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|say_3(pro:per|you_2,BARE($1,co|thank_you_4($1)),$0),prep|to_5(n:prop|ursla_6,$0)),$0))
example_end

Sent: no we don 't eat rattles .
Sem: lambda $0_{r}.and(not(mod|do_3(v|eat_5(pro:sub|we_2,BARE($1,n|rattle-pl_6($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: you like it .
Sem: lambda $0_{r}.v|like_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: you can 't take the top off .
Sem: lambda $0_{r}.not(mod|can_2(and(v|take_4(pro:per|you_1,det:art|the_5($1,n|top_6($1)),$0),adv|off_7($0)),$0),$0)
example_end

Sent: where are you going to put this ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|put-zero_6(pro:per|you_3,pro:dem|this_7,$1),$0),$2($0)),$0)
example_end

Sent: around your neck ?
Sem: Q(prep|around_1(det:poss|your_2($0,n|neck_3($0))))
example_end

Sent: it sticks .
Sem: lambda $0_{r}.v|stick-3s_2(pro:per|it_1,$0)
example_end

Sent: to the truck ?
Sem: Q(prep|to_1(det:art|the_2($0,n|truck_3($0))))
example_end

Sent: where does Mommy keep her pocket book ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|keep_4(n:prop|mommy_3,det:poss|her_5($1,and_comp(n|pocket_6($1),n|book_7($1))),$0),$2($0)),$0)
example_end

Sent: it 's so tiny .
Sem: lambda $0_{r}.adv|so_3(adj|tiny_4(pro:per|it_1,$0))
example_end

Sent: yes I guess it is a dump truck .
Sem: lambda $0_{r}.and(v|guess_3(pro:sub|i_2,lambda $1_{r}.det:art|a_6(pro:per|it_4,and_comp(n|dump_7(pro:per|it_4,$1),n|truck_8(pro:per|it_4,$1))),$0),co|yes_1($0))
example_end

Sent: is that a bear ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|bear_4(pro:rel|that_2,$0)))
example_end

Sent: will it go in there ?
Sem: lambda $0_{r}.Q(mod|will_1(and(v|go_3(pro:per|it_2,$0),prep|in_4(adv|there_5($0))),$0))
example_end

Sent: is that a rocket ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|rocket_4(pro:rel|that_2,$0)))
example_end

Sent: that 's a steam shovel ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,and_comp(n|steam_4(pro:dem|that_1,$0),n|shovel_5(pro:dem|that_1,$0))))
example_end

Sent: the trailer doesn 't fit in there ?
Sem: lambda $0_{r}.Q(not(mod|do_3(and(v|fit-zero_5(det:art|the_1($1,n|trailer_2($1)),$0),adv|in_6(adv|there_7($0))),$0),$0))
example_end

Sent: does it ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(you,pro:per|it_2,$0))
example_end

Sent: I don 't think it does .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: the bus was in the box .
Sem: lambda $0_{r}.and(cop|be-past_3(det:art|the_1($1,n|bus_2($1)),$0),prep|in_4(det:art|the_5($2,n|box_6($2)),$0))
example_end

Sent: was it shaped like an egg ?
Sem: lambda $0_{r}.Q(cop|be-past_1(and(part|shape-pastp_3(pro:per|it_2,$0),prep|like_4(det:art|a_5($1,n|egg_6($1)),$0)),$0))
example_end

Sent: how do you know who did it if you don 't ask ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|if_8(not(mod|do_10(v|ask_12(pro:per|you_9,$0),$0),$0),mod|do_2(and(v|know_4(pro:per|you_3,lambda $1_{r}.mod|do-past_6(pro:rel|who_5,pro:per|it_7,$1),$0),$2($0)),$0))
example_end

Sent: what 's inside ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|inside_3($0))
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: that 's funny .
Sem: lambda $0_{r}.adj|fun-dn_3(pro:dem|that_1,$0)
example_end

Sent: you caught the train ?
Sem: lambda $0_{r}.Q(v|catch-past_2(pro:per|you_1,det:art|the_3($1,n|train_4($1)),$0))
example_end

Sent: that one fits what ?
Sem: lambda $2_{e}.lambda $0_{r}.v|fit-3s_3(pro:dem|that_1($1,pro:indef|one_2($1)),$2,$0)
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: got stuck .
Sem: lambda $0_{r}.v|stick-past_2(you,$0)
example_end

Sent: where did it get stuck ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|stick-past_5(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: from that ?
Sem: Q(prep|from_1(pro:dem|that_2))
example_end

Sent: I can 't do that .
Sem: lambda $0_{r}.not(mod|can_2(v|do_4(pro:sub|i_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: isn 't that tiny ?
Sem: lambda $0_{r}.Q(not(adj|tiny_4(pro:dem|that_3,$0),$0))
example_end

Sent: what size is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|size_2(pro:per|it_4,$0))
example_end

Sent: here 's a tiny letter for your purse .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,att(and(adj|tiny_4($1),n|letter_5($1)),prep|for_6(det:poss|your_7($2,n|purse_8($2))))),$0),pro:exist|here_1($0))
example_end

Sent: I think he was saying something else .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|be-past_4(part|say-presp_5(pro:sub|he_3,post|else_7(BARE($2,pro:indef|something_6($2))),$1),$1),$0)
example_end

Sent: this is mine .
Sem: lambda $0_{r}.pro:poss|mine_3(pro:dem|this_1,$0)
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: you 're welcome Adam .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: by Pablo Picasso .
Sem: prep|by_1(n:prop|picasso_3_pablo_2)
example_end

Sent: don 't fold it ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|fold_3(you,pro:per|it_4,$0),$0),$0))
example_end

Sent: for Mommy .
Sem: conj|for_1(n:prop|mommy_2)
example_end

Sent: for Adam .
Sem: conj|for_1(n:prop|adam_2)
example_end

Sent: for Cromer .
Sem: conj|for_1(n:prop|cromer_2)
example_end

Sent: for Urs .
Sem: conj|for_1(n:prop|ursula_2)
example_end

Sent: for microphone ?
Sem: Q(prep|for_1(BARE($0,n|microphone_2($0))))
example_end

Sent: does the microphone talk ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(n|talk_4(det:art|the_2($1,n|microphone_3($1)),$0),$0))
example_end

Sent: what does it say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: it said talk ?
Sem: lambda $0_{r}.Q(v|say-past_2(pro:per|it_1,BARE($1,n|talk_3($1)),$0))
example_end

Sent: I 'm just putting it here .
Sem: lambda $0_{r}.aux|~be_2(and(and(part|put-presp_4(pro:sub|i_1,pro:per|it_5,$0),adv|just_3($0)),adv|here_6($0)),$0)
example_end

Sent: do you like it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: when you went for a ride in the car .
Sem: lambda $0_{r}.and(v|go-past_3(pro:per|you_2,$0),prep|for_4(det:art|a_5($1,att(n|ride_6($1),prep|in_7(det:art|the_8($2,n|car_9($2))))),$0))
example_end

Sent: where did you go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: you went to Cambridge .
Sem: lambda $0_{r}.and(v|go-past_2(pro:per|you_1,$0),prep|to_3(n:prop|cambridge_4,$0))
example_end

Sent: where else did you go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_3(and(v|go_5(pro:per|you_4,$0),$1($0)),$0)
example_end

Sent: you live at Mommy 's house ?
Sem: lambda $0_{r}.Q(and(v|live_2(pro:per|you_1,$0),prep|at_3(BARE($1,att(n|house_6($1),poss|~s_5(n:prop|mommy_4))),$0)))
example_end

Sent: well where is the house ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(cop|be-3s_3(det:art|the_4($1,n|house_5($1)),$0),$2($0)),co|well_1($0))
example_end

Sent: do you know what street it 's on ?
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.adv|on_8($2($3,n|street_5($3)),pro:per|it_6,$1),$0),$0)
example_end

Sent: Boston University ?
Sem: BARE($0,Q(n:prop|university_2_boston_1($0)))
example_end

Sent: I don 't know what else he said .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|say-past_8(pro:sub|he_7,post|else_6(pro:int|what_5),$1),$0),$0),$0)
example_end

Sent: well what street do you live on ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(v|do_4(v|live_6(pro:per|you_5,$1($2,n|street_3_on_7($2)),$0),$0),co|well_1($0))
example_end

Sent: what did your grandmother get on ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(v|get_5(det:poss|your_3($1,n|mother_4($1)),$2,$0),$0)
example_end

Sent: what did she ride in ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|ride_4(pro:sub|she_3,$1,$0),$0)
example_end

Sent: in an airplane ?
Sem: Q(prep|in_1(det:art|a_2($0,n|airplane_3($0))))
example_end

Sent: ship airplane .
Sem: and(BARE($0,n|ship_1($0)),BARE($1,n|airplane_2($1)))
example_end

Sent: what kind of airplane is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|airplane_4($2)))))
example_end

Sent: where do you see ships ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|see_4(pro:per|you_3,BARE($1,n|ship-pl_5($1)),$0),$2($0)),$0)
example_end

Sent: well what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|well_1($0))
example_end

Sent: a pig !
Sem: det:art|a_1($0,n|pig_2($0))
example_end

Sent: well what does the pig say ?
Sem: lambda $2_{e}.lambda $0_{r}.and(v|do-3s_3(v|say_6(det:art|the_4($1,n|pig_5($1)),$2,$0),$0),co|well_1($0))
example_end

Sent: have you seen a pig ?
Sem: lambda $0_{r}.Q(v|have_1(part|see-pastp_3(pro:per|you_2,det:art|a_4($1,n|pig_5($1)),$0),$0))
example_end

Sent: a real one ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|real_2($1),pro:indef|one_3($1)),$0)))
example_end

Sent: don 't hit anybody with that Adam .
Sem: lambda $0_{r}.not(mod|do_1(and(n|hit_3(you,BARE($1,pro:indef|anybody_4($1)),$0),prep|with_5(det:dem|that_6,$0)),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: for a ball .
Sem: conj|for_1(det:art|a_2($0,n|ball_3($0)))
example_end

Sent: where 's the ball ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|ball_4($1)),$0),$2($0))
example_end

Sent: that 's not a ball .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|ball_5(pro:dem|that_1,$0)),$0)
example_end

Sent: where Mommy lives ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(n|life-pl_3(n:prop|mommy_2,$0),$1($0))
example_end

Sent: the small letter would fit in your purse .
Sem: lambda $0_{r}.mod|will-cond_4(and(part|fit-pastp_5(det:art|the_1($1,and(adj|small_2($1),n|letter_3($1))),$0),prep|in_6(det:poss|your_7($2,n|purse_8($2)),$0)),$0)
example_end

Sent: oh it 's a pocket book .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,and_comp(n|pocket_5(pro:per|it_2,$0),n|book_6(pro:per|it_2,$0))),co|oh_1($0))
example_end

Sent: is it from Rusty ?
Sem: lambda $0_{r}.Q(and(aux|be-3s_1(pro:per|it_2,$0),prep|from_3(n:prop|rusty_4,$0)))
example_end

Sent: what are you blowing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|blow-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: can you blow Urs down ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|blow_3(pro:per|you_2,n:prop|ursula_4,$0),adv|down_5($0)),$0))
example_end

Sent: I don 't believe that .
Sem: lambda $0_{r}.not(mod|do_2(v|believe_4(pro:sub|i_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: the purse fit ?
Sem: lambda $0_{r}.Q(v|fit-zero_3(det:art|the_1($1,n|purse_2($1)),$0))
example_end

Sent: what fits Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|fit-3s_2($1,$0)
example_end

Sent: put the pocket book in ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,det:art|the_2($1,and_comp(n|pocket_3($1),n|book_4($1))),$0),adv|in_5($0)))
example_end

Sent: put it in the pocketbook ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,pro:per|it_2,$0),prep|in_3(det:art|the_4($1,n|pocket+book_5($1)),$0)))
example_end

Sent: oh that 's a saucer .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|saucer_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: what do you have in the saucer ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,$1,$0),prep|in_5(det:art|the_6($2,n|saucer_7($2)),$0)),$0)
example_end

Sent: oh you ate it all up ?
Sem: lambda $0_{r}.Q(and(and(v|eat-past_3(pro:per|you_2,pro:per|it_4,$0),adv|all_5(adv|up_6($0))),co|oh_1($0)))
example_end

Sent: you said you ate it .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.v|eat-past_4(pro:per|you_3,pro:per|it_5,$1),$0)
example_end

Sent: did you eat it all up ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|eat_3(pro:per|you_2,pro:per|it_4,$0),adv|all_5(adv|up_6($0))),$0))
example_end

Sent: it 's still in there ?
Sem: lambda $0_{r}.Q(and(and(cop|~be_2(pro:per|it_1,$0),adv|still_3($0)),prep|in_4(adv|there_5($0))))
example_end

Sent: saucer 's all_gone .
Sem: lambda $0_{r}.adj|all_gone_3(BARE($1,n|saucer_1($1)),$0)
example_end

Sent: it 's right there ?
Sem: lambda $0_{r}.Q(and(cop|~be_2(pro:per|it_1,$0),adv|right_3(adv|there_4($0))))
example_end

Sent: where is right there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(cop|be-3s_2(you,$0),$1($0)),adv|right_3(adv|there_4($0)))
example_end

Sent: oh it travels fast doesn 't it ?
Sem: lambda $0_{r}.Q(and(and(and(v|travel-3s_3(pro:per|it_2,$0),adv|fast_4($0)),not(mod|do_5(pro:per|it_7,$0),$0)),co|oh_1($0)))
example_end

Sent: do you have a new Humpty_Dumpty Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,att(BARE($2,n:prop|humpty_dumpty_6($2)),BARE($3,adj|new_5($3)),$1)),$0),$0))
example_end

Sent: poor Humpty_Dumpty ?
Sem: BARE($0,Q(att(n:prop|humpty_dumpty_2,BARE($1,adj|poor_1($1)),$0)))
example_end

Sent: what 's he doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|do-presp_4(pro:sub|he_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: he 's jumping ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|jump-presp_3(pro:sub|he_1,$0),$0))
example_end

Sent: those are shoes .
Sem: lambda $0_{r}.n|shoe-pl_3(pro:dem|those_1,$0)
example_end

Sent: that 's his tie .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|tie_4(pro:dem|that_1,$0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: poor Humpty_Dumpty ?
Sem: BARE($0,Q(att(n:prop|humpty_dumpty_2,BARE($1,adj|poor_1($1)),$0)))
example_end

Sent: what happened to Humpty_Dumpty ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(n:prop|humpty_dumpty_4,$0))
example_end

Sent: he broke ?
Sem: lambda $0_{r}.Q(adj|broke_2(pro:sub|he_1,$0))
example_end

Sent: how did he break ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|break_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: he broke his leg ?
Sem: lambda $0_{r}.Q(v|break-past_2(pro:sub|he_1,det:poss|his_3($1,n|leg_4($1)),$0))
example_end

Sent: how did he break his leg ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|break_4(pro:sub|he_3,det:poss|his_5($1,n|leg_6($1)),$0),$2($0)),$0)
example_end

Sent: what happened to Humpty_Dumpty ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(n:prop|humpty_dumpty_4,$0))
example_end

Sent: would you like to have a pencil ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|have_5(pro:per|you_2,det:art|a_6($2,n|pencil_7($2)),$1),$0),$0))
example_end

Sent: why didn 't you ask for a pencil ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|ask_5(pro:per|you_4,$0),$1($0)),prep|for_6(det:art|a_7($2,n|pencil_8($2)),$0)),$0),$0)
example_end

Sent: another purse ?
Sem: BARE($0,Q(n|purse_2($0)))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: another what Adam ?
Sem: pro:indef|another_1($0,pro:int|what_2($0))
example_end

Sent: is that a purse ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|purse_4(pro:rel|that_2,$0)))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you don 't use the pencil for screwing do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|use_4(pro:per|you_1,det:art|the_5($1,n|pencil_6($1)),$0),prep|for_7(BARE($2,n:gerund|screw-presp_8($2)),$0)),$0),$0),v|do_9(pro:per|you_10,$0)))
example_end

Sent: where do you write with pencils ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(and(v|write_4(pro:per|you_3,$0),$1($0)),prep|with_5(BARE($2,n|pencil-pl_6($2)),$0)),$0)
example_end

Sent: write on the paper yes .
Sem: lambda $0_{r}.and(and(v|write_1(you,$0),prep|on_2(det:art|the_3($1,n|paper_4($1)),$0)),co|yes_5($0))
example_end

Sent: do you want some paper to write on ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,qn|some_4($1,rel(n|paper_5($1),lambda $2_{r}.and(v|write_7(you,$2),adv|on_8($2)))),$0),$0))
example_end

Sent: well get your screwdriver .
Sem: lambda $0_{r}.and(v|get_2(you,det:poss|your_3($1,n|screw+driver_4($1)),$0),co|well_1($0))
example_end

Sent: do you want Mommy to take the pencil from you ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|take_6(n:prop|mommy_4,det:art|the_7($2,att(n|pencil_8($2),prep|from_9(pro:per|you_10))),$1),$0),$0))
example_end

Sent: hit on the bench .
Sem: lambda $0_{r}.and(v|hit-zero_1(you,$0),prep|on_2(det:art|the_3($1,n|bench_4($1)),$0))
example_end

Sent: not on the microphone .
Sem: not(prep|on_2(det:art|the_3($0,n|microphone_4($0))))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: a drawing what ?
Sem: lambda $0_{r}.Q(pro:int|what_3(det:art|a_1($1,n|drawing_2($1)),$0))
example_end

Sent: you have_to taste that ?
Sem: lambda $0_{r}.Q(mod:aux|have_to_2(v|taste_3(pro:per|you_1,pro:dem|that_4,$0),$0))
example_end

Sent: it tastes like ice ?
Sem: lambda $0_{r}.Q(and(v|taste-3s_2(pro:per|it_1,$0),co|like_3(BARE($1,n|ice+cream_4($1)),$0)))
example_end

Sent: on the wall .
Sem: prep|on_1(det:art|the_2($0,n|wall_3($0)))
example_end

Sent: yes I see it over there .
Sem: lambda $0_{r}.and(and(v|see_3(pro:sub|i_2,pro:per|it_4,$0),adv|over_5(adv|there_6($0))),co|yes_1($0))
example_end

Sent: who write that on that ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|write_2($1,pro:rel|that_3,$0),prep|on_4(pro:dem|that_5,$0))
example_end

Sent: didn 't you do that ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$0),$0))
example_end

Sent: it 's not supposed to fit there is it ?
Sem: lambda $0_{r}.Q(and(not(cop|~be_2(part|suppose-pastp_4(pro:per|it_1,lambda $1_{r}.and(v|fit-zero_6(pro:per|it_1,$1),adv|there_7($1)),$0),$0),$0),cop|be-3s_8(pro:per|it_9,$0)))
example_end

Sent: don 't you have_to use some tape ?
Sem: lambda $0_{r}.Q(not(mod:aux|have_to_4(mod|do_1(v|use_5(pro:per|you_3,qn|some_6($1,n|tape_7($1)),$0),$0),$0),$0))
example_end

Sent: it 's a bus .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|bus_4(pro:per|it_1,$0))
example_end

Sent: can you find the door ?
Sem: lambda $0_{r}.Q(mod|can_1(v|find_3(pro:per|you_2,det:art|the_4($1,n|door_5($1)),$0),$0))
example_end

Sent: did you close it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|close_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: missed it ?
Sem: lambda $0_{r}.Q(v|miss-past_1(you,pro:per|it_2,$0))
example_end

Sent: you take it off .
Sem: lambda $0_{r}.and(v|take_2(pro:per|you_1,pro:per|it_3,$0),adv|off_4($0))
example_end

Sent: you have_to unscrew this .
Sem: lambda $0_{r}.mod:aux|have_to_2(v|screw_3(pro:per|you_1,pro:dem|this_4,$0),$0)
example_end

Sent: another purse ?
Sem: BARE($0,Q(n|purse_2($0)))
example_end

Sent: you do what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_2(pro:per|you_1,$1,$0)
example_end

Sent: you screw it ?
Sem: lambda $0_{r}.Q(v|screw_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: train pull ?
Sem: lambda $0_{r}.Q(v|pull_2(BARE($1,n|train_1($1)),$0))
example_end

Sent: is that a busy bulldozer ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,and(n|bulldoze-dv_5(pro:rel|that_2,$0),adj|busy_4(pro:rel|that_2,$0))))
example_end

Sent: see that little dog looking ?
Sem: lambda $0_{r}.Q(v|see_1(you,lambda $1_{r}.part|look-presp_5(pro:rel|that_2($2,and(adj|little_3($2),n|dog_4($2))),$1),$0))
example_end

Sent: can you see a little dog ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_3(pro:per|you_2,det:art|a_4($1,and(adj|little_5($1),n|dog_6($1))),$0),$0))
example_end

Sent: busy bulldozer ?
Sem: BARE($0,Q(and(adj|busy_1($0),n|bulldoze-dv_2($0))))
example_end

Sent: do you see it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: you can 't see it now .
Sem: lambda $0_{r}.not(mod|can_2(and(v|see_4(pro:per|you_1,pro:per|it_5,$0),adv|now_6($0)),$0),$0)
example_end

Sent: it 's gone down the street .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-pastp_3(pro:per|it_1,$0),prep|down_4(det:art|the_5($1,n|street_6($1)),$0)),$0)
example_end

Sent: pushing dirt ?
Sem: lambda $0_{r}.Q(part|push-presp_1(you,BARE($1,n|dirt_2($1)),$0))
example_end

Sent: no it 's not pushing dirt .
Sem: lambda $0_{r}.and(not(cop|~be_3(part|push-presp_5(pro:per|it_2,BARE($1,n|dirt_6($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: you see it ?
Sem: lambda $0_{r}.Q(v|see_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: I don 't think that 's a derrick .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|a_7(pro:dem|that_5,n|derrick_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: it looks like a crane .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,n|crane_5($1)),$0))
example_end

Sent: Cromer says he thinks it 's a crane .
Sem: lambda $0_{r}.v|say-3s_2(n:prop|cromer_1,lambda $1_{r}.v|think-3s_4(pro:sub|he_3,lambda $2_{r}.aux|~be_6(det:art|a_7(pro:per|it_5,n|crane_8(pro:per|it_5,$2)),$2),$1),$0)
example_end

Sent: I don 't know it went up the street .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|go-past_6(pro:per|it_5,$1),adv|up_7(det:art|the_8($2,n|street_9($2)),$1)),$0),$0),$0)
example_end

Sent: it 's gone to do a job .
Sem: lambda $0_{r}.aux|~be_2(part|go-pastp_3(pro:per|it_1,lambda $1_{r}.v|do_5(pro:per|it_1,det:art|a_6($2,n|job_7($2)),$1),$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: touching your head ?
Sem: lambda $0_{r}.Q(part|touch-presp_1(you,det:poss|your_2($1,n|head_3($1)),$0))
example_end

Sent: on the window ?
Sem: Q(prep|on_1(det:art|the_2($0,n|window_3($0))))
example_end

Sent: do you see Daddy 's car ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,n:prop|daddy_4's($1,n|car_6($1)),$0),$0))
example_end

Sent: he 's gone to church ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|go-pastp_3(pro:sub|he_1,$0),prep|to_4(BARE($1,n|church_5($1)),$0)),$0))
example_end

Sent: no he 's not .
Sem: lambda $0_{r}.and(not(aux|~be_3(pro:sub|he_2,$0),$0),co|no_1($0))
example_end

Sent: yes gone to school .
Sem: lambda $0_{r}.and(and(part|go-pastp_2(you,$0),prep|to_3(BARE($1,n|school_4($1)),$0)),co|yes_1($0))
example_end

Sent: yes gone to school .
Sem: lambda $0_{r}.and(and(part|go-pastp_2(you,$0),prep|to_3(BARE($1,n|school_4($1)),$0)),co|yes_1($0))
example_end

Sent: wait for Miss Monroe ?
Sem: lambda $0_{r}.Q(and(v|wait_1(you,$0),prep|for_2(n:prop|monroe_4_miss_3,$0)))
example_end

Sent: will you read it to me ?
Sem: lambda $0_{r}.Q(mod|will_1(and(v|read-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|to_5(pro:obj|me_6,$0)),$0))
example_end

Sent: a pretty book .
Sem: det:art|a_1($0,and(adj|pretty_2($0),n|book_3($0)))
example_end

Sent: tell me about this one .
Sem: lambda $0_{r}.and(v|tell_1(you,pro:obj|me_2,$0),prep|about_3(pro:dem|this_4($1,pro:indef|one_5($1)),$0))
example_end

Sent: what did the little boy see ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(v|see_6(det:art|the_3($1,and(adj|little_4($1),n|boy_5($1))),$2,$0),$0)
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what else did the little boy see ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_3(v|see_7(det:art|the_4($1,and(adj|little_5($1),n|boy_6($1))),$2,$0),$0)
example_end

Sent: a tree .
Sem: det:art|a_1($0,n|tree_2($0))
example_end

Sent: a tree barn ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|tree_2($1),n|barn_3($1)),$0)))
example_end

Sent: is this a tree barn ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|this_2,and_comp(n|tree_4(pro:dem|this_2,$0),n|barn_5(pro:dem|this_2,$0))))
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: a sunny day ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|sun-dn_2($1),n|day_3($1)),$0)))
example_end

Sent: and this ?
Sem: BARE($0,Q(pro:dem|this_2($0)))
example_end

Sent: under the hay ?
Sem: Q(prep|under_1(det:art|the_2($0,n|hay_3($0))))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: the children going up ?
Sem: lambda $0_{r}.Q(and(part|go-presp_3(det:art|the_1($1,n|child-pl_2($1)),$0),adv|up_4($0)))
example_end

Sent: the boy is sitting on the chimney .
Sem: lambda $0_{r}.aux|be-3s_3(and(part|sit-presp_4(det:art|the_1($1,n|boy_2($1)),$0),prep|on_5(det:art|the_6($2,n|chimney_7($2)),$0)),$0)
example_end

Sent: he 's getting off ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|get-presp_3(pro:sub|he_1,$0),prep|off_4($0)),$0))
example_end

Sent: it 's very funny .
Sem: lambda $0_{r}.adv|very_3(adj|fun-dn_4(pro:per|it_1,$0))
example_end

Sent: what happened to the house ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|house_5($2)),$0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: you want to go up ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|go_4(pro:per|you_1,$1),adv|up_5($1)),$0))
example_end

Sent: kitty laughing at you ?
Sem: lambda $0_{r}.Q(and(part|laugh-presp_2(n|kitty_1,$0),prep|at_3(pro:per|you_4,$0)))
example_end

Sent: a white balloon ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|white_2($1),n|balloon_3($1)),$0)))
example_end

Sent: what 's this one ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3($2,pro:indef|one_4($2)),$0)
example_end

Sent: use the eraser on the pencil .
Sem: lambda $0_{r}.v|use_1(you,det:art|the_2($1,att(n|erase-dv_3($1),prep|on_4(det:art|the_5($2,n|pencil_6($2))))),$0)
example_end

Sent: where 's the water ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|water_4($1)),$0),$2($0))
example_end

Sent: did you ever see a barn in the water ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(and(v|see_4(pro:per|you_2,det:art|a_5($1,n|barn_6($1)),$0),adv|ever_3($0)),prep|in_7(det:art|the_8($2,n|water_9($2)),$0)),$0))
example_end

Sent: and what does he say ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_3(v|say_5(pro:sub|he_4,$1,$0),$0)
example_end

Sent: and what does he say ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_3(v|say_5(pro:sub|he_4,$1,$0),$0)
example_end

Sent: the barn is going up .
Sem: lambda $0_{r}.aux|be-3s_3(and(part|go-presp_4(det:art|the_1($1,n|barn_2($1)),$0),adv|up_5($0)),$0)
example_end

Sent: something funny ?
Sem: lambda $0_{r}.Q(adj|fun-dn_2(pro:indef|something_1,$0))
example_end

Sent: a tree can 't dance can it ?
Sem: lambda $0_{r}.Q(and(not(mod|can_3(n|dance_5(det:art|a_1($1,n|tree_2($1)),$0),$0),$0),mod|can_6(pro:per|it_7,$0)))
example_end

Sent: did you ever see a tree dancing ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|see_4(pro:per|you_2,det:art|a_5($1,and(n|tree_6($1),lambda $2_{r}.part|dance-presp_7(_,$1,$2))),$0),adv|ever_3($0)),$0))
example_end

Sent: can a house fly ?
Sem: lambda $0_{r}.Q(mod|can_1(n|fly_4(det:art|a_2($1,n|house_3($1)),$0),$0))
example_end

Sent: can a barn sail ?
Sem: lambda $0_{r}.Q(mod|can_1(n|sail_4(det:art|a_2($1,n|barn_3($1)),$0),$0))
example_end

Sent: can a tree dance ?
Sem: lambda $0_{r}.Q(mod|can_1(n|dance_4(det:art|a_2($1,n|tree_3($1)),$0),$0))
example_end

Sent: a mouse can 't read his mail .
Sem: lambda $0_{r}.not(mod|can_3(v|read-zero_5(det:art|a_1($1,n|mouse_2($1)),det:poss|his_6($2,n|mail_7($2)),$0),$0),$0)
example_end

Sent: the monkey can 't skip rope with his tail ?
Sem: lambda $0_{r}.Q(not(mod|can_3(and(n|skip_5(det:art|the_1($1,n|monkey_2($1)),BARE($2,n|rope_6($2)),$0),prep|with_7(det:poss|his_8($3,n|tail_9($3)),$0)),$0),$0))
example_end

Sent: who 's reading the mail ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|read-presp_3($1,det:art|the_4($2,n|mail_5($2)),$0),$0)
example_end

Sent: where 's the cat ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|cat_4($1)),$0),$2($0))
example_end

Sent: he looks like a mouse .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:sub|he_1,$0),prep|like_3(det:art|a_4($1,n|mouse_5($1)),$0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is the elephant doing ?
Sem: lambda $2_{e}.lambda $0_{r}.cop|be-3s_2(part|do-presp_5(det:art|the_3($1,n|elephant_4($1)),$2,$0),$0)
example_end

Sent: skipping like a monkey ?
Sem: lambda $0_{r}.Q(and(part|skip-presp_1(you,$0),prep|like_2(det:art|a_3($1,n|monkey_4($1)),$0)))
example_end

Sent: the kitty 's reading the mail .
Sem: lambda $0_{r}.aux|~be_3(part|read-presp_4(det:art|the_1($1,n|kitty_2($1)),det:art|the_5($2,n|mail_6($2)),$0),$0)
example_end

Sent: is this mail ?
Sem: lambda $0_{r}.Q(n|mail_3(pro:dem|this_2,$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: dries his eye .
Sem: lambda $0_{r}.v|dry-3s_1(you,det:poss|his_2($1,n|eye_3($1)),$0)
example_end

Sent: turtle make what ?
Sem: lambda $2_{e}.lambda $0_{r}.v|make_2(BARE($1,n|turtle_1($1)),$2,$0)
example_end

Sent: the turtle makes a mud pie .
Sem: lambda $0_{r}.v|make-3s_3(det:art|the_1($1,n|turtle_2($1)),det:art|a_4($2,and_comp(n|mud_5($2),n|pie_6($2))),$0)
example_end

Sent: and what did he see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:sub|he_4,$1,$0),$0)
example_end

Sent: don 't like what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_1(v|like_3(you,$1,$0),$0),$0)
example_end

Sent: which one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,pro:indef|one_2($1))
example_end

Sent: you like this page ?
Sem: lambda $0_{r}.Q(v|like_2(pro:per|you_1,pro:dem|this_3($1,n|page_4($1)),$0))
example_end

Sent: the turtle making mud pies ?
Sem: lambda $0_{r}.Q(part|make-presp_3(det:art|the_1($1,n|turtle_2($1)),BARE($2,and_comp(n|mud_4($2),n|pie-pl_5($2))),$0))
example_end

Sent: the cat ?
Sem: BARE($0,Q(det:art|the_1($1,n|cat_2($1),$0)))
example_end

Sent: the cat ?
Sem: BARE($0,Q(det:art|the_1($1,n|cat_2($1),$0)))
example_end

Sent: who put a mud pie ?
Sem: lambda $1_{e}.lambda $0_{r}.v|put-zero_2($1,det:art|a_3($2,and_comp(n|mud_4($2),n|pie_5($2))),$0)
example_end

Sent: do you like that page ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,pro:dem|that_4($1,n|page_5($1)),$0),$0))
example_end

Sent: with the bunny rabbit .
Sem: prep|with_1(det:art|the_2($0,and_comp(n|bunny_3($0),n|rabbit_4($0))))
example_end

Sent: what does it say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: would you like to draw ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|draw_5(pro:per|you_2,$1),$0),$0))
example_end

Sent: go where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|go_1(you,$0),$1($0))
example_end

Sent: who gave that book to you ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|give-past_2($1,pro:dem|that_3($2,n|book_4($2)),$0),prep|to_5(pro:per|you_6,$0))
example_end

Sent: mud pies ?
Sem: BARE($0,Q(and_comp(n|mud_1($0),n|pie-pl_2($0))))
example_end

Sent: who makes mud pies ?
Sem: lambda $1_{e}.lambda $0_{r}.v|make-3s_2($1,BARE($2,and_comp(n|mud_3($2),n|pie-pl_4($2))),$0)
example_end

Sent: and who else ?
Sem: post|else_3(pro:int|who_2)
example_end

Sent: who reads his mail ?
Sem: lambda $1_{e}.lambda $0_{r}.v|read-3s_2($1,det:poss|his_3($2,n|mail_4($2)),$0)
example_end

Sent: well who counts his money ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|count-3s_3($1,det:poss|his_4($2,n|money_5($2)),$0),co|well_1($0))
example_end

Sent: poor Mommy what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(att(n:prop|mommy_2,BARE($2,adj|poor_1($2))),$0)
example_end

Sent: where are the other parts ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-pres_2(det:art|the_3($1,and(qn|other_4($1),n|part-pl_5($1))),$0),$2($0))
example_end

Sent: part of the train .
Sem: BARE($0,att(n|part_1($0),prep|of_2(det:art|the_3($1,n|train_4($1)))))
example_end

Sent: do you have a screwdriver ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|screw+driver_5($1)),$0),$0))
example_end

Sent: you made it ?
Sem: lambda $0_{r}.Q(v|make-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: make a ship ?
Sem: lambda $0_{r}.Q(v|make_1(you,det:art|a_2($1,n|ship_3($1)),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: where is the train going ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|go-presp_5(det:art|the_3($1,n|train_4($1)),$0),$2($0)),$0)
example_end

Sent: don 't see it .
Sem: lambda $0_{r}.not(mod|do_1(v|see_3(you,pro:per|it_4,$0),$0),$0)
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that fell out .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:rel|that_1,$0),adv|out_3($0))
example_end

Sent: that one fell out .
Sem: lambda $0_{r}.and(v|fall-past_3(pro:dem|that_1($1,pro:indef|one_2($1)),$0),adv|out_4($0))
example_end

Sent: grandmother rode in one like that ?
Sem: lambda $0_{r}.Q(and(v|ride-past_2(n|mother_1,$0),prep|in_3(att(det:num|one_4,prep|like_5(pro:dem|that_6)),$0)))
example_end

Sent: she rode in one like that ?
Sem: lambda $0_{r}.Q(and(v|ride-past_2(pro:sub|she_1,$0),prep|in_3(att(det:num|one_4,prep|like_5(pro:dem|that_6)),$0)))
example_end

Sent: did you see her get on the airplane ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,lambda $1_{r}.v|get_5_on_6(det:poss|her_4,det:art|the_7($2,n|airplane_8($2)),$1),$0),$0))
example_end

Sent: going back where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(part|go-presp_1(you,$0),adv|back_2($0)),$1($0))
example_end

Sent: going back where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(part|go-presp_1(you,$0),adv|back_2($0)),$1($0))
example_end

Sent: the airplane ?
Sem: BARE($0,Q(det:art|the_1($1,n|airplane_2($1),$0)))
example_end

Sent: poor Urs !
Sem: att(n:prop|ursula_2,BARE($0,adj|poor_1($0)))
example_end

Sent: don 't run it on him .
Sem: lambda $0_{r}.not(mod|do_1(and(v|run_3(you,pro:per|it_4,$0),prep|on_5(pro:obj|him_6,$0)),$0),$0)
example_end

Sent: he 's too tiny .
Sem: lambda $0_{r}.adv|too_3(adj|tiny_4(pro:sub|he_1,$0))
example_end

Sent: put it on the floor .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|floor_5($1)),$0))
example_end

Sent: no that doesn 't come off .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|come_5(pro:dem|that_2,$0),adv|off_6($0)),$0),$0),qn|no_1($0))
example_end

Sent: that 's a kitten ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,n|kitten_4(pro:dem|that_1,$0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: don 't go back where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_1(and(and(v|go_3(you,$0),adv|back_4($0)),$1($0)),$0),$0)
example_end

Sent: see if that fits in your tiny purse .
Sem: lambda $0_{r}.v|see_1(you,lambda $1_{r}.and(v|fit-3s_4(pro:dem|that_3,$1),prep|in_5(det:poss|your_6($2,and(adj|tiny_7($2),n|purse_8($2))),$1)),$0)
example_end

Sent: where did you get that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: you found it downtown .
Sem: lambda $0_{r}.and(v|find-past_2(pro:per|you_1,pro:per|it_3,$0),adv|downtown_4($0))
example_end

Sent: what is it Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: the button dropped Adam .
Sem: lambda $0_{r}.v|drop-past_3(det:art|the_1($1,n|button_2($1)),$0)
example_end

Sent: Adam what did you see at the airport ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(and(v|see_5(pro:per|you_4,$1,$0),prep|at_6(det:art|the_7($2,n|airport_8($2)),$0)),$0)
example_end

Sent: where did Grandmother go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(n:prop|grandmother_3,$0),$1($0)),$0)
example_end

Sent: it must be almost time .
Sem: lambda $0_{r}.mod|must_2(cop|be_3(adv|almost_4(BARE($1,n|time_5($1))),$0),$0)
example_end

Sent: how do you know what time it is .
Sem: lambda $4_{<r,t>}.lambda $2_{<<e,e>,e>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,lambda $1_{r}.cop|be-3s_8(_,$2($3,n|time_6($3)),$1),$0),$4($0)),$0)
example_end

Sent: can you tell time ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tell_3(pro:per|you_2,BARE($1,n|time_4($1)),$0),$0))
example_end

Sent: one two three .
Sem: BARE($0,det:num|one_1($0))
example_end

Sent: mhm piece of paper .
Sem: lambda $0_{r}.and(att(n|piece_2($0),prep|of_3(BARE($1,n|paper_4($1)))),co|yes_1($0))
example_end

Sent: do you want to give one to Cromer ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|give_5(pro:per|you_2,det:num|one_6,$1),prep|to_7(n:prop|cromer_8,$1)),$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: now what are you drawing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(and(n|drawing_5(pro:per|you_4,$1,$0),adv|now_1($0)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:dem|that_1,$1(pro:dem|that_1,$0))
example_end

Sent: baby pig ?
Sem: BARE($0,Q(and_comp(n|baby_1($0),n|pig_2($0))))
example_end

Sent: the other was a cow I think .
Sem: det:art|a_4($0,n|cow_5($0))
example_end

Sent: moo cow .
Sem: lambda $0_{r}.and(v|moo_1($0),BARE($1,n|cow_2($1)))
example_end

Sent: is that an animal ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|animal_4(pro:rel|that_2,$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: where does it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: the pencils are coming .
Sem: lambda $0_{r}.aux|be-pres_3(part|come-presp_4(det:art|the_1($1,n|pencil-pl_2($1)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: did you draw a cow before ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|draw_3(pro:per|you_2,det:art|a_4($1,n|cow_5($1)),$0),adv|before_6($0)),$0))
example_end

Sent: look somebody find something .
Sem: lambda $0_{r}.cop|look_1(you,lambda $1_{r}.v|find_3(pro:indef|somebody_2,pro:indef|something_4,$1),$0)
example_end

Sent: push that there ?
Sem: lambda $0_{r}.Q(and(n|push_1(you,pro:rel|that_2,$0),adv|there_3($0)))
example_end

Sent: you can push it up there .
Sem: lambda $0_{r}.mod|can_2(and(v|push_3(pro:per|you_1,pro:per|it_4,$0),adv|up_5(adv|there_6($0))),$0)
example_end

Sent: blow nose ?
Sem: lambda $0_{r}.Q(n|blow_1(you,BARE($1,n|nose_2($1)),$0))
example_end

Sent: his nose won 't squeak !
Sem: lambda $0_{r}.not(mod|will_3(v|squeak_5(det:poss|his_1($1,n|nose_2($1)),$0),$0),$0)
example_end

Sent: her nose won 't squeak either .
Sem: lambda $0_{r}.not(mod|will_3(and(v|squeak_5(det:poss|her_1($1,n|nose_2($1)),$0),adv|either_6($0)),$0),$0)
example_end

Sent: Adam no honey .
Sem: lambda $0_{r}.qn|no_2($0)
example_end

Sent: let 's hear your nose squeak .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|hear_3(pro:obj|~us_2,det:poss|your_4($2,and_comp(n|nose_5($2),n|squeak_6($2))),$1),$0)
example_end

Sent: Adam no his nose doesn 't squeak .
Sem: lambda $0_{r}.and(not(mod|do_5(v|squeak_7(det:poss|his_3($1,n|nose_4($1)),$0),$0),$0),qn|no_2($0))
example_end

Sent: down cheek ?
Sem: Q(n|down_1(BARE($0,n|cheek_2($0))))
example_end

Sent: Adam play ?
Sem: lambda $0_{r}.Q(n|play_2(n:prop|adam_1,$0))
example_end

Sent: not write ride .
Sem: lambda $0_{r}.not(v|write_2(you,BARE($1,n|ride_3($1)),$0),$0)
example_end

Sent: taxi car and what else ?
Sem: BARE($0,Q(att(BARE($1,and_comp(n|taxi_1($1),pro:int|what_4($1))),BARE($2,post|else_5($2)),$0)))
example_end

Sent: Bozo Popeye ?
Sem: BARE($0,Q(n:prop|bozo_1_popeye_2($0)))
example_end

Sent: have some chocolate ?
Sem: lambda $0_{r}.Q(v|have_1(you,qn|some_2($1,n|chocolate_3($1)),$0))
example_end

Sent: chocolate in there ?
Sem: BARE($0,Q(adv|there_3(BARE($1,n|chocolate_1($1)),$0)))
example_end

Sent: have some drink it ?
Sem: lambda $0_{r}.Q(v|have_1(you,qn|some_2($1,n|drink_3($1)),$0))
example_end

Sent: play squirrel .
Sem: BARE($0,and_comp(n|play_1($0),n|squirrel_2($0)))
example_end

Sent: Adam where were the squirrels playing ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.cop|be-past_3(and(part|play-presp_6(det:art|the_4($1,n|squirrel-pl_5($1)),$0),$2($0)),$0)
example_end

Sent: oh what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: you went with Daddy on the airplane ?
Sem: lambda $0_{r}.Q(and(and(v|go-past_2(pro:per|you_1,$0),prep|with_3(n:prop|daddy_4,$0)),prep|on_5(det:art|the_6($1,n|airplane_7($1)),$0)))
example_end

Sent: did you have a seat belt ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|have_3(pro:per|you_2,det:art|a_4($1,and_comp(n|seat_5($1),n|belt_6($1))),$0),$0))
example_end

Sent: the airplane was ready yes .
Sem: lambda $0_{r}.and(adj|ready_4(det:art|the_1($1,n|airplane_2($1)),$0),co|yes_5($0))
example_end

Sent: put no shoes on ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,qn|no_2($1,n|shoe-pl_3($1)),$0),adv|on_4($0)))
example_end

Sent: snow suit .
Sem: BARE($0,and_comp(n|snow_1($0),n|suit_2($0)))
example_end

Sent: oh you put your snow suit on .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:per|you_2,det:poss|your_4($1,and_comp(n|snow_5($1),n|suit_6($1))),$0),adv|on_7($0)),co|oh_1($0))
example_end

Sent: what else do you remember about the airplane ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|remember_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: tickling again ?
Sem: lambda $0_{r}.Q(and(part|tickle-presp_1(you,$0),adv|again_2($0)))
example_end

Sent: do you remember what was going around and around on the airplane ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,lambda $1_{r}.aux|be-past_5(and(and(part|go-presp_6(pro:int|what_4,$1),adv|around_9($1)),prep|on_10(det:art|the_11($2,n|airplane_12($2)),$1)),$1),$0),$0))
example_end

Sent: you knocked it off .
Sem: lambda $0_{r}.and(v|knock-past_2(pro:per|you_1,pro:per|it_3,$0),adv|off_4($0))
example_end

Sent: what did you did ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do-past_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: Adam did .
Sem: lambda $0_{r}.v|do-past_2(n:prop|adam_1,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: nothing you have it in your hand .
Sem: lambda $0_{r}.and(and(v|have_3(pro:per|you_2,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|hand_7($1)),$0)),pro:indef|nothing_1)
example_end

Sent: why don 't you give it back to Mr Cromer ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(v|give_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),adv|back_7($0)),prep|to_8(n:prop|mr_9_cromer_10,$0)),$0),$0)
example_end

Sent: who brought that ?
Sem: lambda $1_{e}.lambda $0_{r}.v|bring-past_2($1,pro:dem|that_3,$0)
example_end

Sent: Ursula brought that .
Sem: lambda $0_{r}.v|bring-past_2(n:prop|ursula_1,pro:dem|that_3,$0)
example_end

Sent: after supper ball .
Sem: prep|after_1(BARE($0,and_comp(n|supper_2($0),n|ball_3($0))))
example_end

Sent: careful Adam you don 't throw the ball when Ursula 's not looking .
Sem: lambda $0_{r}.and(not(conj|when_9(not(poss|~s_11(part|look-presp_13(n:prop|ursula_10,$0),$0),$0),mod|do_4(v|throw_6(pro:per|you_3,det:art|the_7($1,n|ball_8($1)),$0),$0)),$0),co|careful_1($0))
example_end

Sent: what 's the name of that book ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,att(n|name_4($2),prep|of_5(pro:dem|that_6($3,n|book_7($3))))),$0)
example_end

Sent: bumble bee ?
Sem: BARE($0,Q(n|bee_2_bumble_1($0)))
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: the sun fall down ?
Sem: lambda $0_{r}.Q(and(n|fall_3(det:art|the_1($1,n|sun_2($1)),$0),adv|down_4($0)))
example_end

Sent: well yes it looks like it .
Sem: lambda $0_{r}.and(and(and(cop|look-3s_4(_,pro:per|it_3,$0),prep|like_5(pro:per|it_6,$0)),co|well_1($0)),co|yes_2($0))
example_end

Sent: eating supper ?
Sem: lambda $0_{r}.Q(part|eat-presp_1(you,BARE($1,n|supper_2($1)),$0))
example_end

Sent: do you remember what they 're having for supper ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,lambda $1_{r}.aux|~be_6(and(part|have-presp_7(pro:sub|they_5,pro:int|what_4,$1),prep|for_8(BARE($2,n|supper_9($2)),$1)),$1),$0),$0))
example_end

Sent: not cranberries .
Sem: neg|not_1($0,n|cranberry-pl_2($0))
example_end

Sent: kitty 's foot .
Sem: n|kitty_1's($0,n|foot_3($0))
example_end

Sent: it 's a kitty .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|kitty_4(pro:per|it_1,$0))
example_end

Sent: the pants ?
Sem: BARE($0,Q(det:art|the_1($1,n:pt|pants_2($1),$0)))
example_end

Sent: that 's a kitty 's foot .
Sem: lambda $0_{r}.att(n|foot_6(pro:dem|that_1,$0),poss|~s_5(det:art|a_3($1,n|kitty_4($1))))
example_end

Sent: those are his paws .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|those_1,n|paw-pl_4(pro:dem|those_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: paper towels .
Sem: lambda $0_{r}.v|towel-3s_2(BARE($1,n|paper_1($1)),$0)
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: fell down .
Sem: lambda $0_{r}.and(v|fall-past_1(you,$0),adv|down_2($0))
example_end

Sent: I see some pennies that you dropped from your pocket .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,qn|some_3($1,n|penny-pl_4($1)),$0)
example_end

Sent: pennies in there ?
Sem: BARE($0,Q(adv|there_3(BARE($1,n|penny-pl_1($1)),$0)))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: I see some pennies on the floor .
Sem: lambda $0_{r}.and(v|see_2(pro:sub|i_1,qn|some_3($1,n|penny-pl_4($1)),$0),prep|on_5(det:art|the_6($2,n|floor_7($2)),$0))
example_end

Sent: you dropped them .
Sem: lambda $0_{r}.v|drop-past_2(pro:per|you_1,pro:obj|them_3,$0)
example_end

Sent: do have a penny in there ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_2(you,det:art|a_3($1,n|penny_4($1)),$0),adv|there_6($0)),$0))
example_end

Sent: go in there windmill ?
Sem: lambda $0_{r}.Q(and(v|go_1(you,$0),adv|there_3(prep|in_2(BARE($1,n|windmill_4($1)),$0))))
example_end

Sent: that 's not windmill .
Sem: lambda $0_{r}.not(n|windmill_4(pro:dem|that_1,$0),$0)
example_end

Sent: what happened to this one ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:dem|this_4($2,pro:indef|one_5($2)),$0))
example_end

Sent: don 't tear the paper Adam .
Sem: lambda $0_{r}.not(mod|do_1(v|tear_3(you,det:art|the_4($1,n|paper_5($1)),$0),$0),$0)
example_end

Sent: I think they dropped on the floor .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|drop-past_4(pro:sub|they_3,$1),prep|on_5(det:art|the_6($2,n|floor_7($2)),$1)),$0)
example_end

Sent: did you see one ?
Sem: lambda $0_{r}.Q(v|see_3(pro:per|you_2,BARE($1,pro:indef|one_4($1)),$0))
example_end

Sent: you dropped it ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: Adam I thought you were to write on the other side while he 's writing on that side .
Sem: lambda $0_{r}.v|think-past_3(pro:sub|i_2,lambda $1_{r}.conj|while_12(aux|~be_14(and(part|write-presp_15(pro:sub|he_13,$1),prep|on_16(pro:dem|that_17($2,n|side_18($2)),$1)),$1),aux|be-past_5(and(v|write_7(pro:per|you_4,$1),prep|on_8(det:art|the_9($3,and(qn|other_10($3),n|side_11($3))),$1)),$1)),$0)
example_end

Sent: you write on the other side .
Sem: lambda $0_{r}.and(v|write_2(pro:per|you_1,$0),prep|on_3(det:art|the_4($1,and(qn|other_5($1),n|side_6($1))),$0))
example_end

Sent: yes that 's your side .
Sem: lambda $0_{r}.and(det:poss|your_4(pro:dem|that_2,n|side_5(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: no that 's Mr Cromer 's side .
Sem: lambda $0_{r}.and(n:prop|mr_4_cromer_5's'(pro:dem|that_2,n|side_7(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: you picked a side ?
Sem: lambda $0_{r}.Q(v|pick-past_2(pro:per|you_1,det:art|a_3($1,n|side_4($1)),$0))
example_end

Sent: wake up ?
Sem: lambda $0_{r}.Q(and(v|wake_1(you,$0),adv|up_2($0)))
example_end

Sent: what kinds of eggs are those ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_5($1(pro:dem|those_6,att(n|kind-pl_2(pro:dem|those_6,$0),prep|of_3(BARE($2,n|egg-pl_4($2))))),$0)
example_end

Sent: oh those are dancing eggs .
Sem: lambda $0_{r}.and(and(n|egg-pl_5(pro:dem|those_2,$0),part|dance-presp_4(pro:dem|those_2,$0)),co|oh_1($0))
example_end

Sent: what happened to this one ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:dem|this_4($2,pro:indef|one_5($2)),$0))
example_end

Sent: no don 't write in your book .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|write_4(you,$0),prep|in_5(det:poss|your_6($1,n|book_7($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: something jump .
Sem: lambda $0_{r}.n|jump_2(BARE($1,pro:indef|something_1($1)),$0)
example_end

Sent: airplane jump .
Sem: BARE($0,and_comp(n|airplane_1($0),n|jump_2($0)))
example_end

Sent: who jumps from the airplane ?
Sem: lambda $1_{e}.lambda $0_{r}.and(n|jump-pl_2($1,$0),prep|from_3(det:art|the_4($2,n|airplane_5($2)),$0))
example_end

Sent: what happens when you turn around ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|when_3(v|turn_5_around_6(pro:per|you_4,$0),v|happen-3s_2($1,$0))
example_end

Sent: airplane goes around like that ?
Sem: lambda $0_{r}.Q(and(and(v|go-3s_2(BARE($1,n|airplane_1($1)),$0),adv|around_3($0)),prep|like_4(pro:dem|that_5,$0)))
example_end

Sent: you 're dripping .
Sem: lambda $0_{r}.aux|~be_2(part|drip-presp_3(pro:per|you_1,$0),$0)
example_end

Sent: you lost a shoe .
Sem: lambda $0_{r}.v|lose-past_2(pro:per|you_1,det:art|a_3($1,n|shoe_4($1)),$0)
example_end

Sent: that is pencil ?
Sem: lambda $0_{r}.Q(n|pencil_3(pro:dem|that_1,$0))
example_end

Sent: you 'll get dizzy again ?
Sem: lambda $0_{r}.Q(mod|~will_2(and(v|get_3(pro:per|you_1,lambda $1_{r}.adj|dizzy_4(pro:per|you_1,$1),$0),adv|again_5($0)),$0))
example_end

Sent: you 're going to fall .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|fall_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: fall soon ?
Sem: lambda $0_{r}.Q(and(n|fall_1(you,$0),adv|soon_2($0)))
example_end

Sent: fall shoes ?
Sem: BARE($0,Q(and_comp(n|fall_1($0),n|shoe-pl_2($0))))
example_end

Sent: what do you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: Cromer fall shoes ?
Sem: lambda $0_{r}.Q(n|fall_2(n:prop|cromer_1,BARE($1,n|shoe-pl_3($1)),$0))
example_end

Sent: that 's your car ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:dem|that_1,n|car_4(pro:dem|that_1,$0)))
example_end

Sent: you jumped ?
Sem: lambda $0_{r}.Q(v|jump-past_2(pro:per|you_1,$0))
example_end

Sent: two cars ?
Sem: BARE($0,Q(det:num|two_1(n|car-pl_2($0))))
example_end

Sent: how many trucks ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|truck-pl_3($0)))
example_end

Sent: look seat .
Sem: lambda $0_{r}.and(n|seat_2($0),co|look_1($0))
example_end

Sent: yeah go on .
Sem: lambda $0_{r}.and(and(v|go_2(you,$0),adv|on_3($0)),co|yeah_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh you 're stopped for a street light ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(v|stop-past_4(pro:per|you_2,$0),prep|for_5(det:art|a_6($1,and_comp(n|street_7($1),n|light_8($1))),$0)),$0),co|oh_1($0)))
example_end

Sent: four trucks ?
Sem: BARE($0,Q(det:num|four_1(n|truck-pl_2($0))))
example_end

Sent: where 's your fourth truck ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|your_3($1,and(n|fourth_4($1),n|truck_5($1))),$0))
example_end

Sent: what kind of truck is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_6,att(n|kind_2(pro:per|it_6,$0),prep|of_3(BARE($2,n|truck_4($2)))))
example_end

Sent: what about the one you 're sitting on ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,pro:indef|one_4_about_2($2)),$0)
example_end

Sent: you put it together again ?
Sem: lambda $0_{r}.Q(and(and(v|put-zero_2(pro:per|you_1,pro:per|it_3,$0),adv|together_4($0)),adv|again_5($0)))
example_end

Sent: you 're a big boy .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,and(n|boy_5(pro:per|you_1,$0),adj|big_4(pro:per|you_1,$0)))
example_end

Sent: Adam 's Adam 's what ?
Sem: att(pro:int|what_5,poss|~s_4(n:prop|adam_3))
example_end

Sent: now put them on while it 's on its side .
Sem: lambda $0_{r}.n|while_5(adv|on_8(det:poss|its_9($1,n|side_10($1)),pro:per|it_6,$0),and(and(v|put-zero_2(you,pro:obj|them_3,$0),adv|now_1($0)),prep|on_4($0)))
example_end

Sent: press it down .
Sem: lambda $0_{r}.and(v|press_1(you,pro:per|it_2,$0),adv|down_3($0))
example_end

Sent: press it down there .
Sem: lambda $0_{r}.and(v|press_1(you,pro:per|it_2,$0),adv|down_3(adv|there_4($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: wheels in the air ?
Sem: BARE($0,Q(att(n|wheel-pl_1($0),prep|in_2(det:art|the_3($1,n|air_4($1))))))
example_end

Sent: now what do you have_to do ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_3(and(mod:aux|have_to_5(pro:per|you_4,lambda $1_{r}.v|do_7($2,$1),$0),adv|now_1($0)),$0)
example_end

Sent: trash truck broken ?
Sem: lambda $0_{r}.Q(part|break-pastp_3(BARE($1,and_comp(n|trash_1($1),n|truck_2($1))),$0))
example_end

Sent: what kind of truck is broken ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.aux|be-3s_5(part|break-pastp_6($1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|truck_4($3))))),$0),$0)
example_end

Sent: this truck ?
Sem: BARE($0,Q(pro:dem|this_1($1,n|truck_2($1),$0)))
example_end

Sent: you have_to take one off to put it on .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|take_4(pro:per|you_1,$1),$0)
example_end

Sent: press hard .
Sem: lambda $0_{r}.and(n|press_1(you,$0),adv|hard_2($0))
example_end

Sent: you 're going to sit on it ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|sit_5(pro:per|you_1,$1),prep|on_6(pro:per|it_7,$1)),$0),$0))
example_end

Sent: wheel broken ?
Sem: lambda $0_{r}.Q(part|break-pastp_2(BARE($1,n|wheel_1($1)),$0))
example_end

Sent: no I don 't think it 's broken now .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.aux|~be_7(and(part|break-pastp_8(pro:per|it_6,$1),adv|now_9($1)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: no I don 't think that one 's broken .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.part|break-pastp_9(pro:dem|that_6($2,pro:indef|one_7($2)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: no that 's not broken now either .
Sem: lambda $0_{r}.and(not(cop|~be_3(and(and(part|break-pastp_5(pro:dem|that_2,$0),adv|now_6($0)),adv|either_7($0)),$0),$0),co|no_1($0))
example_end

Sent: why don 't you move your horse before you break it .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(prep|before_8(v|break_10(pro:per|you_9,pro:per|it_11,$0),mod|do_2(and(v|move_5(pro:per|you_4,det:poss|your_6($1,n|horse_7($1)),$0),$2($0)),$0)),$0)
example_end

Sent: why is he crying ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(part|cry-presp_4(pro:sub|he_3,$0),$1($0))
example_end

Sent: you 're pushing it with the racket .
Sem: lambda $0_{r}.aux|~be_2(and(part|push-presp_3(pro:per|you_1,pro:per|it_4,$0),prep|with_5(det:art|the_6($1,n|racket_7($1)),$0)),$0)
example_end

Sent: oh you 're pushing it through the tunnel ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|push-presp_4(pro:per|you_2,pro:per|it_5,$0),prep|through_6(det:art|the_7($1,n|tunnel_8($1)),$0)),$0),co|oh_1($0)))
example_end

Sent: yes you missed it .
Sem: lambda $0_{r}.and(v|miss-past_3(pro:per|you_2,pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: oh is that your garage ?
Sem: lambda $0_{r}.Q(and(det:poss|your_4(pro:rel|that_3,n|garage_5(pro:rel|that_3,$0)),co|oh_1($0)))
example_end

Sent: excuse me please .
Sem: lambda $0_{r}.and(v|excuse_1(you,pro:obj|me_2,$0),co|please_3($0))
example_end

Sent: good morning who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,and(adj|good_1($2),n|morning_2($2))),$0)
example_end

Sent: I you are ?
Sem: lambda $0_{r}.Q(cop|be-pres_3(pro:per|you_2,$0))
example_end

Sent: you picked some things up then .
Sem: lambda $0_{r}.and(and(v|pick-past_2(pro:per|you_1,qn|some_3($1,n|thing-pl_4($1)),$0),adv|up_5($0)),adv:tem|then_6($0))
example_end

Sent: you picked some things up there .
Sem: lambda $0_{r}.and(and(v|pick-past_2(pro:per|you_1,qn|some_3($1,n|thing-pl_4($1)),$0),adv|up_5($0)),adv|there_6($0))
example_end

Sent: you 're sitting on the red one .
Sem: lambda $0_{r}.aux|~be_2(and(part|sit-presp_3(pro:per|you_1,$0),prep|on_4(det:art|the_5($1,and_comp(n|red_6($1),pro:indef|one_7($1))),$0)),$0)
example_end

Sent: yes you fell down .
Sem: lambda $0_{r}.and(and(v|fall-past_3(pro:per|you_2,$0),adv|down_4($0)),co|yes_1($0))
example_end

Sent: you fell down on the blue one .
Sem: lambda $0_{r}.and(v|fall-past_2_down_3(pro:per|you_1,$0),prep|on_4(det:art|the_5($1,and(n|blue_6($1),pro:indef|one_7($1))),$0))
example_end

Sent: you 're riding over your book .
Sem: lambda $0_{r}.aux|~be_2(and(part|ride-presp_3(pro:per|you_1,$0),prep|over_4(det:poss|your_5($1,n|book_6($1)),$0)),$0)
example_end

Sent: no that 's red .
Sem: lambda $0_{r}.and(adj|red_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: the other one 's the yellow one .
Sem: lambda $0_{r}.det:art|the_5(det:art|the_1($1,att(pro:indef|one_3,BARE($2,qn|other_2($2)),$1)),and(pro:indef|one_7(det:art|the_1($1,att(pro:indef|one_3,BARE($3,qn|other_2($3)),$1)),$0),n|yellow_6(det:art|the_1($1,att(pro:indef|one_3,BARE($4,qn|other_2($4)),$1)),$0)))
example_end

Sent: that 's your new garage .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|that_1,and(n|garage_5(pro:dem|that_1,$0),adj|new_4(pro:dem|that_1,$0)))
example_end

Sent: that 's a nice one .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(pro:indef|one_5(pro:dem|that_1,$0),adj|nice_4(pro:dem|that_1,$0)))
example_end

Sent: nice one yes .
Sem: lambda $0_{r}.and(att(pro:indef|one_2,BARE($1,adj|nice_1($1)),$0),co|yes_3($0))
example_end

Sent: that truck is old and battered .
Sem: lambda $0_{r}.v|batter-past_6(pro:dem|that_1($1,n|truck_2($1)),$0)
example_end

Sent: I think we should leave it in the garage .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|should_4(and(v|leave_5(pro:sub|we_3,pro:per|it_6,$1),prep|in_7(det:art|the_8($2,n|garage_9($2)),$1)),$1),$0)
example_end

Sent: Adam did .
Sem: lambda $0_{r}.v|do-past_2(n:prop|adam_1,$0)
example_end

Sent: I thought you said Mr Cromer did .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:per|you_3,lambda $2_{r}.v|do-past_7(n:prop|mr_5_cromer_6,$2),$1),$0)
example_end

Sent: the truck rather .
Sem: adv|rather_3(det:art|the_1($0,n|truck_2($0)))
example_end

Sent: two break ?
Sem: BARE($0,Q(det:num|two_1(v|break_2($0))))
example_end

Sent: two in the garage ?
Sem: BARE($0,det:num|two_1($0))
example_end

Sent: you have three .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,BARE($1,det:num|three_3($1)),$0)
example_end

Sent: two good ones .
Sem: BARE($0,and(adj|good_2($0),det:num|two_1(pro:indef|one-pl_3($0))))
example_end

Sent: we 'll leave that other one over there in the garage alright ?
Sem: lambda $0_{r}.Q(and(mod|~will_2(and(and(v|leave_3(pro:sub|we_1,pro:dem|that_4($1,att(pro:indef|one_6,BARE($2,qn|other_5($2)),$1)),$0),adv|over_7(adv|there_8($0))),prep|in_9(det:art|the_10($3,n|garage_11($3)),$0)),$0),adj|alright_12($0)))
example_end

Sent: that 's not much good .
Sem: lambda $0_{r}.not(adv|much_4(adj|good_5(pro:dem|that_1,$0)),$0)
example_end

Sent: what came from there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|come-past_2($1,$0),adv|there_4($0))
example_end

Sent: where 's the door ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|door_4($1)),$0))
example_end

Sent: you lost something .
Sem: lambda $0_{r}.v|lose-past_2(pro:per|you_1,BARE($1,pro:indef|something_3($1)),$0)
example_end

Sent: too big .
Sem: BARE($0,adv|too_1(adj|big_2($0)))
example_end

Sent: oh it 's a little broken ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:per|it_2,and(part|break-pastp_6(pro:per|it_2,$0),adj|little_5(pro:per|it_2,$0))),co|oh_1($0)))
example_end

Sent: shall I help you Adam ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|help_3(pro:sub|i_2,_,pro:per|you_4,$0),$0))
example_end

Sent: shall we put it on ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|put-zero_3(pro:sub|we_2,pro:per|it_4,$0),adv|on_5($0)),$0))
example_end

Sent: oh that 's better ?
Sem: lambda $0_{r}.Q(and(adj|good-cp_4(pro:dem|that_2,$0),co|oh_1($0)))
example_end

Sent: don 't sit on this one .
Sem: lambda $0_{r}.not(mod|do_1(and(v|sit_3(you,$0),prep|on_4(pro:dem|this_5($1,pro:indef|one_6($1)),$0)),$0),$0)
example_end

Sent: get your other blue one if you must sit on one .
Sem: lambda $0_{r}.conj|if_6(mod|must_8(and(v|sit_9(pro:per|you_7,$0),adv|on_10(pro:indef|one_11,$0)),$0),v|get_1(you,det:poss|your_2($1,att(att(pro:indef|one_5,BARE($2,qn|other_3($2))),BARE($3,n|blue_4($3)),$1)),$0))
example_end

Sent: that one ?
Sem: BARE($0,Q(pro:dem|that_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: see it in the garage ?
Sem: lambda $0_{r}.Q(and(v|see_1(you,pro:per|it_2,$0),prep|in_3(det:art|the_4($1,n|garage_5($1)),$0)))
example_end

Sent: I don 't think you can ride that one .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(v|ride_7(pro:per|you_5,pro:dem|that_8($2,pro:indef|one_9($2)),$1),$1),$0),$0),$0)
example_end

Sent: I think the wheel will come off again .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|will_5(and(and(v|come_6(det:art|the_3($2,n|wheel_4($2)),$1),adv|off_7($1)),adv|again_8($1)),$1),$0)
example_end

Sent: why don 't you ride your other blue one ?
Sem: lambda $4_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|ride_5(pro:per|you_4,det:poss|your_6($1,att(att(pro:indef|one_9,BARE($2,qn|other_7($2))),BARE($3,n|blue_8($3)),$1)),$0),$4($0)),$0),$0)
example_end

Sent: yes the one over by Mr Cromer 's shoe .
Sem: lambda $0_{r}.and(adv|over_4(det:art|the_2($1,att(pro:indef|one_3,prep|by_5(n:prop|mr_6_cromer_7's($2,n|shoe_9($2))),$1)),$0),co|yes_1($0))
example_end

Sent: you fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0))
example_end

Sent: did you hurt yourself ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: what did you hurt ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|hurt-zero_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you hurt your elbow ?
Sem: lambda $0_{r}.Q(v|hurt-zero_2(pro:per|you_1,det:poss|your_3($1,n|elbow_4($1)),$0))
example_end

Sent: careful honey .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: move over where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|move_1(you,$0),$1($0))
example_end

Sent: two break ?
Sem: BARE($0,Q(det:num|two_1(v|break_2($0))))
example_end

Sent: where are all the pennies ?
Sem: lambda $0_{r}.Q(adv:int|where_1(qn|all_3(det:art|the_4($1,n|penny-pl_5($1))),$0))
example_end

Sent: put one where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|put-zero_1(you,pro:indef|one_2,$0),$1($0))
example_end

Sent: monkey get the penny ?
Sem: lambda $0_{r}.Q(v|get_2(BARE($1,n|monkey_1($1)),det:art|the_3($2,n|penny_4($2)),$0))
example_end

Sent: did you see the monkey collect pennies ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,lambda $1_{r}.v|collect_6(det:art|the_4($2,n|monkey_5($2)),BARE($3,n|penny-pl_7($3)),$1),$0),$0))
example_end

Sent: yes those are Adam 's .
Sem: lambda $0_{r}.and(poss|~s_5(n:prop|adam_4,pro:dem|those_2,$0),co|yes_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: tape recorder ?
Sem: BARE($0,Q(and_comp(n|tape_1($0),n|record-dv_2($0))))
example_end

Sent: he may be going to help fight fire .
Sem: lambda $0_{r}.aux|be_3(mod|may_2(part|go-presp_4(pro:sub|he_1,lambda $1_{r}.v|help_6(pro:sub|he_1,BARE($2,and_comp(n|fight_7($2),n|fire_8($2))),$1),$0),$0),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: you 're standing on your truck .
Sem: lambda $0_{r}.aux|~be_2(and(part|stand-presp_3(pro:per|you_1,$0),prep|on_4(det:poss|your_5($1,n|truck_6($1)),$0)),$0)
example_end

Sent: that 's not a fire truck .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,and_comp(n|fire_5(pro:dem|that_1,$0),n|truck_6(pro:dem|that_1,$0))),$0)
example_end

Sent: he doesn 't like raisin bran .
Sem: lambda $0_{r}.not(mod|do_2(co|like_4(pro:sub|he_1,BARE($1,and_comp(n|raisin_5($1),n|bran_6($1))),$0),$0),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: where 's Daddy ?
Sem: lambda $0_{r}.Q(adv:int|where_1(n:prop|daddy_3,$0))
example_end

Sent: well who 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|well_1($0))
example_end

Sent: oh you fell down again .
Sem: lambda $0_{r}.and(and(and(v|fall-past_3(pro:per|you_2,$0),adv|down_4($0)),adv|again_5($0)),co|oh_1($0))
example_end

Sent: you 're going to ride that ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|ride_5(pro:per|you_1,pro:dem|that_6,$1),$0),$0))
example_end

Sent: ride that if you want to ?
Sem: lambda $0_{r}.Q(conj|if_3(v|want_5(pro:per|you_4,$0),v|ride_1(you,pro:dem|that_2,$0)))
example_end

Sent: what 's that it 's got on ?
Sem: lambda $0_{r}.and(v|get-past_6(pro:per|it_4,$0),adv|on_7($0))
example_end

Sent: that 's his nose .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|nose_4(pro:dem|that_1,$0))
example_end

Sent: parading bag ?
Sem: BARE($0,Q(and(part|parade-presp_1($0),n|bag_2($0))))
example_end

Sent: don 't sit on Mr Cromer 's briefcase .
Sem: lambda $0_{r}.not(mod|do_1(and(v|sit_3(you,$0),prep|on_4(n:prop|mr_5_cromer_6's($1,n|briefcase_8($1)),$0)),$0),$0)
example_end

Sent: show you a bag ?
Sem: lambda $0_{r}.v|show_1(you,det:art|a_3($1,n|bag_4($1)),pro:per|you_2,$0)
example_end

Sent: what kind of bag ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|bag_4($2)))))
example_end

Sent: is that part of the song ?
Sem: lambda $0_{r}.Q(att(n|part_3(pro:dem|that_2,$0),prep|of_4(det:art|the_5($1,n|song_6($1)))))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: after supper ?
Sem: Q(prep|after_1(BARE($0,n|supper_2($0))))
example_end

Sent: you 're missing .
Sem: lambda $0_{r}.part|miss-presp_3(pro:per|you_1,$0)
example_end

Sent: you hit the trash can ?
Sem: lambda $0_{r}.Q(v|hit-zero_2(pro:per|you_1,det:art|the_3($1,and_comp(n|trash_4($1),mod|can_5($1))),$0))
example_end

Sent: where 's the other part ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,and(qn|other_4($1),n|part_5($1))),$0))
example_end

Sent: messed it all up .
Sem: lambda $0_{r}.and(v|mess-past_1(you,pro:per|it_2,$0),adv|all_3(adv|up_4($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what about a parade ?
Sem: att(pro:int|what_1,adv|about_2(det:art|a_3($0,n|parade_4($0))))
example_end

Sent: that 's Riverside Church in New York .
Sem: lambda $0_{r}.att(n:prop|riverside_3_church_4(pro:dem|that_1,$0),prep|in_5(n:prop|new_6_york_7))
example_end

Sent: what kind of seals ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|seal-pl_4($2)))))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's a church .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|church_4(pro:dem|that_1,$0))
example_end

Sent: Riverside Church .
Sem: BARE($0,and_comp(n:prop|riverside_1($0),n:prop|church_2($0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I don 't see a seal .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,det:art|a_5($1,n|seal_6($1)),$0),$0),$0)
example_end

Sent: I see a church .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,det:art|a_3($1,n|church_4($1)),$0)
example_end

Sent: Riverside Church .
Sem: BARE($0,and_comp(n:prop|riverside_1($0),n:prop|church_2($0)))
example_end

Sent: you don 't sit on Mr Cromer 's briefcase .
Sem: lambda $0_{r}.not(mod|do_2(and(v|sit_4(pro:per|you_1,$0),prep|on_5(n:prop|mr_6_cromer_7's($1,n|briefcase_9($1)),$0)),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: don 't sit on Mr Cromer 's briefcase .
Sem: lambda $0_{r}.not(mod|do_1(and(v|sit_3(you,$0),prep|on_4(n:prop|mr_5_cromer_6's($1,n|briefcase_8($1)),$0)),$0),$0)
example_end

Sent: you may break it .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: Adam what did you say before ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(and(v|say_5(pro:per|you_4,$1,$0),adv|before_6($0)),$0)
example_end

Sent: walk up ?
Sem: lambda $0_{r}.Q(and(v|walk_1(you,$0),adv|up_2($0)))
example_end

Sent: waffle walking ?
Sem: lambda $0_{r}.Q(part|walk-presp_2(BARE($1,n|waffle_1($1)),$0))
example_end

Sent: you would have_to give him your wagon .
Sem: lambda $0_{r}.mod|will-cond_2(mod:aux|have_to_3(pro:per|you_1,lambda $1_{r}.v|give_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: that 's over at the high school .
Sem: lambda $0_{r}.and(and(cop|~be_2(pro:dem|that_1,$0),adv|over_3($0)),prep|at_4(det:art|the_5($1,and_comp(n|high_6($1),n|school_7($1))),$0))
example_end

Sent: you fell down where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|fall-past_2_down_3(pro:per|you_1,$0),$1($0))
example_end

Sent: you fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0))
example_end

Sent: what were you riding when you fell down ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(cop|be-past_2(part|ride-presp_4(pro:per|you_3,$1,$0),$0),and(and(v|fall-past_7(pro:per|you_6,$0),$2($0)),adv|down_8($0)))
example_end

Sent: no that 's his pen .
Sem: lambda $0_{r}.and(det:poss|his_4(pro:dem|that_2,n|pen_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: alright you write .
Sem: lambda $0_{r}.and(v|write_3(pro:per|you_2,$0),co|alright_1($0))
example_end

Sent: on your side .
Sem: prep|on_1(det:poss|your_2($0,n|side_3($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: did you hurt yourself ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: Adam hurt himself .
Sem: lambda $0_{r}.part|hurt-pastp_2(n:prop|adam_1,pro:refl|himself_3,$0)
example_end

Sent: what are you doing in there .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|there_6($0)),$0)
example_end

Sent: you have_to take them out first .
Sem: lambda $0_{r}.and(mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|take_4(pro:per|you_1,$1),$0),adv|first_7($0))
example_end

Sent: Adam you 've got dirty hands .
Sem: lambda $0_{r}.aux|~have_3(part|get-pastp_4(pro:per|you_2,BARE($1,and(v|dirty_5($1),n|hand-pl_6($1))),$0),$0)
example_end

Sent: what did you do to your hands ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|to_5(det:poss|your_6($2,n|hand-pl_7($2)),$0)),$0)
example_end

Sent: Adam has a nose .
Sem: lambda $0_{r}.v|have-3s_2(n:prop|adam_1,det:art|a_3($1,n|nose_4($1)),$0)
example_end

Sent: what have you got in there ?
Sem: lambda $1_{e}.lambda $0_{r}.v|have_2(and(v|get-past_4(pro:per|you_3,$1,$0),adv|there_6($0)),$0)
example_end

Sent: what do you have in there ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,$1,$0),adv|there_6($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam 's ?
Sem: Q(poss|~s_2(n:prop|adam_1))
example_end

Sent: wake up Adam .
Sem: lambda $0_{r}.and(v|wake_1(you,$0),adv|up_2($0))
example_end

Sent: you 're laughing ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|laugh-presp_3(pro:per|you_1,$0),$0))
example_end

Sent: you put it on by yourself ?
Sem: lambda $0_{r}.Q(and(and(v|put-zero_2(pro:per|you_1,pro:per|it_3,$0),adv|on_4($0)),prep|by_5(pro:refl|yourself_6,$0)))
example_end

Sent: no you come over here .
Sem: lambda $0_{r}.and(and(v|come_3(pro:per|you_2,$0),adv|over_4(adv|here_5($0))),co|no_1($0))
example_end

Sent: don 't push the microphone .
Sem: lambda $0_{r}.not(mod|do_1(v|push_3(you,det:art|the_4($1,n|microphone_5($1)),$0),$0),$0)
example_end

Sent: you put it on by yourself ?
Sem: lambda $0_{r}.Q(and(and(v|put-zero_2(pro:per|you_1,pro:per|it_3,$0),adv|on_4($0)),prep|by_5(pro:refl|yourself_6,$0)))
example_end

Sent: that 's your boot ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:dem|that_1,n|boot_4(pro:dem|that_1,$0)))
example_end

Sent: how did you hurt your head ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|hurt-zero_4(pro:per|you_3,det:poss|your_5($1,n|head_6($1)),$0),$2($0)),$0)
example_end

Sent: Adam did .
Sem: lambda $0_{r}.v|do-past_2(n:prop|adam_1,$0)
example_end

Sent: how did Adam hurt his head ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|hurt-zero_4(n:prop|adam_3,det:poss|his_5($1,n|head_6($1)),$0),$2($0)),$0)
example_end

Sent: oh he can 't bite you .
Sem: lambda $0_{r}.and(not(mod|can_3(v|bite_5(pro:sub|he_2,pro:per|you_6,$0),$0),$0),co|oh_1($0))
example_end

Sent: what do you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's his tongue ?
Sem: lambda $0_{r}.Q(det:poss|his_3(pro:dem|that_1,n|tongue_4(pro:dem|that_1,$0)))
example_end

Sent: bless you .
Sem: lambda $0_{r}.v|bless_1(you,pro:per|you_2,$0)
example_end

Sent: he won 't bite .
Sem: lambda $0_{r}.not(mod|will_2(v|bite_4(pro:sub|he_1,$0),$0),$0)
example_end

Sent: he 's a nice little horse .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|he_1,and(and(n|horse_6(pro:sub|he_1,$0),adj|nice_4(pro:sub|he_1,$0)),adj|little_5(pro:sub|he_1,$0)))
example_end

Sent: that 's his nose .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|nose_4(pro:dem|that_1,$0))
example_end

Sent: he has a nose too .
Sem: lambda $0_{r}.and(v|have-3s_2(pro:sub|he_1,det:art|a_3($1,n|nose_4($1)),$0),adv|too_5($0))
example_end

Sent: horsie has a nose too .
Sem: lambda $0_{r}.and(v|have-3s_2(BARE($1,n|horse-dim_1($1)),det:art|a_3($2,n|nose_4($2)),$0),adv|too_5($0))
example_end

Sent: pig has a ribbon on ?
Sem: lambda $0_{r}.Q(and(v|have-3s_2(BARE($1,n|pig_1($1)),det:art|a_3($2,n|ribbon_4($2)),$0),adv|on_5($0)))
example_end

Sent: what are you looking for ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|look-presp_4_for_5(pro:per|you_3,$1,$0),$0)
example_end

Sent: we dropped it .
Sem: lambda $0_{r}.v|drop-past_2(pro:sub|we_1,pro:per|it_3,$0)
example_end

Sent: you want to ride the truck .
Sem: lambda $0_{r}.v|want_2(pro:per|you_1,lambda $1_{r}.v|ride_4(pro:per|you_1,det:art|the_5($2,n|truck_6($2)),$1),$0)
example_end

Sent: why don 't you ride your fire truck for a little while .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|ride_5(pro:per|you_4,det:poss|your_6($1,and_comp(n|fire_7($1),n|truck_8($1))),$0),$2($0)),prep|for_9(det:art|a_10($3,and(adj|little_11($3),n|while_12($3))),$0)),$0),$0)
example_end

Sent: it 's too big ?
Sem: lambda $0_{r}.Q(adv|too_3(adj|big_4(pro:per|it_1,$0)))
example_end

Sent: you want to ride that ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.v|ride_4(pro:per|you_1,pro:dem|that_5,$1),$0))
example_end

Sent: try it now .
Sem: lambda $0_{r}.and(v|try_1(you,pro:per|it_2,$0),adv|now_3($0))
example_end

Sent: I just closed the door .
Sem: lambda $0_{r}.and(v|close-past_3(pro:sub|i_1,det:art|the_4($1,n|door_5($1)),$0),adv|just_2($0))
example_end

Sent: oh how can you get your hand out ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|can_3(and(and(v|get_5(pro:per|you_4,det:poss|your_6($1,n|hand_7($1)),$0),$2($0)),adv|out_8($0)),$0),co|oh_1($0))
example_end

Sent: little horse ?
Sem: BARE($0,Q(and(adj|little_1($0),n|horse_2($0))))
example_end

Sent: look at the horse .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|at_2(det:art|the_3($1,n|horse_4($1)),$0))
example_end

Sent: go in ?
Sem: lambda $0_{r}.Q(and(v|go_1(you,$0),adv|in_2($0)))
example_end

Sent: I don 't want to ride in the back of the truck .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|i_1,lambda $1_{r}.n|ride_6(pro:sub|i_1,$1),$0),$0),$0)
example_end

Sent: oh you 're skating .
Sem: lambda $0_{r}.and(aux|~be_3(part|skate-presp_4(pro:per|you_2,$0),$0),co|oh_1($0))
example_end

Sent: sit on the front of the truck Adam and ride now .
Sem: lambda $0_{r}.and(and(n|ride_10(you,$0),prep|on_2(det:art|the_3($1,att(n|front_4($1),prep|of_5(det:art|the_6($2,n|truck_7($2))))),$0)),adv|now_11($0))
example_end

Sent: you don 't want to sit there ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|want_4(pro:per|you_1,lambda $1_{r}.and(v|sit_6(pro:per|you_1,$1),adv|there_7($1)),$0),$0),$0))
example_end

Sent: are you tired Adam ?
Sem: lambda $0_{r}.Q(v|tire-past_3(pro:per|you_2,$0))
example_end

Sent: are you the driver or the passenger ?
Sem: lambda $0_{r}.Q(det:art|the_6(pro:per|you_2,det:art|the_3(pro:per|you_2,n|passenger_7(pro:per|you_2,$0))))
example_end

Sent: I need one .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,pro:indef|one_3,$0)
example_end

Sent: I need one .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,pro:indef|one_3,$0)
example_end

Sent: do you need paper Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|need_3(pro:per|you_2,BARE($1,n|paper_4($1)),$0),$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: is that your license number ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:rel|that_2,and_comp(n|license_4(pro:rel|that_2,$0),v|number_5(pro:rel|that_2,$0))))
example_end

Sent: if you want it to .
Sem: lambda $0_{r}.v|want_3(pro:per|you_2,$0)
example_end

Sent: you 're going to build the house ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|build_5(pro:per|you_1,det:art|the_6($2,n|house_7($2)),$1),$0),$0))
example_end

Sent: oh you 're going to build another house .
Sem: lambda $0_{r}.and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|build_6(pro:per|you_2,qn|another_7($2,n|house_8($2)),$1),$0),$0),co|oh_1($0))
example_end

Sent: oh you made a street light .
Sem: lambda $0_{r}.and(v|make-past_3(pro:per|you_2,det:art|a_4($1,and_comp(n|street_5($1),n|light_6($1))),$0),co|oh_1($0))
example_end

Sent: looking for Cromer !
Sem: lambda $0_{r}.and(part|look-presp_1(you,$0),prep|for_2(n:prop|cromer_3,$0))
example_end

Sent: did you find him ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,pro:obj|him_4,$0),$0))
example_end

Sent: find him ?
Sem: lambda $0_{r}.Q(v|find_1(you,pro:obj|him_2,$0))
example_end

Sent: little seed ?
Sem: BARE($0,Q(and(adj|little_1($0),n|seed_2($0))))
example_end

Sent: mine 's lemon .
Sem: n|mine_1's($0,n|lemon_3($0))
example_end

Sent: you dropped it ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: it 's gone down the street .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-pastp_3(pro:per|it_1,$0),prep|down_4(det:art|the_5($1,n|street_6($1)),$0)),$0)
example_end

Sent: did you see that one ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|see_3(pro:per|you_2,pro:rel|that_4($1,pro:indef|one_5($1)),$0),$0))
example_end

Sent: looks like Adam 's truck .
Sem: lambda $0_{r}.and(cop|look-3s_1(you,$0),prep|like_2(BARE($1,att(n|truck_5($1),poss|~s_4(n:prop|adam_3))),$0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: do it again ?
Sem: lambda $0_{r}.Q(and(mod|do_1(you,pro:per|it_2,$0),adv|again_3($0)))
example_end

Sent: oh silly peekaboo .
Sem: lambda $0_{r}.and(and(co|silly_2($0),co|peekaboo_3($0)),co|oh_1($0))
example_end

Sent: this is a fire hydrant .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,and_comp(n|fire_4(pro:dem|this_1,$0),n|hydrant_5(pro:dem|this_1,$0)))
example_end

Sent: no just pretend .
Sem: lambda $0_{r}.and(and(adj|pretend_3(you,$0),adv|just_2($0)),co|no_1($0))
example_end

Sent: don 't put it in your mouth .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|mouth_7($1)),$0)),$0),$0)
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: track train ?
Sem: BARE($0,Q(and_comp(n|track_1($0),n|train_2($0))))
example_end

Sent: train track .
Sem: BARE($0,and_comp(n|train_1($0),n|track_2($0)))
example_end

Sent: put them back on the board .
Sem: lambda $0_{r}.and(and(v|put-zero_1(you,pro:obj|them_2,$0),adv|back_3($0)),prep|on_4(det:art|the_5($1,n|board_6($1)),$0))
example_end

Sent: yes the train is coming over to the tracks .
Sem: lambda $0_{r}.and(aux|be-3s_4(and(and(part|come-presp_5(det:art|the_2($1,n|train_3($1)),$0),adv|over_6($0)),prep|to_7(det:art|the_8($2,n|track-pl_9($2)),$0)),$0),co|yes_1($0))
example_end

Sent: come on .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|on_2($0))
example_end

Sent: put the trains back on the table .
Sem: lambda $0_{r}.and(and(v|put-zero_1(you,det:art|the_2($1,n|train-pl_3($1)),$0),adv|back_4($0)),prep|on_5(det:art|the_6($2,n|table_7($2)),$0))
example_end

Sent: can you get it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|get_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: I don 't see a ball .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,det:art|a_5($1,n|ball_6($1)),$0),$0),$0)
example_end

Sent: did you find it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: shame on me .
Sem: BARE($0,att(n|shame_1($0),prep|on_2(pro:obj|me_3)))
example_end

Sent: in his boot ?
Sem: Q(prep|in_1(det:poss|his_2($0,n|boot_3($0))))
example_end

Sent: the doggie bit you in your boot ?
Sem: lambda $0_{r}.Q(and(n|bit_3(det:art|the_1($1,n|dog-dim_2($1)),pro:per|you_4,$0),prep|in_5(det:poss|your_6($2,n|boot_7($2)),$0)))
example_end

Sent: would you show that to Ursula ?
Sem: lambda $0_{r}.mod|will-cond_1(and(v|show_3(pro:per|you_2,pro:dem|that_4,$0),prep|to_5(n:prop|ursula_6,$0)),$0)
example_end

Sent: where baby cow ?
Sem: lambda $0_{e}.$0(BARE($1,and_comp(n|baby_2($1),n|cow_3($1))))
example_end

Sent: what about the milk in the boots ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,att(n|milk_4($0),prep|in_5(det:art|the_6($1,n|boot-pl_7($1)))))))
example_end

Sent: sleeping bag ?
Sem: BARE($0,Q(and_comp(part|sleep-presp_1($0),n|bag_2($0))))
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: Adam is that boot ?
Sem: lambda $0_{r}.Q(n|boot_4(pro:dem|that_3,$0))
example_end

Sent: or boots ?
Sem: BARE($0,Q(n|boot-pl_2($0)))
example_end

Sent: sleeping dinosaur ?
Sem: BARE($0,Q(and(part|sleep-presp_1($0),n|dinosaur_2($0))))
example_end

Sent: that 's heavy .
Sem: lambda $0_{r}.adj|heavy_3(pro:dem|that_1,$0)
example_end

Sent: does he have spurs ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(pro:sub|he_2,BARE($1,n|spur-pl_4($1)),$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: would you like to draw a boot ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|draw_5(pro:per|you_2,det:art|a_6($2,n|boot_7($2)),$1),$0),$0))
example_end

Sent: draw a boot ?
Sem: lambda $0_{r}.Q(v|draw_1(you,det:art|a_2($1,n|boot_3($1)),$0))
example_end

Sent: no she said draw a boot on the paper .
Sem: lambda $0_{r}.and(and(v|say-past_3(pro:sub|she_2,$0),v|draw_4(you,det:art|a_5($1,att(n|boot_6($1),prep|on_7(det:art|the_8($2,n|paper_9($2))))),$0)),co|no_1($0))
example_end

Sent: no she didn 't say draw on a boot she said draw a boot on the paper .
Sem: lambda $0_{r}.and(and(not(mod|do_3(v|say_5(pro:sub|she_2,lambda $1_{r}.and(v|draw_6(you,$1),prep|on_7(det:art|a_8($2,n|boot_9($2)),$1)),$0),$0),$0),v|say-past_11(pro:sub|she_10,lambda $3_{r}.v|draw_12(_,det:art|a_13($4,att(n|boot_14($4),prep|on_15(det:art|the_16($5,n|paper_17($5))))),$3),$0)),co|no_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: draw a boot on the paper .
Sem: lambda $0_{r}.and(v|draw_1(you,det:art|a_2($1,n|boot_3($1)),$0),prep|on_4(det:art|the_5($2,n|paper_6($2)),$0))
example_end

Sent: but you 're drawing on the boot .
Sem: lambda $0_{r}.aux|~be_3(and(part|draw-presp_4(pro:per|you_2,$0),prep|on_5(det:art|the_6($1,n|boot_7($1)),$0)),$0)
example_end

Sent: what about the little doggie ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,and(adj|little_4($0),n|dog-dim_5($0)))))
example_end

Sent: did you break the pencil ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|break_3(pro:per|you_2,det:art|the_4($1,n|pencil_5($1)),$0),$0))
example_end

Sent: where did you get that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: talking to Mr .
Sem: lambda $0_{r}.and(part|talk-presp_1(you,$0),prep|to_2(n:prop|mr_3,$0))
example_end

Sent: where 's the label ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|label_4($1)),$0))
example_end

Sent: oh ice .
Sem: lambda $0_{r}.and(n|ice+cream_2($0),co|oh_1($0))
example_end

Sent: okay pick those up .
Sem: lambda $0_{r}.and(and(v|pick_2(you,pro:dem|those_3,$0),adv|up_4($0)),co|okay_1($0))
example_end

Sent: we 'll put them up now .
Sem: lambda $0_{r}.mod|~will_2(and(and(v|put-zero_3(pro:sub|we_1,pro:obj|them_4,$0),adv|up_5($0)),adv|now_6($0)),$0)
example_end

Sent: don 't put them on the floor Adam .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:obj|them_4,$0),prep|on_5(det:art|the_6($1,n|floor_7($1)),$0)),$0),$0)
example_end

Sent: oh that 's for the doggie ?
Sem: lambda $0_{r}.Q(and(conj|for_4(det:art|the_5($1,n|dog-dim_6($1)),pro:dem|that_2,$0),co|oh_1($0)))
example_end

Sent: he 's finished .
Sem: lambda $0_{r}.aux|~be_2(part|finish-pastp_3(pro:sub|he_1,$0),$0)
example_end

Sent: can you tell me a story about nineteen twelve ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tell_3(pro:per|you_2,det:art|a_5($1,att(n|story_6($1),prep|about_7(BARE($2,and_comp(det:num|twelve_9($2),det:num|nineteen_8($2)))))),pro:obj|me_4,$0),$0))
example_end

Sent: oh you fell down ?
Sem: lambda $0_{r}.Q(and(and(v|fall-past_3(pro:per|you_2,$0),adv|down_4($0)),co|oh_1($0)))
example_end

Sent: did you hurt yourself ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: where did you hurt yourself ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|hurt-zero_4(pro:per|you_3,pro:refl|yourself_5,$0),$1($0)),$0)
example_end

Sent: you fell down on Mommy 's rug .
Sem: lambda $0_{r}.and(and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0)),prep|on_4(BARE($1,att(n|rug_7($1),poss|~s_6(n:prop|mommy_5))),$0))
example_end

Sent: you dropped some under the table .
Sem: lambda $0_{r}.and(v|drop-past_2(pro:per|you_1,qn|some_3,$0),prep|under_4(det:art|the_5($1,n|table_6($1)),$0))
example_end

Sent: see those ?
Sem: lambda $0_{r}.Q(v|see_1(you,pro:dem|those_2,$0))
example_end

Sent: oh that one .
Sem: lambda $0_{r}.and(pro:dem|that_2($1,pro:indef|one_3($1),$0),co|oh_1($0))
example_end

Sent: branding a cow .
Sem: lambda $0_{r}.part|brand-presp_1(you,det:art|a_2($1,n|cow_3($1)),$0)
example_end

Sent: yes it is heavy .
Sem: lambda $0_{r}.and(adj|heavy_4(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: are you saying something about trail ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|say-presp_3(pro:per|you_2,att(pro:indef|something_4,prep|about_5(BARE($1,n|trail_6($1)))),$0),$0))
example_end

Sent: what was that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: are you going to draw a picture for us ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|draw_5(pro:per|you_2,det:art|a_6($2,n|picture_7($2)),$1),prep|for_8(pro:obj|us_9,$1)),$0),$0))
example_end

Sent: oh Cecile and Catherine .
Sem: lambda $0_{r}.and(n:prop|catherine_4($0),co|oh_1($0))
example_end

Sent: Daddy 's Gil Smith talking about roadgrader .
Sem: lambda $0_{r}.and(n:prop|gil_3_smith_4(n:prop|daddy_1,$0),and(part|talk-presp_5(you,$0),prep|about_6(BARE($1,n|roadgrader_7($1)),$0)))
example_end

Sent: what a pretty butterfly .
Sem: lambda $1_{<<e,e>,e>}.det:art|a_2($0,$1($2,and(adj|pretty_3($2),n|butter+fly_4($2)),$0))
example_end

Sent: oh I scratched my arm with the needle .
Sem: lambda $0_{r}.and(and(v|scratch-past_3(pro:sub|i_2,det:poss|my_4($1,n|arm_5($1)),$0),prep|with_6(det:art|the_7($2,n|needle_8($2)),$0)),co|oh_1($0))
example_end

Sent: you dropped your pencil .
Sem: lambda $0_{r}.v|drop-past_2(pro:per|you_1,det:poss|your_3($1,n|pencil_4($1)),$0)
example_end

Sent: Adam touching paper ?
Sem: lambda $0_{r}.Q(part|touch-presp_2(n:prop|adam_1,BARE($1,n|paper_3($1)),$0))
example_end

Sent: no Adam where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-pres_4(and(part|go-presp_6(pro:per|you_5,$0),$1($0)),$0),co|no_1($0))
example_end

Sent: what happened to the microphone Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|microphone_5($2)),$0))
example_end

Sent: what are you doing Adam Smith ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: fell down on his face .
Sem: lambda $0_{r}.and(and(v|fall-past_1(you,$0),adv|down_2($0)),prep|on_3(det:poss|his_4($1,n|face_5($1)),$0))
example_end

Sent: beep beep pencil .
Sem: lambda $0_{r}.and(n|pencil_3($0),n|beep_1($0))
example_end

Sent: what about the taper ?
Sem: att(pro:int|what_1,prep|about_2(det:art|the_3($0,chi|taper_4($0))))
example_end

Sent: oh you 're waking up ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|wake-presp_4(pro:per|you_2,$0),adv|up_5($0)),$0),co|oh_1($0)))
example_end

Sent: you 're tired .
Sem: lambda $0_{r}.part|tire-pastp_3(pro:per|you_1,$0)
example_end

Sent: are you ready to go to bed ?
Sem: lambda $0_{r}.Q(adj|ready_3(pro:per|you_2,lambda $1_{r}.and(v|go_5(pro:per|you_2,$1),prep|to_6(BARE($2,n|bed_7($2)),$1)),$0))
example_end

Sent: I need one .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,pro:indef|one_3,$0)
example_end

Sent: yes I need one .
Sem: lambda $0_{r}.and(v|need_3(pro:sub|i_2,pro:indef|one_4,$0),co|yes_1($0))
example_end

Sent: well take one back to her .
Sem: lambda $0_{r}.and(and(and(v|take_2(you,det:num|one_3,$0),n|back_4($0)),prep|to_5(pro:obj|her_6,$0)),co|well_1($0))
example_end

Sent: give her one that 's good .
Sem: lambda $0_{r}.v|give_1(you,BARE($1,det:num|one_3($1)),pro:obj|her_2,$0)
example_end

Sent: where did the pencil go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_5(det:art|the_3($1,n|pencil_4($1)),$0),$2($0)),$0)
example_end

Sent: I need that .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,pro:dem|that_3,$0)
example_end

Sent: yeah she needs that .
Sem: lambda $0_{r}.and(v|need-3s_3(pro:sub|she_2,pro:dem|that_4,$0),co|yeah_1($0))
example_end

Sent: I thought you said that pencil was no good .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:per|you_3,lambda $2_{r}.not(adj|good_9(BARE($3,n|pencil_6($3)),$2),$2),$1),$0)
example_end

Sent: what are you going to draw ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|draw_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: Adam you put it through the paper .
Sem: lambda $0_{r}.and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|through_5(det:art|the_6($1,n|paper_7($1)),$0))
example_end

Sent: look at the back of the paper .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|at_2(det:art|the_3($1,att(n|back_4($1),prep|of_5(det:art|the_6($2,n|paper_7($2))))),$0))
example_end

Sent: the paper is torn .
Sem: lambda $0_{r}.aux|be-3s_3(part|tear-pastp_4(det:art|the_1($1,n|paper_2($1)),$0),$0)
example_end

Sent: turn it over .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: why don 't you come over here and do that to your paper ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(v|do_9(pro:per|you_4,pro:dem|that_10,$0),$1($0)),adv|over_6(adv|here_7($0))),prep|to_11(det:poss|your_12($2,n|paper_13($2)),$0)),$0),$0)
example_end

Sent: is that a tunnel ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|tunnel_4(pro:rel|that_2,$0)))
example_end

Sent: it 's a tunnel .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|tunnel_4(pro:per|it_1,$0))
example_end

Sent: a tunnel .
Sem: det:art|a_1($0,n|tunnel_2($0))
example_end

Sent: you took the pencils out .
Sem: lambda $0_{r}.and(v|take-past_2(pro:per|you_1,det:art|the_3($1,n|pencil-pl_4($1)),$0),adv|out_5($0))
example_end

Sent: because that 's part of this toy .
Sem: lambda $0_{r}.att(n|part_4(pro:dem|that_2,$0),prep|of_5(pro:dem|this_6($1,n|toy_7($1))))
example_end

Sent: you put the pencils on the floor .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,det:art|the_3($1,n|pencil-pl_4($1)),$0),prep|on_5(det:art|the_6($2,n|floor_7($2)),$0))
example_end

Sent: what are you going to draw ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|draw_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: did you put a hat ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|put-zero_3(pro:per|you_2,det:art|a_4($1,n|hat_5($1)),$0),$0))
example_end

Sent: yes that 's a hat .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|hat_5(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: you drew over the hat .
Sem: lambda $0_{r}.and(v|draw-past_2(pro:per|you_1,$0),prep|over_3(det:art|the_4($1,n|hat_5($1)),$0))
example_end

Sent: where did the hat go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_5(det:art|the_3($1,n|hat_4($1)),$0),$2($0)),$0)
example_end

Sent: he doesn 't watch Bozo .
Sem: lambda $0_{r}.not(mod|do_2(v|watch_4(pro:sub|he_1,n:prop|bozo_5,$0),$0),$0)
example_end

Sent: wait let me tie it .
Sem: lambda $0_{r}.and(v|let-zero_2(you,lambda $1_{r}.v|tie_4(pro:obj|me_3,pro:per|it_5,$1),$0),co|wait_1(you,$0))
example_end

Sent: oh that 's very good .
Sem: lambda $0_{r}.and(adv|very_4(adj|good_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I 've got a dripping mouth .
Sem: lambda $0_{r}.aux|~have_2(part|get-pastp_3(pro:sub|i_1,det:art|a_4($1,and(part|drip-presp_5($1),n|mouth_6($1))),$0),$0)
example_end

Sent: fasten the button ?
Sem: lambda $0_{r}.Q(v|fasten_1(you,det:art|the_2($1,n|button_3($1)),$0))
example_end

Sent: it 's a clarinet .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|clarinet_4(pro:per|it_1,$0))
example_end

Sent: he doesn 't want to blow .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|he_1,lambda $1_{r}.v|blow_6(pro:sub|he_1,$1),$0),$0),$0)
example_end

Sent: you blow .
Sem: lambda $0_{r}.v|blow_2(pro:per|you_1,$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: you blow it .
Sem: lambda $0_{r}.v|blow_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: now put it down .
Sem: lambda $0_{r}.and(and(v|put-zero_2(you,pro:per|it_3,$0),adv|now_1($0)),adv|down_4($0))
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it 's afternoon yes .
Sem: lambda $0_{r}.and(n|afternoon_3(pro:per|it_1,$0),co|yes_4($0))
example_end

Sent: that 's because I had a cold but I don 't any more .
Sem: lambda $0_{r}.mod|do_10(you,$0)
example_end

Sent: no more .
Sem: qn|no_1($0,pro:indef|more_2($0))
example_end

Sent: no more .
Sem: qn|no_1($0,pro:indef|more_2($0))
example_end

Sent: yes sounds like a train whistle .
Sem: lambda $0_{r}.and(and(v|sound-3s_2(you,$0),prep|like_3(det:art|a_4($1,and_comp(n|train_5($1),n|whistle_6($1))),$0)),co|yes_1($0))
example_end

Sent: what do you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what 's he saying ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|say-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh mixer ?
Sem: lambda $0_{r}.Q(and(n|mix-dv_2(you,$0),co|oh_1($0)))
example_end

Sent: it fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|it_1,$0),adv|down_3($0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: we 'll save the sandwich for later .
Sem: lambda $0_{r}.mod|~will_2(and(v|save_3(pro:sub|we_1,det:art|the_4($1,n|sandwich_5($1)),$0),adv|later_7($0)),$0)
example_end

Sent: bumble bee ?
Sem: BARE($0,Q(n|bee_2_bumble_1($0)))
example_end

Sent: what about a bumble bee ?
Sem: att(pro:int|what_1,adv|about_2(det:art|a_3($0,n|bee_5_bumble_4($0))))
example_end

Sent: bumble bee standing on Cromer 's feet ?
Sem: lambda $0_{r}.Q(and(part|stand-presp_3(BARE($1,and_comp(v|bumble_1($1),n|bee_2($1))),$0),prep|on_4(n:prop|cromer_5's($2,n|foot-pl_7($2)),$0)))
example_end

Sent: what happens if you turn around like that ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|if_3(and(v|turn_5_around_6(pro:per|you_4,$0),prep|like_7(pro:dem|that_8,$0)),v|happen-3s_2($1,$0))
example_end

Sent: you broke your horn .
Sem: lambda $0_{r}.v|break-past_2(pro:per|you_1,det:poss|your_3($1,n|horn_4($1)),$0)
example_end

Sent: what happened Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|happen-past_2($1,$0)
example_end

Sent: see where you broke your horn ?
Sem: lambda $0_{r}.Q(v|see_1(you,lambda $1_{r}.and(v|break-past_4(pro:per|you_3,det:poss|your_5($2,n|horn_6($2)),$1),pro:rel|where_2($1)),$0))
example_end

Sent: yes you broke it .
Sem: lambda $0_{r}.and(v|break-past_3(pro:per|you_2,pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: you 've broken it .
Sem: lambda $0_{r}.aux|~have_2(part|break-pastp_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: is that a penny ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|penny_4(pro:rel|that_2,$0)))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh you 're painting .
Sem: lambda $0_{r}.and(aux|~be_3(part|paint-presp_4(pro:per|you_2,$0),$0),co|oh_1($0))
example_end

Sent: no you don 't play with that .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|play_5(pro:per|you_2,$0),prep|with_6(pro:dem|that_7,$0)),$0),$0),co|no_1($0))
example_end

Sent: that 's a can opener .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|can_4(pro:dem|that_1,$0),adj|open-cp_5(pro:dem|that_1,$0)))
example_end

Sent: you don 't play with it .
Sem: lambda $0_{r}.not(mod|do_2(and(v|play_4(pro:per|you_1,$0),prep|with_5(pro:per|it_6,$0)),$0),$0)
example_end

Sent: why don 't you play with it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|play_5(pro:per|you_4,pro:per|it_7_with_6,$0),$1($0)),$0),$0)
example_end

Sent: it 's sharp .
Sem: lambda $0_{r}.adj|sharp_3(pro:per|it_1,$0)
example_end

Sent: like a knife .
Sem: prep|like_1(det:art|a_2($0,n|knife_3($0)))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: don 't put that in your mouth .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:dem|that_4,$0),prep|in_5(det:poss|your_6($1,n|mouth_7($1)),$0)),$0),$0)
example_end

Sent: you made it all up ?
Sem: lambda $0_{r}.Q(and(v|make-past_2(pro:per|you_1,adv|all_4($1,pro:per|it_3($1)),$0),adv|up_5($0)))
example_end

Sent: did the ball hit you ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hit-zero_4(det:art|the_2($1,n|ball_3($1)),pro:per|you_5,$0),$0))
example_end

Sent: you 'll break it .
Sem: lambda $0_{r}.mod|~will_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: then what will you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_3(and(v|do_5(pro:per|you_4,$1,$0),adv:tem|then_1($0)),$0)
example_end

Sent: laughing about Cromer .
Sem: lambda $0_{r}.and(part|laugh-presp_1(you,$0),prep|about_2(n:prop|cromer_3,$0))
example_end

Sent: you 're singing a song ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|sing-presp_3(pro:per|you_1,det:art|a_4($1,n|song_5($1)),$0),$0))
example_end

Sent: what song are you singing ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.aux|be-pres_3(part|sing-presp_5(pro:per|you_4,$1($2,n|song_2($2)),$0),$0)
example_end

Sent: can you sing it for me ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|sing_3(pro:per|you_2,pro:per|it_4,$0),prep|for_5(pro:obj|me_6,$0)),$0))
example_end

Sent: don 't do that again Adam .
Sem: lambda $0_{r}.not(mod|do_1(and(v|do_3(you,pro:dem|that_4,$0),adv|again_5($0)),$0),$0)
example_end

Sent: don 't do that again .
Sem: lambda $0_{r}.not(mod|do_1(and(v|do_3(you,pro:dem|that_4,$0),adv|again_5($0)),$0),$0)
example_end

Sent: okay don 't do it again .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|do_4(you,pro:per|it_5,$0),adv|again_6($0)),$0),$0),co|okay_1($0))
example_end

Sent: you 're singing a banana song .
Sem: lambda $0_{r}.aux|~be_2(part|sing-presp_3(pro:per|you_1,det:art|a_4($1,and_comp(n|banana_5($1),n|song_6($1))),$0),$0)
example_end

Sent: where are you going to blow ?
Sem: lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.n|blow_6(pro:per|you_3,$1),$0),$0)
example_end

Sent: bumble bean ?
Sem: BARE($0,Q(and_comp(v|bumble_1($0),n|bean_2($0))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's a good hat .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|hat_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: is it a hat ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|hat_4(pro:per|it_2,$0)))
example_end

Sent: is it the moon ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:per|it_2,n|moon_4(pro:per|it_2,$0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: a roadgrader .
Sem: det:art|a_1($0,n|roadgrader_2($0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: bumble bee ?
Sem: BARE($0,Q(n|bee_2_bumble_1($0)))
example_end

Sent: he 's correcting your pronunciation .
Sem: lambda $0_{r}.aux|~be_2(part|correct-presp_3(pro:sub|he_1,det:poss|your_4($1,n|pronunciation_5($1)),$0),$0)
example_end

Sent: that 's a bumble bean ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,and_comp(v|bumble_4(pro:dem|that_1,$0),n|bean_5(pro:dem|that_1,$0))))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: now what are you drawing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(and(n|drawing_5(pro:per|you_4,$1,$0),adv|now_1($0)),$0)
example_end

Sent: does he have boots ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(pro:sub|he_2,BARE($1,n|boot-pl_4($1)),$0),$0))
example_end

Sent: what did you draw there ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|draw_4(pro:per|you_3,$1,$0),adv|there_5($0)),$0)
example_end

Sent: a coal bin ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|coal_2($1),n|bin_3($1)),$0)))
example_end

Sent: a Jack and Jill ?
Sem: BARE($0,Q(det:art|a_1($1,n:prop|jill_4($1),$0)))
example_end

Sent: is this Jack and Jill ?
Sem: lambda $0_{r}.Q(n:prop|jill_5(pro:dem|this_2,$0))
example_end

Sent: is that a railroad train ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,and_comp(n|railroad_4(pro:rel|that_2,$0),n|train_5(pro:rel|that_2,$0))))
example_end

Sent: where 's the train ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|train_4($1)),$0))
example_end

Sent: you going to draw the train ?
Sem: lambda $0_{r}.Q(part|go-presp_2(pro:per|you_1,lambda $1_{r}.v|draw_4(pro:per|you_1,det:art|the_5($2,n|train_6($2)),$1),$0))
example_end

Sent: number train ?
Sem: BARE($0,Q(and_comp(n|number_1($0),n|train_2($0))))
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: you 're going up the hill ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|go-presp_3(pro:per|you_1,$0),prep|up_4(det:art|the_5($1,n|hill_6($1)),$0)),$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: it 's a boat ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,n|boat_4(pro:per|it_1,$0)))
example_end

Sent: you 've got paper over here .
Sem: lambda $0_{r}.aux|~have_2(and(v|get-past_3(pro:per|you_1,BARE($1,n|paper_4($1)),$0),adv|over_5(adv|here_6($0))),$0)
example_end

Sent: how many pencils did you put in there ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-past_4(and(v|put-zero_6(pro:per|you_5,BARE($1,and($2(qn|many_2($1)),n|pencil-pl_3($1))),$0),adv|there_8($0)),$0)
example_end

Sent: you hurt your arm ?
Sem: lambda $0_{r}.Q(v|hurt-zero_2(pro:per|you_1,det:poss|your_3($1,n|arm_4($1)),$0))
example_end

Sent: you have_to be careful .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.adj|care-dn_5(pro:per|you_1,$1),$0)
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: what are you doing with the hot water ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),prep|with_5(det:art|the_6($2,and(adj|hot_7($2),n|water_8($2))),$0)),$0)
example_end

Sent: no you put that back .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:per|you_2,pro:dem|that_4,$0),n|back_5($0)),co|no_1($0))
example_end

Sent: did you wash your hands ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|wash_3(pro:per|you_2,det:poss|your_4($1,n|hand-pl_5($1)),$0),$0))
example_end

Sent: oh fire .
Sem: lambda $0_{r}.and(n|fire_2($0),co|oh_1($0))
example_end

Sent: you finished ?
Sem: lambda $0_{r}.Q(v|finish-past_2(pro:per|you_1,$0))
example_end

Sent: all set .
Sem: BARE($0,qn|all_1(n|set_2($0)))
example_end

Sent: what are you doing to the paper ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),prep|to_5(det:art|the_6($2,n|paper_7($2)),$0)),$0)
example_end

Sent: who 's that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: here we are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:sub|we_2,$0),adv|here_1($0))
example_end

Sent: oh he gave you some candy .
Sem: lambda $0_{r}.and(v|give-past_3(pro:sub|he_2,qn|some_5($1,n|candy_6($1)),pro:per|you_4,$0),co|oh_1($0))
example_end

Sent: it 's snowing out .
Sem: lambda $0_{r}.aux|~be_2(and(part|snow-presp_3(you,$0),adv|out_4($0)),$0)
example_end

Sent: no just a little bit .
Sem: lambda $0_{r}.and(adv|just_2(det:art|a_3($1,and(adj|little_4($1),n|bit_5($1))),$0),co|no_1($0))
example_end

Sent: what am I doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-1s_2(part|do-presp_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: I 'm not doing anything .
Sem: lambda $0_{r}.not(cop|~be_2(part|do-presp_4(pro:sub|i_1,BARE($1,pro:indef|anything_5($1)),$0),$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're playing with Urs ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|play-presp_3(pro:per|you_1,$0),prep|with_4(n:prop|ursula_5,$0)),$0))
example_end

Sent: what was that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: you draw up here .
Sem: lambda $0_{r}.and(v|draw_2(you,$0),adv|up_3(adv|here_4($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what kind of pinwheel ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|pin+wheel_4($2)))))
example_end

Sent: why do you have so many pinwheels ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,adv|so_5(qn|many_6($1,n|pin+wheel_7($1))),$0),$2($0)),$0)
example_end

Sent: you have fourteen ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,BARE($1,det:num|fourteen_3($1)),$0))
example_end

Sent: well careful .
Sem: lambda $0_{r}.and(co|careful_2($0),co|well_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: pushing the door ?
Sem: lambda $0_{r}.Q(part|push-presp_1(you,det:art|the_2($1,n|door_3($1)),$0))
example_end

Sent: is that another penguin ?
Sem: lambda $0_{r}.Q(qn|another_3(pro:rel|that_2,n|penguin_4(pro:rel|that_2,$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Butch who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|butch_1,$0)
example_end

Sent: oh Bozo 's Butch .
Sem: lambda $0_{r}.and(n:prop|butch_4(n:prop|bozo_2,$0),co|oh_1($0))
example_end

Sent: that 's Butch 's bed ?
Sem: lambda $0_{r}.Q(n:prop|butch_3's'(pro:dem|that_1,n|bed_5(pro:dem|that_1,$0)))
example_end

Sent: that 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: Butch 's hat ?
Sem: BARE($0,Q(n:prop|butch_1's($1,n|hat_3($1),$0)))
example_end

Sent: Rusty 's hat ?
Sem: BARE($0,Q(n:prop|rusty_1's($1,n|hat_3($1),$0)))
example_end

Sent: what kind of hat does Rusty have ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-3s_5(v|have_7(n:prop|rusty_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|hat_4($3))))),$0),$0)
example_end

Sent: a blue hat ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|blue_2($1),n|hat_3($1)),$0)))
example_end

Sent: is that true ?
Sem: lambda $0_{r}.Q(adj|true_3(pro:dem|that_2,$0))
example_end

Sent: what am I doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-1s_2(part|do-presp_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: okay yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|okay_1($0))
example_end

Sent: you want me to come there ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|come_5(pro:obj|me_3,$1),adv|there_6($1)),$0))
example_end

Sent: okay wait a minute .
Sem: lambda $0_{r}.and(v|wait_2(you,det:art|a_3($1,n|minute_4($1)),$0),co|okay_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: that 's Adam 's .
Sem: lambda $0_{r}.poss|~s_4(n:prop|adam_3,pro:dem|that_1,$0)
example_end

Sent: ask Urs if she wan to a cup of coffee .
Sem: lambda $0_{r}.v|ask_1(you,n:prop|ursula_2,lambda $1_{r}.v|want_5(pro:sub|she_4,det:art|a_7($2,att(n|cup_8($2),prep|of_9(BARE($3,n|coffee_10($3))))),$1),$0)
example_end

Sent: well you 're not going to have coffee .
Sem: lambda $0_{r}.and(not(aux|~be_3(part|go-presp_5(pro:per|you_2,lambda $1_{r}.v|have_7(pro:per|you_2,BARE($2,n|coffee_8($2)),$1),$0),$0),$0),co|well_1($0))
example_end

Sent: no I 'm going to bring it in there Adam .
Sem: lambda $0_{r}.and(aux|~be_3(part|go-presp_4(pro:sub|i_2,lambda $1_{r}.and(v|bring_6(pro:sub|i_2,pro:per|it_7,$1),prep|in_8(adv|there_9($1))),$0),$0),co|no_1($0))
example_end

Sent: are we going to have it in here ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:sub|we_2,lambda $1_{r}.and(v|have_5(pro:sub|we_2,pro:per|it_6,$1),prep|in_7(adv|here_8($1))),$0),$0))
example_end

Sent: what are you bringing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|bring-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: ask him if he does .
Sem: lambda $0_{r}.v|ask_1(you,pro:obj|him_2,$0)
example_end

Sent: wait you have_to ask him first .
Sem: lambda $0_{r}.and(v|wait_1(you,$0),mod:aux|have_to_3(and(v|ask_4(pro:per|you_2,pro:obj|him_5,$0),adv|first_6($0)),$0))
example_end

Sent: well you don 't want milk in your orange juice .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|want_5(pro:per|you_2,BARE($1,n|milk_6($1)),$0),prep|in_7(det:poss|your_8($2,and_comp(n|orange_9($2),n|juice_10($2))),$0)),$0),$0),co|well_1($0))
example_end

Sent: you sit on the other side of the table .
Sem: lambda $0_{r}.and(v|sit_2(pro:per|you_1,$0),prep|on_3(det:art|the_4($1,att(and(qn|other_5($1),n|side_6($1)),prep|of_7(det:art|the_8($2,n|table_9($2))))),$0))
example_end

Sent: are you drinking your coffee ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|drink-presp_3(pro:per|you_2,det:poss|your_4($1,n|coffee_5($1)),$0),$0))
example_end

Sent: poor Ursula ?
Sem: BARE($0,Q(att(n:prop|ursula_2,BARE($1,adj|poor_1($1)),$0)))
example_end

Sent: yes he spilled something on his hands .
Sem: lambda $0_{r}.and(and(v|spill-past_3(pro:sub|he_2,BARE($1,pro:indef|something_4($1)),$0),prep|on_5(det:poss|his_6($2,n|hand-pl_7($2)),$0)),co|yes_1($0))
example_end

Sent: who drinks coffee like that ?
Sem: lambda $1_{e}.lambda $0_{r}.and(n|drink-pl_2($1,BARE($2,n|coffee_3($2)),$0),prep|like_4(pro:dem|that_5,$0))
example_end

Sent: what do you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you have sugar in there ?
Sem: lambda $0_{r}.Q(and(v|have_2(pro:per|you_1,BARE($1,n|sugar_3($1)),$0),prep|in_4(adv|there_5($0))))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: what kind of exercise is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|exercise_4($2)))))
example_end

Sent: you 're exercising ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|exercise-presp_3(pro:per|you_1,$0),$0))
example_end

Sent: what about Hump Dump ?
Sem: att(pro:int|what_1,prep|about_2(BARE($0,and_comp(n:prop|humpty_3($0),n:prop|dumpty_4($0)))))
example_end

Sent: let you reach what ?
Sem: lambda $2_{e}.lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|reach_3(pro:per|you_2,$2,$1),$0)
example_end

Sent: more juice ?
Sem: BARE($0,Q(n|juice_2($0)))
example_end

Sent: did you get more coffee Adam ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|get_3(pro:per|you_2,adv|more_4($1,n|coffee_5($1)),$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what did happen to you ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|happen_3(you,$1,$0),prep|to_4(pro:per|you_5,$0)),$0)
example_end

Sent: you fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0))
example_end

Sent: did you hurt yourself ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: oh where did you hurt yourself ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(v|hurt-zero_5(pro:per|you_4,pro:refl|yourself_6,$0),$1($0)),$0),co|oh_1($0))
example_end

Sent: what are you going to push ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|push_6($2,$1),$0),$0)
example_end

Sent: don 't spill your coffee .
Sem: lambda $0_{r}.not(mod|do_1(v|spill_3(you,det:poss|your_4($1,n|coffee_5($1)),$0),$0),$0)
example_end

Sent: you 're going around ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|go-presp_3(pro:per|you_1,$0),adv|around_4($0)),$0))
example_end

Sent: what happens when you go around like that ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_2($1,$0),and(and(and(v|go_5(pro:per|you_4,$0),$2($0)),adv|around_6($0)),prep|like_7(pro:dem|that_8,$0)))
example_end

Sent: excuse you please ?
Sem: lambda $0_{r}.Q(and(v|excuse_1(you,pro:per|you_2,$0),co|please_3($0)))
example_end

Sent: why were you talking like that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.cop|be-past_2(and(and(part|talk-presp_4(pro:per|you_3,$0),$1($0)),prep|like_5(pro:dem|that_6,$0)),$0)
example_end

Sent: oh your tummy made a noise ?
Sem: lambda $0_{r}.Q(and(v|make-past_4(det:poss|your_2($1,n|tummy_3($1)),det:art|a_5($2,n|noise_6($2)),$0),co|oh_1($0)))
example_end

Sent: let Adam stir you .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|stir_3(n:prop|adam_2,pro:per|you_4,$1),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I don 't want milk over me .
Sem: lambda $0_{r}.not(mod|do_2(and(v|want_4(pro:sub|i_1,BARE($1,n|milk_5($1)),$0),adv|over_6(pro:obj|me_7,$0)),$0),$0)
example_end

Sent: he doesn 't want to exercise .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|he_1,lambda $1_{r}.v|exercise_6(pro:sub|he_1,$1),$0),$0),$0)
example_end

Sent: no honey .
Sem: lambda $0_{r}.qn|no_1($0)
example_end

Sent: Adam he doesn 't want to exercise .
Sem: lambda $0_{r}.not(mod|do_3(v|want_5(pro:sub|he_2,lambda $1_{r}.v|exercise_7(pro:sub|he_2,$1),$0),$0),$0)
example_end

Sent: am I supposed to exercise ?
Sem: lambda $0_{r}.Q(aux|be-1s_1(v|suppose-past_3(pro:sub|i_2,lambda $1_{r}.n|exercise_5(pro:sub|i_2,$1),$0),$0))
example_end

Sent: but I can 't stand on my head .
Sem: lambda $0_{r}.not(mod|can_3(and(v|stand_5(pro:sub|i_2,$0),prep|on_6(det:poss|my_7($1,n|head_8($1)),$0)),$0),$0)
example_end

Sent: is it alright if he drinks his coffee now ?
Sem: lambda $0_{r}.Q(conj|if_4(and(v|drink-3s_6(pro:sub|he_5,det:poss|his_7($1,n|coffee_8($1)),$0),adv|now_9($0)),adj|alright_3($0)))
example_end

Sent: well he can 't exercise like you .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|exercise_5(pro:sub|he_2,$0),prep|like_6(pro:per|you_7,$0)),$0),$0),adv|well_1($0))
example_end

Sent: you made it ?
Sem: lambda $0_{r}.Q(v|make-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: Adam you write on one side of the paper remember ?
Sem: lambda $0_{r}.Q(and(and(v|write_3(pro:per|you_2,$0),prep|on_4(BARE($1,att(det:num|one_5(n|side_6($1)),prep|of_7(det:art|the_8($2,n|paper_9($2))))),$0)),v|remember_10(you,$0)))
example_end

Sent: with gas .
Sem: prep|with_1(BARE($0,n|gas_2($0)))
example_end

Sent: don 't be so rough with the pen .
Sem: BARE($0,v|rough_5($0))
example_end

Sent: are those stars ?
Sem: lambda $0_{r}.Q(n|star-pl_3(pro:dem|those_2,$0))
example_end

Sent: what are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: is that Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(pro:rel|that_2,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Adam what am I doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-1s_3(part|do-presp_5(pro:sub|i_4,$1,$0),$0)
example_end

Sent: what is today ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,adv:tem|today_3($2)),$0)
example_end

Sent: what comes after Wednesday ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|come-3s_2($1,$0),adv:tem|after_3(n:prop|wednesday_4,$0))
example_end

Sent: what happens now ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_2($1,$0),adv|now_3($0))
example_end

Sent: you 'd like more coffee ?
Sem: lambda $0_{r}.Q(mod|~genmod_2(v|like_3(pro:per|you_1,BARE($1,and(qn|more_4($1),n|coffee_5($1))),$0),$0))
example_end

Sent: more coffee ?
Sem: BARE($0,Q(n|coffee_2($0)))
example_end

Sent: whose what is that ?
Sem: lambda $1_{e}.lambda $2_{e}.lambda $0_{r}.$1(pro:dem|that_4,$2(pro:dem|that_4,$0))
example_end

Sent: two Adam ?
Sem: BARE($0,Q(n:prop|adam_2($0)))
example_end

Sent: where 's the other Adam ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(BARE($1,qn|other_4($1)),$0),$2($0))
example_end

Sent: put your coffee down .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:poss|your_2($1,n|coffee_3($1)),$0),adv|down_4($0))
example_end

Sent: stir that ?
Sem: lambda $0_{r}.Q(v|stir_1(you,pro:dem|that_2,$0))
example_end

Sent: one leg ?
Sem: BARE($0,Q(n|leg_2($0)))
example_end

Sent: you 're riding over the rocks ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|ride-presp_3(pro:per|you_1,$0),prep|over_4(det:art|the_5($1,n|rock-pl_6($1)),$0)),$0))
example_end

Sent: you 're going to ride over the rocks ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(n|ride_5(pro:per|you_1,$1),adv|over_6(det:art|the_7($2,n|rock-pl_8($2)),$1)),$0),$0))
example_end

Sent: why do you have your mouth open ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,det:poss|your_5($1,and(adj|open_7($1),n|mouth_6($1))),$0),$2($0)),$0)
example_end

Sent: what 's that noise ?
Sem: lambda $1_{e}.lambda $1_{e}.lambda $0_{r}.cop|~be_2(pro:dem|that_3($1,n|noise_4($1,$0)),$0)
example_end

Sent: ride over the rug ?
Sem: lambda $0_{r}.Q(and(n|ride_1(you,$0),adv|over_2(det:art|the_3($1,n|rug_4($1)),$0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: do you have enough gas ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,BARE($1,and(adj|enough_4($1),n|gas_5($1))),$0),$0))
example_end

Sent: oh you ran out_of gas ?
Sem: lambda $0_{r}.Q(and(v|run-past_3_out_of_4(pro:per|you_2,BARE($1,n|gas_5($1)),$0),co|oh_1($0)))
example_end

Sent: you have_to push it now ?
Sem: lambda $0_{r}.Q(mod:aux|have_to_2(and(v|push_3(pro:per|you_1,pro:per|it_4,$0),adv|now_5($0)),$0))
example_end

Sent: you want me to put gas in ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|put-zero_5(pro:obj|me_3,BARE($2,n|gas_6($2)),$1),adv|in_7($1)),$0))
example_end

Sent: oh did you pay him ?
Sem: lambda $0_{r}.Q(and(mod|do-past_2(v|pay_4(pro:per|you_3,pro:obj|him_5,$0),$0),co|oh_1($0)))
example_end

Sent: do you want your change ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,det:poss|your_4($1,n|change_5($1)),$0),$0))
example_end

Sent: you mustn 't drive off until you get your change .
Sem: lambda $0_{r}.not(prep|until_6(v|get_8(pro:per|you_7,det:poss|your_9($1,n|change_10($1)),$0),mod|must_2(and(v|drive_4(pro:per|you_1,$0),adv|off_5($0)),$0)),$0)
example_end

Sent: is she finished ?
Sem: lambda $0_{r}.Q(v|finish-past_3(pro:sub|she_2,$0))
example_end

Sent: yes I 'm finished .
Sem: lambda $0_{r}.and(part|finish-pastp_4(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: you don 't put gas in the wheel in the tire you put air .
Sem: lambda $0_{r}.not(and(mod|do_2(and(v|put-zero_4(pro:per|you_1,BARE($1,n|gas_5($1)),$0),prep|in_6(det:art|the_7($2,n|wheel_8($2)),$0)),$0),and(v|put-zero_13(pro:per|you_12,BARE($3,n|air_14($3)),$0),prep|in_9(det:art|the_10($4,n|tire_11($4)),$0))),$0)
example_end

Sent: can I check the tires ?
Sem: lambda $0_{r}.Q(mod|can_1(v|check_3(pro:sub|i_2,det:art|the_4($1,n|tire-pl_5($1)),$0),$0))
example_end

Sent: I think they 're okay .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,$0)
example_end

Sent: I think they have enough air .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|have_4(pro:sub|they_3,BARE($2,and(adj|enough_5($2),n|air_6($2))),$1),$0)
example_end

Sent: do you want your change ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,det:poss|your_4($1,n|change_5($1)),$0),$0))
example_end

Sent: take care .
Sem: lambda $0_{r}.v|take_1_care_2(you,$0)
example_end

Sent: that 's Mommy ?
Sem: lambda $0_{r}.Q(n:prop|mommy_3(pro:dem|that_1,$0))
example_end

Sent: oh that 's Mommy 's change .
Sem: lambda $0_{r}.and(n:prop|mommy_4's'(pro:dem|that_2,n|change_6(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: is that Mommy 's change .
Sem: lambda $0_{r}.n:prop|mommy_3's'(pro:dem|that_2,n|change_5(pro:dem|that_2,$0))
example_end

Sent: hit Mommy ?
Sem: lambda $0_{r}.Q(v|hit-zero_1(you,n:prop|mommy_2,$0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh you 're busy .
Sem: lambda $0_{r}.and(adj|busy_4(pro:per|you_2,$0),co|oh_1($0))
example_end

Sent: oh what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_3(part|do-presp_5(pro:per|you_4,$1,$0),$0),co|oh_1($0))
example_end

Sent: you 're checking the wheels ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|check-presp_3(pro:per|you_1,det:art|the_4($1,n|wheel-pl_5($1)),$0),$0))
example_end

Sent: are they alright ?
Sem: lambda $0_{r}.Q(co|alright_3(pro:sub|they_2,$0))
example_end

Sent: that wheel 's alright .
Sem: lambda $0_{r}.co|alright_4(pro:dem|that_1($1,n|wheel_2($1)),$0)
example_end

Sent: that 's a gas station ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,and_comp(n|gas_4(pro:dem|that_1,$0),n|station_5(pro:dem|that_1,$0))))
example_end

Sent: yes it 's squeaking .
Sem: lambda $0_{r}.and(cop|~be_3(part|squeak-presp_4(pro:per|it_2,$0),$0),co|yes_1($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: sick yes .
Sem: lambda $0_{r}.and(adj|sick_1($0),co|yes_2($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: little red spots .
Sem: BARE($0,and(adj|red_2($0),and(adj|little_1($0),n|spot-pl_3($0))))
example_end

Sent: came from the dog .
Sem: lambda $0_{r}.and(v|come-past_1(you,$0),prep|from_2(det:art|the_3($1,n|dog_4($1)),$0))
example_end

Sent: he has a dog named Spot .
Sem: lambda $0_{r}.v|have-3s_2(pro:sub|he_1,det:art|a_3($1,and(n|dog_4($1),lambda $2_{r}.v|name-past_5($1,n:prop|spot_6,$2))),$0)
example_end

Sent: your tire is broken ?
Sem: lambda $0_{r}.Q(part|break-pastp_4(det:poss|your_1($1,n|tire_2($1)),$0))
example_end

Sent: you must go over there ?
Sem: lambda $0_{r}.Q(mod|must_2(and(v|go_3(pro:per|you_1,$0),adv|over_4(adv|there_5($0))),$0))
example_end

Sent: you almost fell down ?
Sem: lambda $0_{r}.Q(and(and(v|fall-past_3(pro:per|you_1,$0),adv|almost_2($0)),adv|down_4($0)))
example_end

Sent: the tire is broken ?
Sem: lambda $0_{r}.Q(part|break-pastp_4(det:art|the_1($1,n|tire_2($1)),$0))
example_end

Sent: you almost fell down because you weren 't looking where you were going .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.conj|because_5(not(and(cop|be_7(part|look-presp_9(pro:per|you_6,$0),$0),aux|be-past_12(and(part|go-presp_13(pro:per|you_11,$0),$1($0)),$0)),$0),and(and(v|fall-past_3(pro:per|you_1,$0),adv|almost_2($0)),adv|down_4($0)))
example_end

Sent: you almost rode over a stick ?
Sem: lambda $0_{r}.Q(and(and(v|ride-past_3(pro:per|you_1,$0),adv|almost_2($0)),prep|over_4(det:art|a_5($1,n|stick_6($1)),$0)))
example_end

Sent: you want me to put gas in there ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|put-zero_5(pro:obj|me_3,BARE($2,n|gas_6($2)),$1),prep|in_7(adv|there_8($1))),$0))
example_end

Sent: because a nail 's in there ?
Sem: lambda $0_{r}.Q(and(poss|~s_4(det:art|a_2($1,n|nail_3($1)),$0),adv|in_5(adv|there_6($0))))
example_end

Sent: well didn 't you say there was a nail in there ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|say_5(pro:per|you_4,lambda $1_{r}.and(cop|be-past_7(det:art|a_8($2,n|nail_9($2)),$1),prep|in_10(adv|there_11($1))),$0),$0),$0),co|well_1($0)))
example_end

Sent: I think it 's filled .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.part|fill-pastp_5(pro:per|it_3,$1),$0)
example_end

Sent: you touched Cromer ?
Sem: lambda $0_{r}.Q(v|touch-past_2(pro:per|you_1,n:prop|cromer_3,$0))
example_end

Sent: you hit your handle bar on your tricycle .
Sem: lambda $0_{r}.and(v|hit-zero_2(pro:per|you_1,det:poss|your_3($1,and_comp(n|handle_4($1),n|bar_5($1))),$0),prep|on_6(det:poss|your_7($2,n|tricycle_8($2)),$0))
example_end

Sent: more gas ?
Sem: BARE($0,Q(n|gas_2($0)))
example_end

Sent: you finished ?
Sem: lambda $0_{r}.Q(v|finish-past_2(pro:per|you_1,$0))
example_end

Sent: you just got some gas in it .
Sem: lambda $0_{r}.and(v|get-past_3(pro:per|you_1,qn|some_4($1,att(n|gas_5($1),prep|in_6(pro:per|it_7))),$0),adv|just_2($0))
example_end

Sent: did you pay for the gas ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|pay_3(pro:per|you_2,$0),prep|for_4(det:art|the_5($1,n|gas_6($1)),$0)),$0))
example_end

Sent: did you ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:per|you_2,$0))
example_end

Sent: ask him for change Adam .
Sem: lambda $0_{r}.and(v|ask_1(you,pro:obj|him_2,$0),prep|for_3(BARE($1,n|change_4($1)),$0))
example_end

Sent: he said stamps .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|he_1,BARE($1,n|stamp-pl_3($1)),$0)
example_end

Sent: good bye you take came .
Sem: lambda $0_{r}.and(v|take_4_come-past_5(pro:per|you_3,$0),co|bye_2_good_1($0))
example_end

Sent: oh don 't do that .
Sem: lambda $0_{r}.and(not(mod|do_2(v|do_4(you,pro:dem|that_5,$0),$0),$0),co|oh_1($0))
example_end

Sent: we 'll have_to have the doctor take care of my foot if you run over it with your tricycle .
Sem: lambda $0_{r}.conj|if_12(and(and(v|run_14_over_15(pro:per|you_13,$0),pro:per|it_16($0)),prep|with_17(det:poss|your_18($1,n|tricycle_19($1)),$0)),mod:aux|have_to_3(mod|~will_2(v|have_4(pro:sub|we_1,lambda $2_{r}.and(v|take_7_care_8(det:art|the_5($3,n|doctor_6($3)),$2),prep|of_9(det:poss|my_10($4,n|foot_11($4)),$2)),$0),$0),$0))
example_end

Sent: doctor yes .
Sem: lambda $0_{r}.and(n|doctor_1($0),co|yes_2($0))
example_end

Sent: don 't you think you 're finished ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|think_4(pro:per|you_3,lambda $1_{r}.part|finish-pastp_7(pro:per|you_5,$1),$0),$0),$0))
example_end

Sent: don 't you think you 've had enough ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|think_4(pro:per|you_3,lambda $1_{r}.aux|~have_6(and(part|have-pastp_7(pro:per|you_5,$1),adv|enough_8($1)),$1),$0),$0),$0))
example_end

Sent: are you sure ?
Sem: lambda $0_{r}.Q(adj|sure_3(pro:per|you_2,$0))
example_end

Sent: you don 't have enough ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(v|have_4(pro:per|you_1,$0),adv|enough_5($0)),$0),$0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: just take the cup first Adam .
Sem: lambda $0_{r}.and(and(v|take_2(you,det:art|the_3($1,n|cup_4($1)),$0),adv|just_1($0)),adv|first_5($0))
example_end

Sent: no thanks .
Sem: not(BARE($0,co|thanks_2($0)))
example_end

Sent: no you just take the cup .
Sem: lambda $0_{r}.and(and(v|take_4(pro:per|you_2,det:art|the_5($1,n|cup_6($1)),$0),adv|just_3($0)),co|no_1($0))
example_end

Sent: don 't drink it ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|drink_3(you,pro:per|it_4,$0),$0),$0))
example_end

Sent: yeah little boys like you .
Sem: lambda $0_{r}.and(att(and(adj|little_2($0),n|boy-pl_3($0)),prep|like_4(pro:per|you_5)),co|yeah_1($0))
example_end

Sent: is it good Adam ?
Sem: lambda $0_{r}.Q(adj|good_3(pro:per|it_2,$0))
example_end

Sent: is it delicious ?
Sem: lambda $0_{r}.Q(adj|delicious_3(pro:per|it_2,$0))
example_end

Sent: is it delicious ?
Sem: lambda $0_{r}.Q(adj|delicious_3(pro:per|it_2,$0))
example_end

Sent: it 's delicious .
Sem: lambda $0_{r}.adj|delicious_3(pro:per|it_1,$0)
example_end

Sent: it 's delicious .
Sem: lambda $0_{r}.adj|delicious_3(pro:per|it_1,$0)
example_end

Sent: tie your shoe ?
Sem: lambda $0_{r}.Q(v|tie_1(you,det:poss|your_2($1,n|shoe_3($1)),$0))
example_end

Sent: let Cromer tie it ?
Sem: lambda $0_{r}.Q(v|let-zero_1(you,lambda $1_{r}.n|tie_3(n:prop|cromer_2,pro:per|it_4,$1),$0))
example_end

Sent: well I 've tied it now .
Sem: lambda $0_{r}.and(aux|~have_3(and(part|tie-pastp_4(pro:sub|i_2,pro:per|it_5,$0),adv|now_6($0)),$0),co|well_1($0))
example_end

Sent: it 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:per|it_1,$0)
example_end

Sent: Adam no !
Sem: lambda $0_{r}.co|no_2($0)
example_end

Sent: that doesn 't belong under there does it ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|belong_4(pro:dem|that_1,$0),prep|under_5(adv|there_6($0))),$0),$0),mod|do-3s_7(pro:per|it_8,$0)))
example_end

Sent: alright you 're seeing the penguin .
Sem: lambda $0_{r}.and(aux|~be_3(part|see-presp_4(pro:per|you_2,det:art|the_5($1,n|penguin_6($1)),$0),$0),co|alright_1($0))
example_end

Sent: no Adam you 'll tear that .
Sem: lambda $0_{r}.and(mod|~will_4(v|tear_5(pro:per|you_3,pro:dem|that_6,$0),$0),co|no_1($0))
example_end

Sent: Daddy 's desk isn 't a toy is it ?
Sem: lambda $0_{r}.Q(and(not(det:art|a_6(n:prop|daddy_1's($1,n|desk_3($1)),n|toy_7(n:prop|daddy_1's($1,n|desk_3($1)),$0)),$0),aux|be-3s_8(pro:per|it_9,$0)))
example_end

Sent: where did you have it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|have_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: did you put a bib on ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|put-zero_3(pro:per|you_2,det:art|a_4($1,n|bib_5($1)),$0),adv|on_6($0)),$0))
example_end

Sent: where did you eat it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|eat_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: what kind was it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,adj|kind_2(pro:per|it_4,$0))
example_end

Sent: what else did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|do_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: did you see a bridge ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,det:art|a_4($1,n|bridge_5($1)),$0),$0))
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: you saw an open can ?
Sem: lambda $0_{r}.Q(v|see-past_2(pro:per|you_1,det:art|a_3($1,and(adj|open_4($1),mod|can_5($1))),$0))
example_end

Sent: what kind of can ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,mod|can_4($2)))))
example_end

Sent: it 's the telephone .
Sem: lambda $0_{r}.det:art|the_3(pro:per|it_1,n|telephone_4(pro:per|it_1,$0))
example_end

Sent: yes he is over at the school .
Sem: lambda $0_{r}.and(and(aux|be-3s_3(pro:sub|he_2,$0),adv|over_4(prep|at_5(det:art|the_6($1,n|school_7($1)),$0))),co|yes_1($0))
example_end

Sent: what about Urs ?
Sem: att(pro:int|what_1,prep|about_2(n:prop|ursula_3))
example_end

Sent: was that Urs on the phone ?
Sem: lambda $0_{r}.Q(att(n:prop|ursula_3(pro:rel|that_2,$0),prep|on_4(det:art|the_5($1,n|phone_6($1)))))
example_end

Sent: perhaps she doesn 't have anything for you to see in the bag .
Sem: lambda $0_{r}.not(mod|do_3(and(and(v|have_5(pro:sub|she_2,lambda $1_{r}.and(v|see_10(BARE($2,pro:indef|anything_6($2)),$1),prep|in_11(det:art|the_12($3,n|bag_13($3)),$1)),$0),co|perhaps_1($0)),prep|for_7(pro:per|you_8,$0)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: card for you ?
Sem: BARE($0,Q(att(n|card_1($0),prep|for_2(pro:per|you_3))))
example_end

Sent: no it 's from Robin .
Sem: lambda $0_{r}.and(prep|from_4(n:prop|robin_5,pro:per|it_2,$0),co|no_1($0))
example_end

Sent: measles yes .
Sem: lambda $0_{r}.and(n:pt|measles_1($0),co|yes_2($0))
example_end

Sent: here 's a little spot .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,and(adj|little_4($1),n|spot_5($1))),$0),pro:exist|here_1($0))
example_end

Sent: no I don 't think she has anything else to show you .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.aux|have-3s_7(pro:sub|she_6,lambda $2_{r}.v|show_11(post|else_9(BARE($3,pro:indef|anything_8($3))),pro:per|you_12,$2),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: I know .
Sem: lambda $0_{r}.v|know_2(pro:sub|i_1,$0)
example_end

Sent: would you like this ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,pro:dem|this_4,$0),$0))
example_end

Sent: he 's going to play basketball .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|he_1,lambda $1_{r}.n|play_5(pro:sub|he_1,BARE($2,n|basket+ball_6($2)),$1),$0),$0)
example_end

Sent: oh that 's too big ?
Sem: lambda $0_{r}.Q(and(adv|too_4(adj|big_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: that 's big too ?
Sem: lambda $0_{r}.Q(post|too_4(adj|big_3(pro:dem|that_1,$0)))
example_end

Sent: why do you need those on the tow truck ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(and(v|need_4(pro:per|you_3,pro:dem|those_5,$0),$1($0)),prep|on_6(det:art|the_7($2,and_comp(n|tow_8($2),n|truck_9($2))),$0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: don 't fell down .
Sem: lambda $0_{r}.not(mod|do_1(and(v|fall-past_3(you,$0),adv|down_4($0)),$0),$0)
example_end

Sent: what doctor are you going to ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.cop|be-pres_3(part|go-presp_5(pro:per|you_4,$1($2,n|doctor_2($2)),$0),$0)
example_end

Sent: do you think you car ride like that Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.and(n|ride_6(pro:per|you_4($2,n|car_5($2)),$1),co|like_7(det:dem|that_8,$1)),$0),$0))
example_end

Sent: you 're going to fix the tricycle ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|fix_5(pro:per|you_1,det:art|the_6($2,n|tricycle_7($2)),$1),$0),$0))
example_end

Sent: should I put something in there ?
Sem: lambda $0_{r}.Q(mod|should_1(and(v|put-zero_3(pro:sub|i_2,BARE($1,pro:indef|something_4($1)),$0),prep|in_5(adv|there_6($0))),$0))
example_end

Sent: put it in here ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,pro:per|it_2,$0),prep|in_3(adv|here_4($0))))
example_end

Sent: do you want me to attach it to the tricycle ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|attach_6(pro:obj|me_4,pro:per|it_7,$1),prep|to_8(det:art|the_9($2,n|tricycle_10($2)),$1)),$0),$0))
example_end

Sent: well if you know how why don 't you do it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(not(mod|do_7(conj|if_2(and(v|know_4(pro:per|you_3,$0),adv:int|how_5($0)),and(v|do_10(pro:per|you_9,pro:per|it_11,$0),$1($0))),$0),$0),co|well_1($0))
example_end

Sent: do you think Cromer can do it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|can_5(v|do_6(n:prop|cromer_4,pro:per|it_7,$1),$1),$0),$0))
example_end

Sent: do you think Cromer can do it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|can_5(v|do_6(n:prop|cromer_4,pro:per|it_7,$1),$1),$0),$0))
example_end

Sent: bulldozer song ?
Sem: BARE($0,Q(and_comp(n|bulldoze-dv_1($0),n|song_2($0))))
example_end

Sent: what 's the bulldozer song ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,and_comp(n|bulldoze-dv_4($2),n|song_5($2))),$0)
example_end

Sent: what 's the bulldozer song ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,and_comp(n|bulldoze-dv_4($2),n|song_5($2))),$0)
example_end

Sent: but I 'm trying .
Sem: lambda $0_{r}.aux|~be_3(part|try-presp_4(pro:sub|i_2,$0),$0)
example_end

Sent: bulldozer strong ?
Sem: BARE($0,Q(and(adj|strong_2($0),n|bulldoze-dv_1($0))))
example_end

Sent: can you sing it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|sing_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: it 's attached .
Sem: lambda $0_{r}.aux|~be_2(part|attach-pastp_3(pro:per|it_1,$0),$0)
example_end

Sent: well what is the bulldozer song ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(det:art|the_4($2,and_comp(n|bulldoze-dv_5($2),n|song_6($2))),$0),co|well_1($0))
example_end

Sent: would you like her to go to the doctor ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.and(v|go_6(pro:obj|her_4,$1),prep|to_7(det:art|the_8($2,n|doctor_9($2)),$1)),$0),$0))
example_end

Sent: what doctor would you like her to go to ?
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.mod|will-cond_3(v|like_5(pro:per|you_4,lambda $1_{r}.and(v|go_8(pro:obj|her_6,$1),prep|to_9($2($3,n|doctor_2($3)),$1)),$0),$0)
example_end

Sent: go where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|go_1(you,$0),$1($0))
example_end

Sent: now the tricycle is fixed .
Sem: lambda $0_{r}.adv|now_1(part|fix-pastp_5(det:art|the_2($1,n|tricycle_3($1)),$0))
example_end

Sent: don 't run it over her again .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|run_3(you,pro:per|it_4,$0),adv|over_5(pro:obj|her_6,$0)),adv|again_7($0)),$0),$0)
example_end

Sent: did you say thank_you ?
Sem: lambda $0_{r}.Q(and(v|do-past_1(v|say_3(pro:per|you_2,$0),$0),n|thank_you_4(you,$0)))
example_end

Sent: you 're giving Perro a ride ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|give-presp_3(pro:per|you_1,det:art|a_5($1,n|ride_6($1)),n:prop|perro_4,$0),$0))
example_end

Sent: does he like it ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|like_3(pro:sub|he_2,pro:per|it_4,$0),$0))
example_end

Sent: what about the tire ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|tire_4($0))))
example_end

Sent: push tire ?
Sem: lambda $0_{r}.Q(n|push_1(you,BARE($1,n|tire_2($1)),$0))
example_end

Sent: Adam write on one side of the paper only .
Sem: lambda $0_{r}.and(and(v|write_2(you,$0),prep|on_3(BARE($1,att(det:num|one_4(n|side_5($1)),prep|of_6(det:art|the_7($2,n|paper_8($2))))),$0)),qn|only_9($0))
example_end

Sent: what did you write Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|write_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: a neck ?
Sem: BARE($0,Q(det:art|a_1($1,n|neck_2($1),$0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: where 's the neck ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|neck_4($1)),$0),$2($0))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: three six ears ?
Sem: BARE($0,Q(n|ear-pl_3($0)))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: where is the ship going ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|go-presp_5(det:art|the_3($1,n|ship_4($1)),$0),$2($0)),$0)
example_end

Sent: going to fish school ?
Sem: lambda $0_{r}.Q(and(part|go-presp_1(you,$0),prep|to_2(BARE($1,and_comp(n|fish_3($1),n|school_4($1))),$0)))
example_end

Sent: what does it learn at fish school ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(and(v|learn_4(pro:per|it_3,$1,$0),prep|at_5(BARE($2,and_comp(n|fish_6($2),n|school_7($2))),$0)),$0)
example_end

Sent: no fish school .
Sem: qn|no_1($0,and_comp(n|fish_2($0),n|school_3($0)))
example_end

Sent: Adam if you write all over the paper where will Urs write ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will_10(conj|if_2(and(v|write_4(pro:per|you_3,$0),adv|all_5(prep|over_6(det:art|the_7($1,n|paper_8($1)),$0))),and(v|write_12(n:prop|ursula_11,$0),$2($0))),$0)
example_end

Sent: you 're doing what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_3(pro:per|you_1,$1,$0),$0)
example_end

Sent: she hasn 't finished with that page .
Sem: lambda $0_{r}.not(aux|have_2(and(v|finish-past_4(pro:sub|she_1,$0),prep|with_5(pro:dem|that_6($1,n|page_7($1)),$0)),$0),$0)
example_end

Sent: would you like to use this one Adam ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|use_5(pro:per|you_2,pro:dem|this_6($2,pro:indef|one_7($2)),$1),$0),$0))
example_end

Sent: what did you write ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|write_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: remember firetruck .
Sem: lambda $0_{r}.v|remember_1(you,BARE($1,n|fire+truck_2($1)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a rope ?
Sem: BARE($0,Q(det:art|a_1($1,n|rope_2($1),$0)))
example_end

Sent: let you make a rope ?
Sem: lambda $0_{r}.Q(v|let-zero_1(you,lambda $1_{r}.v|make_3(pro:per|you_2,det:art|a_4($2,n|rope_5($2)),$1),$0))
example_end

Sent: you made it ?
Sem: lambda $0_{r}.Q(v|make-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: what do you do with this rope ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(pro:dem|this_6($2,n|rope_7($2)),$0)),$0)
example_end

Sent: that 's not a story .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|story+book_5(pro:dem|that_1,$0)),$0)
example_end

Sent: it 's a book with numbers .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,att(n|book_4(pro:per|it_1,$0),prep|with_5(BARE($1,n|number-pl_6($1)))))
example_end

Sent: that 's a boy with a horse .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(n|boy_4(pro:dem|that_1,$0),prep|with_5(det:art|a_6($1,n|horse_7($1)))))
example_end

Sent: see the horse ?
Sem: lambda $0_{r}.Q(v|see_1(you,det:art|the_2($1,n|horse_3($1)),$0))
example_end

Sent: it 's a boy in armor .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,att(n|boy_4(pro:per|it_1,$0),prep|in_5(BARE($1,n|armor_6($1)))))
example_end

Sent: what 's he looking at .
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|look-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: maybe the sunrise .
Sem: adv|maybe_1(det:art|the_2($0,n|sunrise_3($0)))
example_end

Sent: no Adam don 't stand on his foot .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|stand_5(you,$0),prep|on_6(det:poss|his_7($1,n|foot_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: that hurts .
Sem: lambda $0_{r}.v|hurt-3s_2(pro:dem|that_1,$0)
example_end

Sent: here stand on the cart .
Sem: lambda $0_{r}.and(and(n|stand_2(you,$0),adv|here_1($0)),prep|on_3(det:art|the_4($1,n|cart_5($1)),$0))
example_end

Sent: would you like for him to stand on your foot ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(and(v|like_3(pro:per|you_2,lambda $1_{r}.and(v|stand_7(pro:per|you_2,$1),prep|on_8(det:poss|your_9($2,n|foot_10($2)),$1)),$0),prep|for_4(pro:obj|him_5,$0)),$0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what do you call that ?
Sem: lambda $0_{r}.v|call_4(pro:per|you_3,pro:dem|that_5,$0)
example_end

Sent: push it over near the table .
Sem: lambda $0_{r}.and(and(v|push_1(you,pro:per|it_2,$0),adv|over_3($0)),prep|near_4(det:art|the_5($1,n|table_6($1)),$0))
example_end

Sent: let Urs show you .
Sem: lambda $0_{r}.v|let-zero_1(you,n:prop|ursula_2,$0)
example_end

Sent: Adam just look .
Sem: lambda $0_{r}.and(cop|look_3(you,$0),adv|just_2($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: and this one ?
Sem: BARE($0,Q(pro:dem|this_2($1,pro:indef|one_3($1),$0)))
example_end

Sent: the sunshine is laughing .
Sem: lambda $0_{r}.aux|be-3s_3(part|laugh-presp_4(det:art|the_1($1,n|sunshine_2($1)),$0),$0)
example_end

Sent: what 's this one ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3($2,pro:indef|one_4($2)),$0)
example_end

Sent: and this ?
Sem: BARE($0,Q(pro:dem|this_2($0)))
example_end

Sent: a violin ?
Sem: BARE($0,Q(det:art|a_1($1,n|violin_2($1),$0)))
example_end

Sent: and this ?
Sem: BARE($0,Q(pro:dem|this_2($0)))
example_end

Sent: and this ?
Sem: BARE($0,Q(pro:dem|this_2($0)))
example_end

Sent: and this ?
Sem: BARE($0,Q(pro:dem|this_2($0)))
example_end

Sent: the end .
Sem: det:art|the_1($0,n|end_2($0))
example_end

Sent: that 's a tail .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|tail_4(pro:dem|that_1,$0))
example_end

Sent: he doesn 't feel like exercising .
Sem: lambda $0_{r}.not(mod|do_2(and(v|feel_4(pro:sub|he_1,$0),co|like_5(BARE($1,part|exercise-presp_6($1)),$0)),$0),$0)
example_end

Sent: do you do exercises ?
Sem: lambda $0_{r}.Q(mod|do_1(v|do_3(pro:per|you_2,BARE($1,n|exercise-pl_4($1)),$0),$0))
example_end

Sent: what did it have on it ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|have_4(pro:per|it_3,$1,$0),prep|on_5(pro:per|it_6,$0)),$0)
example_end

Sent: well what kind of trailer truck was it ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:per|it_8,att(n|kind_3(pro:per|it_8,$0),prep|of_4(BARE($2,and_comp(n|trailer_5($2),n|truck_6($2)))))),co|well_1($0))
example_end

Sent: yes it was gold .
Sem: lambda $0_{r}.and(adj|gold_4(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: a car trailer truck yellow .
Sem: det:art|a_1($0,and_comp(and_comp(n|car_2($0),n|trailer_3($0)),n|truck_4($0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what else is there ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-3s_3($1,$0)
example_end

Sent: put it back in the folder .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),adv|back_3(prep|in_4(det:art|the_5($1,n|folder_6($1)),$0)))
example_end

Sent: I want you to tell her about this book .
Sem: lambda $0_{r}.v|want_2(pro:sub|i_1,lambda $1_{r}.and(v|tell_5(pro:per|you_3,pro:obj|her_6,$1),prep|about_7(pro:dem|this_8($2,n|book_9($2)),$1)),$0)
example_end

Sent: you don 't want to tell her about the book ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|want_4(pro:per|you_1,lambda $1_{r}.and(v|tell_6(pro:per|you_1,pro:obj|her_7,$1),prep|about_8(det:art|the_9($2,n|book_10($2)),$1)),$0),$0),$0))
example_end

Sent: frightens the chickens ?
Sem: lambda $0_{r}.Q(v|frighten-3s_1(you,det:art|the_2($1,n|chicken-pl_3($1)),$0))
example_end

Sent: driving by itself ?
Sem: lambda $0_{r}.Q(and(part|drive-presp_1(you,$0),prep|by_2(pro:refl|itself_3,$0)))
example_end

Sent: big cloud ?
Sem: BARE($0,Q(and(adj|big_1($0),n|cloud_2($0))))
example_end

Sent: angry faces on the dial .
Sem: BARE($0,att(and(adj|angry_1($0),n|face-pl_2($0)),prep|on_3(det:art|the_4($1,n|dial_5($1)))))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: yes we had coffee .
Sem: lambda $0_{r}.and(v|have-past_3(pro:sub|we_2,BARE($1,n|coffee_4($1)),$0),co|yes_1($0))
example_end

Sent: come and show her about the fireman and the policeman .
Sem: lambda $0_{r}.and(v|show_3(you,pro:obj|her_4,$0),prep|about_5(det:art|the_9($1,det:art|the_6($2,n|police+man_10($2),$1)),$0))
example_end

Sent: what 's the fireman doing ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_5(det:art|the_3($1,n|fire+man_4($1)),$2,$0),$0)
example_end

Sent: oh the fireman 's brave ?
Sem: lambda $0_{r}.Q(and(n|brave_5(det:art|the_2($1,n|fire+man_3($1)),$0),co|oh_1($0)))
example_end

Sent: calling all cars ?
Sem: lambda $0_{r}.Q(part|call-presp_1(you,qn|all_2($1,n|car-pl_3($1)),$0))
example_end

Sent: fireman is brave ?
Sem: lambda $0_{r}.Q(n|brave_3(BARE($1,n|fire+man_1($1)),$0))
example_end

Sent: what is this about ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(pro:dem|this_3_about_4,$1,$0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: yes it 's finished .
Sem: lambda $0_{r}.and(part|finish-pastp_4(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: don 't mash your finger Adam .
Sem: lambda $0_{r}.not(mod|do_1(v|mash_3(you,det:poss|your_4($1,n|finger_5($1)),$0),$0),$0)
example_end

Sent: it will hurt you .
Sem: lambda $0_{r}.mod|will_2(v|hurt-zero_3(pro:per|it_1,pro:per|you_4,$0),$0)
example_end

Sent: why does your finger hurt ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|hurt-zero_5(det:poss|your_3($1,n|finger_4($1)),$0),$2($0)),$0)
example_end

Sent: you had it in your mouth so much ?
Sem: lambda $0_{r}.Q(and(and(v|have-past_2(pro:per|you_1,pro:per|it_3,$0),prep|in_4(det:poss|your_5($1,n|mouth_6($1)),$0)),adv|so_7(qn|much_8($0))))
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: how do you play baseball ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(n|play_4(pro:per|you_3,BARE($1,n|baseball_5($1)),$0),$2($0)),$0)
example_end

Sent: oh you swing the bat .
Sem: lambda $0_{r}.and(v|swing_3(pro:per|you_2,det:art|the_4($1,n|bat_5($1)),$0),co|oh_1($0))
example_end

Sent: and what d you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_3(v|do_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: and someone has a glove .
Sem: lambda $0_{r}.v|have-3s_3(pro:indef|someone_2,det:art|a_4($1,n|glove_5($1)),$0)
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: why do you swing the bat ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|swing_4(pro:per|you_3,det:art|the_5($1,n|bat_6($1)),$0),$2($0)),$0)
example_end

Sent: oh you play golf too ?
Sem: lambda $0_{r}.Q(and(and(n|play_3(pro:per|you_2,BARE($1,n|golf_4($1)),$0),adv|too_5($0)),co|oh_1($0)))
example_end

Sent: how do you play golf ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(n|play_4(pro:per|you_3,BARE($1,n|golf_5($1)),$0),$2($0)),$0)
example_end

Sent: she didn 't say that .
Sem: lambda $0_{r}.not(mod|do_2(v|say_4(pro:sub|she_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: why don 't you show Urs your puppets ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|show_5(pro:per|you_4,det:poss|your_7($1,n|puppet-pl_8($1)),n:prop|ursula_6,$0),$2($0)),$0),$0)
example_end

Sent: what kind of puppets are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_6,att(n|kind_2(pro:sub|they_6,$0),prep|of_3(BARE($2,n|puppet-pl_4($2)))))
example_end

Sent: I don 't think they want to fight .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|want_6(pro:sub|they_5,lambda $2_{r}.v|fight_8(pro:sub|they_5,$2),$1),$0),$0),$0)
example_end

Sent: I think they 're friends .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.n|friend-pl_5(pro:sub|they_3,$1),$0)
example_end

Sent: they 're kissing .
Sem: lambda $0_{r}.aux|~be_2(part|kiss-presp_3(pro:sub|they_1,$0),$0)
example_end

Sent: how did you hurt your finger ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|hurt-zero_4(pro:per|you_3,det:poss|your_5($1,n|finger_6($1)),$0),$2($0)),$0)
example_end

Sent: scratched it on something ?
Sem: lambda $0_{r}.Q(and(v|scratch-past_1(you,pro:per|it_2,$0),prep|on_3(BARE($1,pro:indef|something_4($1)),$0)))
example_end

Sent: why don 't you tell Urs about the television program you saw last night ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|tell_5(pro:per|you_4,_,n:prop|ursula_6,$0),$1($0)),prep|about_7(det:art|the_8($2,and_comp(n|television_9($2),n|program_10($2))),$0)),$0),$0)
example_end

Sent: a fish ?
Sem: BARE($0,Q(det:art|a_1($1,n|fish_2($1),$0)))
example_end

Sent: a fish fell down !
Sem: lambda $0_{r}.and(v|fall-past_3(det:art|a_1($1,n|fish_2($1)),$0),adv|down_4($0))
example_end

Sent: oh you 're not a fish .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:per|you_2,n|fish_6(pro:per|you_2,$0)),$0),co|oh_1($0))
example_end

Sent: a finger fish .
Sem: det:art|a_1($0,and_comp(n|finger_2($0),n|fish_3($0)))
example_end

Sent: I 've seen a whale .
Sem: lambda $0_{r}.aux|~have_2(part|see-pastp_3(pro:sub|i_1,det:art|a_4($1,n|whale_5($1)),$0),$0)
example_end

Sent: in a book .
Sem: prep|in_1(det:art|a_2($0,n|book_3($0)))
example_end

Sent: I don 't know where the book is now .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(and(cop|be-3s_8(det:art|the_6($2,n|book_7($2)),$1),adv:int|where_5($1)),adv|now_9($1)),$0),$0),$0)
example_end

Sent: why did it do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|it_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: it 's a patrol car .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|patrol_4(pro:per|it_1,$0),n|car_5(pro:per|it_1,$0)))
example_end

Sent: what do you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it looks like a friendly animal .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,and(adj|friend-dn_5($1),n|animal_6($1))),$0))
example_end

Sent: you didn 't play much with it .
Sem: lambda $0_{r}.not(mod|do_2(and(and(v|play_4(pro:per|you_1,$0),qn|much_5($0)),prep|with_6(pro:per|it_7,$0)),$0),$0)
example_end

Sent: look how nice and soft it is .
Sem: lambda $0_{r}.co|look_1(you,lambda $1_{r}.adv:int|how_2(adj|soft_5(pro:per|it_6,$1)),$0)
example_end

Sent: why don 't we name it something .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|name_5(pro:sub|we_4,pro:indef|something_7,pro:per|it_6,$0),$1($0)),$0),$0)
example_end

Sent: it 's something you 've seen .
Sem: lambda $0_{r}.pro:indef|something_3(pro:per|it_1,$0)
example_end

Sent: what is the music it 's playing ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|music_4($2)),$0)
example_end

Sent: oh tell me why you 're frightened .
Sem: lambda $0_{r}.and(v|tell_2(you,pro:obj|me_3,lambda $1_{r}.adv:int|why_4(part|frighten-pastp_7(pro:per|you_5,$1)),$0),co|oh_1($0))
example_end

Sent: it can 't really walk .
Sem: lambda $0_{r}.not(mod|can_2(and(n|walk_5(pro:per|it_1,$0),adv|real-dadj_4($0)),$0),$0)
example_end

Sent: you don 't have what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,$1,$0),$0),$0)
example_end

Sent: those are fish .
Sem: lambda $0_{r}.n|fish_3(pro:dem|those_1,$0)
example_end

Sent: do you think so ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|think_3(pro:per|you_2,$0),co|so_4($0)),$0))
example_end

Sent: look at it carefully .
Sem: lambda $0_{r}.and(and(cop|look_1(you,$0),prep|at_2(pro:per|it_3,$0)),adv|care-dadj_4($0))
example_end

Sent: look at it carefully .
Sem: lambda $0_{r}.and(and(cop|look_1(you,$0),prep|at_2(pro:per|it_3,$0)),adv|care-dadj_4($0))
example_end

Sent: ask Urs if that 's it is .
Sem: lambda $0_{r}.v|ask_1(you,n:prop|ursula_2,lambda $1_{r}.pro:per|it_6(pro:dem|that_4,$1),$0)
example_end

Sent: some people eat snails yes .
Sem: lambda $0_{r}.and(v|eat_3(qn|some_1($1,n|person-pl_2($1)),BARE($2,n|snail-pl_4($2)),$0),co|yes_5($0))
example_end

Sent: because they like them .
Sem: lambda $0_{r}.v|like_3(pro:sub|they_2,pro:obj|them_4,$0)
example_end

Sent: no I don 't think I 'd like to eat snails .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|~genmod_7(v|like_8(pro:sub|i_6,lambda $2_{r}.v|eat_10(pro:sub|i_6,BARE($3,n|snail-pl_11($3)),$2),$1),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: is he friendly ?
Sem: lambda $0_{r}.Q(adj|friend-dn_3(pro:sub|he_2,$0))
example_end

Sent: that 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: oh that 's church music ?
Sem: lambda $0_{r}.Q(and(and_comp(n|church_4(pro:dem|that_2,$0),n|music_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: what 's the name of the song ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,att(n|name_4($2),prep|of_5(det:art|the_6($3,n|song_7($3))))),$0)
example_end

Sent: does it ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(you,pro:per|it_2,$0))
example_end

Sent: it 's a bug .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|bug_4(pro:per|it_1,$0))
example_end

Sent: what about bird ?
Sem: att(pro:int|what_1,prep|about_2(BARE($0,n|bird_3($0))))
example_end

Sent: it just plays nice music .
Sem: lambda $0_{r}.and(v|play-3s_3(pro:per|it_1,BARE($1,and(adj|nice_4($1),n|music_5($1))),$0),adv|just_2($0))
example_end

Sent: oh you do ?
Sem: lambda $0_{r}.Q(and(v|do_3(pro:per|you_2,$0),co|oh_1($0)))
example_end

Sent: you 'll have_to talk to Urs about that .
Sem: lambda $0_{r}.mod|~will_2(mod:aux|have_to_3(pro:per|you_1,lambda $1_{r}.v|talk_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: what shall we do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|do_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: look at it carefully .
Sem: lambda $0_{r}.and(and(cop|look_1(you,$0),prep|at_2(pro:per|it_3,$0)),adv|care-dadj_4($0))
example_end

Sent: perhaps you can find out .
Sem: lambda $0_{r}.mod|can_3(and(and(v|find_4(pro:per|you_2,$0),adv|perhaps_1($0)),adv|out_5($0)),$0)
example_end

Sent: you look very carefully .
Sem: lambda $0_{r}.and(cop|look_2(pro:per|you_1,$0),adv|very_3(adv|care-dadj_4($0)))
example_end

Sent: okay I 'm looking too .
Sem: lambda $0_{r}.and(aux|~be_3(and(part|look-presp_4(pro:sub|i_2,$0),post|too_5($0)),$0),co|okay_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: a house ?
Sem: BARE($0,Q(det:art|a_1($1,n|house_2($1),$0)))
example_end

Sent: what kind of a house ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(det:art|a_4($2,n|house_5($2)))))
example_end

Sent: oh you turned into a flower pot too .
Sem: lambda $0_{r}.and(and(and(v|turn-past_3(pro:per|you_2,$0),prep|into_4(det:art|a_5($1,and_comp(n|flower_6($1),n|pot_7($1))),$0)),adv|too_8($0)),co|oh_1($0))
example_end

Sent: brown and white .
Sem: BARE($0,adj|white_3($0))
example_end

Sent: in the factory ?
Sem: Q(prep|in_1(det:art|the_2($0,n|factory_3($0))))
example_end

Sent: what do we make in our factory ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|make_4(pro:sub|we_3,$1,$0),prep|in_5(det:poss|our_6($2,n|factory_7($2)),$0)),$0)
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: look at it carefully .
Sem: lambda $0_{r}.and(and(cop|look_1(you,$0),prep|at_2(pro:per|it_3,$0)),adv|care-dadj_4($0))
example_end

Sent: did you ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:per|you_2,$0))
example_end

Sent: you buy them from the grocery store .
Sem: lambda $0_{r}.and(v|buy_2(pro:per|you_1,pro:obj|them_3,$0),prep|from_4(det:art|the_5($1,and_comp(n|grocery_6($1),n|store_7($1))),$0))
example_end

Sent: will you fit ?
Sem: lambda $0_{r}.Q(mod|will_1(v|fit-zero_3(pro:per|you_2,$0),$0))
example_end

Sent: what ate all the farm animals up ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|eat-past_2($1,qn|all_3(det:art|the_4($2,and_comp(n|farm_5($2),n|animal-pl_6($2)))),$0),adv|up_7($0))
example_end

Sent: it 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:per|it_1,$1(pro:per|it_1,$0))
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: is that a dance he 's doing ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|dance_4(pro:rel|that_2,$0)))
example_end

Sent: okay he 's all put together .
Sem: lambda $0_{r}.and(and(and(v|put-zero_5(pro:sub|he_2,$0),adv|all_4($0)),adv|together_6($0)),co|okay_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: they just left this .
Sem: lambda $0_{r}.and(v|leave-past_3(pro:sub|they_1,pro:dem|this_4,$0),adv|just_2($0))
example_end

Sent: they didn 't take this off .
Sem: lambda $0_{r}.not(mod|do_2(and(v|take_4(pro:sub|they_1,pro:dem|this_5,$0),prep|off_6($0)),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you 'll have_to ask Ursula .
Sem: lambda $0_{r}.mod|~will_2(mod:aux|have_to_3(pro:per|you_1,lambda $1_{r}.v|ask_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: she can 't see it .
Sem: lambda $0_{r}.not(mod|can_2(v|see_4(pro:sub|she_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: yes probably he 'll put them in his mouth .
Sem: lambda $0_{r}.and(mod|~will_4(and(and(v|put-zero_5(pro:sub|he_3,pro:obj|them_6,$0),adv|probable-dadj_2($0)),prep|in_7(det:poss|his_8($1,n|mouth_9($1)),$0)),$0),co|yes_1($0))
example_end

Sent: because he likes to put things in his mouth .
Sem: lambda $0_{r}.v|like-3s_3(pro:sub|he_2,lambda $1_{r}.and(v|put-zero_5(pro:sub|he_2,BARE($2,n|thing-pl_6($2)),$1),prep|in_7(det:poss|his_8($3,n|mouth_9($3)),$1)),$0)
example_end

Sent: how shall we do it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|shall_2(and(v|do_4(pro:sub|we_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: d you have something for fences Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,att(pro:indef|something_4,conj|for_5(BARE($1,n|fence-pl_6($1)))),$0),$0))
example_end

Sent: your fences .
Sem: det:poss|your_1($0,n|fence-pl_2($0))
example_end

Sent: oh I 'm so sorry .
Sem: lambda $0_{r}.and(adv|so_4(adj|sorry_5(pro:sub|i_2,$0)),co|oh_1($0))
example_end

Sent: they don 't go together do they Adam ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|go_4(pro:sub|they_1,$0),adv|together_5($0)),$0),$0),v|do_6(pro:sub|they_7,$0)))
example_end

Sent: a fence .
Sem: det:art|a_1($0,n|fence_2($0))
example_end

Sent: you make part of it too .
Sem: lambda $0_{r}.and(v|make_2(pro:per|you_1,BARE($1,att(n|part_3($1),prep|of_4(pro:per|it_5))),$0),post|too_6($0))
example_end

Sent: there 's one behind it .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),prep|behind_4(pro:per|it_5,$0))
example_end

Sent: the lamb 's Mother ?
Sem: lambda $0_{r}.Q(n:prop|mother_4(det:art|the_1($1,n|lamb_2($1)),$0))
example_end

Sent: did you look behind you ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(cop|look_3(pro:per|you_2,$0),adv|behind_4(pro:per|you_5,$0)),$0))
example_end

Sent: is that a baby lamb ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,and_comp(n|baby_4(pro:rel|that_2,$0),n|lamb_5(pro:rel|that_2,$0))))
example_end

Sent: because it 's so big .
Sem: lambda $0_{r}.adv|so_4(adj|big_5(pro:per|it_2,$0))
example_end

Sent: Mr farmer don 't you have a small tractor ?
Sem: lambda $0_{r}.Q(not(mod|do_3(v|have_6(pro:per|you_5,det:art|a_7($1,and(adj|small_8($1),n|tractor_9($1))),$0),$0),$0))
example_end

Sent: do you have a tractor that 's smaller than that one ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|tractor_5($1)),$0),$0))
example_end

Sent: because it might run over some of the animals .
Sem: lambda $0_{r}.mod|might_3(and(v|run_4(pro:per|it_2,qn|some_6(det:art|the_8($1,n|animal-pl_9($1))),$0),adv|over_5($0)),$0)
example_end

Sent: oh there 's food for the animals .
Sem: lambda $0_{r}.and(cop|~be_3(BARE($1,att(n|food_4($1),prep|for_5(det:art|the_6($2,n|animal-pl_7($2))))),$0),co|oh_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: Adam I hear something over here talking in your farm yard .
Sem: lambda $0_{r}.v|hear_3(pro:sub|i_2,lambda $1_{r}.and(and(part|talk-presp_7(pro:indef|something_4,$1),adv|over_5(adv|here_6($1))),prep|in_8(det:poss|your_9($2,and_comp(n|farm_10($2),n|yard_11($2))),$1)),$0)
example_end

Sent: quack quack quack quack quack .
Sem: BARE($0,and_comp(n|quack_4($0),and_comp(n|quack_3($0),and_comp(n|quack_2($0),and_comp(n|quack_1($0),n|quack_5($0))))))
example_end

Sent: what was that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: quack quack quack quack quack quack .
Sem: lambda $0_{r}.n|quack_1($0)
example_end

Sent: quack quack quack quack quack quack .
Sem: lambda $0_{r}.n|quack_1($0)
example_end

Sent: it stopped ?
Sem: lambda $0_{r}.Q(v|stop-past_2(pro:per|it_1,$0))
example_end

Sent: gobble gobble gobble gobble .
Sem: lambda $0_{r}.v|gobble_1(you,$0)
example_end

Sent: no I don 't hear that saying gobble gobble gobble gobble .
Sem: lambda $0_{r}.and(not(mod|do_3(v|hear_5(pro:sub|i_2,pro:dem|that_6,$0),$0),$0),co|no_1($0))
example_end

Sent: hiss hiss hiss .
Sem: lambda $0_{r}.n|hiss_1($0)
example_end

Sent: what does that say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: you just heard it .
Sem: lambda $0_{r}.and(v|hear-past_3(pro:per|you_1,pro:per|it_4,$0),adv|just_2($0))
example_end

Sent: that was the cat .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|cat_4(pro:dem|that_1,$0))
example_end

Sent: oink oink oink oink .
Sem: lambda $0_{r}.on|oink_1($0)
example_end

Sent: a camera ?
Sem: BARE($0,Q(det:art|a_1($1,n|camera_2($1),$0)))
example_end

Sent: why do you need a camera ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:per|you_3,det:art|a_5($1,n|camera_6($1)),$0),$2($0)),$0)
example_end

Sent: you do have a camera .
Sem: lambda $0_{r}.v|do_2(v|have_3(pro:per|you_1,det:art|a_4($1,n|camera_5($1)),$0),$0)
example_end

Sent: you don 't have a what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,$1,$0),$0),$0)
example_end

Sent: now you 'll have_to pick them up .
Sem: lambda $0_{r}.mod|~will_3(and(mod:aux|have_to_4(pro:per|you_2,lambda $1_{r}.v|pick_6(pro:per|you_2,$1),$0),adv|now_1($0)),$0)
example_end

Sent: oh we 're going to take turns .
Sem: lambda $0_{r}.and(aux|~be_3(part|go-presp_4(pro:sub|we_2,lambda $1_{r}.v|take_6(pro:sub|we_2,$1),$0),$0),co|oh_1($0))
example_end

Sent: you put them up .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,pro:obj|them_3,$0),adv|up_4($0))
example_end

Sent: yes but we have_to take turns .
Sem: lambda $0_{r}.mod:aux|have_to_4(pro:sub|we_3,lambda $1_{r}.v|take_6(pro:sub|we_3,$1),$0)
example_end

Sent: it looks like they 're dancing around in a circle .
Sem: lambda $0_{r}.conj|like_3(aux|~be_5(and(and(part|dance-presp_6(pro:sub|they_4,$0),adv|around_7($0)),prep|in_8(det:art|a_9($1,n|circle_10($1)),$0)),$0),cop|look-3s_2(you,$0))
example_end

Sent: will you have room for the animals ?
Sem: lambda $0_{r}.Q(mod|will_1(and(v|have_3(pro:per|you_2,BARE($1,n|room_4($1)),$0),prep|for_5(det:art|the_6($2,n|animal-pl_7($2)),$0)),$0))
example_end

Sent: some are hatching what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|hatch-presp_3(pro:indef|some_1,$1,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: why d you think they they have windows ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.v|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.v|have_7(pro:sub|they_6,BARE($2,n|window-pl_8($2)),$1),$0),$3($0)),$0)
example_end

Sent: take a guess .
Sem: lambda $0_{r}.v|take_1(you,det:art|a_2($1,n|guess_3($1)),$0)
example_end

Sent: why do you have windows in your house ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(and(v|have_4(pro:per|you_3,BARE($1,n|window-pl_5($1)),$0),$2($0)),prep|in_6(det:poss|your_7($3,n|house_8($3)),$0)),$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you bowl .
Sem: lambda $0_{r}.v|bowl_2(pro:per|you_1,$0)
example_end

Sent: no you said we would put them up together .
Sem: lambda $0_{r}.and(v|say-past_3(pro:per|you_2,lambda $1_{r}.mod|will-cond_5(and(and(v|put-zero_6(pro:sub|we_4,pro:obj|them_7,$1),adv|up_8($1)),adv|together_9($1)),$1),$0),co|no_1($0))
example_end

Sent: I 've put some up .
Sem: lambda $0_{r}.aux|~have_2(and(v|put-zero_3(pro:sub|i_1,qn|some_4,$0),adv|up_5($0)),$0)
example_end

Sent: are they the same ?
Sem: lambda $0_{r}.Q(adj|same_4(pro:sub|they_2,$0))
example_end

Sent: did I knock down more than you did or did you knock more down than I did ?
Sem: lambda $0_{r}.co|knock_12($0)
example_end

Sent: yours went under the play pen .
Sem: lambda $0_{r}.and(v|go-past_2(pro:poss|yours_1,$0),prep|under_3(det:art|the_4($1,and_comp(n|play_5($1),n|pen_6($1))),$0))
example_end

Sent: you dropped them .
Sem: lambda $0_{r}.v|drop-past_2(pro:per|you_1,pro:obj|them_3,$0)
example_end

Sent: I don 't know why .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),$1($0)),$0),$0)
example_end

Sent: you go first .
Sem: lambda $0_{r}.and(v|go_2(pro:per|you_1,$0),adv|first_3($0))
example_end

Sent: what kind of light ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|light_4($2)))))
example_end

Sent: why 're you doing that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|do-presp_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: what was that that ran away from you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: they did ?
Sem: lambda $0_{r}.Q(v|do-past_2(pro:sub|they_1,$0))
example_end

Sent: did they get hurt ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|get_3_hurt-zero_4(pro:sub|they_2,$0),$0))
example_end

Sent: poor animals .
Sem: BARE($0,and(adj|poor_1($0),n|animal-pl_2($0)))
example_end

Sent: an animal doctor .
Sem: det:art|a_1($0,and_comp(n|animal_2($0),n|doctor_3($0)))
example_end

Sent: but what 's his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_4($2,n|name_5($2)),$0)
example_end

Sent: don 't break it dear .
Sem: lambda $0_{r}.not(mod|do_1(v|break_3(you,pro:per|it_4,$0),$0),$0)
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: you may break him .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,pro:obj|him_4,$0),$0)
example_end

Sent: he doesn 't move .
Sem: lambda $0_{r}.not(mod|do_2(v|move_4(pro:sub|he_1,$0),$0),$0)
example_end

Sent: what can you see in dark woods ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_2(and(v|see_4(pro:per|you_3,$1,$0),prep|in_5(BARE($2,and(n|dark_6($2),n|wood-pl_7($2))),$0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what blind man ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,and(adj|blind_2($1),n|man_3($1)))
example_end

Sent: please don 't eat me up .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|eat_4(you,pro:obj|me_5,$0),adv|up_6($0)),$0),$0),co|please_1($0))
example_end

Sent: ow ow .
Sem: lambda $0_{r}.co|ow_1($0)
example_end

Sent: what kind of game is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|game_4($2)))))
example_end

Sent: cluck cluck cluck cluck .
Sem: BARE($0,n|cluck_1($0))
example_end

Sent: yes please .
Sem: lambda $0_{r}.and(co|please_2($0),co|yes_1($0))
example_end

Sent: tell me what you see .
Sem: lambda $0_{r}.v|tell_1(you,pro:obj|me_2,lambda $1_{r}.v|see_5(pro:per|you_4,pro:int|what_3,$1),$0)
example_end

Sent: take your finger off Adam .
Sem: lambda $0_{r}.and(v|take_1(you,det:poss|your_2($1,n|finger_3($1)),$0),prep|off_4($0))
example_end

Sent: what d you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's the story of Cinderella .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,att(n|story_4(pro:dem|that_1,$0),prep|of_5(n:prop|cinderella_6)))
example_end

Sent: hold it up to the light .
Sem: lambda $0_{r}.and(and(v|hold_1(you,pro:per|it_2,$0),adv|up_3($0)),prep|to_4(det:art|the_5($1,n|light_6($1)),$0))
example_end

Sent: a wagon .
Sem: det:art|a_1($0,n|wagon_2($0))
example_end

Sent: d you want to change it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|change_5(pro:per|you_2,pro:per|it_6,$1),$0),$0))
example_end

Sent: what d you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: two people doing what ?
Sem: lambda $2_{e}.lambda $0_{r}.part|do-presp_3(BARE($1,det:num|two_1(n|person-pl_2($1))),$2,$0)
example_end

Sent: that 's Cinderella .
Sem: lambda $0_{r}.n:prop|cinderella_3(pro:dem|that_1,$0)
example_end

Sent: she 's losing her shoe or her slipper .
Sem: lambda $0_{r}.aux|~be_2(part|lose-presp_3(pro:sub|she_1,det:poss|her_7($1,det:poss|her_4($2,n|slipper_8($2),$1)),$0),$0)
example_end

Sent: will I tell you ?
Sem: lambda $0_{r}.Q(mod|will_1(v|tell_3(pro:sub|i_2,_,pro:per|you_4,$0),$0))
example_end

Sent: those are Cinderella 's sisters trying the slipper on .
Sem: lambda $0_{r}.n:prop|cinderella_3's'(pro:dem|those_1,n|sister-pl_5(pro:dem|those_1,$0))
example_end

Sent: Cinderella met by the prince at the palace .
Sem: lambda $0_{r}.and(and(v|meet-past_2(n:prop|cinderella_1,$0),prep|by_3(det:art|the_4($1,n|prince_5($1)),$0)),prep|at_6(det:art|the_7($2,n|palace_8($2)),$0))
example_end

Sent: why d you think that 's dark ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.adj|dark_7(pro:dem|that_5,$1),$0),$2($0)),$0)
example_end

Sent: a king ?
Sem: BARE($0,Q(det:art|a_1($1,n|king_2($1),$0)))
example_end

Sent: d you see the pumpkin ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,det:art|the_4($1,n|pumpkin_5($1)),$0),$0))
example_end

Sent: something was blowing around ?
Sem: lambda $0_{r}.Q(aux|be-past_2(and(part|blow-presp_3(pro:indef|something_1,$0),adv|around_4($0)),$0))
example_end

Sent: what was that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's your finger .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|that_1,n|finger_4(pro:dem|that_1,$0))
example_end

Sent: perhaps you 'd like to look at another one .
Sem: lambda $0_{r}.mod|~genmod_3(and(v|like_4(pro:per|you_2,lambda $1_{r}.and(cop|look_6(pro:per|you_2,$1),prep|at_7(qn|another_8($2,pro:indef|one_9($2)),$1)),$0),adv|perhaps_1($0)),$0)
example_end

Sent: any particular city you 'd like to see ?
Sem: lambda $0_{r}.Q(mod|~genmod_5(v|like_6(pro:per|you_4,lambda $1_{r}.v|see_8(pro:per|you_4,qn|any_1($2,and(n|particular_2($2),n|city_3($2))),$1),$0),$0))
example_end

Sent: which one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,pro:indef|one_2($1))
example_end

Sent: city or state ?
Sem: BARE($0,Q(n|state_3($0)))
example_end

Sent: you changed your mind .
Sem: lambda $0_{r}.v|change-past_2_mind_4(pro:per|you_1,$0)
example_end

Sent: here 's another story .
Sem: lambda $0_{r}.cop|~be_2(qn|another_3($1,n|story_4($1)),$0)
example_end

Sent: Goldilocks discovers whose house ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|discover-3s_2(n:prop|goldilocks_1,$1($2,n|house_4($2)),$0)
example_end

Sent: the bear 's house .
Sem: n|bear_2's($0,n|house_4($0))
example_end

Sent: and how many bears ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(qn|many_3(BARE($2,n|bear-pl_4($2)),$0))
example_end

Sent: three bears .
Sem: BARE($0,det:num|three_1(n|bear-pl_2($0)))
example_end

Sent: what is Goldilocks doing ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|do-presp_4(n:prop|goldilocks_3,$1,$0),$0)
example_end

Sent: what 's happening now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|happen-presp_3($1,$0),adv|now_4($0)),$0)
example_end

Sent: well I can read it .
Sem: lambda $0_{r}.and(mod|can_3(v|read-zero_4(pro:sub|i_2,pro:per|it_5,$0),$0),co|well_1($0))
example_end

Sent: look under Goldilocks .
Sem: lambda $0_{r}.and(co|look_1(you,$0),adv|under_2(n:prop|goldilocks_3,$0))
example_end

Sent: see the broken chair ?
Sem: lambda $0_{r}.Q(v|see_1(you,det:art|the_2($1,and(part|break-pastp_3($1),n|chair_4($1))),$0))
example_end

Sent: the three bears return home from their work .
Sem: lambda $0_{r}.and(and(adj|return_4(det:art|the_1($1,det:num|three_2(n|bear-pl_3($1))),$0),n|home_5($0)),prep|from_6(det:poss|their_7($2,n|work_8($2)),$0))
example_end

Sent: the baby bear discovers Goldilocks in his bed .
Sem: lambda $0_{r}.and(v|discover-3s_4(det:art|the_1($1,and_comp(n|baby_2($1),n|bear_3($1))),n:prop|goldilocks_5,$0),prep|in_6(det:poss|his_7($2,n|bed_8($2)),$0))
example_end

Sent: Goldilocks runs away from the three bears .
Sem: lambda $0_{r}.and(and(v|run-3s_2(n:prop|goldilocks_1,$0),adv|away_3($0)),prep|from_4(det:art|the_5($1,det:num|three_6(n|bear-pl_7($1))),$0))
example_end

Sent: because she 's frightened .
Sem: lambda $0_{r}.part|frighten-pastp_4(pro:sub|she_2,$0)
example_end

Sent: d you have a dirty nose ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,and(adj|dirt-dn_5($1),n|nose_6($1))),$0),$0))
example_end

Sent: a sword ?
Sem: BARE($0,Q(det:art|a_1($1,n|sword_2($1),$0)))
example_end

Sent: that 's the beginning .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|beginning_4(pro:dem|that_1,$0))
example_end

Sent: we saw this already .
Sem: lambda $0_{r}.and(v|see-past_2(pro:sub|we_1,pro:dem|this_3,$0),adv|already_4($0))
example_end

Sent: would you like to see another one ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|see_5(pro:per|you_2,qn|another_6($2,pro:indef|one_7($2)),$1),$0),$0))
example_end

Sent: that 's a little boy taking the cow to market .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|boy_5(pro:dem|that_1,$0),adj|little_4(pro:dem|that_1,$0)))
example_end

Sent: that 's the part of the machine that moves that part over .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,att(n|part_4(pro:dem|that_1,$0),prep|of_5(det:art|the_6($1,n|machine_7($1)))))
example_end

Sent: and Jack trades the pig for a bean .
Sem: lambda $0_{r}.and(v|trade-3s_3(n:prop|jack_2,det:art|the_4($1,n|pig_5($1)),$0),prep|for_6(det:art|a_7($2,n|bean_8($2)),$0))
example_end

Sent: that 's part of the machine .
Sem: lambda $0_{r}.att(n|part_3(pro:dem|that_1,$0),prep|of_4(det:art|the_5($1,n|machine_6($1))))
example_end

Sent: that 's Jack 's house .
Sem: lambda $0_{r}.n:prop|jack_3's'(pro:dem|that_1,n|house_5(pro:dem|that_1,$0))
example_end

Sent: why it 's dark ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(adj|dark_4(pro:per|it_2,$0))
example_end

Sent: it 's not dark .
Sem: lambda $0_{r}.not(adj|dark_4(pro:per|it_1,$0),$0)
example_end

Sent: how can you tell the difference between morning and night ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(and(v|tell_4_difference_6(pro:per|you_3,$0),$1($0)),prep|between_7(BARE($2,n|night_10($2)),$0)),$0)
example_end

Sent: Jack sees who ?
Sem: lambda $1_{e}.lambda $0_{r}.v|see-3s_2(n:prop|jack_1,$1,$0)
example_end

Sent: the giant through the window .
Sem: det:art|the_1($0,att(n|giant_2($0),prep|through_3(det:art|the_4($1,n|window_5($1)))))
example_end

Sent: that 's the giant .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|giant_4(pro:dem|that_1,$0))
example_end

Sent: see him outside the window ?
Sem: lambda $0_{r}.Q(and(v|see_1(you,pro:obj|him_2,$0),prep|outside_3(det:art|the_4($1,n|window_5($1)),$0)))
example_end

Sent: he 's in the chair .
Sem: lambda $0_{r}.prep|in_3(det:art|the_4($1,n|chair_5($1)),pro:sub|he_1,$0)
example_end

Sent: near the table .
Sem: prep|near_1(det:art|the_2($0,n|table_3($0)))
example_end

Sent: you don 't see the table ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|see_4(pro:per|you_1,det:art|the_5($1,n|table_6($1)),$0),$0),$0))
example_end

Sent: d you see something white on the floor ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|see_3(pro:per|you_2,BARE($1,and(adj|white_5($1),pro:indef|something_4($1))),$0),prep|on_6(det:art|the_7($2,n|floor_8($2)),$0)),$0))
example_end

Sent: the table is above that .
Sem: lambda $0_{r}.prep|above_4(pro:dem|that_5,det:art|the_1($1,n|table_2($1)),$0)
example_end

Sent: Jack takes the treasure from the sleeping giant .
Sem: lambda $0_{r}.and(v|take-3s_2(n:prop|jack_1,det:art|the_3($1,n|treasure_4($1)),$0),prep|from_5(BARE($2,and(part|sleep-presp_7($2),adj|giant_8($2))),$0))
example_end

Sent: the giant crashes down .
Sem: lambda $0_{r}.and(n|crash-pl_3(det:art|the_1($1,adj|giant_2($1)),$0),adv|down_4($0))
example_end

Sent: do people break ?
Sem: lambda $0_{r}.Q(mod|do_1(v|break_3(BARE($1,n|person-pl_2($1)),$0),$0))
example_end

Sent: how d you mean ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|mean_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: they can break their bones .
Sem: lambda $0_{r}.mod|can_2(v|break_3(pro:sub|they_1,det:poss|their_4($1,n|bone-pl_5($1)),$0),$0)
example_end

Sent: can you turn and see what happens ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_5(pro:per|you_2,lambda $1_{r}.v|happen-3s_7(pro:int|what_6,$1),$0),$0))
example_end

Sent: the giant crashed down .
Sem: lambda $0_{r}.and(v|crash-past_3(det:art|the_1($1,n|giant_2($1)),$0),adv|down_4($0))
example_end

Sent: the folder .
Sem: det:art|the_1($0,n|folder_2($0))
example_end

Sent: any particular city you 'd like to see ?
Sem: lambda $0_{r}.Q(mod|~genmod_5(v|like_6(pro:per|you_4,lambda $1_{r}.v|see_8(pro:per|you_4,qn|any_1($2,and(n|particular_2($2),n|city_3($2))),$1),$0),$0))
example_end

Sent: spend my money buying some more records .
Sem: lambda $0_{r}.and(v|spend_1(you,det:poss|my_2($1,n|money_3($1)),$0),part|buy-presp_4(you,qn|some_5($2,and(qn|more_6($2),n|record-pl_7($2))),$0))
example_end

Sent: put in number one .
Sem: lambda $0_{r}.and(v|put-zero_1(you,BARE($1,pro:indef|one_4(n|number_3($1))),$0),prep|in_2($0))
example_end

Sent: that 's about a city ?
Sem: lambda $0_{r}.Q(adv|about_3(det:art|a_4($1,n|city_5($1)),pro:dem|that_1,$0))
example_end

Sent: a drop does what ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_3(det:art|a_1($1,n|drop_2($1)),$2,$0)
example_end

Sent: you can jump into a big bell ?
Sem: lambda $0_{r}.Q(mod|can_2(and(v|jump_3(pro:per|you_1,$0),prep|into_4(det:art|a_5($1,and(adj|big_6($1),n|bell_7($1))),$0)),$0))
example_end

Sent: the same bell .
Sem: det:art|the_1($0,and(adj|same_2($0),n|bell_3($0)))
example_end

Sent: no you didn 't see them all .
Sem: lambda $0_{r}.and(not(mod|do_3(v|see_5(pro:per|you_2,post|all_7($1,pro:obj|them_6($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: here 's the folder .
Sem: lambda $0_{r}.cop|~be_2(det:art|the_3($1,n|folder_4($1)),$0)
example_end

Sent: knock it over .
Sem: lambda $0_{r}.and(v|knock_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: with your lunch !
Sem: prep|with_1(det:poss|your_2($0,n|lunch_3($0)))
example_end

Sent: you 're finished playing with it .
Sem: lambda $0_{r}.aux|~be_2(v|finish-past_3(pro:per|you_1,BARE($1,att(n:gerund|play-presp_4($1),prep|with_5(pro:per|it_6))),$0),$0)
example_end

Sent: where are they ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-pres_2(pro:sub|they_3,$0),$1($0))
example_end

Sent: where are they ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-pres_2(pro:sub|they_3,$0),$1($0))
example_end

Sent: only put one in at a time .
Sem: lambda $0_{r}.and(and(and(part|put-pastp_2(you,BARE($1,pro:indef|one_3($1)),$0),adv|only_1($0)),adv|in_4($0)),prep|at_5(det:art|a_6($2,n|time_7($2)),$0))
example_end

Sent: how do you know you don 't like Arizona ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,lambda $1_{r}.not(mod|do_6(v|like_8(pro:per|you_5,n:prop|arizona_9,$1),$1),$1),$0),$2($0)),$0)
example_end

Sent: toward the light .
Sem: prep|toward_1(det:art|the_2($0,n|light_3($0)))
example_end

Sent: they 're singing .
Sem: lambda $0_{r}.aux|~be_2(part|sing-presp_3(pro:sub|they_1,$0),$0)
example_end

Sent: they 're singing .
Sem: lambda $0_{r}.aux|~be_2(part|sing-presp_3(pro:sub|they_1,$0),$0)
example_end

Sent: see the man has a guitar ?
Sem: lambda $0_{r}.Q(and(v|have-3s_4(det:art|the_2($1,n|man_3($1)),det:art|a_5($2,n|guitar_6($2)),$0),v|see_1(you,$0)))
example_end

Sent: the man who 's standing up has a guitar .
Sem: lambda $0_{r}.v|have-3s_7(det:art|the_1($1,n|man_2($1)),det:art|a_8($2,n|guitar_9($2)),$0)
example_end

Sent: your legs hurt ?
Sem: lambda $0_{r}.Q(v|hurt-zero_3(det:poss|your_1($1,n|leg-pl_2($1)),$0))
example_end

Sent: that 's a ranch .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|ranch_4(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: look again .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),adv|again_2($0))
example_end

Sent: I don 't think that 's a banjo .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|a_7(pro:dem|that_5,n|banjo_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: look again .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),adv|again_2($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh you 're silly .
Sem: lambda $0_{r}.and(adj|silly_4(pro:per|you_2,$0),co|oh_1($0))
example_end

Sent: d you want to see some pictures about Italy ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|see_5(pro:per|you_2,qn|some_6($2,att(n|picture-pl_7($2),prep|about_8(n:prop|italy_9))),$1),$0),$0))
example_end

Sent: is a what ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_1($1,$0)
example_end

Sent: Italy is a doll ?
Sem: lambda $0_{r}.Q(det:art|a_3(n:prop|italy_1,n|doll_4(n:prop|italy_1,$0)))
example_end

Sent: why d you say that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|say_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: that one is about Italy .
Sem: lambda $0_{r}.prep|about_4(n:prop|italy_5,pro:dem|that_1($1,pro:indef|one_2($1)),$0)
example_end

Sent: oh this is a special one .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|this_2,and(pro:indef|one_6(pro:dem|this_2,$0),n|special_5(pro:dem|this_2,$0))),co|oh_1($0))
example_end

Sent: you 're going to save this one ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|save_5(pro:per|you_1,pro:dem|this_6($2,pro:indef|one_7($2)),$1),$0),$0))
example_end

Sent: this is the one about Italy .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,att(pro:indef|one_4(pro:dem|this_1,$0),prep|about_5(n:prop|italy_6)))
example_end

Sent: well I don 't hear anything .
Sem: lambda $0_{r}.and(not(mod|do_3(v|hear_5(pro:sub|i_2,pro:indef|anything_6,$0),$0),$0),co|well_1($0))
example_end

Sent: what d you hear ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|hear_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you just saw this one .
Sem: lambda $0_{r}.and(v|saw_3(pro:per|you_1,pro:dem|this_4($1,pro:indef|one_5($1)),$0),adv|just_2($0))
example_end

Sent: this is the one about Arizona .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,att(pro:indef|one_4(pro:dem|this_1,$0),prep|about_5(n:prop|arizona_6)))
example_end

Sent: doll 's houses .
Sem: BARE($0,att(n|house-pl_3($0),poss|~s_2(BARE($1,n|doll_1($1)))))
example_end

Sent: this is about Israel .
Sem: lambda $0_{r}.and(cop|be-3s_2(pro:dem|this_1,$0),prep|about_3(n:prop|israel_4,$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: this the country .
Sem: lambda $0_{r}.det:art|the_2(pro:dem|this_1,n|country_3(pro:dem|this_1,$0))
example_end

Sent: it 's about the little country that we call the state of Israel .
Sem: lambda $0_{r}.adv|about_3(det:art|the_4($1,and(adj|little_5($1),n|country_6($1))),pro:per|it_1,$0)
example_end

Sent: what does your Mommy teach ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-3s_2(v|teach_5(det:poss|your_3($1,n:prop|mommy_4($1)),$2,$0),$0)
example_end

Sent: may I see that ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,pro:dem|that_4,$0),$0))
example_end

Sent: this is about Utah .
Sem: lambda $0_{r}.prep|about_3(n:prop|utah_4,pro:dem|this_1,$0)
example_end

Sent: d you see anything ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,pro:indef|anything_4,$0),$0))
example_end

Sent: these are nice Adam .
Sem: lambda $0_{r}.adj|nice_3(pro:dem|these_1,$0)
example_end

Sent: there are some flowers here that you 've seen before .
Sem: lambda $0_{r}.and(cop|be-pres_2(qn|some_3($1,n|flower-pl_4($1)),$0),adv|here_5($0))
example_end

Sent: you think so ?
Sem: lambda $0_{r}.Q(and(v|think_2(pro:per|you_1,$0),co|so_3($0)))
example_end

Sent: aren 't they pretty ?
Sem: lambda $0_{r}.Q(not(aux|be_1(adv|pretty_4(pro:sub|they_3,$0),$0),$0))
example_end

Sent: yes they are tulips .
Sem: lambda $0_{r}.and(n|tulip-pl_4(pro:sub|they_2,$0),co|yes_1($0))
example_end

Sent: here 's something I think you 'll like Adam .
Sem: lambda $0_{r}.cop|~be_2(pro:indef|something_3,$0)
example_end

Sent: you got it in .
Sem: lambda $0_{r}.and(v|get-past_2(pro:per|you_1,pro:per|it_3,$0),adv|in_4($0))
example_end

Sent: how does that work Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(n|work_4(pro:dem|that_3,$0),$1($0)),$0)
example_end

Sent: that 's nice .
Sem: lambda $0_{r}.adj|nice_3(pro:dem|that_1,$0)
example_end

Sent: can you put it back together ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),adv|back_5(adv|together_6($0))),$0))
example_end

Sent: I don 't know if I know how .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|know_7(pro:sub|i_6,$1),adv:int|how_8($1)),$0),$0),$0)
example_end

Sent: which goes on top ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|go-3s_2($1,$0),prep|on_3(BARE($2,n|top_4($2)),$0))
example_end

Sent: oh Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|oh_1($0))
example_end

Sent: why don 't you tell Urs about it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|tell_5(pro:per|you_4,_,n:prop|ursula_6,$0),$1($0)),prep|about_7(pro:per|it_8,$0)),$0),$0)
example_end

Sent: what is a squirm ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,chi|squirm_4($2)),$0)
example_end

Sent: what is a squirm worm ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,and_comp(chi|squirm_4($2),n|worm_5($2))),$0)
example_end

Sent: oh that 's a nice hat .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and(n|hat_6(pro:dem|that_2,$0),adj|nice_5(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: oh that 's a church hat ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:dem|that_2,and_comp(n|church_5(pro:dem|that_2,$0),n|hat_6(pro:dem|that_2,$0))),co|oh_1($0)))
example_end

Sent: well this is the top one .
Sem: lambda $0_{r}.and(det:art|the_4(pro:dem|this_2,and(pro:indef|one_6(pro:dem|this_2,$0),n|top_5(pro:dem|this_2,$0))),co|well_1($0))
example_end

Sent: here 's the other one .
Sem: lambda $0_{r}.pro:exist|here_1(det:art|the_3($1,and(qn|other_4($1),pro:indef|one_5($1))),$0)
example_end

Sent: can 't you turn it ?
Sem: lambda $0_{r}.Q(not(mod|can_1(v|turn_4(pro:per|you_3,pro:per|it_5,$0),$0),$0))
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: where are your marbles ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|your_3($1,n|marble-pl_4($1)),$0))
example_end

Sent: where 's the other one ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,att(pro:indef|one_5,BARE($2,qn|other_4($2)),$1)),$0),$3($0))
example_end

Sent: those are the guys ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:dem|those_1,n|guy-pl_4(pro:dem|those_1,$0)))
example_end

Sent: this is mine .
Sem: lambda $0_{r}.pro:poss|mine_3(pro:dem|this_1,$0)
example_end

Sent: where 's yours ?
Sem: lambda $0_{r}.Q(adv:int|where_1(pro:poss|yours_3,$0))
example_end

Sent: oh no I don 't have any more cranberry juice .
Sem: lambda $0_{r}.and(and(not(mod|do_4(v|have_6(pro:sub|i_3,qn|any_7($1,and_comp(n|cranberry_9($1),and(qn|more_8($1),n|juice_10($1)))),$0),$0),$0),co|oh_1($0)),co|no_2($0))
example_end

Sent: that was the last cranberry juice .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,and_comp(n|cranberry_5(pro:dem|that_1,$0),and(n|juice_6(pro:dem|that_1,$0),adj|last_4(pro:dem|that_1,$0))))
example_end

Sent: I didn 't buy any cranberries I bought some strawberries .
Sem: lambda $0_{r}.and(not(mod|do_2(v|buy_4(pro:sub|i_1,qn|any_5($1,n|cranberry-pl_6($1)),$0),$0),$0),v|buy-past_8(pro:sub|i_7,qn|some_9($2,n|strawberry-pl_10($2)),$0))
example_end

Sent: that 's enough .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),adv|enough_3($0))
example_end

Sent: no we 're going to have those for supper .
Sem: lambda $0_{r}.and(aux|~be_3(part|go-presp_4(pro:sub|we_2,lambda $1_{r}.and(v|have_6(pro:sub|we_2,pro:dem|those_7,$1),prep|for_8(BARE($2,n|supper_9($2)),$1)),$0),$0),co|no_1($0))
example_end

Sent: wait I don 't feel like boxing .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|feel_5(pro:sub|i_2,$0),co|like_6(BARE($1,part|box-presp_7($1)),$0)),$0),$0),v|wait_1(you,$0))
example_end

Sent: close the door Adam .
Sem: lambda $0_{r}.v|close_1(you,det:art|the_2($1,n|door_3($1)),$0)
example_end

Sent: oh thank_you very much .
Sem: lambda $0_{r}.and(and(n|thank_you_2(you,$0),qn|much_5($0)),co|oh_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: no that 's d .
Sem: lambda $0_{r}.and(n:let|d_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: excuse me .
Sem: lambda $0_{r}.v|excuse_1(you,pro:obj|me_2,$0)
example_end

Sent: you alright ?
Sem: lambda $0_{r}.Q(co|alright_2(pro:per|you_1,$0))
example_end

Sent: I didn 't do that .
Sem: lambda $0_{r}.not(mod|do_2(v|do_4(pro:sub|i_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: you 're a dinosaur ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,n|dinosaur_4(pro:per|you_1,$0)))
example_end

Sent: well what are you ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:per|you_4,$0),co|well_1($0))
example_end

Sent: you put them in separate groups on the floor .
Sem: lambda $0_{r}.and(and(v|put-zero_2(pro:per|you_1,pro:obj|them_3,$0),prep|in_4(BARE($1,and(adj|separate_5($1),n|group-pl_6($1))),$0)),prep|on_7(det:art|the_8($2,n|floor_9($2)),$0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: yes how did you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(v|know_5(pro:per|you_4,$0),$1($0)),$0),co|yes_1($0))
example_end

Sent: the tagalong man .
Sem: det:art|the_1($0,and_comp(n|tagalong_2($0),n|man_3($0)))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: where does the a go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|go_5(det:art|the_3($1,n:let|a_4($1)),$0),$2($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no d .
Sem: qn|no_1($0,n:let|d_2($0))
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: what d you mean the top floor ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: remember Paul 's a dinosaur .
Sem: lambda $0_{r}.co|remember_1(you,lambda $1_{r}.det:art|a_4(n:prop|paul_2,n|dinosaur_5(n:prop|paul_2,$1)),$0)
example_end

Sent: you 're the big brother dinosaur .
Sem: lambda $0_{r}.det:art|the_3(pro:per|you_1,and_comp(n|brother_5(pro:per|you_1,$0),and(n|dinosaur_6(pro:per|you_1,$0),adj|big_4(pro:per|you_1,$0))))
example_end

Sent: did you see that many things ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|see_3(pro:per|you_2,pro:rel|that_4($1,and(qn|many_5($1),n|thing-pl_6($1))),$0),$0))
example_end

Sent: that 's not the bag you go in is it ?
Sem: lambda $0_{r}.Q(and(not(det:art|the_4(pro:dem|that_1,n|bag_5(pro:dem|that_1,$0)),$0),aux|be-3s_9(pro:per|it_10,$0)))
example_end

Sent: d you want to blow it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|blow_5(pro:per|you_2,pro:per|it_6,$1),$0),$0))
example_end

Sent: no it has_to be opened .
Sem: lambda $0_{r}.and(part|open-pastp_5(_,pro:per|it_2,$0),co|no_1($0))
example_end

Sent: you have_to make a hole with something .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|make_3(pro:per|you_1,det:art|a_4($1,n|hole_5($1)),$0),prep|with_6(pro:indef|something_7,$0)),$0)
example_end

Sent: d you have something that 's sharp ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,pro:indef|something_4,$0),$0))
example_end

Sent: I have a nail file .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,det:art|a_3($1,and_comp(n|nail_4($1),n|file_5($1))),$0)
example_end

Sent: did he bring you something ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|bring_3(pro:sub|he_2,pro:indef|something_5,pro:per|you_4,$0),$0))
example_end

Sent: I didn 't take anything out .
Sem: lambda $0_{r}.not(mod|do_2(and(v|take_4(pro:sub|i_1,pro:indef|anything_5,$0),adv|out_6($0)),$0),$0)
example_end

Sent: Urs took something out .
Sem: lambda $0_{r}.and(v|take-past_2(n:prop|ursula_1,pro:indef|something_3,$0),adv|out_4($0))
example_end

Sent: I don 't know what you said .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|say-past_7(pro:per|you_6,pro:int|what_5,$1),$0),$0),$0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: shall I start it for you ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|start_3(pro:sub|i_2,pro:per|it_4,$0),prep|for_5(pro:per|you_6,$0)),$0))
example_end

Sent: it 's getting big .
Sem: lambda $0_{r}.aux|~be_2(part|get-presp_3(pro:per|it_1,lambda $1_{r}.adj|big_4(pro:per|it_1,$1),$0),$0)
example_end

Sent: there you are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:per|you_2,$0),adv|there_1($0))
example_end

Sent: can you pick up that squeezed balloon ?
Sem: lambda $0_{r}.Q(mod|can_1(v|pick_3_up_4(pro:per|you_2,pro:rel|that_5($1,and(v|squeeze-past_6($1),n|balloon_7($1))),$0),$0))
example_end

Sent: we can 't ?
Sem: lambda $0_{r}.Q(not(mod|can_2(pro:sub|we_1,$0),$0))
example_end

Sent: a fire ?
Sem: BARE($0,Q(det:art|a_1($1,n|fire_2($1),$0)))
example_end

Sent: don 't get it on the rug Adam .
Sem: lambda $0_{r}.not(mod|do_1(and(v|get_3(you,pro:per|it_4,$0),prep|on_5(det:art|the_6($1,n|rug_7($1)),$0)),$0),$0)
example_end

Sent: no not a blueberry .
Sem: lambda $0_{r}.and(not(det:art|a_3($1,n|blueberry_4($1)),$0),co|no_1($0))
example_end

Sent: it 's not a blueberry .
Sem: lambda $0_{r}.not(det:art|a_4(pro:per|it_1,n|blueberry_5(pro:per|it_1,$0)),$0)
example_end

Sent: watch it do what ?
Sem: lambda $2_{e}.lambda $0_{r}.v|watch_1(you,lambda $1_{r}.v|do_3(pro:per|it_2,$2,$1),$0)
example_end

Sent: how does it ski ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(n|ski_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: d you want to make another one ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|make_5(pro:per|you_2,qn|another_6($2,pro:indef|one_7($2)),$1),$0),$0))
example_end

Sent: that 's enough .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),adv|enough_3($0))
example_end

Sent: shall I make it bigger ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|make_3(pro:sub|i_2,lambda $1_{r}.adj|big-cp_5(pro:per|it_4,$1),$0),$0))
example_end

Sent: oh that was a big hit .
Sem: lambda $0_{r}.and(det:art|a_4(pro:rel|that_2,and(n|hit_6(pro:rel|that_2,$0),adj|big_5(pro:rel|that_2,$0))),co|oh_1($0))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're going to put a bag in it ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|put-zero_5(pro:per|you_1,det:art|a_6($2,n|bag_7($2)),$1),prep|in_8(pro:per|it_9,$1)),$0),$0))
example_end

Sent: shame on you .
Sem: BARE($0,att(n|shame_1($0),prep|on_2(pro:per|you_3)))
example_end

Sent: let 's do some watches .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|do_3(pro:obj|~us_2,qn|some_4($2,n|watch-pl_5($2)),$1),$0)
example_end

Sent: this one is for you .
Sem: lambda $0_{r}.prep|for_4(pro:per|you_5,pro:dem|this_1($1,pro:indef|one_2($1)),$0)
example_end

Sent: this is your watch .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|this_1,n|watch_4(pro:dem|this_1,$0))
example_end

Sent: can you tell the time ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tell_3(pro:per|you_2,det:art|the_4($1,n|time_5($1)),$0),$0))
example_end

Sent: fourteen o'clock ?
Sem: BARE($0,Q(det:num|fourteen_1(n|o'clock_2($0))))
example_end

Sent: Daddy has a watch ?
Sem: lambda $0_{r}.Q(v|have-3s_2(n:prop|daddy_1,det:art|a_3($1,n|watch_4($1)),$0))
example_end

Sent: is it like that one ?
Sem: lambda $0_{r}.Q(co|like_3(pro:dem|that_4($1,pro:indef|one_5($1)),pro:per|it_2,$0))
example_end

Sent: may I see it ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,pro:per|it_4,$0),$0))
example_end

Sent: oh what kind of watch is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_7,att(n|kind_3(pro:dem|that_7,$0),prep|of_4(BARE($2,n|watch_5($2))))),co|oh_1($0))
example_end

Sent: it turns .
Sem: lambda $0_{r}.v|turn-3s_2(pro:per|it_1,$0)
example_end

Sent: well what d you do at twelve o'clock ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do_3(and(v|do_5(pro:per|you_4,$1,$0),prep|at_6(BARE($2,det:num|twelve_7(n|o'clock_8($2))),$0)),$0),co|well_1($0))
example_end

Sent: you wake up at twelve o'clock ?
Sem: lambda $0_{r}.Q(and(and(v|wake_2(pro:per|you_1,$0),adv|up_3($0)),prep|at_4(BARE($1,det:num|twelve_5(n|o'clock_6($1))),$0)))
example_end

Sent: what d you do at seven o'clock ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|at_5(BARE($2,det:num|seven_6(n|o'clock_7($2))),$0)),$0)
example_end

Sent: you play .
Sem: lambda $0_{r}.v|play_2(pro:per|you_1,$0)
example_end

Sent: are you winding it up ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|wind-presp_3(pro:per|you_2,pro:per|it_4,$0),adv|up_5($0)),$0))
example_end

Sent: well Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|well_1($0))
example_end

Sent: you take those out .
Sem: lambda $0_{r}.and(v|take_2(pro:per|you_1,pro:dem|those_3,$0),adv|out_4($0))
example_end

Sent: what d you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: is that the sugar dish ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,and_comp(n|sugar_4(pro:rel|that_2,$0),n|dish_5(pro:rel|that_2,$0))))
example_end

Sent: well just pretend that this is a plate .
Sem: lambda $0_{r}.and(and(adj|pretend_3(you,lambda $1_{r}.det:art|a_7(pro:dem|this_5,n|plate_8(pro:dem|this_5,$1)),$0),adv|just_2($0)),co|well_1($0))
example_end

Sent: what are you eating ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|eat-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: some spaghetti ?
Sem: BARE($0,Q(qn|some_1($1,n|spaghetti_2($1),$0)))
example_end

Sent: just pretend that you have coffee in there .
Sem: lambda $0_{r}.and(adj|pretend_2(you,lambda $1_{r}.and(v|have_5(pro:per|you_4,BARE($2,n|coffee_6($2)),$1),prep|in_7(adv|there_8($1))),$0),adv|just_1($0))
example_end

Sent: tea rather .
Sem: adv|rather_2(BARE($0,n|tea_1($0)))
example_end

Sent: no just pretend .
Sem: lambda $0_{r}.and(and(adj|pretend_3(you,$0),adv|just_2($0)),co|no_1($0))
example_end

Sent: in the drawer ?
Sem: Q(prep|in_1(det:art|the_2($0,n|drawer_3($0))))
example_end

Sent: well that 's the noise they make when you hit them together .
Sem: lambda $0_{r}.and(det:art|the_4(pro:dem|that_2,n|noise_5(pro:dem|that_2,$0)),co|well_1($0))
example_end

Sent: no just pretend .
Sem: lambda $0_{r}.and(and(adj|pretend_3(you,$0),adv|just_2($0)),co|no_1($0))
example_end

Sent: pretend you have water .
Sem: lambda $0_{r}.v|pretend_1(you,lambda $1_{r}.v|have_3(pro:per|you_2,BARE($2,n|water_4($2)),$1),$0)
example_end

Sent: don 't drink it ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|drink_3(you,pro:per|it_4,$0),$0),$0))
example_end

Sent: it 's hot .
Sem: lambda $0_{r}.adj|hot_3(pro:per|it_1,$0)
example_end

Sent: would you serve Urs some coffee ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|serve_3(pro:per|you_2,qn|some_5($1,n|coffee_6($1)),n:prop|ursula_4,$0),$0))
example_end

Sent: they 're not hot now ?
Sem: lambda $0_{r}.Q(not(adv|now_5(adj|hot_4(pro:sub|they_1,$0)),$0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: you turn the water on for you ?
Sem: lambda $0_{r}.Q(and(and(v|turn_2(pro:per|you_1,det:art|the_3($1,n|water_4($1)),$0),adv|on_5($0)),prep|for_6(pro:per|you_7,$0)))
example_end

Sent: my_goodness Adam you tire very easily .
Sem: lambda $0_{r}.and(and(v|tire_4(pro:per|you_3,$0),adv|very_5(adv|ease-dadj_6($0))),co|my_goodness_1($0))
example_end

Sent: what kind of ice ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|ice+cream_4($2)))))
example_end

Sent: what do I want ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|want_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: d you have some ketchup for it ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,qn|some_4($1,n|ketchup_5($1)),$0),prep|for_6(pro:per|it_7,$0)),$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: what will I use for ketchup tomorrow if you throw it away ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|if_8(and(v|throw_10(pro:per|you_9,pro:per|it_11,$0),adv|away_12($0)),mod|will_2(and(and(v|use_4(pro:sub|i_3,$1,$0),prep|for_5(BARE($2,n|ketchup_6($2)),$0)),adv:tem|tomorrow_7($0)),$0))
example_end

Sent: I have enough tea ?
Sem: lambda $0_{r}.Q(v|have_2(pro:sub|i_1,BARE($1,and(adj|enough_3($1),n|tea_4($1))),$0))
example_end

Sent: yes I 'd like some tea .
Sem: lambda $0_{r}.and(mod|~genmod_3(v|like_4(pro:sub|i_2,qn|some_5($1,n|tea_6($1)),$0),$0),co|yes_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: some rice ?
Sem: BARE($0,Q(qn|some_1($1,n|rice_2($1),$0)))
example_end

Sent: I have some tea thank_you .
Sem: lambda $0_{r}.and(v|have_2(pro:sub|i_1,qn|some_3($1,n|tea_4($1)),$0),n|thank_you_5($0))
example_end

Sent: are you cutting it for me ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|cut-presp_3(pro:per|you_2,pro:per|it_4,$0),prep|for_5(pro:obj|me_6,$0)),$0))
example_end

Sent: why 're you watching me ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|watch-presp_4(pro:per|you_3,pro:obj|me_5,$0),$1($0)),$0)
example_end

Sent: you took them out there .
Sem: lambda $0_{r}.and(v|take-past_2(pro:per|you_1,pro:obj|them_3,$0),adv|out_4(adv|there_5($0)))
example_end

Sent: are they on the table ?
Sem: lambda $0_{r}.Q(adv|on_3(det:art|the_4($1,n|table_5($1)),pro:sub|they_2,$0))
example_end

Sent: do I want you to serve me another meat ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:sub|i_2,lambda $1_{r}.v|serve_6(pro:per|you_4,qn|another_8($2,n|meat_9($2)),pro:obj|me_7,$1),$0),$0))
example_end

Sent: yes please .
Sem: lambda $0_{r}.and(co|please_2($0),co|yes_1($0))
example_end

Sent: you cut it for me ?
Sem: lambda $0_{r}.Q(and(v|cut-zero_2(pro:per|you_1,pro:per|it_3,$0),prep|for_4(pro:obj|me_5,$0)))
example_end

Sent: what kind of meat is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_6,att(n|kind_2(pro:dem|this_6,$0),prep|of_3(BARE($2,n|meat_4($2)))))
example_end

Sent: I like hamburger .
Sem: lambda $0_{r}.v|like_2(pro:sub|i_1,BARE($1,n|hamburger_3($1)),$0)
example_end

Sent: do I have any vegetables ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:sub|i_2,qn|any_4($1,n|vegetable-pl_5($1)),$0),$0))
example_end

Sent: oh I have some meat .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|i_2,qn|some_4($1,n|meat_5($1)),$0),co|oh_1($0))
example_end

Sent: I 'd like some vegetables .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:sub|i_1,qn|some_4($1,n|vegetable-pl_5($1)),$0),$0)
example_end

Sent: did you drop the vegetables ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|drop_3(pro:per|you_2,det:art|the_4($1,n|vegetable-pl_5($1)),$0),$0))
example_end

Sent: does it ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(you,pro:per|it_2,$0))
example_end

Sent: d you want to tell Urs about the trees ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|tell_5(pro:per|you_2,n:prop|ursula_6,$1),prep|about_7(det:art|the_8($2,n|tree-pl_9($2)),$1)),$0),$0))
example_end

Sent: the tree was shaped like that .
Sem: lambda $0_{r}.and(part|shape-pastp_4(_,det:art|the_1($1,n|tree_2($1)),$0),co|like_5(pro:dem|that_6,$0))
example_end

Sent: don 't you give Urs anything ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|give_4(pro:per|you_3,pro:indef|anything_6,n:prop|ursula_5,$0),$0),$0))
example_end

Sent: I 'd like a hamburger .
Sem: lambda $0_{r}.mod|~genmod_2(prep|like_3(pro:sub|i_1,det:art|a_4($1,n|hamburger_5($1)),$0),$0)
example_end

Sent: it 's very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:per|it_1,$0))
example_end

Sent: you did what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(pro:per|you_1,$1,$0)
example_end

Sent: you 're coming back ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|come-presp_3(pro:per|you_1,$0),adv|back_4($0)),$0))
example_end

Sent: what did you give us ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|give_4(pro:per|you_3,$1,pro:obj|us_5,$0),$0)
example_end

Sent: yes thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|yes_1($0))
example_end

Sent: you mean your saucer ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,det:poss|your_3($1,n|saucer_4($1)),$0))
example_end

Sent: I think you can find it .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|can_4(v|find_5(pro:per|you_3,pro:per|it_6,$1),$1),$0)
example_end

Sent: d you have a cream pitcher too ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,det:art|a_4($1,and_comp(n|cream_5($1),n|pitcher_6($1))),$0),post|too_7($0)),$0))
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: I like lobsters .
Sem: lambda $0_{r}.v|like_2(pro:sub|i_1,BARE($1,n|lobster-pl_3($1)),$0)
example_end

Sent: do you like lobster ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,n|lobster_4($1)),$0),$0))
example_end

Sent: in a store ?
Sem: Q(prep|in_1(det:art|a_2($0,n|store_3($0))))
example_end

Sent: was it moving ?
Sem: lambda $0_{r}.Q(cop|be-past_1(part|move-presp_3(pro:per|it_2,$0),$0))
example_end

Sent: did you see it in the store ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|see_3(pro:per|you_2,pro:per|it_4,$0),prep|in_5(det:art|the_6($1,n|store_7($1)),$0)),$0))
example_end

Sent: where did you see it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: at Barney 's house .
Sem: prep|at_1(n:prop|barney_2's($0,n|house_4($0)))
example_end

Sent: what was it like ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-past_2(co|like_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: put the handle down .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n|handle_3($1)),$0),adv|down_4($0))
example_end

Sent: no the handle .
Sem: lambda $0_{r}.and(det:art|the_2($1,n|handle_3($1),$0),qn|no_1($0))
example_end

Sent: the handle of the knife .
Sem: det:art|the_1($0,att(n|handle_2($0),prep|of_3(det:art|the_4($1,n|knife_5($1)))))
example_end

Sent: turn it around .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|around_3($0))
example_end

Sent: what 'd you put in this ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|~genmod_2(and(v|put-zero_4(pro:per|you_3,$1,$0),prep|in_5(pro:dem|this_6,$0)),$0)
example_end

Sent: what would you put in there ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will-cond_2(and(v|put-zero_4(pro:per|you_3,$1,$0),adv|in_5(adv|there_6($0))),$0)
example_end

Sent: some water juice ?
Sem: BARE($0,Q(qn|some_1($1,n|juice_3($1),$0)))
example_end

Sent: what would you put in here ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will-cond_2(and(v|put-zero_4(pro:per|you_3,$1,$0),adv|in_5(adv|here_6($0))),$0)
example_end

Sent: what would you put in here ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will-cond_2(and(v|put-zero_4(pro:per|you_3,$1,$0),adv|in_5(adv|here_6($0))),$0)
example_end

Sent: where would you put that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|put-zero_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: d you know what we call this ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_1(v|know_3(pro:per|you_2,$1,$0),$0)
example_end

Sent: I thought you said you knew .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:per|you_3,lambda $2_{r}.v|know-past_6(pro:per|you_5,$2),$1),$0)
example_end

Sent: yes it is a kind of plate .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,att(n|kind_5(pro:per|it_2,$0),prep|of_6(BARE($1,n|plate_7($1))))),co|yes_1($0))
example_end

Sent: it 's a saucer .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|saucer_4(pro:per|it_1,$0))
example_end

Sent: I think it goes in there .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|go-3s_4(pro:per|it_3,$1),adv|in_5(adv|there_6($1))),$0)
example_end

Sent: d you know what you put in that ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_6(pro:per|you_5,pro:int|what_4,$1),prep|in_7(pro:dem|that_8,$1)),$0),$0))
example_end

Sent: I think that 's for tea or coffee or water .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.prep|for_5(coord|or_7(BARE($2,n|coffee_8($2)),BARE($3,n|water_10($3))),pro:rel|that_3,$1),$0)
example_end

Sent: are they just the same ?
Sem: lambda $0_{r}.Q(adv|just_3(adj|same_5(pro:sub|they_2,$0)))
example_end

Sent: are they just the same ?
Sem: lambda $0_{r}.Q(adv|just_3(adj|same_5(pro:sub|they_2,$0)))
example_end

Sent: they 're no different ?
Sem: lambda $0_{r}.Q(not(adj|different_4(pro:sub|they_1,$0),$0))
example_end

Sent: how are they different ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(adj|different_4(pro:sub|they_3,$0))
example_end

Sent: thirty times what ?
Sem: lambda $2_{e}.lambda $0_{r}.n|time-pl_2(BARE($1,det:num|thirty_1($1)),$2,$0)
example_end

Sent: a jingle pole ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(v|jingle_2($1),n|pole_3($1)),$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: from the park ?
Sem: Q(prep|from_1(det:art|the_2($0,n|park_3($0))))
example_end

Sent: from singing a song ?
Sem: lambda $0_{r}.Q(n:gerund|sing-presp_2(you,det:art|a_3($1,n|song_4($1)),$0))
example_end

Sent: I don 't remember a song like that .
Sem: lambda $0_{r}.not(mod|do_2(v|remember_4(pro:sub|i_1,det:art|a_5($1,att(n|song_6($1),prep|like_7(pro:dem|that_8))),$0),$0),$0)
example_end

Sent: Adam where did you see the lobster ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_3(and(v|see_5(pro:per|you_4,det:art|the_6($1,n|lobster_7($1)),$0),$2($0)),$0)
example_end

Sent: in the water ?
Sem: Q(prep|in_1(det:art|the_2($0,n|water_3($0))))
example_end

Sent: it might hurt .
Sem: lambda $0_{r}.mod|might_2(v|hurt-zero_3(pro:per|it_1,$0),$0)
example_end

Sent: do lobsters have teeth ?
Sem: lambda $0_{r}.Q(v|do_1(v|have_3(BARE($1,n|lobster-pl_2($1)),BARE($2,n|tooth-pl_4($2)),$0),$0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: they don 't need teeth .
Sem: lambda $0_{r}.not(mod|do_2(v|need_4(pro:sub|they_1,BARE($1,n|tooth-pl_5($1)),$0),$0),$0)
example_end

Sent: they don 't talk like we talk .
Sem: lambda $0_{r}.not(mod|do_2(v|talk_4(pro:sub|they_1,lambda $1_{r}.v|talk_7(pro:sub|we_6,$1),$0),$0),$0)
example_end

Sent: I think they talk to each_other .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|talk_4(pro:sub|they_3,$1),prep|to_5(pro:refl|each_other_6,$1)),$0)
example_end

Sent: they 're going to jump in the boat and go fish ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:sub|they_1,lambda $1_{r}.and(v|go_10(pro:sub|they_1,$1),prep|in_6(det:art|the_7($2,n|boat_8($2)),$1)),$0),$0))
example_end

Sent: what kind of fish will they catch ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|will_5(v|catch_7(pro:sub|they_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|fish_4($3))))),$0),$0)
example_end

Sent: catch a lion ?
Sem: lambda $0_{r}.Q(v|catch_1(you,det:art|a_2($1,n|lion_3($1)),$0))
example_end

Sent: a lion_fish ?
Sem: BARE($0,Q(det:art|a_1($1,chi|lion_fish_2($1),$0)))
example_end

Sent: they 're taking the whales out ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|take-presp_3(pro:sub|they_1,det:art|the_4($1,n|whale-pl_5($1)),$0),adv|out_6($0)),$0))
example_end

Sent: what other kind of fish will they get ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|will_6(v|get_8(pro:sub|they_7,$1($2,att(and(qn|other_2($2),n|kind_3($2)),prep|of_4(BARE($3,n|fish_5($3))))),$0),$0)
example_end

Sent: they get what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|get_2(pro:sub|they_1,$1,$0)
example_end

Sent: they 'll get ninety fish .
Sem: lambda $0_{r}.mod|~will_2(v|get_3(pro:sub|they_1,BARE($1,det:num|ninety_4(n|fish_5($1))),$0),$0)
example_end

Sent: and some Adams !
Sem: qn|some_2($0,n:prop|adams_3($0))
example_end

Sent: she 's down there .
Sem: lambda $0_{r}.and(cop|~be_2(pro:sub|she_1,$0),adv|down_3(adv|there_4($0)))
example_end

Sent: she 'll be up in a little while .
Sem: lambda $0_{r}.mod|~will_2(and(and(cop|be_3(pro:sub|she_1,$0),adv|up_4($0)),prep|in_5(det:art|a_6($1,and(adj|little_7($1),n|while_8($1))),$0)),$0)
example_end

Sent: she didn 't go any place .
Sem: lambda $0_{r}.not(mod|do_2(and(v|go_4(pro:sub|she_1,$0),n|place_6_any_5($0)),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: she 's doing something .
Sem: lambda $0_{r}.aux|~be_2(part|do-presp_3(pro:sub|she_1,pro:indef|something_4,$0),$0)
example_end

Sent: I don 't know what she 's doing .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.aux|~be_7(part|do-presp_8(pro:sub|she_6,pro:int|what_5,$1),$1),$0),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: look in here .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|in_2(adv|here_3($0)))
example_end

Sent: try again .
Sem: lambda $0_{r}.and(v|try_1(you,$0),adv|again_2($0))
example_end

Sent: well no it doesn 't want to ski .
Sem: lambda $0_{r}.and(and(not(mod|do_4(v|want_6(pro:per|it_3,lambda $1_{r}.adj|ski_8(pro:per|it_3,$1),$0),$0),$0),co|well_1($0)),co|no_2($0))
example_end

Sent: what kind of skiing ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n:gerund|ski-presp_4($2)))))
example_end

Sent: Adam that 's very sticky .
Sem: lambda $0_{r}.adv|very_4(n|sticky_5(pro:rel|that_2,$0))
example_end

Sent: look in the bag and see what you find to write on .
Sem: lambda $1_{e}.lambda $0_{r}.and(v|see_6(you,$1,$0),prep|in_2(det:art|the_3($2,n|bag_4($2)),$0))
example_end

Sent: look Adam .
Sem: lambda $0_{r}.co|look_1(you,$0)
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: which one d you want ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do_3(v|want_5(pro:per|you_4,$1($2,pro:indef|one_2($2)),$0),$0)
example_end

Sent: alright then look .
Sem: lambda $0_{r}.and(cop|look_3(you,$0),co|alright_1_then_2($0))
example_end

Sent: a line ?
Sem: BARE($0,Q(det:art|a_1($1,n|line_2($1),$0)))
example_end

Sent: some soap .
Sem: qn|some_1($0,n|soap_2($0))
example_end

Sent: what do I want ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|want_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: I 'd like a can opener .
Sem: lambda $0_{r}.mod|~genmod_2(prep|like_3(pro:sub|i_1,det:art|a_4($1,and_comp(n|can_5($1),adj|open-cp_6($1))),$0),$0)
example_end

Sent: and some Jello .
Sem: qn|some_2($0,n:prop|jello_3($0))
example_end

Sent: baby food .
Sem: BARE($0,and_comp(n|baby_1($0),n|food_2($0)))
example_end

Sent: some cereal .
Sem: qn|some_1($0,n|cereal_2($0))
example_end

Sent: d you like bacon ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,n|bacon_4($1)),$0),$0))
example_end

Sent: I need some peach jam .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,qn|some_3($1,and_comp(n|peach_4($1),n|jam_5($1))),$0)
example_end

Sent: tomato soup .
Sem: BARE($0,and_comp(n|tomato_1($0),n|soup_2($0)))
example_end

Sent: some macaroni ?
Sem: BARE($0,Q(qn|some_1($1,n|macaroni_2($1),$0)))
example_end

Sent: and two gallons of milk .
Sem: BARE($0,att(det:num|two_2(n|gallon-pl_3($0)),prep|of_4(BARE($1,n|milk_5($1)))))
example_end

Sent: and toothpaste .
Sem: BARE($0,n|tooth+paste_2($0))
example_end

Sent: yes alright .
Sem: lambda $0_{r}.and(co|alright_2($0),co|yes_1($0))
example_end

Sent: some twine for clothes line .
Sem: pro:indef|some_1($0,att(v|twine_2($0),prep|for_3(BARE($1,and_comp(n:pt|clothes_4($1),n|line_5($1))))))
example_end

Sent: some bibs for Paul .
Sem: qn|some_1($0,att(n|bib-pl_2($0),prep|for_3(n:prop|paul_4)))
example_end

Sent: some shoe polish for Adam .
Sem: qn|some_1($0,att(and_comp(n|shoe_2($0),n|polish_3($0)),prep|for_4(n:prop|adam_5)))
example_end

Sent: some hooks for my curtain rod .
Sem: qn|some_1($0,att(n|hook-pl_2($0),prep|for_3(det:poss|my_4($1,and_comp(n|curtain_5($1),n|rod_6($1))))))
example_end

Sent: what else d you want Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|want_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: what else d you need from the store ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(and(v|need_5(pro:per|you_4,$1,$0),prep|from_6(det:art|the_7($2,n|store_8($2)),$0)),$0)
example_end

Sent: I don 't think I need anything else thank_you .
Sem: lambda $0_{r}.and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:sub|i_5,post|else_8(pro:indef|anything_7),$1),$0),$0),$0),n|thank_you_9($0))
example_end

Sent: some of Paul 's food for you ?
Sem: Q(prep|of_2(n:prop|paul_3's($0,qn|some_1($1,att(n|food_5($1),prep|for_6(pro:per|you_7)),$0))))
example_end

Sent: some polish for you ?
Sem: BARE($0,Q(qn|some_1($1,att(n|polish_2($1),prep|for_3(pro:per|you_4)),$0)))
example_end

Sent: it goes there .
Sem: lambda $0_{r}.and(v|go-3s_2(pro:per|it_1,$0),adv|there_3($0))
example_end

Sent: the one you were singing at the table .
Sem: det:art|the_1($0,pro:indef|one_2($0))
example_end

Sent: what was it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: he had another one but I don 't remember it .
Sem: lambda $0_{r}.conj|but_5(not(mod|do_7(v|remember_9(pro:sub|i_6,pro:per|it_10,$0),$0),$0),v|have-past_2(pro:sub|he_1,qn|another_3($1,pro:indef|one_4($1)),$0))
example_end

Sent: which one did you choose Adam ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-past_3(v|choose_5(pro:per|you_4,$1($2,pro:indef|one_2($2)),$0),$0)
example_end

Sent: I don 't think I need anything else thank_you .
Sem: lambda $0_{r}.and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:sub|i_5,post|else_8(pro:indef|anything_7),$1),$0),$0),$0),n|thank_you_9($0))
example_end

Sent: some polish .
Sem: qn|some_1($0,n|polish_2($0))
example_end

Sent: what else do you need ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|need_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: two and three what ?
Sem: BARE($0,Q(det:num|three_3(pro:int|what_4($0))))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: some groceries .
Sem: qn|some_1($0,n|grocery-pl_2($0))
example_end

Sent: push the green one ?
Sem: lambda $0_{r}.Q(v|push_1(you,det:art|the_2($1,att(pro:indef|one_4,BARE($2,n|green_3($2)),$1)),$0))
example_end

Sent: push this up .
Sem: lambda $0_{r}.and(v|push_1(you,pro:dem|this_2,$0),adv|up_3($0))
example_end

Sent: put your finger on top of mine .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:poss|your_2($1,n|finger_3($1)),$0),prep|on_4(BARE($2,att(n|top_5($2),prep|of_6(pro:poss|mine_7))),$0))
example_end

Sent: it disappeared .
Sem: lambda $0_{r}.part|appear-pastp_2(pro:per|it_1,$0)
example_end

Sent: which one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,pro:indef|one_2($1))
example_end

Sent: push it down with me ?
Sem: lambda $0_{r}.Q(and(and(v|push_1(you,pro:per|it_2,$0),adv|down_3($0)),prep|with_4(pro:obj|me_5,$0)))
example_end

Sent: hear a little click ?
Sem: lambda $0_{r}.Q(v|hear_1(you,det:art|a_2($1,and(adj|little_3($1),n|click_4($1))),$0))
example_end

Sent: don 't write on your arm .
Sem: lambda $0_{r}.not(mod|do_1(and(v|write_3(you,$0),prep|on_4(det:poss|your_5($1,n|arm_6($1)),$0)),$0),$0)
example_end

Sent: write on the paper .
Sem: lambda $0_{r}.and(v|write_1(you,$0),prep|on_2(det:art|the_3($1,n|paper_4($1)),$0))
example_end

Sent: have you ever seen anybody with a picture on their arm ?
Sem: lambda $0_{r}.Q(aux|have_1(and(part|see-pastp_4(pro:per|you_2,att(pro:indef|anybody_5,prep|with_6(det:art|a_7($1,att(n|picture_8($1),prep|on_9(det:poss|their_10($2,n|arm_11($2))))))),$0),adv|ever_3($0)),$0))
example_end

Sent: with two shovels ?
Sem: Q(prep|with_1(BARE($0,det:num|two_2(n|shovel-pl_3($0)))))
example_end

Sent: can you draw a circle ?
Sem: lambda $0_{r}.Q(mod|can_1(v|draw_3(pro:per|you_2,det:art|a_4($1,n|circle_5($1)),$0),$0))
example_end

Sent: you used to have a book about a tattooed man Adam .
Sem: lambda $0_{r}.v|use-past_2(pro:per|you_1,lambda $1_{r}.v|have_4(pro:per|you_1,det:art|a_5($2,att(n|book_6($2),prep|about_7(det:art|a_8($3,and(part|tattoo-pastp_9($3),n|man_10($3)))))),$1),$0)
example_end

Sent: can you draw a square ?
Sem: lambda $0_{r}.Q(mod|can_1(v|draw_3(pro:per|you_2,det:art|a_4($1,n|square_5($1)),$0),$0))
example_end

Sent: is that a square ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|square_4(pro:rel|that_2,$0)))
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: did I scratch you with your arm ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(v|scratch_3(pro:sub|i_2,pro:per|you_4,$0),prep|with_5(det:poss|your_6($1,n|arm_7($1)),$0)),$0))
example_end

Sent: Adam d you remember what this is ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_2(v|remember_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what does this look like ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(co|look_4(det:dem|this_3,$1,$0),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: open it please .
Sem: lambda $0_{r}.and(v|open_1(you,pro:per|it_2,$0),co|please_3($0))
example_end

Sent: that 's an address book .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|address_4(pro:dem|that_1,$0),n|book_5(pro:dem|that_1,$0)))
example_end

Sent: how to get to your new house .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(v|get_3(you,$0),$1($0)),prep|to_4(det:poss|your_5($2,and(adj|new_6($2),n|house_7($2))),$0))
example_end

Sent: have_to cut it ?
Sem: lambda $0_{r}.Q(v|cut-zero_2(pro:per|it_3,$0))
example_end

Sent: why d you have_to cut it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod:aux|have_to_4(v|do_2(and(v|cut-zero_5(pro:per|you_3,pro:per|it_6,$0),$1($0)),$0),$0)
example_end

Sent: no why do you have_to cut it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod:aux|have_to_5(v|do_3(and(v|cut-zero_6(pro:per|you_4,pro:per|it_7,$0),$1($0)),$0),$0),co|no_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: a picture of me ?
Sem: BARE($0,Q(det:art|a_1($1,att(n|picture_2($1),prep|of_3(pro:obj|me_4)),$0)))
example_end

Sent: that 's a nice picture of me .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(and(n|picture_5(pro:dem|that_1,$0),adj|nice_4(pro:dem|that_1,$0)),prep|of_6(pro:obj|me_7)))
example_end

Sent: you have_to hold it .
Sem: lambda $0_{r}.mod:aux|have_to_2(v|hold_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: that 's enough .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),adv|enough_3($0))
example_end

Sent: you better cut this off ?
Sem: lambda $0_{r}.Q(and(and(v|cut-zero_3(pro:per|you_1,pro:dem|this_4,$0),adv|good-cp_2($0)),prep|off_5($0)))
example_end

Sent: that 's enough now .
Sem: lambda $0_{r}.adv|now_4(adv|enough_3(pro:dem|that_1,$0))
example_end

Sent: don 't you think you have enough ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|think_4(pro:per|you_3,lambda $1_{r}.v|have_6(pro:per|you_5,$1),$0),$0),$0))
example_end

Sent: you 're going to use a blue one ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|use_5(pro:per|you_1,det:art|a_6($2,att(pro:indef|one_8,BARE($3,n|blue_7($3)),$2)),$1),$0),$0))
example_end

Sent: to write on ?
Sem: lambda $0_{r}.Q(and(v|write_2(you,$0),adv|on_3($0)))
example_end

Sent: d you draw groceries ?
Sem: lambda $0_{r}.Q(mod|do_1(v|draw_3(pro:per|you_2,BARE($1,n|grocery-pl_4($1)),$0),$0))
example_end

Sent: why are you doing that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: they 're behind you ?
Sem: lambda $0_{r}.Q(adv|behind_3(pro:per|you_4,pro:sub|they_1,$0))
example_end

Sent: would you hand them to me ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(and(v|hand_3(pro:per|you_2,pro:obj|them_4,$0),prep|to_5(pro:obj|me_6,$0)),$0))
example_end

Sent: she 's waiting for her coffee .
Sem: lambda $0_{r}.aux|~be_2(and(part|wait-presp_3(pro:sub|she_1,$0),prep|for_4(pro:obj|her_5($1,n|coffee_6($1)),$0)),$0)
example_end

Sent: of a what ?
Sem: det:art|a_2($0,pro:int|what_3($0))
example_end

Sent: the sign says Adam Smith .
Sem: lambda $0_{r}.v|say-3s_3(det:art|the_1($1,n|sign_2($1)),n:prop|smith_5_adam_4,$0)
example_end

Sent: oh here 's a little table .
Sem: lambda $0_{r}.and(and(cop|~be_3(det:art|a_4($1,and(adj|little_5($1),n|table_6($1))),$0),pro:exist|here_2($0)),co|oh_1($0))
example_end

Sent: not on your leg on the paper .
Sem: not(prep|on_2(det:poss|your_3($0,att(n|leg_4($0),prep|on_5(det:art|the_6($1,n|paper_7($1)))))))
example_end

Sent: can you draw a picture of a triangle ?
Sem: lambda $0_{r}.Q(mod|can_1(v|draw_3(pro:per|you_2,det:art|a_4($1,att(n|picture_5($1),prep|of_6(det:art|a_7($2,n|triangle_8($2))))),$0),$0))
example_end

Sent: you do have three lines don 't you ?
Sem: lambda $0_{r}.Q(and(v|do_2(v|have_3(pro:per|you_1,BARE($1,det:num|three_4(n|line-pl_5($1))),$0),$0),not(mod|do_6(pro:per|you_8,$0),$0)))
example_end

Sent: oh you had too much coffee ?
Sem: lambda $0_{r}.Q(and(v|have-past_3(pro:per|you_2,adv|too_4(BARE($1,and(qn|much_5($1),n|coffee_6($1)))),$0),co|oh_1($0)))
example_end

Sent: careful don 't drink too fast Adam .
Sem: lambda $0_{r}.and(not(mod|do_2(and(n|drink_4(you,$0),adv|too_5(adj|fast_6($0))),$0),$0),co|careful_1($0))
example_end

Sent: don 't write on the couch dear .
Sem: lambda $0_{r}.not(mod|do_1(and(v|write_3(you,$0),prep|on_4(det:art|the_5($1,n|couch_6($1)),$0)),$0),$0)
example_end

Sent: d you push it like that ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|push_3(pro:per|you_2,pro:per|it_4,$0),co|like_5(pro:dem|that_6,$0)),$0))
example_end

Sent: for skiing ?
Sem: lambda $0_{r}.Q(part|ski-presp_2(you,$0))
example_end

Sent: did you show Cecelia the watch ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:art|the_5($1,n|watch_6($1)),n:prop|cecelia_4,$0),$0)
example_end

Sent: is that late ?
Sem: lambda $0_{r}.Q(adj|late_3(pro:dem|that_2,$0))
example_end

Sent: oh it 's supper .
Sem: lambda $0_{r}.and(n|supper_4(pro:per|it_2,$0),co|oh_1($0))
example_end

Sent: you don 't need to pull it anymore .
Sem: lambda $0_{r}.not(mod|do_2(and(v|need_4(pro:per|you_1,lambda $1_{r}.v|pull_6(pro:per|you_1,pro:per|it_7,$1),$0),adv|anymore_8($0)),$0),$0)
example_end

Sent: where 's the other part of it ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,att(and(qn|other_4($1),n|part_5($1)),prep|of_6(pro:per|it_7))),$0),$2($0))
example_end

Sent: it popped .
Sem: lambda $0_{r}.v|pop-past_2(pro:per|it_1,$0)
example_end

Sent: it said what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|say-past_2(pro:per|it_1,$1,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: shall I take it out for you Adam ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(and(v|take_3(pro:sub|i_2,pro:per|it_4,$0),adv|out_5($0)),prep|for_6(pro:per|you_7,$0)),$0))
example_end

Sent: you 're going to make a what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|make_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: a green arm ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|green_2($1),n|arm_3($1)),$0)))
example_end

Sent: what 's a green arm ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,and(adj|green_4($2),n|arm_5($2))),$0)
example_end

Sent: that was a big pop .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|pop_5(pro:dem|that_1,$0),adj|big_4(pro:dem|that_1,$0)))
example_end

Sent: hi Adam .
Sem: lambda $0_{r}.co|hi_1($0)
example_end

Sent: yes I 'm upstairs .
Sem: lambda $0_{r}.and(and(aux|~be_3(pro:sub|i_2,$0),adv|upstairs_4($0)),co|yes_1($0))
example_end

Sent: I won 't fall down on you .
Sem: lambda $0_{r}.not(mod|will_2(and(and(v|fall_4(pro:sub|i_1,$0),adv|down_5($0)),prep|on_6(pro:per|you_7,$0)),$0),$0)
example_end

Sent: oh look what you found .
Sem: lambda $0_{r}.co|look_2(you,$0)
example_end

Sent: what 're you going to draw ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|draw_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: it looks like a house .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,n|house_5($1)),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a fish next_to the house ?
Sem: BARE($0,Q(det:art|a_1($1,att(n|fish_2($1),prep|next_to_3(det:art|the_4($2,n|house_5($2)))),$0)))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh you 're going to make a magic drawing board ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|make_6(pro:per|you_2,det:art|a_7($2,and_comp(n|drawing_9($2),and(n|magic_8($2),n|board_10($2)))),$1),$0),$0),co|oh_1($0)))
example_end

Sent: you have ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,$0))
example_end

Sent: don 't touch the fish ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|touch_3(you,det:art|the_4($1,n|fish_5($1)),$0),$0),$0))
example_end

Sent: what kind of fish ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|fish_4($2)))))
example_end

Sent: Bob fish ?
Sem: BARE($0,Q(and_comp(n:prop|bob_1($0),n|fish_2($0))))
example_end

Sent: oh an iron fish .
Sem: lambda $0_{r}.and(det:art|a_2($1,and(adj|iron_3($1),n|fish_4($1)),$0),co|oh_1($0))
example_end

Sent: oh they 're talking ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|talk-presp_4(pro:sub|they_2,$0),$0),co|oh_1($0)))
example_end

Sent: they 're talking to each_other ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|talk-presp_3(pro:sub|they_1,$0),prep|to_4(pro:refl|each_other_5,$0)),$0))
example_end

Sent: what 're they saying ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|say-presp_4(pro:sub|they_3,$1,$0),$0)
example_end

Sent: what 's the boy 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|boy_4's($2,n|name_6($2)),$0)
example_end

Sent: may I have one ?
Sem: lambda $0_{r}.Q(mod|may_1(v|have_3(pro:sub|i_2,pro:indef|one_4,$0),$0))
example_end

Sent: I 'd like to have one .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:sub|i_1,lambda $1_{r}.v|have_5(pro:sub|i_1,pro:indef|one_6,$1),$0),$0)
example_end

Sent: they don 't stick very well .
Sem: lambda $0_{r}.not(mod|do_2(and(v|stick_4(pro:sub|they_1,$0),adv|very_5(adv|well_6($0))),$0),$0)
example_end

Sent: you 've got too much water on it maybe .
Sem: lambda $0_{r}.aux|~have_2(and(and(part|get-pastp_3(pro:per|you_1,BARE($1,and(adv|too_4(qn|much_5($1)),n|water_6($1))),$0),prep|on_7(pro:per|it_8,$0)),adv|maybe_9($0)),$0)
example_end

Sent: just lick it a little .
Sem: lambda $0_{r}.and(v|lick_2(you,lambda $1_{r}.adj|little_5(pro:per|it_3,$1),$0),adv|just_1($0))
example_end

Sent: that bus went away ?
Sem: lambda $0_{r}.Q(and(v|go-past_3(pro:dem|that_1($1,n|bus_2($1)),$0),adv|away_4($0)))
example_end

Sent: yes another bus .
Sem: lambda $0_{r}.and(qn|another_2($1,n|bus_3($1),$0),co|yes_1($0))
example_end

Sent: yes Harvard_Square bus .
Sem: lambda $0_{r}.and(and_comp(n:prop|harvard_square_2($0),n|bus_3($0)),co|yes_1($0))
example_end

Sent: because I can read .
Sem: lambda $0_{r}.mod|can_3(v|read-zero_4(pro:sub|i_2,$0),$0)
example_end

Sent: what kind o game ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|game_4($2)))))
example_end

Sent: can I play ?
Sem: lambda $0_{r}.Q(mod|can_1(v|play_3(pro:sub|i_2,$0),$0))
example_end

Sent: I think you have_to try another one Adam .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod:aux|have_to_4(v|try_5(pro:per|you_3,qn|another_6($2,pro:indef|one_7($2)),$1),$1),$0)
example_end

Sent: is that a picture of anything special ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,att(n|picture_4(pro:rel|that_2,$0),prep|of_5(att(pro:indef|anything_6,BARE($1,adj|special_7($1)))))))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that looks like you 're making a salad Adam .
Sem: lambda $0_{r}.cop|look-3s_2(pro:dem|that_1,lambda $1_{r}.aux|~be_5(part|make-presp_6(pro:per|you_4,det:art|a_7($2,n|salad_8($2)),$1),$1),$0)
example_end

Sent: yes when she goes home she 'll catch the Harvard_Square bus .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(mod|~will_7(and(v|catch_8(pro:sub|she_6,det:art|the_9($1,and_comp(n:prop|harvard_square_10($1),n|bus_11($1))),$0),and(v|go-3s_4(pro:sub|she_3,BARE($2,n|home_5($2)),$0),$3($0))),$0),co|yes_1($0))
example_end

Sent: not today one day .
Sem: and(not(BARE($0,adv:tem|today_2($0))),BARE($1,det:num|one_3(n|day_4($1))))
example_end

Sent: no it 's not dirty .
Sem: lambda $0_{r}.and(not(adj|dirt-dn_5(pro:per|it_2,$0),$0),co|no_1($0))
example_end

Sent: no busses are usually pretty clean .
Sem: lambda $0_{r}.and(adv|pretty_5(adv|usual-dadj_4(adj|clean_6(BARE($1,n|buss-pl_2($1)),$0))),qn|no_1($0))
example_end

Sent: they 're matches ?
Sem: lambda $0_{r}.Q(n|match-pl_3(pro:sub|they_1,$0))
example_end

Sent: what would you like for your lunch ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will-cond_2(and(co|like_4(pro:per|you_3,$1,$0),prep|for_5(det:poss|your_6($2,n|lunch_7($2)),$0)),$0)
example_end

Sent: some macaroni ?
Sem: BARE($0,Q(qn|some_1($1,n|macaroni_2($1),$0)))
example_end

Sent: play with this ?
Sem: lambda $0_{r}.Q(and(n|play_1(you,$0),prep|with_2(pro:dem|this_3,$0)))
example_end

Sent: here 's some macaroni .
Sem: lambda $0_{r}.and(cop|~be_2(qn|some_3($1,n|macaroni_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: here 's some milk .
Sem: lambda $0_{r}.and(cop|~be_2(qn|some_3($1,n|milk_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: and macaroni ?
Sem: BARE($0,Q(n|macaroni_2($0)))
example_end

Sent: into your macaroni ?
Sem: Q(prep|into_1(det:poss|your_2($0,n|macaroni_3($0))))
example_end

Sent: I don 't think you 'd like that .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|~genmod_6(prep|like_7(pro:per|you_5,pro:dem|that_8,$1),$1),$0),$0),$0)
example_end

Sent: it makes you eat ?
Sem: lambda $0_{r}.Q(v|make-3s_2(pro:per|it_1,lambda $1_{r}.v|eat_4(pro:per|you_3,$1),$0))
example_end

Sent: this sometimes makes you cry ?
Sem: lambda $0_{r}.Q(and(v|make-3s_3(pro:dem|this_1,lambda $1_{r}.v|cry_5(pro:per|you_4,$1),$0),adv|sometimes_2($0)))
example_end

Sent: because Shadow_Gay drinks his milk .
Sem: lambda $0_{r}.v|drink-3s_3(n:prop|shadow_gay_2,det:poss|his_4($1,n|milk_5($1)),$0)
example_end

Sent: put you to bed ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,pro:per|you_2,$0),prep|to_3(BARE($1,n|bed_4($1)),$0)))
example_end

Sent: night_night have a nice nap .
Sem: lambda $0_{r}.and(v|have_2(you,det:art|a_3($1,and(adj|nice_4($1),n|nap_5($1))),$0),co|night_night_1($0))
example_end

Sent: it 's a sign .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|sign_4(pro:per|it_1,$0))
example_end

Sent: it moves ?
Sem: lambda $0_{r}.Q(v|move-3s_2(pro:per|it_1,$0))
example_end

Sent: what does it do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|do_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: it has someone 's name on it .
Sem: lambda $0_{r}.and(aux|have-3s_2(pro:per|it_1,pro:indef|someone_3($1,n|name_5($1)),$0),prep|on_6(pro:per|it_7,$0))
example_end

Sent: no not your name .
Sem: lambda $0_{r}.and(not(det:poss|your_3($1,n|name_4($1)),$0),co|no_1($0))
example_end

Sent: not Robin .
Sem: not(n:prop|robin_2)
example_end

Sent: yes that 's David .
Sem: lambda $0_{r}.and(n:prop|david_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: no that 's Bellugi .
Sem: lambda $0_{r}.and(n:prop|bellugi_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: that 's David 's last name like your last name is Smith .
Sem: lambda $0_{r}.prep|like_7(n:prop|smith_12(det:poss|your_8($1,and(adj|last_9($1),n|name_10($1))),$0),n:prop|david_3's'(pro:dem|that_1,and(n|name_6(pro:dem|that_1,$0),adj|last_5(pro:dem|that_1,$0))))
example_end

Sent: you want some macaroni .
Sem: lambda $0_{r}.v|want_2(pro:per|you_1,qn|some_3($1,n|macaroni_4($1)),$0)
example_end

Sent: oh you didn 't want very much macaroni did you ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(v|want_5(pro:per|you_2,BARE($1,and(adv|very_6(qn|much_7($1)),n|macaroni_8($1))),$0),$0),$0),v|do-past_9(pro:per|you_10,$0)),co|oh_1($0)))
example_end

Sent: please don 't spill your macaroni .
Sem: lambda $0_{r}.and(not(mod|do_2(v|spill_4(you,det:poss|your_5($1,n|macaroni_6($1)),$0),$0),$0),co|please_1($0))
example_end

Sent: did you eat all of that ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|eat_3(pro:per|you_2,BARE($1,att(pro:indef|all_4($1),prep|of_5(pro:dem|that_6))),$0),$0))
example_end

Sent: here 's some salt .
Sem: lambda $0_{r}.and(cop|~be_2(qn|some_3($1,n|salt_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: your fork ?
Sem: BARE($0,Q(det:poss|your_1($1,n|fork_2($1),$0)))
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: like a barrel of fun ?
Sem: Q(prep|like_1(det:art|a_2($0,att(n|barrel_3($0),prep|of_4(BARE($1,n|fun_5($1)))))))
example_end

Sent: in the dining room ?
Sem: Q(prep|in_1(det:art|the_2($0,and_comp(part|dine-presp_3($0),n|room_4($0)))))
example_end

Sent: you didn 't pick everything up .
Sem: lambda $0_{r}.not(mod|do_2(and(v|pick_4(pro:per|you_1,pro:indef|everything_5,$0),adv|up_6($0)),$0),$0)
example_end

Sent: look behind you .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|behind_2(pro:per|you_3,$0))
example_end

Sent: okay pick up the knife .
Sem: lambda $0_{r}.and(and(v|pick_2(you,det:art|the_4($1,n|knife_5($1)),$0),prep|up_3($0)),co|okay_1($0))
example_end

Sent: what about the book ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|book_4($0))))
example_end

Sent: children playing .
Sem: lambda $0_{r}.part|play-presp_2(BARE($1,n|child-pl_1($1)),$0)
example_end

Sent: look Adam they 're all singing and dancing around .
Sem: lambda $0_{r}.and(aux|~be_4(and(and(part|dance-presp_8(pro:sub|they_3,$0),post|all_5($0)),adv|around_9($0)),$0),co|look_1(you,$0))
example_end

Sent: get up here .
Sem: lambda $0_{r}.and(v|get_1(you,$0),adv|up_2(adv|here_3($0)))
example_end

Sent: pickle man .
Sem: BARE($0,and_comp(n|pickle_1($0),n|man_2($0)))
example_end

Sent: jumping for joy aren 't you ?
Sem: lambda $0_{r}.Q(and(and(part|jump-presp_1(you,$0),prep|for_2(BARE($1,n|joy_3($1)),$0)),not(aux|be_4(pro:per|you_6,$0),$0)))
example_end

Sent: he 's happy .
Sem: lambda $0_{r}.adj|happy_3(pro:sub|he_1,$0)
example_end

Sent: where 's the merry ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|merry+go+round_4($1)),$0),$2($0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: can I cut you a slice ?
Sem: lambda $0_{r}.Q(mod|can_1(v|cut-zero_3(pro:sub|i_2,det:art|a_5($1,n|slice_6($1)),pro:per|you_4,$0),$0))
example_end

Sent: just one .
Sem: adv|just_1(BARE($0,det:num|one_2($0)))
example_end

Sent: d you want the cover on it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,det:art|the_4($1,att(n|cover_5($1),prep|on_6(pro:per|it_7))),$0),$0))
example_end

Sent: say thank_you .
Sem: lambda $0_{r}.v|say_1(you,BARE($1,n|thank_you_2($1)),$0)
example_end

Sent: did you sing a song for Urs ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|sing_3(pro:per|you_2,det:art|a_4($1,n|song_5($1)),$0),prep|for_6(n:prop|ursula_7,$0)),$0))
example_end

Sent: did you sing Yankee_Doodle ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|sing_3(pro:per|you_2,n:prop|yankee_doodle_4,$0),$0))
example_end

Sent: what 'd he do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|~genmod_2(v|do_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: put them in front of you .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:obj|them_2,$0),prep|in_3(BARE($1,att(n|front_4($1),prep|of_5(pro:per|you_6))),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: he 's talking to you about something .
Sem: lambda $0_{r}.aux|~be_2(and(and(part|talk-presp_3(pro:sub|he_1,$0),prep|to_4(pro:per|you_5,$0)),prep|about_6(pro:indef|something_7,$0)),$0)
example_end

Sent: d you like cheese Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(co|like_3(pro:per|you_2,BARE($1,n|cheese_4($1)),$0),$0))
example_end

Sent: what d you have on your cracker ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,$1,$0),prep|on_5(det:poss|your_6($2,n|cracker_7($2)),$0)),$0)
example_end

Sent: is that your favorite kind ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:rel|that_2,and(n|kind_5(pro:rel|that_2,$0),n|favorite_4(pro:rel|that_2,$0))))
example_end

Sent: why is that Mr Pickle ?
Sem: lambda $0_{r}.n:prop|pickle_5_mr_4(pro:rel|that_3,$0)
example_end

Sent: from the tv set ?
Sem: Q(prep|from_1(det:art|the_2($0,and_comp(n|tv_3($0),part|set-pastp_4($0)))))
example_end

Sent: does she let you watch it ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|let-zero_3(pro:sub|she_2,lambda $1_{r}.v|watch_5(pro:per|you_4,pro:per|it_6,$1),$0),$0))
example_end

Sent: I 've never seen Mr Pickle .
Sem: lambda $0_{r}.aux|~have_2(and(part|see-pastp_4(pro:sub|i_1,n:prop|pickle_6_mr_5,$0),adv|never_3($0)),$0)
example_end

Sent: oh Flintstones .
Sem: lambda $0_{r}.and(n:prop|flintstones_2($0),co|oh_1($0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: who does that Adam ?
Sem: lambda $1_{e}.lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(det:dem|that_3($1,n:prop|adam_4($1,$0)),$0)
example_end

Sent: is Rocky somebody on tv ?
Sem: lambda $0_{r}.Q(att(pro:indef|somebody_3(n:prop|rocky_2,$0),prep|on_4(BARE($1,n|tv_5($1)))))
example_end

Sent: how d you watch Cocoamarsh ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|watch_4(pro:per|you_3,n:prop|cocoamarsh_5,$0),$1($0)),$0)
example_end

Sent: is that on tv too ?
Sem: lambda $0_{r}.Q(post|too_5(prep|on_3(BARE($1,n|tv_4($1)),pro:dem|that_2,$0)))
example_end

Sent: Mommy let you watch what ?
Sem: lambda $2_{e}.lambda $0_{r}.v|let-zero_2(n:prop|mommy_1,lambda $1_{r}.v|watch_4(pro:per|you_3,$2,$1),$0)
example_end

Sent: it 's a drink you mix .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|drink_4(pro:per|it_1,$0))
example_end

Sent: I just put water in it .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:sub|i_1,BARE($1,n|water_4($1)),$0),adv|just_2($0)),prep|in_5(pro:per|it_6,$0))
example_end

Sent: you saw some friends ?
Sem: lambda $0_{r}.Q(v|saw_2(pro:per|you_1,qn|some_3($1,n|friend-pl_4($1)),$0))
example_end

Sent: where was that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(pro:dem|that_3,$0),$1($0))
example_end

Sent: did you meet some friends there ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|meet_3(pro:per|you_2,qn|some_4($1,n|friend-pl_5($1)),$0),adv|there_6($0)),$0))
example_end

Sent: oh you did ?
Sem: lambda $0_{r}.Q(and(v|do-past_3(pro:per|you_2,$0),co|oh_1($0)))
example_end

Sent: what was his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_3($2,n|name_4($2)),$0)
example_end

Sent: oh you don 't know his name ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|know_5(pro:per|you_2,det:poss|his_6($1,n|name_7($1)),$0),$0),$0),co|oh_1($0)))
example_end

Sent: you mean the little children who came to visit you ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,det:art|the_3($1,and(adj|little_4($1),n|child-pl_5($1))),$0))
example_end

Sent: do you remember their names ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,det:poss|their_4($1,n|name-pl_5($1)),$0),$0))
example_end

Sent: what were their names ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|their_3($2,n|name-pl_4($2)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: shall I take it apart for you ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(and(v|take_3(pro:sub|i_2,pro:per|it_4,$0),adv|apart_5($0)),prep|for_6(pro:per|you_7,$0)),$0))
example_end

Sent: a cord ?
Sem: BARE($0,Q(det:art|a_1($1,n|cord_2($1),$0)))
example_end

Sent: that 's not a cord .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|cord_5(pro:dem|that_1,$0)),$0)
example_end

Sent: d you have a cord ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|cord_5($1)),$0),$0))
example_end

Sent: that 's a fuse .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|fuse_4(pro:dem|that_1,$0))
example_end

Sent: it screws into the toy .
Sem: lambda $0_{r}.and(v|screw-3s_2(pro:per|it_1,$0),prep|into_3(det:art|the_4($1,n|toy_5($1)),$0))
example_end

Sent: a ride ?
Sem: BARE($0,Q(det:art|a_1($1,n|ride_2($1),$0)))
example_end

Sent: look Adam you can screw it in there see ?
Sem: lambda $0_{r}.Q(and(and(mod|can_4(and(v|screw_5(pro:per|you_3,pro:per|it_6,$0),prep|in_7(adv|there_8($0))),$0),co|look_1(you,$0)),v|see_9(you,$0)))
example_end

Sent: some espresso .
Sem: qn|some_1($0,n|espresso_2($0))
example_end

Sent: that one 's missing .
Sem: lambda $0_{r}.cop|~be_3(part|miss-presp_4(pro:dem|that_1($1,pro:indef|one_2($1)),$0),$0)
example_end

Sent: you do that .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:dem|that_3,$0)
example_end

Sent: turn the light on ?
Sem: lambda $0_{r}.Q(and(v|turn_1(you,det:art|the_2($1,n|light_3($1)),$0),adv|on_4($0)))
example_end

Sent: you can turn this one on .
Sem: lambda $0_{r}.mod|can_2(and(v|turn_3(pro:per|you_1,pro:dem|this_4($1,pro:indef|one_5($1)),$0),adv|on_6($0)),$0)
example_end

Sent: like a dog ?
Sem: Q(prep|like_1(det:art|a_2($0,n|dog_3($0))))
example_end

Sent: oh that 's the light ?
Sem: lambda $0_{r}.Q(and(det:art|the_4(pro:dem|that_2,n|light_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: where 're you going to put the light ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|put-zero_6(pro:per|you_3,det:art|the_7($2,n|light_8($2)),$1),$0),$3($0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where did the light go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_5(det:art|the_3($1,n|light_4($1)),$0),$2($0)),$0)
example_end

Sent: to blast off with ?
Sem: lambda $0_{r}.Q(and(v|blast_2(you,$0),adv|off_3($0)))
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: I 'll hold it while you screw .
Sem: lambda $0_{r}.conj|while_5(v|screw_7(pro:per|you_6,$0),mod|~will_2(v|hold_3(pro:sub|i_1,pro:per|it_4,$0),$0))
example_end

Sent: a funny rocket ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|fun-dn_2($1),n|rocket_3($1)),$0)))
example_end

Sent: oh that .
Sem: lambda $0_{r}.and(pro:dem|that_2($0),co|oh_1($0))
example_end

Sent: if you want it to go there .
Sem: lambda $0_{r}.v|want_3(pro:per|you_2,lambda $1_{r}.and(v|go_6(pro:per|it_4,$1),adv|there_7($1)),$0)
example_end

Sent: that 's all I had .
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: no this is a toy .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|this_2,n|toy_5(pro:dem|this_2,$0)),qn|no_1($0))
example_end

Sent: why d you need another piece ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:per|you_3,qn|another_5($1,n|piece_6($1)),$0),$2($0)),$0)
example_end

Sent: it 's for printing .
Sem: lambda $0_{r}.aux|~be_2(pro:per|it_1,lambda $1_{r}.n:gerund|print-presp_4(you,$1),$0)
example_end

Sent: let me show you Adam .
Sem: lambda $0_{r}.v|let-zero_1(you,pro:obj|me_2,$0)
example_end

Sent: press it down like that .
Sem: lambda $0_{r}.and(and(v|press_1(you,pro:per|it_2,$0),adv|down_3($0)),prep|like_4(pro:dem|that_5,$0))
example_end

Sent: you don 't see another one ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|see_4(pro:per|you_1,qn|another_5($1,pro:indef|one_6($1)),$0),$0),$0))
example_end

Sent: press it down .
Sem: lambda $0_{r}.and(v|press_1(you,pro:per|it_2,$0),adv|down_3($0))
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: you got your fingers in it didn 't you ?
Sem: lambda $0_{r}.Q(and(and(v|get-past_2(pro:per|you_1,det:poss|your_3($1,n|finger-pl_4($1)),$0),prep|in_5(pro:per|it_6,$0)),not(mod|do_7(pro:per|you_9,$0),$0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: it matches .
Sem: lambda $0_{r}.v|match-3s_2(pro:per|it_1,$0)
example_end

Sent: it 's not an x is it ?
Sem: lambda $0_{r}.Q(and(not(det:art|a_4(pro:per|it_1,n:let|x_5(pro:per|it_1,$0)),$0),aux|be-3s_6(pro:per|it_7,$0)))
example_end

Sent: well keep your fingers out .
Sem: lambda $0_{r}.and(and(v|keep_2(you,det:poss|your_3($1,n|finger-pl_4($1)),$0),adv|out_5($0)),co|well_1($0))
example_end

Sent: you 're a funny one Adam .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,and(det:num|one_5(pro:per|you_1,$0),adj|fun-dn_4(pro:per|you_1,$0)))
example_end

Sent: don 't put it on the floor Adam .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:per|it_4,$0),prep|on_5(det:art|the_6($1,n|floor_7($1)),$0)),$0),$0)
example_end

Sent: let 's put them on the paper .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|put-zero_3(pro:obj|~us_2,pro:obj|them_4,$1),prep|on_5(det:art|the_6($2,n|paper_7($2)),$1)),$0)
example_end

Sent: I do enough tricks .
Sem: lambda $0_{r}.v|do_2(pro:sub|i_1,qn|enough_3($1,n|trick-pl_4($1)),$0)
example_end

Sent: you fold them .
Sem: lambda $0_{r}.v|fold_2(pro:per|you_1,pro:obj|them_3,$0)
example_end

Sent: make a refrigerator ?
Sem: lambda $0_{r}.Q(v|make_1(you,det:art|a_2($1,n|refrigerator_3($1)),$0))
example_end

Sent: your hands are dry .
Sem: lambda $0_{r}.adj|dry_4(det:poss|your_1($1,n|hand-pl_2($1)),$0)
example_end

Sent: no ink .
Sem: qn|no_1($0,n|ink_2($0))
example_end

Sent: d you want to tell Urs about your accident ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|tell_5(pro:per|you_2,n:prop|ursula_6,$1),prep|about_7(det:poss|your_8($2,n|accident_9($2)),$1)),$0),$0))
example_end

Sent: what happened to the carriage ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|carriage_5($2)),$0))
example_end

Sent: no I 'm talking about your accident .
Sem: lambda $0_{r}.and(aux|~be_3(and(part|talk-presp_4(pro:sub|i_2,$0),prep|about_5(det:poss|your_6($1,n|accident_7($1)),$0)),$0),co|no_1($0))
example_end

Sent: what happened to your finger ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:poss|your_4($2,n|finger_5($2)),$0))
example_end

Sent: did it hurt ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|hurt-zero_3(pro:per|it_2,$0),$0))
example_end

Sent: that 's clay .
Sem: lambda $0_{r}.n|clay_3(pro:dem|that_1,$0)
example_end

Sent: a nest .
Sem: det:art|a_1($0,n|nest_2($0))
example_end

Sent: Boston University ?
Sem: BARE($0,Q(n:prop|university_2_boston_1($0)))
example_end

Sent: you 're a nut .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,n|nut_4(pro:per|you_1,$0))
example_end

Sent: yes you can play with that one .
Sem: lambda $0_{r}.and(mod|can_3(and(v|play_4(pro:per|you_2,$0),prep|with_5(pro:dem|that_6($1,pro:indef|one_7($1)),$0)),$0),co|yes_1($0))
example_end

Sent: these turn .
Sem: lambda $0_{r}.n|turn_2(pro:dem|these_1,$0)
example_end

Sent: don 't throw the ball .
Sem: lambda $0_{r}.not(mod|do_1(v|throw_3(you,det:art|the_4($1,n|ball_5($1)),$0),$0),$0)
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: why don 't you play with something else ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|play_5(pro:per|you_4,$0),$1($0)),post|else_8(prep|with_6(pro:indef|something_7,$0))),$0),$0)
example_end

Sent: I don 't see anybody sitting there .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,lambda $1_{r}.and(part|sit-presp_6(pro:indef|anybody_5,$1),adv|there_7($1)),$0),$0),$0)
example_end

Sent: does that have a driver ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(det:dem|that_2,det:art|a_4($1,n|drive-dv_5($1)),$0),$0))
example_end

Sent: yes I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: that 's a big hat on his head .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(and(n|hat_5(pro:dem|that_1,$0),adj|big_4(pro:dem|that_1,$0)),prep|on_6(det:poss|his_7($1,n|head_8($1)))))
example_end

Sent: can he see ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_3(pro:sub|he_2,$0),$0))
example_end

Sent: no it looks like it 's down over his eyes .
Sem: lambda $0_{r}.and(cop|look-3s_3(pro:per|it_2,lambda $1_{r}.adv|down_7(prep|over_8(det:poss|his_9($2,n|eye-pl_10($2)),pro:per|it_5,$1)),$0),co|no_1($0))
example_end

Sent: that one turned over .
Sem: lambda $0_{r}.and(v|turn-past_3(pro:dem|that_1($1,pro:indef|one_2($1)),$0),adv|over_4($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: no don 't throw over here .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|throw_4(you,$0),adv|over_5(adv|here_6($0))),$0),$0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: and do what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_2(you,$1,$0)
example_end

Sent: you can play with these .
Sem: lambda $0_{r}.mod|can_2(and(v|play_3(pro:per|you_1,$0),prep|with_4(pro:dem|these_5,$0)),$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: it 's for zipping Adam .
Sem: lambda $0_{r}.aux|~be_2(pro:per|it_1,lambda $1_{r}.n:gerund|zip-presp_4(you,$1),$0)
example_end

Sent: that 's not an x that 's a v .
Sem: lambda $0_{r}.not(and(det:art|a_4(pro:dem|that_1,n:let|x_5(pro:dem|that_1,$0)),det:art|a_8(pro:dem|that_6,n:let|v_9(pro:dem|that_6,$0))),$0)
example_end

Sent: oh aren 't they pretty pictures .
Sem: lambda $0_{r}.and(not(and(v|picture-3s_6(pro:sub|they_4,$0),adv|pretty_5(pro:sub|they_4,$0)),$0),co|oh_1($0))
example_end

Sent: what are they all about ?
Sem: lambda $0_{r}.post|all_4(adv|about_5(det:int|what_1,pro:sub|they_3,$0))
example_end

Sent: d you want to tell me about it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|tell_5(pro:per|you_2,pro:obj|me_6,$1),prep|about_7(pro:per|it_8,$1)),$0),$0))
example_end

Sent: x e June ?
Sem: BARE($0,Q(n:let|x_1($0)))
example_end

Sent: look Adam what I have .
Sem: lambda $1_{e}.lambda $0_{r}.and(v|have_5(pro:sub|i_4,$1,$0),co|look_1(you,$0))
example_end

Sent: where 's your drawing board ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,and_comp(n|drawing_4($1),n|board_5($1))),$0),$2($0))
example_end

Sent: the drawing board ?
Sem: BARE($0,Q(det:art|the_1($1,and_comp(n|drawing_2($1),n|board_3($1)),$0)))
example_end

Sent: the drawing board ?
Sem: BARE($0,Q(det:art|the_1($1,and_comp(n|drawing_2($1),n|board_3($1)),$0)))
example_end

Sent: you broke it didn 't you ?
Sem: lambda $0_{r}.Q(and(v|break-past_2(pro:per|you_1,pro:per|it_3,$0),not(mod|do_4(pro:per|you_6,$0),$0)))
example_end

Sent: I 'm not going anyplace .
Sem: lambda $0_{r}.not(cop|~be_2(and(part|go-presp_4(pro:sub|i_1,$0),adv|anyplace_5($0)),$0),$0)
example_end

Sent: no I was just getting some diapers for Paul .
Sem: lambda $0_{r}.and(cop|be-past_3(and(and(part|get-presp_5(pro:sub|i_2,qn|some_6($1,n|diaper-pl_7($1)),$0),adv|just_4($0)),prep|for_8(n:prop|paul_9,$0)),$0),co|no_1($0))
example_end

Sent: well I started it .
Sem: lambda $0_{r}.and(v|start-past_3(pro:sub|i_2,pro:per|it_4,$0),co|well_1($0))
example_end

Sent: next week .
Sem: adv|next_1(BARE($0,n|week_2($0)))
example_end

Sent: no you hit him didn 't you ?
Sem: lambda $0_{r}.Q(and(and(v|hit-zero_3(pro:per|you_2,pro:obj|him_4,$0),not(mod|do_5(pro:per|you_7,$0),$0)),co|no_1($0)))
example_end

Sent: leave you alone ?
Sem: lambda $0_{r}.Q(v|leave_1(you,lambda $1_{r}.adv|alone_3(pro:per|you_2,$1),$0))
example_end

Sent: Adam here are some peanuts .
Sem: lambda $0_{r}.and(cop|be-pres_3(qn|some_4($1,n|peanut-pl_5($1)),$0),adv|here_2($0))
example_end

Sent: you have_to take the shell off .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|take_3(pro:per|you_1,det:art|the_4($1,n|shell_5($1)),$0),adv|off_6($0)),$0)
example_end

Sent: you cut it in a bowl ?
Sem: lambda $0_{r}.Q(and(v|cut-zero_2(pro:per|you_1,pro:per|it_3,$0),prep|in_4(det:art|a_5($1,n|bowl_6($1)),$0)))
example_end

Sent: you have_to chew it hard .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|chew_3(pro:per|you_1,pro:per|it_4,$0),adv|hard_5($0)),$0)
example_end

Sent: pick up the paper behind you Adam .
Sem: lambda $0_{r}.and(v|pick_1(you,det:art|the_3($1,att(n|paper_4($1),adv|behind_5(pro:per|you_6))),$0),prep|up_2($0))
example_end

Sent: d you wan to shell another one ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|shell_5(pro:per|you_2,qn|another_6($2,pro:indef|one_7($2)),$1),$0),$0))
example_end

Sent: you don 't have_to eat them .
Sem: lambda $0_{r}.not(mod:aux|have_to_4(mod|do_2(v|eat_5(pro:per|you_1,pro:obj|them_6,$0),$0),$0),$0)
example_end

Sent: you could just shell them .
Sem: lambda $0_{r}.mod|could_2(and(n|shell_4(pro:per|you_1,pro:obj|them_5,$0),adv|just_3($0)),$0)
example_end

Sent: take a shell out_of a shoe ?
Sem: lambda $0_{r}.Q(and(v|take_1(you,det:art|a_2($1,n|shell_3($1)),$0),prep|out_of_4(det:art|a_5($2,n|shoe_6($2)),$0)))
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: you take it off .
Sem: lambda $0_{r}.and(v|take_2(pro:per|you_1,pro:per|it_3,$0),adv|off_4($0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: did you chew it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|chew_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: see what 's inside .
Sem: lambda $1_{e}.lambda $0_{r}.and(and(poss|~s_3($1,$0),adv|inside_4($0)),co|see_1(you,$0))
example_end

Sent: yes I want you to go the way .
Sem: lambda $0_{r}.and(v|want_3(pro:sub|i_2,lambda $1_{r}.v|go_6(pro:per|you_4,det:art|the_7($2,n|way_8($2)),$1),$0),co|yes_1($0))
example_end

Sent: can 't you open them yet ?
Sem: lambda $0_{r}.Q(not(mod|can_1(and(v|open_4(pro:per|you_3,pro:obj|them_5,$0),adv|yet_6($0)),$0),$0))
example_end

Sent: remember we did the peas yesterday ?
Sem: lambda $0_{r}.Q(and(and(v|do-past_3(pro:sub|we_2,det:art|the_4($1,n|pea-pl_5($1)),$0),adv:tem|yesterday_6($0)),v|remember_1(you,$0)))
example_end

Sent: did you help ?
Sem: lambda $0_{r}.Q(v|do-past_1(co|help_3(pro:per|you_2,$0),$0))
example_end

Sent: did you find some tiny ones ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,qn|some_4($1,att(pro:indef|one-pl_6,BARE($2,adj|tiny_5($2)),$1)),$0),$0))
example_end

Sent: no because they weren 't cooked .
Sem: lambda $0_{r}.and(not(aux|be_4(part|cook-pastp_6(pro:sub|they_3,$0),$0),$0),co|no_1($0))
example_end

Sent: they are to cook but they 're not cooked yet .
Sem: lambda $0_{r}.conj|but_5(not(cop|~be_7(and(part|cook-pastp_9(pro:sub|they_6,$0),adv|yet_10($0)),$0),$0),cop|be-pres_2(pro:sub|they_1,lambda $1_{r}.n|cook_4(pro:sub|they_1,$1),$0))
example_end

Sent: you have_to boil them on the stove .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|boil_3(pro:per|you_1,pro:obj|them_4,$0),prep|on_5(det:art|the_6($1,n|stove_7($1)),$0)),$0)
example_end

Sent: are you going to cook peas on it ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|cook_5(pro:per|you_2,BARE($2,n|pea-pl_6($2)),$1),prep|on_7(pro:per|it_8,$1)),$0),$0))
example_end

Sent: are you going to take the shell off ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|take_5(pro:per|you_2,det:art|the_6($2,n|shell_7($2)),$1),adv|off_8($1)),$0),$0))
example_end

Sent: one step ?
Sem: BARE($0,Q(det:num|one_1(n|step_2($0))))
example_end

Sent: did you get here in one step ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(and(v|get_3(pro:per|you_2,$0),adv|here_4($0)),prep|in_5(BARE($1,pro:indef|one_6(n|step_7($1))),$0)),$0))
example_end

Sent: another step ?
Sem: BARE($0,Q(pro:indef|another_1($1,n|step_2($1),$0)))
example_end

Sent: does that mean you take two steps ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|mean_3(pro:dem|that_2,lambda $1_{r}.v|take_5(pro:per|you_4,BARE($2,det:num|two_6(n|step-pl_7($2))),$1),$0),$0))
example_end

Sent: hello shell .
Sem: lambda $0_{r}.and(n|shell_2($0),co|hello_1($0))
example_end

Sent: that would hurt .
Sem: lambda $0_{r}.mod|will-cond_2(v|hurt-zero_3(pro:dem|that_1,$0),$0)
example_end

Sent: that would hurt .
Sem: lambda $0_{r}.mod|will-cond_2(v|hurt-zero_3(pro:dem|that_1,$0),$0)
example_end

Sent: I 'm just trying to get the string off .
Sem: lambda $0_{r}.aux|~be_2(and(part|try-presp_4(pro:sub|i_1,lambda $1_{r}.and(v|get_6(pro:sub|i_1,det:art|the_7($2,n|string_8($2)),$1),adv|off_9($1)),$0),adv|just_3($0)),$0)
example_end

Sent: it doesn 't belong on here .
Sem: lambda $0_{r}.not(mod|do_2(and(v|belong_4(pro:per|it_1,$0),prep|on_5(adv|here_6($0))),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: it doesn 't belong on here .
Sem: lambda $0_{r}.not(mod|do_2(and(v|belong_4(pro:per|it_1,$0),prep|on_5(adv|here_6($0))),$0),$0)
example_end

Sent: what happened to the other part of it ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,att(and(qn|other_5($2),n|part_6($2)),prep|of_7(pro:per|it_8))),$0))
example_end

Sent: you 're rolling a barrel ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|roll-presp_3(pro:per|you_1,det:art|a_4($1,n|barrel_5($1)),$0),$0))
example_end

Sent: did you show Urs your monkey train ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:poss|your_5($1,and_comp(n|monkey_6($1),n|train_7($1))),n:prop|ursula_4,$0),$0)
example_end

Sent: you 're going to feed the pigeons .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|feed_5(pro:per|you_1,det:art|the_6($2,n|pigeon-pl_7($2)),$1),$0),$0)
example_end

Sent: well I don 't think they 'd like the shell .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|~genmod_7(prep|like_8(pro:sub|they_6,det:art|the_9($2,n|shell_10($2)),$1),$1),$0),$0),$0),co|well_1($0))
example_end

Sent: for you ?
Sem: Q(conj|for_1(pro:per|you_2))
example_end

Sent: hello Mr Shell .
Sem: lambda $0_{r}.and(n:prop|shell_3_mr_2($0),co|hello_1($0))
example_end

Sent: how are you today ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(aux|be-pres_2(pro:per|you_3,$0),$1($0)),adv:tem|today_4($0))
example_end

Sent: what did he do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: he threw some pie ?
Sem: lambda $0_{r}.Q(v|throw-past_2(pro:sub|he_1,qn|some_3($1,n|pie_4($1)),$0))
example_end

Sent: what are you going to do to that one ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),prep|to_7(pro:dem|that_8($3,pro:indef|one_9($3)),$1)),$0),$0)
example_end

Sent: I think you 'd better ask your Mother .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|~genmod_4(and(v|ask_6(pro:per|you_3,det:poss|your_7($2,n:prop|mother_8($2)),$1),adj|good-cp_5($1)),$1),$0)
example_end

Sent: it 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:per|it_1,$0)
example_end

Sent: open it .
Sem: lambda $0_{r}.v|open_1(you,pro:per|it_2,$0)
example_end

Sent: here it comes .
Sem: lambda $0_{r}.and(v|come-3s_3(pro:per|it_2,$0),adv|here_1($0))
example_end

Sent: that 's a good one .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(pro:indef|one_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: let 's put the outside shells in there .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|put-zero_3(pro:obj|~us_2,det:art|the_4($2,and(adj|outside_5($2),n|shell-pl_6($2))),$1),prep|in_7(adv|there_8($1))),$0)
example_end

Sent: where is a broken one .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|a_3($1,att(pro:indef|one_5,BARE($2,part|break-pastp_4($2)),$1)),$0),$3($0))
example_end

Sent: you can peel it now .
Sem: lambda $0_{r}.mod|can_2(and(v|peel_3(pro:per|you_1,pro:per|it_4,$0),adv|now_5($0)),$0)
example_end

Sent: a top on his king hat ?
Sem: BARE($0,Q(det:art|a_1($1,att(n|top_2($1),prep|on_3(det:poss|his_4($2,and_comp(n|king_5($2),n|hat_6($2))))),$0)))
example_end

Sent: we 're going play a game .
Sem: lambda $0_{r}.aux|~be_2(n|play_4(pro:sub|we_1,det:art|a_5($1,n|game_6($1)),$0),$0)
example_end

Sent: it is very sharp .
Sem: lambda $0_{r}.adv|very_3(adj|sharp_4(pro:per|it_1,$0))
example_end

Sent: no it 's too sharp Adam .
Sem: lambda $0_{r}.and(adv|too_4(adj|sharp_5(pro:per|it_2,$0)),co|no_1($0))
example_end

Sent: no that doesn 't go on .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|go_5(pro:dem|that_2,$0),adv|on_6($0)),$0),$0),qn|no_1($0))
example_end

Sent: oh look it tipped over of course .
Sem: lambda $0_{r}.and(and(and(v|tip-past_4_over_5(pro:per|it_3,$0),n|course_7_of_6($0)),co|look_2(you,$0)),co|oh_1($0))
example_end

Sent: to make a what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|make_2(you,$1,$0)
example_end

Sent: I 'm not mocking you .
Sem: lambda $0_{r}.not(cop|~be_2(part|mock-presp_4(pro:sub|i_1,pro:per|you_5,$0),$0),$0)
example_end

Sent: Celia said that ?
Sem: lambda $0_{r}.Q(v|say-past_2(n:prop|celia_1,pro:dem|that_3,$0))
example_end

Sent: because that 's what he wants .
Sem: lambda $0_{r}.pro:int|what_4(pro:dem|that_2,$0)
example_end

Sent: is that funny ?
Sem: lambda $0_{r}.Q(adj|fun-dn_3(pro:dem|that_2,$0))
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: where did they go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:sub|they_3,$0),$1($0)),$0)
example_end

Sent: they went where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|go-past_2(pro:sub|they_1,$0),$1($0))
example_end

Sent: where did the circus people go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_6(det:art|the_3($1,and_comp(n|circus_4($1),n|person-pl_5($1))),$0),$2($0)),$0)
example_end

Sent: that 's part of Daddy 's barbell set .
Sem: lambda $0_{r}.att(n|part_3(pro:dem|that_1,$0),prep|of_4(n:prop|daddy_5's($1,and_comp(n|barbell_7($1),part|set-pastp_8($1)))))
example_end

Sent: that 's not a bat .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|bat_5(pro:dem|that_1,$0)),$0)
example_end

Sent: don 't scream .
Sem: lambda $0_{r}.not(mod|do_1(v|scream_3(you,$0),$0),$0)
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: careful honey .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: are you crowded ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(v|crowd-past_3(pro:per|you_2,$0),$0))
example_end

Sent: she 's seen cars parking there .
Sem: lambda $0_{r}.aux|~be_2(part|see-pastp_3(pro:sub|she_1,lambda $1_{r}.and(part|park-presp_5(BARE($2,n|car-pl_4($2)),$1),adv|there_6($1)),$0),$0)
example_end

Sent: mm this is good .
Sem: lambda $0_{r}.and(adj|good_4(pro:dem|this_2,$0),co|mm_1($0))
example_end

Sent: oh that one 's no good .
Sem: lambda $0_{r}.and(not(adj|good_6(pro:dem|that_2($1,pro:indef|one_3($1)),$0),$0),co|oh_1($0))
example_end

Sent: we 'll be at thirty two Williams Street in Roxbury .
Sem: lambda $0_{r}.mod|~will_2(prep|at_4(att(BARE($1,and_comp(n:prop|williams_7($1),and_comp(det:num|thirty_5(n:prop|street_8($1)),det:num|two_6(n:prop|street_8($1))))),prep|in_9(n:prop|roxbury_10)),pro:sub|we_1,$0),$0)
example_end

Sent: yes there is a little door but leads up to the roof .
Sem: lambda $0_{r}.and(conj|but_7(and(and(n|lead-pl_8(you,$0),adv|up_9($0)),prep|to_10(det:art|the_11($1,n|roof_12($1)),$0)),and(cop|be-3s_3(det:art|a_4($2,and(adj|little_5($2),n|door_6($2))),$0),adv|there_2($0))),co|yes_1($0))
example_end

Sent: careful now .
Sem: BARE($0,adv|now_2(co|careful_1($0)))
example_end

Sent: you got what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|get-past_2(pro:per|you_1,$1,$0)
example_end

Sent: you got clutched !
Sem: lambda $0_{r}.part|clutch-pastp_3(pro:per|you_1,$0)
example_end

Sent: this is the cheese Adam always picks out at the grocery store .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,n|cheese_4(pro:dem|this_1,$0))
example_end

Sent: Adam did you try the cheese ?
Sem: lambda $0_{r}.Q(mod|do-past_2(v|try_4(pro:per|you_3,det:art|the_5($1,n|cheese_6($1)),$0),$0))
example_end

Sent: did you try the cheese ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|try_3(pro:per|you_2,det:art|the_4($1,n|cheese_5($1)),$0),$0))
example_end

Sent: did you taste the cheese ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|taste_3(pro:per|you_2,det:art|the_4($1,n|cheese_5($1)),$0),$0))
example_end

Sent: please don 't knock me down little cowboy .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|knock_4(you,pro:obj|me_5,$0),adv|down_6($0)),$0),$0),co|please_1($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: because I had enough .
Sem: lambda $0_{r}.and(v|have-past_3(pro:sub|i_2,$0),adv|enough_4($0))
example_end

Sent: who 's Happy the Bowl ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|bowl_5_happy_3_the_4,$0)
example_end

Sent: a rifle .
Sem: det:art|a_1($0,n|rifle_2($0))
example_end

Sent: don 't touch that .
Sem: lambda $0_{r}.not(mod|do_1(v|touch_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: that 's to help keep the cheese fresh .
Sem: lambda $0_{r}.cop|~be_2(pro:dem|that_1,lambda $1_{r}.v|keep_5(pro:dem|that_1,det:art|the_6($2,and(adj|fresh_8($2),n|cheese_7($2))),$1),$0)
example_end

Sent: yes it 's like a shell .
Sem: lambda $0_{r}.and(conj|like_4(det:art|a_5($1,n|shell_6($1)),pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: careful you 'll drop all your food out .
Sem: lambda $0_{r}.and(mod|~will_3(and(v|drop_4(pro:per|you_2,det:poss|your_6($1,qn|all_5($2,n|food_7($2),$1)),$0),adv|out_8($0)),$0),adj|care-dn_1($0))
example_end

Sent: like a duck ?
Sem: Q(prep|like_1(det:art|a_2($0,n|duck_3($0))))
example_end

Sent: does a duck drop his food out like that ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(and(n|drop_4(det:art|a_2($1,n|duck_3($1)),det:poss|his_5($2,n|food_6($2)),$0),adv|out_7($0)),prep|like_8(pro:dem|that_9,$0)),$0))
example_end

Sent: why does he do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|do_4(pro:sub|he_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: not today .
Sem: not(BARE($0,adv:tem|today_2($0)))
example_end

Sent: alright well you drink some milk now .
Sem: lambda $0_{r}.and(and(and(v|drink_4(pro:per|you_3,qn|some_5($1,n|milk_6($1)),$0),adv|now_7($0)),co|alright_1($0)),n|well_2($0))
example_end

Sent: did you like the balloon that you blow up ?
Sem: lambda $0_{r}.Q(v|do-past_1(prep|like_3(pro:per|you_2,det:art|the_4($1,n|balloon_5($1)),$0),$0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: Shadow_Gay who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|shadow_gay_1,$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: Shadow_Gay who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|shadow_gay_1,$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: Shadow_Gay who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|shadow_gay_1,$0)
example_end

Sent: Paul who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|paul_1,$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: Shadow_Gay who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|shadow_gay_1,$0)
example_end

Sent: knocking on the nail .
Sem: lambda $0_{r}.and(part|knock-presp_1(you,$0),prep|on_2(det:art|the_3($1,n|nail_4($1)),$0))
example_end

Sent: do the one about pop .
Sem: lambda $0_{r}.v|do_1(you,det:art|the_2($1,att(pro:indef|one_3($1),adv|about_4(BARE($2,n|pop_5($2))))),$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: pop who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,n|pop_1($2)),$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: in the circus you can see a lion ?
Sem: lambda $0_{r}.Q(mod|can_5(and(v|see_6(pro:per|you_4,det:art|a_7($1,n|lion_8($1)),$0),prep|in_1(det:art|the_2($2,n|circus_3($2)),$0)),$0))
example_end

Sent: a lion !
Sem: det:art|a_1($0,n|lion_2($0))
example_end

Sent: and what will the lion say ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|will_3(v|say_6(det:art|the_4($1,n|lion_5($1)),$2,$0),$0)
example_end

Sent: you 're a little lion .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,and(n|lion_5(pro:per|you_1,$0),adj|little_4(pro:per|you_1,$0)))
example_end

Sent: careful don 't hit your head on the mantle .
Sem: lambda $0_{r}.and(not(mod|do_2(and(part|hit-pastp_4(you,det:poss|your_5($1,n|head_6($1)),$0),prep|on_7(det:art|the_8($2,n|mantle_9($2)),$0)),$0),$0),adj|care-dn_1($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: oh do another one .
Sem: lambda $0_{r}.and(v|do_2(you,qn|another_3($1,pro:indef|one_4($1)),$0),co|oh_1($0))
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: how can Shadow_Gay ride on a pony .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.n|can_2(and(and(and(n|ride_4(you,$0),$1($0)),n:prop|shadow_gay_3($0)),prep|on_5(det:art|a_6($2,n|pony_7($2)),$0)),$0)
example_end

Sent: isn 't Shadow_Gay a horse ?
Sem: lambda $0_{r}.Q(not(det:art|a_4(n:prop|shadow_gay_3,n|horse_5(n:prop|shadow_gay_3,$0)),$0))
example_end

Sent: who is Shadow_Gay ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|shadow_gay_3,$0)
example_end

Sent: is he a little boy ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:sub|he_2,and(n|boy_5(pro:sub|he_2,$0),adj|little_4(pro:sub|he_2,$0))))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: what kind of a dog ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(det:art|a_4($2,n|dog_5($2)))))
example_end

Sent: a dog riding on a pony .
Sem: lambda $0_{r}.and(part|ride-presp_3(det:art|a_1($1,n|dog_2($1)),$0),prep|on_4(det:art|a_5($2,n|pony_6($2)),$0))
example_end

Sent: what kind of dog are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_6,att(n|kind_2(pro:per|you_6,$0),prep|of_3(BARE($2,n|dog_4($2)))))
example_end

Sent: you 're going back under there .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-presp_3(pro:per|you_1,$0),adv|under_5(adv|back_4(adv|there_6($0)))),$0)
example_end

Sent: he put his bread in his house .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:sub|he_1,det:poss|his_3($1,n|bread_4($1)),$0),prep|in_5(det:poss|his_6($2,n|house_7($2)),$0))
example_end

Sent: some bread ?
Sem: BARE($0,Q(qn|some_1($1,n|bread_2($1),$0)))
example_end

Sent: the doggie says that ?
Sem: lambda $0_{r}.Q(v|say-3s_3(det:art|the_1($1,n|dog-dim_2($1)),pro:dem|that_4,$0))
example_end

Sent: he 's crawling around .
Sem: lambda $0_{r}.aux|~be_2(and(part|crawl-presp_3(pro:sub|he_1,$0),adv|around_4($0)),$0)
example_end

Sent: I guess he just likes to crawl .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.and(v|like-3s_5(pro:sub|he_3,lambda $2_{r}.n|crawl_7(pro:sub|he_3,$2),$1),adv|just_4($1)),$0)
example_end

Sent: you eat yourself up ?
Sem: lambda $0_{r}.Q(and(v|eat_2(pro:per|you_1,pro:refl|yourself_3,$0),adv|up_4($0)))
example_end

Sent: why would you want to do that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,pro:dem|that_7,$1),$0),$2($0)),$0)
example_end

Sent: it 's true .
Sem: lambda $0_{r}.adj|true_3(pro:per|it_1,$0)
example_end

Sent: you can eat yourself if you want to .
Sem: lambda $0_{r}.conj|if_5(v|want_7(pro:per|you_6,$0),mod|can_2(and(v|eat_3(pro:per|you_1,$0),pro:refl|yourself_4($0)),$0))
example_end

Sent: I should think that 's hard .
Sem: lambda $0_{r}.mod|should_2(v|think_3(pro:sub|i_1,lambda $1_{r}.adv|hard_6(pro:dem|that_4,$1),$0),$0)
example_end

Sent: why are you going to do that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,pro:dem|that_7,$1),$0),$2($0)),$0)
example_end

Sent: you 're telling jokes on yourself ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|tell-presp_3(pro:per|you_1,BARE($1,n|joke-pl_4($1)),$0),prep|on_5(pro:refl|yourself_6,$0)),$0))
example_end

Sent: that 's what I thought .
Sem: lambda $0_{r}.pro:int|what_3(pro:dem|that_1,$0)
example_end

Sent: Adam are you still sleepy ?
Sem: lambda $0_{r}.Q(adv|still_4(adj|sleep-dn_5(pro:per|you_3,$0)))
example_end

Sent: you 're just yawning .
Sem: lambda $0_{r}.cop|~be_2(and(part|yawn-presp_4(pro:per|you_1,$0),adv|just_3($0)),$0)
example_end

Sent: I 'm just putting some things away .
Sem: lambda $0_{r}.aux|~be_2(and(and(part|put-presp_4(pro:sub|i_1,qn|some_5($1,n|thing-pl_6($1)),$0),adv|just_3($0)),adv|away_7($0)),$0)
example_end

Sent: so we 'll have some space for walking .
Sem: lambda $0_{r}.mod|~will_3(v|have_4(pro:sub|we_2,qn|some_5($1,att(n|space_6($1),prep|for_7(BARE($2,n:gerund|walk-presp_8($2))))),$0),$0)
example_end

Sent: in your refrigerator ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|refrigerator_3($0))))
example_end

Sent: where 's your refrigerator ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|your_3($1,n|refrigerator_4($1)),$0))
example_end

Sent: you didn 't have a cold .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,det:art|a_5($1,n|cold_6($1)),$0),$0),$0)
example_end

Sent: you had a sore throat .
Sem: lambda $0_{r}.v|have-past_2(pro:per|you_1,det:art|a_3($1,and(adj|sore_4($1),n|throat_5($1))),$0)
example_end

Sent: where are they Adam ?
Sem: lambda $0_{r}.Q(adv:int|where_1(pro:sub|they_3,$0))
example_end

Sent: when the hammer knocked you down .
Sem: lambda $0_{r}.and(v|knock-past_4(det:art|the_2($1,n|hammer_3($1)),pro:per|you_5,$0),adv|down_6($0))
example_end

Sent: in the toy box ?
Sem: Q(prep|in_1(det:art|the_2($0,and_comp(n|toy_3($0),n|box_4($0)))))
example_end

Sent: you 're a toy ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,n|toy_4(pro:per|you_1,$0)))
example_end

Sent: oh you 're not a toy ?
Sem: lambda $0_{r}.Q(and(not(det:art|a_5(pro:per|you_2,n|toy_6(pro:per|you_2,$0)),$0),co|oh_1($0)))
example_end

Sent: I was going to put this together .
Sem: lambda $0_{r}.aux|be-past_2(part|go-presp_3(pro:sub|i_1,lambda $1_{r}.and(v|put-zero_5(pro:sub|i_1,pro:dem|this_6,$1),adv|together_7($1)),$0),$0)
example_end

Sent: a bench .
Sem: det:art|a_1($0,n|bench_2($0))
example_end

Sent: what do you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it 's a ruler .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|rule-dv_4(pro:per|it_1,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: how did what ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(mod|do-past_2(you,$1,$0),$2($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: he fell down ?
Sem: lambda $0_{r}.Q(and(v|fall-past_2(pro:sub|he_1,$0),adv|down_3($0)))
example_end

Sent: why don 't you turn it over ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|turn_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),adv|over_7($0)),$0),$0)
example_end

Sent: I 'll hold this .
Sem: lambda $0_{r}.mod|~will_2(v|hold_3(pro:sub|i_1,pro:dem|this_4,$0),$0)
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: oh you lost something .
Sem: lambda $0_{r}.and(v|lose-past_3(pro:per|you_2,pro:indef|something_4,$0),co|oh_1($0))
example_end

Sent: careful so you don 't hit your hand .
Sem: lambda $0_{r}.and(not(mod|do_4(v|hit-zero_6(pro:per|you_3,det:poss|your_7($1,n|hand_8($1)),$0),$0),$0),co|careful_1($0))
example_end

Sent: hold it straight .
Sem: lambda $0_{r}.and(v|hold_1(you,pro:per|it_2,$0),adv|straight_3($0))
example_end

Sent: what d you want Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|want_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's what I thought .
Sem: lambda $0_{r}.pro:int|what_3(pro:dem|that_1,$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: I don 't quite know how that fits on there .
Sem: lambda $0_{r}.not(mod|do_2(and(v|know_5(pro:sub|i_1,lambda $1_{r}.and(and(v|fit-3s_8(pro:dem|that_7,$1),adv:int|how_6($1)),adv|there_10($1)),$0),adv|quite_4($0)),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: I think perhaps something is missing .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.adv|perhaps_3(part|miss-presp_6(pro:indef|something_4,$1)),$0)
example_end

Sent: I think she 's right .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.n|right_5(pro:sub|she_3,$1),$0)
example_end

Sent: d you see the pilot ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,det:art|the_4($1,n|pilot_5($1)),$0),$0))
example_end

Sent: what does he need if he jumps out ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|if_5(and(v|jump-3s_7(pro:sub|he_6,$0),adv|out_8($0)),v|do-3s_2(v|need_4(pro:sub|he_3,$1,$0),$0))
example_end

Sent: what is it saying ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-3s_2(part|say-presp_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: and when you throw it up in the air what happens ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_11($1,$0),and(and(and(v|throw_4(pro:per|you_3,pro:per|it_5,$0),$2($0)),adv|up_6($0)),prep|in_7(det:art|the_8($3,n|air_9($3)),$0)))
example_end

Sent: I don 't know where you put it .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|put-zero_7(pro:per|you_6,pro:per|it_8,$1),adv:int|where_5($1)),$0),$0),$0)
example_end

Sent: Adam when it opens it looks like this .
Sem: lambda $0_{r}.conj|when_2(v|open-3s_4(pro:per|it_3,$0),and(cop|look-3s_6(_,pro:per|it_5,$0),prep|like_7(pro:dem|this_8,$0)))
example_end

Sent: now it 's all folded up .
Sem: lambda $0_{r}.and(and(and(part|fold-pastp_5(pro:per|it_2,$0),adv|now_1($0)),adv|all_4($0)),adv|up_6($0))
example_end

Sent: would you like to look at a book ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.and(cop|look_5(pro:per|you_2,$1),prep|at_6(det:art|a_7($2,n|book_8($2)),$1)),$0),$0))
example_end

Sent: I have an a b c book .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,det:art|a_3($1,and_comp(and_comp(n:let|c_6($1),and_comp(n:let|b_5($1),n:let|a_4($1))),n|book_7($1))),$0)
example_end

Sent: maybe we can read it together .
Sem: lambda $0_{r}.mod|can_3(and(and(v|read-zero_4(pro:sub|we_2,pro:per|it_5,$0),adv|maybe_1($0)),adv|together_6($0)),$0)
example_end

Sent: look what is that ?
Sem: lambda $0_{r}.co|look_1(you,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: look at that .
Sem: lambda $0_{r}.cop|look_1(you,pro:dem|that_3_at_2,$0)
example_end

Sent: it 's another ant .
Sem: lambda $0_{r}.qn|another_3(pro:per|it_1,n|ant_4(pro:per|it_1,$0))
example_end

Sent: Captain Bob has one of these .
Sem: lambda $0_{r}.v|have-3s_3(n:prop|captain_1_bob_2,BARE($1,det:num|one_4($1)),$0)
example_end

Sent: and this is what letter ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_2,n|letter_5(pro:dem|this_2,$0))
example_end

Sent: these sounds all sound like b .
Sem: lambda $0_{r}.and(n|sound_4(pro:dem|these_1(adv|all_3($1,n|sound-pl_2($1))),$0),prep|like_5(BARE($2,n:let|b_6($2)),$0))
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: you 're taking yourself to the hospital ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|take-presp_3(pro:per|you_1,pro:refl|yourself_4,$0),prep|to_5(det:art|the_6($1,n|hospital_7($1)),$0)),$0))
example_end

Sent: I don 't think you 've ever seen that before .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.aux|~have_6(and(and(part|see-pastp_8(pro:per|you_5,pro:dem|that_9,$1),adv|ever_7($1)),adv|before_10($1)),$1),$0),$0),$0)
example_end

Sent: it 's cactus .
Sem: lambda $0_{r}.n|cactus_3(pro:per|it_1,$0)
example_end

Sent: this is d .
Sem: lambda $0_{r}.n:let|d_3(pro:dem|this_1,$0)
example_end

Sent: it 's most of the animals ?
Sem: qn|most_3(det:art|the_5($0,n|animal-pl_6($0)))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: a bear ?
Sem: BARE($0,Q(det:art|a_1($1,n|bear_2($1),$0)))
example_end

Sent: oh I 've never seen a bear that looked like that .
Sem: lambda $0_{r}.and(aux|~have_3(and(part|see-pastp_5(pro:sub|i_2,det:art|a_6($1,n|bear_7($1)),$0),adv|never_4($0)),$0),co|oh_1($0))
example_end

Sent: oh you said doggie .
Sem: lambda $0_{r}.and(v|say-past_3(pro:per|you_2,BARE($1,n|dog-dim_4($1)),$0),co|oh_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what are these ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|these_3,$0)
example_end

Sent: take a guess .
Sem: lambda $0_{r}.v|take_1(you,det:art|a_2($1,n|guess_3($1)),$0)
example_end

Sent: that 's pretty good .
Sem: lambda $0_{r}.adv|pretty_3(adj|good_4(pro:dem|that_1,$0))
example_end

Sent: drum sticks .
Sem: BARE($0,and_comp(n|drum_1($0),v|stick-3s_2($0)))
example_end

Sent: and what are these ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|these_4,$0)
example_end

Sent: these are dragon flies .
Sem: lambda $0_{r}.and_comp(n|dragon_3(pro:dem|these_1,$0),n|fly-pl_4(pro:dem|these_1,$0))
example_end

Sent: those are dragon flies .
Sem: lambda $0_{r}.and_comp(n|dragon_3(pro:dem|those_1,$0),n|fly-pl_4(pro:dem|those_1,$0))
example_end

Sent: that 's a donkey .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|donkey_4(pro:dem|that_1,$0))
example_end

Sent: and what are these ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|these_4,$0)
example_end

Sent: these are tusks tusks .
Sem: lambda $0_{r}.n|tusk-pl_3(pro:dem|these_1,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: look again .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),adv|again_2($0))
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Easter eggs .
Sem: BARE($0,and_comp(n:prop|easter_1($0),n|egg-pl_2($0)))
example_end

Sent: don 't you have something like that at nursery school ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|have_4(pro:per|you_3,att(pro:indef|something_5,prep|like_6(pro:dem|that_7)),$0),prep|at_8(BARE($1,and_comp(n|nursery_9($1),n|school_10($1))),$0)),$0),$0))
example_end

Sent: if you turn one they all turn .
Sem: lambda $0_{r}.conj|if_1(v|turn_3(pro:per|you_2,BARE($1,pro:indef|one_4($1)),$0),n|turn_7(post|all_6($2,pro:sub|they_5($2)),$0))
example_end

Sent: because they 're all linked together .
Sem: lambda $0_{r}.adv|together_6(v|link-past_5(post|all_4($1,pro:sub|they_2($1)),$0))
example_end

Sent: this is f .
Sem: lambda $0_{r}.n:let|f_3(pro:dem|this_1,$0)
example_end

Sent: he 's the color of grass .
Sem: lambda $0_{r}.det:art|the_3(pro:sub|he_1,att(n|color_4(pro:sub|he_1,$0),prep|of_5(BARE($1,n|grass_6($1)))))
example_end

Sent: and he hops .
Sem: lambda $0_{r}.v|hop-3s_3(pro:sub|he_2,$0)
example_end

Sent: yes a grasshopper .
Sem: lambda $0_{r}.and(det:art|a_2($1,n|grass+hopper_3($1),$0),co|yes_1($0))
example_end

Sent: I didn 't know you knew these in the book .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|know-past_6(pro:per|you_5,pro:dem|these_7,$1),prep|in_8(det:art|the_9($2,n|book_10($2)),$1)),$0),$0),$0)
example_end

Sent: what are these ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|these_3,$0)
example_end

Sent: no that 's a flamingo .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|flamingo_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: no it 's a flamingo .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|flamingo_5(pro:per|it_2,$0)),co|no_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: oh he 'd probably run from you .
Sem: lambda $0_{r}.and(mod|~genmod_3(and(and(v|run_5(pro:sub|he_2,$0),adv|probable-dadj_4($0)),prep|from_6(pro:per|you_7,$0)),$0),co|oh_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: is that a rooster ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|rooster_4(pro:rel|that_2,$0)))
example_end

Sent: that looks like a hen .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:dem|that_1,$0),prep|like_3(det:art|a_4($1,n|hen_5($1)),$0))
example_end

Sent: cackle cackle cackle cackle .
Sem: lambda $0_{r}.on|cackle_1($0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: and what is the house on ?
Sem: lambda $0_{r}.adv|on_6(pro:int|what_2,det:art|the_4($1,n|house_5($1)),$0)
example_end

Sent: it 's a hill .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|hill_4(pro:per|it_1,$0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: Jiminy Cricket who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|jiminy_1_cricket_2,$0)
example_end

Sent: what are these ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|these_3,$0)
example_end

Sent: well they 're jelly beans .
Sem: lambda $0_{r}.and(and_comp(n|jelly_4(pro:sub|they_2,$0),n|bean-pl_5(pro:sub|they_2,$0)),co|well_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: it 's jelly or jam .
Sem: lambda $0_{r}.n|jam_5(pro:per|it_1,$0)
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: that 's a jug .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|jug_4(pro:dem|that_1,$0))
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: you 're silly .
Sem: lambda $0_{r}.adj|silly_3(pro:per|you_1,$0)
example_end

Sent: no those are his claws .
Sem: lambda $0_{r}.and(det:poss|his_4(pro:dem|those_2,n|claw-pl_5(pro:dem|those_2,$0)),qn|no_1($0))
example_end

Sent: yes but what is it ?
Sem: lambda $0_{r}.Q(pro:int|what_3(pro:per|it_5,$0))
example_end

Sent: oh that 's no whale .
Sem: lambda $0_{r}.and(qn|no_4(pro:dem|that_2,n|whale_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: it 's a lobster .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|lobster_4(pro:per|it_1,$0))
example_end

Sent: I don 't think that 's a turtle .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|a_7(pro:dem|that_5,n|turtle_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: that 's a lobster .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|lobster_4(pro:dem|that_1,$0))
example_end

Sent: that 's a lizard .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|lizard_4(pro:dem|that_1,$0))
example_end

Sent: he 's a little animal who lives outside .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|he_1,and(n|animal_5(pro:sub|he_1,$0),adj|little_4(pro:sub|he_1,$0)))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what are those Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:dem|those_3,$0)
example_end

Sent: you 're guessing .
Sem: lambda $0_{r}.aux|~be_2(part|guess-presp_3(pro:per|you_1,$0),$0)
example_end

Sent: those are nickels .
Sem: lambda $0_{r}.n|nickel-pl_3(pro:dem|those_1,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: no a needle .
Sem: lambda $0_{r}.and(det:art|a_2($1,n|needle_3($1),$0),qn|no_1($0))
example_end

Sent: you have one of those .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,BARE($1,pro:indef|one_3($1)),$0)
example_end

Sent: that 's nut .
Sem: lambda $0_{r}.n|nut_3(pro:dem|that_1,$0)
example_end

Sent: no not that kind .
Sem: lambda $0_{r}.and(not(det:dem|that_3($1,n|kind_4($1)),$0),co|no_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: an octopus .
Sem: det:art|a_1($0,n|octopus_2($0))
example_end

Sent: how many arms does he have ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_4(v|have_6(pro:sub|he_5,BARE($1,and($2(qn|many_2($1)),n|arm-pl_3($1))),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no that 's an onion .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|onion_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: okay thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|okay_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: you want to keep everything ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.v|keep_4(pro:per|you_1,pro:indef|everything_5,$1),$0))
example_end

Sent: where is a peach ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|a_3($1,n|peach_4($1)),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: I knew you didn 't know .
Sem: lambda $0_{r}.v|know-past_2(pro:sub|i_1,lambda $1_{r}.not(mod|do_4(v|know_6(pro:per|you_3,$1),$1),$1),$0)
example_end

Sent: a pineapple .
Sem: det:art|a_1($0,n|pineapple_2($0))
example_end

Sent: yeah it 's a lady .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|lady_5(pro:per|it_2,$0)),co|yeah_1($0))
example_end

Sent: what about a queen ?
Sem: att(pro:int|what_1,adv|about_2(det:art|a_3($0,n|queen_4($0))))
example_end

Sent: let 's find a king .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|find_3(pro:obj|~us_2,det:art|a_4($2,n|king_5($2)),$1),$0)
example_end

Sent: oh you 're a snake ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(det:art|a_4(pro:per|you_2,n|snake_5(pro:per|you_2,$0)),$0),co|oh_1($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no he 's got something around his eyes .
Sem: lambda $0_{r}.and(aux|~be_3(and(v|get-past_4(pro:sub|he_2,BARE($1,pro:indef|something_5($1)),$0),prep|around_6(det:poss|his_7($2,n|eye-pl_8($2)),$0)),$0),co|no_1($0))
example_end

Sent: a raccoon .
Sem: det:art|a_1($0,n|raccoon_2($0))
example_end

Sent: a raccoon .
Sem: det:art|a_1($0,n|raccoon_2($0))
example_end

Sent: well no .
Sem: lambda $0_{r}.and(co|no_2($0),co|well_1($0))
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: yes I think so .
Sem: lambda $0_{r}.and(and(v|think_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: can you visit his Mother ?
Sem: lambda $0_{r}.Q(mod|can_1(v|visit_3(pro:per|you_2,det:poss|his_4($1,n:prop|mother_5($1)),$0),$0))
example_end

Sent: if you knew where his Mother was .
Sem: lambda $0_{r}.v|know-past_3(pro:per|you_2,lambda $1_{r}.pro:rel|where_4(det:poss|his_5($2,n:prop|mother_6($2)),$1),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: well put the book back .
Sem: lambda $0_{r}.and(and(v|put-zero_2(you,det:art|the_3($1,n|book_4($1)),$0),adv|back_5($0)),co|well_1($0))
example_end

Sent: they won 't fit either .
Sem: lambda $0_{r}.not(mod|will_2(and(part|fit-pastp_4(pro:sub|they_1,$0),adv|either_5($0)),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: did your Mother take it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|take_4(det:poss|your_2($1,n:prop|mother_3($1)),pro:per|it_5,$0),$0))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: I 'll wipe it off .
Sem: lambda $0_{r}.mod|~will_2(and(v|wipe_3(pro:sub|i_1,pro:per|it_4,$0),adv|off_5($0)),$0)
example_end

Sent: a little one .
Sem: det:art|a_1($0,att(pro:indef|one_3,BARE($1,adj|little_2($1)),$0))
example_end

Sent: can you throw it up ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|throw_3(pro:per|you_2,pro:per|it_4,$0),adv|up_5($0)),$0))
example_end

Sent: the pea .
Sem: det:art|the_1($0,n|pea_2($0))
example_end

Sent: always squeeze from the bottom .
Sem: lambda $0_{r}.and(and(n|squeeze_2(you,$0),adv|always_1($0)),prep|from_3(det:art|the_4($1,n|bottom_5($1)),$0))
example_end

Sent: blow again .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|again_2($0))
example_end

Sent: mine had a hole in it .
Sem: lambda $0_{r}.and(v|have-past_2(n|mine_1,det:art|a_3($1,n|hole_4($1)),$0),prep|in_5(pro:per|it_6,$0))
example_end

Sent: okay you 're going to blow now ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|go-presp_4(pro:per|you_2,lambda $1_{r}.n|blow_6(pro:per|you_2,$1),$0),adv|now_7($0)),$0),co|okay_1($0)))
example_end

Sent: the heat ?
Sem: BARE($0,Q(det:art|the_1($1,n|heat_2($1),$0)))
example_end

Sent: who 's going down Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|go-presp_3($1,$0),prep|down_4($0)),$0)
example_end

Sent: are you going to blow it ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.v|blow_5(pro:per|you_2,pro:per|it_6,$1),$0),$0))
example_end

Sent: blow again .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|again_2($0))
example_end

Sent: wait my finger 's caught .
Sem: lambda $0_{r}.and(v|wait_1(you,$0),poss|~s_4(v|catch-past_5(det:poss|my_2($1,n|finger_3($1)),$0),$0))
example_end

Sent: are you having fun ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|have-presp_3(pro:per|you_2,BARE($1,n|fun_4($1)),$0),$0))
example_end

Sent: why does it fall apart Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|fall_4_apart_5(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: I don 't close it properly I guess .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|close_4(pro:sub|i_1,pro:per|it_5,$0),adv|proper-dadj_6($0)),$0),$0),v|guess_8(pro:sub|i_7,$0))
example_end

Sent: what happens when you laugh ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|when_3(v|laugh_5(pro:per|you_4,$0),v|happen-3s_2($1,$0))
example_end

Sent: blow again .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|again_2($0))
example_end

Sent: careful you 'll put a hole in it .
Sem: lambda $0_{r}.and(mod|~will_3(and(v|put-zero_4(pro:per|you_2,det:art|a_5($1,n|hole_6($1)),$0),prep|in_7(pro:per|it_8,$0)),$0),co|careful_1($0))
example_end

Sent: there 's a little left .
Sem: lambda $0_{r}.cop|~be_2(det:art|a_3($1,and(adj|little_4($1),v|leave-past_5($1))),$0)
example_end

Sent: that would make a nice hat .
Sem: lambda $0_{r}.mod|will-cond_2(v|make_3(pro:dem|that_1,det:art|a_4($1,and(adj|nice_5($1),n|hat_6($1))),$0),$0)
example_end

Sent: I 'll make one if you like .
Sem: lambda $0_{r}.conj|if_5(co|like_7(pro:per|you_6,$0),mod|~will_2(v|make_3(pro:sub|i_1,pro:indef|one_4,$0),$0))
example_end

Sent: for cooking ?
Sem: Q(prep|for_1(BARE($0,part|cook-presp_2($0))))
example_end

Sent: eat this ?
Sem: lambda $0_{r}.Q(v|eat_1(you,pro:dem|this_2,$0))
example_end

Sent: it 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:per|it_1,$0)
example_end

Sent: there 's one over there behind you .
Sem: lambda $0_{r}.and(and(cop|~be_2(pro:indef|one_3,$0),adv|over_4(adv|there_5($0))),prep|behind_6(pro:per|you_7,$0))
example_end

Sent: a snow man .
Sem: det:art|a_1($0,and_comp(n|snow_2($0),n|man_3($0)))
example_end

Sent: but this is stuck .
Sem: lambda $0_{r}.part|stick-pastp_4(pro:dem|this_2,$0)
example_end

Sent: let 's try one of these .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|try_3(pro:obj|~us_2,BARE($2,det:num|one_4($2)),$1),$0)
example_end

Sent: shall I tie it ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|tie_3(pro:sub|i_2,pro:per|it_4,$0),$0))
example_end

Sent: no she doesn 't want to blow that .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|she_2,lambda $1_{r}.v|blow_7(pro:sub|she_2,pro:dem|that_8,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: she blew one up .
Sem: lambda $0_{r}.and(v|blow-past_2(pro:sub|she_1,det:num|one_3,$0),adv|up_4($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: look at that .
Sem: lambda $0_{r}.cop|look_1(you,pro:dem|that_3_at_2,$0)
example_end

Sent: you can 't do that .
Sem: lambda $0_{r}.not(mod|can_2(v|do_4(pro:per|you_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: I have a little printing set .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,det:art|a_3($1,and_comp(n:gerund|print-presp_5($1),and(adj|little_4($1),n|set_6($1)))),$0)
example_end

Sent: yes you can take them apart .
Sem: lambda $0_{r}.and(mod|can_3(and(v|take_4(pro:per|you_2,pro:obj|them_5,$0),adv|apart_6($0)),$0),co|yes_1($0))
example_end

Sent: you 're trying to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|try-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: it 's the ink pad .
Sem: lambda $0_{r}.det:art|the_3(pro:per|it_1,and_comp(n|ink_4(pro:per|it_1,$0),n|pad_5(pro:per|it_1,$0)))
example_end

Sent: may I try it once ?
Sem: lambda $0_{r}.Q(mod|may_1(and(v|try_3(pro:sub|i_2,pro:per|it_4,$0),adv|once_5($0)),$0))
example_end

Sent: be very careful with this one .
Sem: BARE($0,co|careful_3($0))
example_end

Sent: it printed .
Sem: lambda $0_{r}.v|print-past_2(pro:per|it_1,$0)
example_end

Sent: is that a b ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n:let|b_4(pro:rel|that_2,$0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what does he have ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(v|have_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: was it Cynthia ?
Sem: lambda $0_{r}.Q(cop|be-past_1(n:prop|cynthia_3(pro:per|it_2,$0),$0))
example_end

Sent: the little girl with whom you were playing the other day .
Sem: det:art|the_1($0,and(adj|little_2($0),n|girl_3($0)))
example_end

Sent: just a little girl .
Sem: adv|just_1(det:art|a_2($0,and(adj|little_3($0),n|girl_4($0))))
example_end

Sent: you 've never seen her ?
Sem: lambda $0_{r}.Q(aux|~have_2(and(part|see-pastp_4(pro:per|you_1,pro:obj|her_5,$0),adv|never_3($0)),$0))
example_end

Sent: she 's a little girl .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|she_1,and(n|girl_5(pro:sub|she_1,$0),adj|little_4(pro:sub|she_1,$0)))
example_end

Sent: maybe it ran away .
Sem: lambda $0_{r}.and(and(v|run-past_3(pro:per|it_2,$0),adv|maybe_1($0)),adv|away_4($0))
example_end

Sent: where is the a ?
Sem: det:art|the_3($0,n:let|a_4($0))
example_end

Sent: is this it ?
Sem: lambda $0_{r}.Q(pro:per|it_3(pro:dem|this_2,$0))
example_end

Sent: double your pleasure .
Sem: lambda $0_{r}.adv|double_1(you,det:poss|your_2($1,n|pleasure_3($1)),$0)
example_end

Sent: oh that 's it .
Sem: lambda $0_{r}.and(pro:per|it_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: there 's a dot that says cross your printing set ?
Sem: lambda $0_{r}.Q(cop|~be_2(det:art|a_3($1,n|dot_4($1)),$0))
example_end

Sent: oh Adam what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|this_5,$0),co|oh_1($0))
example_end

Sent: you only did one side .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_1,BARE($1,det:num|one_4(n|side_5($1))),$0),adv|only_2($0))
example_end

Sent: there 's one over there .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),adv|over_4(adv|there_5($0)))
example_end

Sent: where 's the bottom ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|bottom_4($1)),$0))
example_end

Sent: your finger print ?
Sem: BARE($0,Q(det:poss|your_1($1,and_comp(n|finger_2($1),n|print_3($1)),$0)))
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: you know what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|know_2(pro:per|you_1,$1,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Captain Bob has one what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|have-3s_3(n:prop|bob_2_captain_1,$1,$0)
example_end

Sent: that 's better .
Sem: lambda $0_{r}.adj|good-cp_3(pro:dem|that_1,$0)
example_end

Sent: no what did he used to have ?
Sem: lambda $2_{e}.lambda $0_{r}.and(mod|do-past_3(v|use-past_5(pro:sub|he_4,lambda $1_{r}.v|have_7(pro:sub|he_4,$2,$1),$0),$0),co|no_1($0))
example_end

Sent: did he walk on it ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(v|walk_3(pro:sub|he_2,$0),prep|on_4(pro:per|it_5,$0)),$0))
example_end

Sent: what did he do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: he just had it .
Sem: lambda $0_{r}.and(v|have-past_3(pro:sub|he_1,pro:per|it_4,$0),adv|just_2($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's better .
Sem: lambda $0_{r}.adj|good-cp_3(pro:dem|that_1,$0)
example_end

Sent: but that 's a p .
Sem: lambda $0_{r}.det:art|a_4(pro:dem|that_2,n:let|p_5(pro:dem|that_2,$0))
example_end

Sent: no p .
Sem: qn|no_1($0,n:let|p_2($0))
example_end

Sent: a d a m .
Sem: BARE($0,n:let|a_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what d you think we should do ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.mod|should_6(v|do_7(pro:sub|we_5,pro:int|what_1,$1),$1),$0),$0))
example_end

Sent: I think you 've had everything in the bag now .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~have_4(and(and(v|have-past_5(pro:per|you_3,pro:indef|everything_6,$1),prep|in_7(det:art|the_8($2,n|bag_9($2)),$1)),adv|now_10($1)),$1),$0)
example_end

Sent: d you know whose name that is ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.pro:rel|whose_4(pro:rel|that_6,n|name_5(pro:rel|that_6,$1)),$0),$0))
example_end

Sent: it 's part of whose name ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.att(n|part_3(pro:per|it_1,$0),prep|of_4($1($2,n|name_6($2))))
example_end

Sent: what 's your name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_3($2,n|name_4($2)),$0)
example_end

Sent: what was it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: hold it up toward the light .
Sem: lambda $0_{r}.and(and(v|hold_1(you,pro:per|it_2,$0),adv|up_3($0)),prep|toward_4(det:art|the_5($1,n|light_6($1)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: put it on the chair .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|chair_5($1)),$0))
example_end

Sent: hold it up toward the light .
Sem: lambda $0_{r}.and(and(v|hold_1(you,pro:per|it_2,$0),adv|up_3($0)),prep|toward_4(det:art|the_5($1,n|light_6($1)),$0))
example_end

Sent: a may fly .
Sem: det:art|a_1($0,mod|may_2_fly_3($0))
example_end

Sent: put it on the chair honey .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|chair_5($1)),$0))
example_end

Sent: it 's a stone fly .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|fly_5_stone_4(pro:per|it_1,$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: a giant water bug ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|water_3($1),and(adj|giant_2($1),n|bug_4($1))),$0)))
example_end

Sent: let 's see Adam what the next one is .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|see_3(you,pro:obj|~us_2,$1),$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: hold it toward the light .
Sem: lambda $0_{r}.and(v|hold_1(you,pro:per|it_2,$0),prep|toward_3(det:art|the_4($1,n|light_5($1)),$0))
example_end

Sent: stone fly .
Sem: BARE($0,and_comp(n|stone_1($0),n|fly_2($0)))
example_end

Sent: whoever saw a stone fly ?
Sem: lambda $0_{r}.Q(v|see-past_2(pro:int|whoever_1,det:art|a_3($1,and_comp(n|stone_4($1),n|fly_5($1))),$0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: how did you see a stone fly ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,det:art|a_5($1,and_comp(n|stone_6($1),n|fly_7($1))),$0),$2($0)),$0)
example_end

Sent: is that a dragon fly ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,and_comp(n|dragon_4(pro:rel|that_2,$0),n|fly_5(pro:rel|that_2,$0))))
example_end

Sent: I think you have that wrong .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|have_4(pro:per|you_3,lambda $2_{r}.adj|wrong_6(pro:dem|that_5,$2),$1),$0)
example_end

Sent: can you be a dragonfly ?
Sem: lambda $0_{r}.Q(mod|can_1(det:art|a_4(pro:per|you_2,n|dragonfly_5(pro:per|you_2,$0)),$0))
example_end

Sent: careful with your dirty fingers .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: no they are blue .
Sem: lambda $0_{r}.and(adj|blue_4(pro:sub|they_2,$0),co|no_1($0))
example_end

Sent: they have blue ink on them .
Sem: lambda $0_{r}.and(v|have_2(pro:sub|they_1,BARE($1,and(n|blue_3($1),n|ink_4($1))),$0),prep|on_5(pro:obj|them_6,$0))
example_end

Sent: this is a fish fly .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,and_comp(n|fish_4(pro:dem|this_1,$0),n|fly_5(pro:dem|this_1,$0)))
example_end

Sent: I never saw a fish fly .
Sem: lambda $0_{r}.and(v|see-past_3(pro:sub|i_1,det:art|a_4($1,and_comp(n|fish_5($1),n|fly_6($1))),$0),adv|never_2($0))
example_end

Sent: I think you have it in the wrong way .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|have_4(pro:per|you_3,pro:per|it_5,$1),prep|in_6(det:art|the_7($2,and(adj|wrong_8($2),n|way_9($2))),$1)),$0)
example_end

Sent: that 's a giant water bug .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|water_5(pro:dem|that_1,$0),and(n|bug_6(pro:dem|that_1,$0),adj|giant_4(pro:dem|that_1,$0))))
example_end

Sent: it 's a water scorpion .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|water_4(pro:per|it_1,$0),n|scorpion_5(pro:per|it_1,$0)))
example_end

Sent: just turn toward the light .
Sem: lambda $0_{r}.and(and(n|turn_2(you,$0),adj|just_1($0)),prep|toward_3(det:art|the_4($1,n|light_5($1)),$0))
example_end

Sent: this must be a new one .
Sem: lambda $0_{r}.mod|must_2(det:art|a_4(pro:dem|this_1,and(pro:indef|one_6(pro:dem|this_1,$0),adj|new_5(pro:dem|this_1,$0))),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: Adam don 't you have a brother ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|have_5(pro:per|you_4,det:art|a_6($1,n|brother_7($1)),$0),$0),$0))
example_end

Sent: I thought so .
Sem: lambda $0_{r}.and(v|think-past_2(pro:sub|i_1,$0),adv|so_3($0))
example_end

Sent: what 's his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_3($2,n|name_4($2)),$0)
example_end

Sent: Cora Lee ?
Sem: BARE($0,Q(n:prop|lee_2_cora_1($0)))
example_end

Sent: that 's my sister .
Sem: lambda $0_{r}.det:poss|my_3(pro:dem|that_1,n|sister_4(pro:dem|that_1,$0))
example_end

Sent: your girl ?
Sem: BARE($0,Q(det:poss|your_1($1,n|girl_2($1),$0)))
example_end

Sent: you don 't have a girl .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,det:art|a_5($1,n|girl_6($1)),$0),$0),$0)
example_end

Sent: don 't put your fingers here .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,det:poss|your_4($1,n|finger-pl_5($1)),$0),adv|here_6($0)),$0),$0)
example_end

Sent: yes I think I got it from you .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.and(v|get-past_5(pro:sub|i_4,pro:per|it_6,$1),prep|from_7(pro:per|you_8,$1)),$0),co|yes_1($0))
example_end

Sent: that 's a finger .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|finger_4(pro:dem|that_1,$0))
example_end

Sent: a finger print ?
Sem: BARE($0,Q(det:art|a_1($1,n|print_3_finger_2($1),$0)))
example_end

Sent: that 's a water bug .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|water_4(pro:dem|that_1,$0),n|bug_5(pro:dem|that_1,$0)))
example_end

Sent: yes I suppose so .
Sem: lambda $0_{r}.and(and(v|suppose_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: that 's a giant water bug .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|water_5(pro:dem|that_1,$0),and(n|bug_6(pro:dem|that_1,$0),adj|giant_4(pro:dem|that_1,$0))))
example_end

Sent: keep trying .
Sem: lambda $0_{r}.v|keep_1(you,lambda $1_{r}.n:gerund|try-presp_2(you,$1),$0)
example_end

Sent: just takes a little practice .
Sem: lambda $0_{r}.and(v|take-3s_2(you,BARE($1,and(adj|little_4($1),n|practice_5($1))),$0),adv|just_1($0))
example_end

Sent: shall we put them back ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|put-zero_3(pro:sub|we_2,pro:obj|them_4,$0),adv|back_5($0)),$0))
example_end

Sent: did you go shopping ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|go_3(pro:per|you_2,lambda $1_{r}.part|shop-presp_4(pro:per|you_2,$1),$0),$0))
example_end

Sent: what did you get ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|get_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you dropped all the slides .
Sem: lambda $0_{r}.v|drop-past_2(pro:per|you_1,qn|all_3(det:art|the_4($1,n|slide-pl_5($1))),$0)
example_end

Sent: does he talk ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|talk_3(pro:sub|he_2,$0),$0))
example_end

Sent: I don 't know that he talks .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|talk-3s_7(pro:sub|he_6,$1),$0),$0),$0)
example_end

Sent: I don 't think he talks does he ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|talk-3s_6(pro:sub|he_5,$1),$0),$0),$0),v|do-3s_7(pro:sub|he_8,$0)))
example_end

Sent: his feet ?
Sem: BARE($0,Q(det:poss|his_1($1,n|foot-pl_2($1),$0)))
example_end

Sent: you march with it .
Sem: lambda $0_{r}.and(v|march_2(pro:per|you_1,$0),prep|with_3(pro:per|it_4,$0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: would you like to keep the birdie ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|keep_5(pro:per|you_2,det:art|the_6($2,n|bird-dim_7($2)),$1),$0),$0))
example_end

Sent: those are some pictures .
Sem: lambda $0_{r}.qn|some_3(pro:dem|those_1,n|picture-pl_4(pro:dem|those_1,$0))
example_end

Sent: she said two .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|she_1,$0)
example_end

Sent: put the others back .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,n:pt|others_3($1)),$0),adv|back_4($0))
example_end

Sent: I guess I put all the air in Bobo when I blew him up yesterday .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.conj|when_10(and(and(v|blow-past_12(pro:sub|i_11,pro:obj|him_13,$1),adv|up_14($1)),adv:tem|yesterday_15($1)),and(v|put-zero_4(pro:sub|i_3,qn|all_5(det:art|the_6($2,n|air_7($2))),$1),prep|in_8(n:prop|bobo_9,$1))),$0)
example_end

Sent: you have ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,$0))
example_end

Sent: how d you know it 's big air ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,lambda $1_{r}.and(n|air_8(pro:per|it_5,$1),adj|big_7(pro:per|it_5,$1)),$0),$2($0)),$0)
example_end

Sent: you really caught it .
Sem: lambda $0_{r}.and(v|catch-past_3(pro:per|you_1,pro:per|it_4,$0),adv|real-dadj_2($0))
example_end

Sent: I tried very hard .
Sem: lambda $0_{r}.and(v|try-past_2(pro:sub|i_1,$0),adv|very_3(adv|hard_4($0)))
example_end

Sent: no I didn 't break my mouth .
Sem: lambda $0_{r}.and(not(mod|do_3(v|break_5(pro:sub|i_2,det:poss|my_6($1,n|mouth_7($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: two arms ?
Sem: BARE($0,Q(det:num|two_1(n|arm-pl_2($0))))
example_end

Sent: thank_you for what ?
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: a bottle ?
Sem: BARE($0,Q(det:art|a_1($1,n|bottle_2($1),$0)))
example_end

Sent: it popped .
Sem: lambda $0_{r}.v|pop-past_2(pro:per|it_1,$0)
example_end

Sent: oh you 're juggling .
Sem: lambda $0_{r}.and(aux|~be_3(part|juggle-presp_4(pro:per|you_2,$0),$0),co|oh_1($0))
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: this is orange .
Sem: lambda $0_{r}.adj|orange_3(pro:dem|this_1,$0)
example_end

Sent: that is red .
Sem: lambda $0_{r}.adj|red_3(pro:rel|that_1,$0)
example_end

Sent: one red and two orange .
Sem: BARE($0,det:num|two_4(det:num|one_1(n|orange_5($0))))
example_end

Sent: why don 't you sing that song ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|sing_5(pro:per|you_4,pro:dem|that_6($1,n|song_7($1)),$0),$2($0)),$0),$0)
example_end

Sent: why don 't you sing that song for Urs ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|sing_5(pro:per|you_4,pro:dem|that_6($1,n|song_7($1)),$0),$2($0)),prep|for_8(n:prop|ursula_9,$0)),$0),$0)
example_end

Sent: what is that song ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,n|song_4($2)),$0)
example_end

Sent: sing it for Ursula ?
Sem: lambda $0_{r}.Q(and(v|sing_1(you,pro:per|it_2,$0),prep|for_3(n:prop|ursula_4,$0)))
example_end

Sent: it 's a rattlesnake ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,n|rattlesnake_4(pro:per|it_1,$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is that in your shoe ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(att(pro:dem|that_3,prep|in_4(det:poss|your_5($2,n|shoe_6($2)))),$0)
example_end

Sent: is it going to bite ?
Sem: lambda $0_{r}.Q(aux|be-3s_1(part|go-presp_3(pro:per|it_2,lambda $1_{r}.n|bite_5(pro:per|it_2,$1),$0),$0))
example_end

Sent: it was an animal .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|animal_4(pro:per|it_1,$0))
example_end

Sent: what kind of animal ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|animal_4($2)))))
example_end

Sent: it must have come from another one .
Sem: lambda $0_{r}.v|have_3(mod|must_2(and(v|come_4(pro:per|it_1,$0),prep|from_5(qn|another_6($1,pro:indef|one_7($1)),$0)),$0),$0)
example_end

Sent: where 's my farm yard truck ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|my_3($1,and_comp(n|yard_5($1),and_comp(n|farm_4($1),n|truck_6($1)))),$0))
example_end

Sent: you went out at nursery school .
Sem: lambda $0_{r}.and(and(v|go-past_2(pro:per|you_1,$0),adv|out_3($0)),prep|at_4(BARE($1,and_comp(n|nursery_5($1),n|school_6($1))),$0))
example_end

Sent: what did you play outside ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|play_4(pro:per|you_3,$1,$0),adv|outside_5($0)),$0)
example_end

Sent: you played Daddy ?
Sem: lambda $0_{r}.Q(v|play-past_2(pro:per|you_1,n:prop|daddy_3,$0))
example_end

Sent: Daddy Adam ?
Sem: BARE($0,Q(n:prop|daddy_1($0)))
example_end

Sent: some visitors are coming at my house ?
Sem: lambda $0_{r}.Q(aux|be-pres_3(and(part|come-presp_4(qn|some_1($1,n|visitor-pl_2($1)),$0),prep|at_5(det:poss|my_6($2,n|house_7($2)),$0)),$0))
example_end

Sent: in my back ?
Sem: Q(prep|in_1(det:poss|my_2($0,n|back_3($0))))
example_end

Sent: in your bag ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|bag_3($0))))
example_end

Sent: you almost did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_1,$0),adv|almost_2($0))
example_end

Sent: I see something up here .
Sem: lambda $0_{r}.and(v|see_2(pro:sub|i_1,BARE($1,pro:indef|something_3($1)),$0),adv|up_4(adv|here_5($0)))
example_end

Sent: d you see anything on here ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|see_3(pro:per|you_2,pro:indef|anything_4,$0),adv|here_6($0)),$0))
example_end

Sent: I thought perhaps if you looked you could tell me .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.mod|could_8(conj|if_4(cop|look-past_6(pro:per|you_5,$1),and(v|tell_9(pro:per|you_7,_,pro:obj|me_10,$1),adv|perhaps_3($1))),$1),$0)
example_end

Sent: I see something .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:indef|something_3,$0)
example_end

Sent: there 's no snow .
Sem: lambda $0_{r}.cop|~be_2(qn|no_3($1,n|snow_4($1)),$0)
example_end

Sent: why d you say that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|say_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: they don 't feel like snow .
Sem: lambda $0_{r}.not(mod|do_2(and(v|feel_4(pro:sub|they_1,$0),co|like_5(BARE($1,n|snow_6($1)),$0)),$0),$0)
example_end

Sent: it is not snow .
Sem: lambda $0_{r}.not(v|snow_4(pro:per|it_1,$0),$0)
example_end

Sent: how does snow feel ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|feel_4(BARE($1,n|snow_3($1)),$0),$2($0)),$0)
example_end

Sent: how does snow feel ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|feel_4(BARE($1,n|snow_3($1)),$0),$2($0)),$0)
example_end

Sent: you were telling me about a movie that you saw .
Sem: lambda $0_{r}.aux|be-past_2(and(part|tell-presp_3(pro:per|you_1,_,pro:obj|me_4,$0),prep|about_5(det:art|a_6($1,n|movie_7($1)),$0)),$0)
example_end

Sent: airplane movie ?
Sem: BARE($0,Q(and_comp(n|airplane_1($0),n|movie_2($0))))
example_end

Sent: some kind of fighter .
Sem: qn|some_1($0,att(n|kind_2($0),prep|of_3(BARE($1,n|fight-dv_4($1)))))
example_end

Sent: oh a bull fighter .
Sem: lambda $0_{r}.and(det:art|a_2($1,and_comp(n|bull_3($1),n|fight-dv_4($1)),$0),co|oh_1($0))
example_end

Sent: you don 't fight the bull like that do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|fight_4(pro:per|you_1,det:art|the_5($1,n|bull_6($1)),$0),prep|like_7(pro:dem|that_8,$0)),$0),$0),v|do_9(pro:per|you_10,$0)))
example_end

Sent: you have a little cape ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,det:art|a_3($1,and(adj|little_4($1),n|cape_5($1))),$0))
example_end

Sent: you 're supposed to move .
Sem: lambda $0_{r}.aux|~be_2(v|suppose-past_3(pro:per|you_1,lambda $1_{r}.n|move_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: or else the bull will knock you down .
Sem: lambda $0_{r}.mod|will_5(and(v|knock_6(det:art|the_3($1,n|bull_4($1)),pro:per|you_7,$0),adv|down_8($0)),$0)
example_end

Sent: why don 't you try to throw an animal in the bag ?
Sem: lambda $4_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|try_5(pro:per|you_4,lambda $1_{r}.and(v|throw_7(pro:per|you_4,det:art|a_8($2,n|animal_9($2)),$1),prep|in_10(det:art|the_11($3,n|bag_12($3)),$1)),$0),$4($0)),$0),$0)
example_end

Sent: don 't stand so close .
Sem: lambda $0_{r}.not(mod|do_1(and(v|stand_3(you,$0),adv|so_4(adj|close_5($0))),$0),$0)
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: you 're a silly .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,adj|silly_4(pro:per|you_1,$0))
example_end

Sent: do you know that ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: why would you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: oh poor mummie .
Sem: lambda $0_{r}.and(and(adj|poor_2($0),n|mum-dadj_3($0)),co|oh_1($0))
example_end

Sent: oh I don 't want to shoot you .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|i_2,lambda $1_{r}.v|shoot_7(pro:sub|i_2,pro:per|you_8,$1),$0),$0),$0),co|oh_1($0))
example_end

Sent: throw that at you ?
Sem: lambda $0_{r}.Q(and(v|throw_1(you,pro:rel|that_2,$0),prep|at_3(pro:per|you_4,$0)))
example_end

Sent: I 'll throw that at you .
Sem: lambda $0_{r}.mod|~will_2(and(v|throw_3(pro:sub|i_1,pro:rel|that_4,$0),prep|at_5(pro:per|you_6,$0)),$0)
example_end

Sent: you want to play ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.v|play_4(pro:per|you_1,$1),$0))
example_end

Sent: what d you want to play ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.v|play_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: I 'm not playing Indian .
Sem: lambda $0_{r}.not(cop|~be_2(and(part|play-presp_4(pro:sub|i_1,$0),n:prop|indian_5($0)),$0),$0)
example_end

Sent: Urs is Urs .
Sem: lambda $0_{r}.n:prop|ursula_3(n:prop|ursula_1,$0)
example_end

Sent: Adam is Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(n:prop|adam_1,$0))
example_end

Sent: spear is spear ?
Sem: lambda $0_{r}.Q(v|spear_3(BARE($1,n|spear_1($1)),$0))
example_end

Sent: you didn 't ask her about those .
Sem: lambda $0_{r}.not(mod|do_2(and(v|ask_4(pro:per|you_1,_,pro:obj|her_5,$0),prep|about_6(pro:dem|those_7,$0)),$0),$0)
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: I don 't want to eat my animals .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|i_1,lambda $1_{r}.v|eat_6(pro:sub|i_1,det:poss|my_7($2,n|animal-pl_8($2)),$1),$0),$0),$0)
example_end

Sent: but I don 't want any animals .
Sem: lambda $0_{r}.not(mod|do_3(v|want_5(pro:sub|i_2,qn|any_6($1,n|animal-pl_7($1)),$0),$0),$0)
example_end

Sent: but I don 't want any animals .
Sem: lambda $0_{r}.not(mod|do_3(v|want_5(pro:sub|i_2,qn|any_6($1,n|animal-pl_7($1)),$0),$0),$0)
example_end

Sent: no you missed my mouth anyway .
Sem: lambda $0_{r}.and(and(v|miss-past_3(pro:per|you_2,det:poss|my_4($1,n|mouth_5($1)),$0),adv|anyway_6($0)),co|no_1($0))
example_end

Sent: where does that go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|go_4(det:dem|that_3,$0),$1($0)),$0)
example_end

Sent: which hand ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|hand_2($1))
example_end

Sent: which hand ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|hand_2($1))
example_end

Sent: that hand ?
Sem: BARE($0,Q(pro:dem|that_1($1,n|hand_2($1),$0)))
example_end

Sent: the other hand .
Sem: det:art|the_1($0,and(qn|other_2($0),n|hand_3($0)))
example_end

Sent: write something ?
Sem: lambda $0_{r}.Q(v|write_1(you,BARE($1,pro:indef|something_2($1)),$0))
example_end

Sent: well come on .
Sem: lambda $0_{r}.and(v|come_2_on_3(you,$0),co|well_1($0))
example_end

Sent: yellow too .
Sem: BARE($0,n|yellow_1($0))
example_end

Sent: well which one is it ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(pro:per|it_5($1($2,pro:indef|one_3($2)),$0),co|well_1($0))
example_end

Sent: tickle ear .
Sem: lambda $0_{r}.n|tickle_1(you,BARE($1,n|ear_2($1)),$0)
example_end

Sent: no well how can he write ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(mod|can_4(and(v|write_6(pro:sub|he_5,$0),$1($0)),$0),qn|no_1($0)),n|well_2($0))
example_end

Sent: no not that one .
Sem: lambda $0_{r}.and(not(pro:rel|that_3($1,pro:indef|one_4($1)),$0),co|no_1($0))
example_end

Sent: this one ?
Sem: BARE($0,Q(pro:dem|this_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: want to talk tunnel ?
Sem: lambda $0_{r}.Q(and(v|want_1(you,$0),prep|to_2(BARE($1,and_comp(n|talk_3($1),n|tunnel_4($1))),$0)))
example_end

Sent: no you may tear the paper .
Sem: lambda $0_{r}.and(mod|may_3(v|tear_4(pro:per|you_2,det:art|the_5($1,n|paper_6($1)),$0),$0),co|no_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh that 's Cromer 's house .
Sem: lambda $0_{r}.and(n:prop|cromer_4's'(pro:dem|that_2,n|house_6(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: Adam 's mouth .
Sem: n:prop|adam_1's($0,n|mouth_3($0))
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: oh you have a pail of doughnuts ?
Sem: lambda $0_{r}.Q(and(v|have_3(pro:per|you_2,det:art|a_4($1,att(n|pail_5($1),prep|of_6(BARE($2,n|doughnut-pl_7($2))))),$0),co|oh_1($0)))
example_end

Sent: Ursula has some doughnuts ?
Sem: lambda $0_{r}.Q(v|have-3s_2(n:prop|ursula_1,qn|some_3($1,n|doughnut-pl_4($1)),$0))
example_end

Sent: no my finger won 't write .
Sem: lambda $0_{r}.and(not(mod|will_4(v|write_6(det:poss|my_2($1,n|finger_3($1)),$0),$0),$0),qn|no_1($0))
example_end

Sent: hi Adam .
Sem: lambda $0_{r}.co|hi_1($0)
example_end

Sent: you dropped it on whose boots ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(v|drop-past_2(pro:per|you_1,pro:per|it_3,$0),adv|on_4($1($2,v|boot-3s_6($2)),$0))
example_end

Sent: Ursula 's boot .
Sem: BARE($0,att(n|boot_3($0),poss|~s_2(n:prop|ursula_1)))
example_end

Sent: why did you turn the light on ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|turn_4(pro:per|you_3,det:art|the_5($1,n|light_6($1)),$0),$2($0)),adv|on_7($0)),$0)
example_end

Sent: why did you cut the light on ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|cut-zero_4(pro:per|you_3,det:art|the_5($1,n|light_6($1)),$0),$2($0)),adv|on_7($0)),$0)
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: he 's not a road .
Sem: lambda $0_{r}.not(det:art|a_4(pro:sub|he_1,n|road_5(pro:sub|he_1,$0)),$0)
example_end

Sent: don 't what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_1(you,$1,$0),$0)
example_end

Sent: don 't fight Adam ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|fight_3(you,n:prop|adam_4,$0),$0),$0))
example_end

Sent: oh who 's fighting Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_3(part|fight-presp_4($1,$0),$0),co|oh_1($0))
example_end

Sent: where did you buy the doughnuts ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|buy_4(pro:per|you_3,det:art|the_5($1,n|doughnut-pl_6($1)),$0),$2($0)),$0)
example_end

Sent: getting Adam doughnut ?
Sem: lambda $0_{r}.Q(part|get-presp_1(you,BARE($1,n|doughnut_3($1)),$0))
example_end

Sent: why don 't you go get a pencil and write with it ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|write_10(pro:per|you_4,lambda $1_{r}.v|get_6(pro:per|you_4,det:art|a_7($2,n|pencil_8($2)),$1),$0),$3($0)),prep|with_11(pro:per|it_12,$0)),$0),$0)
example_end

Sent: if you write with his pen like that it won 't write anymore .
Sem: lambda $0_{r}.not(mod|will_10(conj|if_1(and(and(v|write_3(pro:per|you_2,$0),prep|with_4(det:poss|his_5($1,n|pen_6($1)),$0)),prep|like_7(pro:dem|that_8,$0)),and(v|write_12(pro:per|it_9,$0),adv|anymore_13($0))),$0),$0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: oh doggie .
Sem: lambda $0_{r}.and(n|dog-dim_2($0),co|oh_1($0))
example_end

Sent: well get on the floor with your doggie .
Sem: lambda $0_{r}.and(and(and(v|get_2(you,$0),prep|on_3(det:art|the_4($1,n|floor_5($1)),$0)),prep|with_6(det:poss|your_7($2,n|dog-dim_8($2)),$0)),co|well_1($0))
example_end

Sent: he means use the other hand for scissors .
Sem: lambda $0_{r}.v|mean-3s_2(pro:sub|he_1,lambda $1_{r}.and(n|use_3(_,det:art|the_4($2,and(qn|other_5($2),n|hand_6($2))),$1),prep|for_7(BARE($3,n|scissors_8($3)),$1)),$0)
example_end

Sent: Daddy has Mommy 's keys .
Sem: lambda $0_{r}.v|have-3s_2(n:prop|daddy_1,n:prop|mommy_3's($1,n|key-pl_5($1)),$0)
example_end

Sent: not on Mr Cromer 's lap .
Sem: not(prep|on_2(n:prop|mr_3_cromer_4's($0,n|lap_6($0))))
example_end

Sent: you play on the floor .
Sem: lambda $0_{r}.and(v|play_2(pro:per|you_1,$0),prep|on_3(det:art|the_4($1,n|floor_5($1)),$0))
example_end

Sent: doggie program ?
Sem: BARE($0,Q(and_comp(n|dog-dim_1($0),n|program_2($0))))
example_end

Sent: doggie program ?
Sem: BARE($0,Q(and_comp(n|dog-dim_1($0),n|program_2($0))))
example_end

Sent: what kind of program ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|program_4($2)))))
example_end

Sent: you put the doggie down there ?
Sem: lambda $0_{r}.Q(and(v|put-zero_2(pro:per|you_1,det:art|the_3($1,n|dog-dim_4($1)),$0),adv|down_5(adv|there_6($0))))
example_end

Sent: you 're going to give Ursula a piece of paper ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|give_5(pro:per|you_1,det:art|a_7($2,att(n|piece_8($2),prep|of_9(BARE($3,n|paper_10($3))))),n:prop|ursula_6,$1),$0),$0))
example_end

Sent: Adam 's what ?
Sem: n:prop|adam_1's($0,pro:int|what_3($0))
example_end

Sent: Adam home .
Sem: BARE($0,n|home_2($0))
example_end

Sent: what about Adam 's home ?
Sem: att(pro:int|what_1,prep|about_2(n:prop|adam_3's($0,n|home_5($0))))
example_end

Sent: you missed it .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: you 're going to tear it .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|tear_5(pro:per|you_1,pro:per|it_6,$1),$0),$0)
example_end

Sent: this is gas ?
Sem: lambda $0_{r}.Q(v|gas_3(pro:dem|this_1,$0))
example_end

Sent: oh one is Adam 's ?
Sem: lambda $0_{r}.Q(and(poss|~s_5(n:prop|adam_4,pro:indef|one_2,$0),co|oh_1($0)))
example_end

Sent: where 's one for Mommy ?
Sem: lambda $0_{r}.Q(adv:int|where_1(att(pro:indef|one_3,prep|for_4(n:prop|mommy_5)),$0))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: no use this finger .
Sem: lambda $0_{r}.and(n|use_2(you,pro:dem|this_3($1,n|finger_4($1)),$0),co|no_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: you don 't know what to use then why are you giving us the paper ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(not(mod|do_2(v|know_4(pro:per|you_1,lambda $1_{r}.v|use_7(_,pro:int|what_5,$1),$0),$0),$0),aux|be-pres_10(and(and(part|give-presp_12(pro:per|you_11,det:art|the_14($2,n|paper_15($2)),pro:obj|us_13,$0),adv:tem|then_8($0)),$3($0)),$0))
example_end

Sent: oh giving dollars .
Sem: lambda $0_{r}.and(part|give-presp_2(you,BARE($1,n|dollar-pl_3($1)),$0),co|oh_1($0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: giving this one to Cromer ?
Sem: lambda $0_{r}.Q(and(part|give-presp_1(you,pro:dem|this_2($1,pro:indef|one_3($1)),$0),prep|to_4(n:prop|cromer_5,$0)))
example_end

Sent: you almost fell while you were getting the dollars .
Sem: lambda $0_{r}.n|while_4(aux|be-past_6(part|get-presp_7(pro:per|you_5,det:art|the_8($1,n|dollar-pl_9($1)),$0),$0),and(v|fall-past_3(pro:per|you_1,$0),adv|almost_2($0)))
example_end

Sent: what about the factory ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|factory_4($0))))
example_end

Sent: what 's that man ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,n|man_4($2)),$0)
example_end

Sent: why is that man walking ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|walk-presp_5(pro:dem|that_3($1,n|man_4($1)),$0),$2($0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: no that 's plugged in back there .
Sem: lambda $0_{r}.and(cop|~be_3(and(and(v|plug-past_4(pro:dem|that_2,$0),prep|in_5($0)),adv|back_6(adv|there_7($0))),$0),co|no_1($0))
example_end

Sent: what happened to your doughnut ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:poss|your_4($2,n|doughnut_5($2)),$0))
example_end

Sent: rolling tape ?
Sem: BARE($0,Q(and_comp(part|roll-presp_1($0),n|tape_2($0))))
example_end

Sent: Ursula 's tape .
Sem: att(n|tape_3,poss|~s_2(n:prop|ursula_1))
example_end

Sent: that 's a flag ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,n|flag_4(pro:dem|that_1,$0)))
example_end

Sent: what do you say when you see the flag ?
Sem: lambda $2_{e}.lambda $0_{r}.conj|when_5(v|see_7(pro:per|you_6,det:art|the_8($1,n|flag_9($1)),$0),mod|do_2(v|say_4(pro:per|you_3,$2,$0),$0))
example_end

Sent: you dropped your dollars on the floor .
Sem: lambda $0_{r}.and(v|drop-past_2(pro:per|you_1,det:poss|your_3($1,n|dollar-pl_4($1)),$0),prep|on_5(det:art|the_6($2,n|floor_7($2)),$0))
example_end

Sent: doughnut get you ?
Sem: lambda $0_{r}.Q(aux|get_2(pro:per|you_3,BARE($1,n|doughnut_1($1)),$0))
example_end

Sent: or do you mean you get doughnut ?
Sem: lambda $0_{r}.Q(v|do_2(v|mean_4(pro:per|you_3,lambda $1_{r}.v|get_6(pro:per|you_5,BARE($2,n|doughnut_7($2)),$1),$0),$0))
example_end

Sent: oh he 's going under the tunnel .
Sem: lambda $0_{r}.and(aux|~be_3(and(part|go-presp_4(pro:sub|he_2,$0),prep|under_5(det:art|the_6($1,n|tunnel_7($1)),$0)),$0),co|oh_1($0))
example_end

Sent: Adam are the doughnuts going to get you ?
Sem: lambda $0_{r}.Q(cop|be-pres_2(part|go-presp_5(det:art|the_3($1,n|doughnut-pl_4($1)),lambda $2_{r}.v|get_7(det:art|the_3($1,n|doughnut-pl_4($1)),pro:per|you_8,$2),$0),$0))
example_end

Sent: may I have one ?
Sem: lambda $0_{r}.Q(mod|may_1(v|have_3(pro:sub|i_2,pro:indef|one_4,$0),$0))
example_end

Sent: how can she write if you take all of her pencils ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|if_5(v|take_7(pro:per|you_6,qn|all_8(det:poss|her_10($1,n|pencil-pl_11($1))),$0),mod|can_2(and(v|write_4(pro:sub|she_3,$0),$2($0)),$0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: playing the piano .
Sem: lambda $0_{r}.part|play-presp_1(you,det:art|the_2($1,n|piano_3($1)),$0)
example_end

Sent: you play the piano with your fingers .
Sem: lambda $0_{r}.and(v|play_2(pro:per|you_1,det:art|the_3($1,n|piano_4($1)),$0),prep|with_5(det:poss|your_6($2,n|finger-pl_7($2)),$0))
example_end

Sent: what are you doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: stop playing yes .
Sem: lambda $0_{r}.and(n|stop_1(you,BARE($1,part|play-presp_2($1)),$0),co|yes_3($0))
example_end

Sent: stop playing with Mr Cromer 's pen .
Sem: lambda $0_{r}.n|stop_1(you,lambda $1_{r}.and(part|play-presp_2(you,$1),prep|with_3(n:prop|mr_4_cromer_5's($2,n|pen_7($2)),$1)),$0)
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: you have_to push it .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|push_4(pro:per|you_1,$1),$0)
example_end

Sent: oh your finger pushed it ?
Sem: lambda $0_{r}.Q(and(v|push-past_4(det:poss|your_2($1,n|finger_3($1)),pro:per|it_5,$0),co|oh_1($0)))
example_end

Sent: farm puzzle .
Sem: BARE($0,and_comp(n|farm_1($0),n|puzzle_2($0)))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: it fits in the puzzle someplace .
Sem: lambda $0_{r}.and(and(v|fit-3s_2(pro:per|it_1,$0),prep|in_3(det:art|the_4($1,n|puzzle_5($1)),$0)),n|someplace_6($0))
example_end

Sent: they 're all on the floor there .
Sem: lambda $0_{r}.and(and(and(aux|~be_2(pro:sub|they_1,$0),post|all_3($0)),prep|on_4(det:art|the_5($1,n|floor_6($1)),$0)),adv|there_7($0))
example_end

Sent: no that 's not turned properly .
Sem: lambda $0_{r}.and(not(cop|~be_3(and(part|turn-pastp_5(pro:dem|that_2,$0),adv|proper-dadj_6($0)),$0),$0),co|no_1($0))
example_end

Sent: turn it around .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|around_3($0))
example_end

Sent: no the other way .
Sem: lambda $0_{r}.and(det:art|the_2($1,and(qn|other_3($1),n|way_4($1)),$0),qn|no_1($0))
example_end

Sent: I guess you have_to turn it around .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.mod:aux|have_to_4(pro:per|you_3,lambda $2_{r}.v|turn_6(pro:per|you_3,$2),$1),$0)
example_end

Sent: show Ursula Sandy 's boots .
Sem: lambda $0_{r}.n|show_1(you,n:prop|sandy_3's($1,n|boot-pl_5($1)),n:prop|ursula_2,$0)
example_end

Sent: oh Timmy 's boots .
Sem: lambda $0_{r}.and(n:prop|timmy_2's($1,n|boot-pl_4($1),$0),co|oh_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh no don 't ride over your puzzle .
Sem: lambda $0_{r}.and(not(mod|do_3(and(n|ride_5(you,$0),adv|over_6(det:poss|your_7($1,n|puzzle_8($1)),$0)),$0),$0),co|oh_1_no_2($0))
example_end

Sent: you rode over one piece .
Sem: lambda $0_{r}.v|ride-past_2(pro:per|you_1,BARE($1,det:num|one_4(n|piece_5_over_3($1))),$0)
example_end

Sent: what did the doggie do Adam ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(v|do_5(det:art|the_3($1,n|dog-dim_4($1)),$2,$0),$0)
example_end

Sent: oh no he 'll hurt his teeth .
Sem: lambda $0_{r}.and(and(mod|~will_4(v|hurt-zero_5(pro:sub|he_3,det:poss|his_6($1,n|tooth-pl_7($1)),$0),$0),co|oh_1($0)),co|no_2($0))
example_end

Sent: doggie climb Adam ?
Sem: lambda $0_{r}.Q(v|climb_2(BARE($1,n|dog-dim_1($1)),$0))
example_end

Sent: I guess he means ride buggy buggy .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.v|mean-3s_4(pro:sub|he_3,BARE($2,and_comp(n|ride_5($2),n|buggy_6($2))),$1),$0)
example_end

Sent: you 're riding on part of the house ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|ride-presp_3(pro:per|you_1,$0),prep|on_4(BARE($1,att(n|part_5($1),prep|of_6(det:art|the_7($2,n|house_8($2))))),$0)),$0))
example_end

Sent: or part of the barn .
Sem: BARE($0,att(n|part_2($0),prep|of_3(det:art|the_4($1,n|barn_5($1)))))
example_end

Sent: no you 've got her upside down .
Sem: lambda $0_{r}.and(aux|~have_3(and(part|get-pastp_4(pro:per|you_2,pro:obj|her_5,$0),adv|upside_6(adv|down_7($0))),$0),co|no_1($0))
example_end

Sent: oh you want him to stand on his head too ?
Sem: lambda $0_{r}.Q(and(v|want_3(pro:per|you_2,lambda $1_{r}.n|stand_6(pro:per|you_2,$1),$0),co|oh_1($0)))
example_end

Sent: well if you turn him like that where does this piece go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_9(conj|if_2(and(and(v|turn_4(pro:per|you_3,pro:obj|him_5,$0),prep|like_6(pro:dem|that_7,$0)),co|well_1($0)),and(v|go_12(pro:dem|this_10($1,n|piece_11($1)),$0),$2($0))),$0)
example_end

Sent: oh you shot him .
Sem: lambda $0_{r}.and(v|shoot-past_3(pro:per|you_2,_,pro:obj|him_4,$0),co|oh_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: Twinkle says that .
Sem: lambda $0_{r}.v|say-3s_2(n:prop|twinkle_1,pro:dem|that_3,$0)
example_end

Sent: there are two pieces under the tricycle .
Sem: lambda $0_{r}.and(cop|be-pres_2(BARE($1,det:num|two_3(n|piece-pl_4($1))),$0),prep|under_5(det:art|the_6($2,n|tricycle_7($2)),$0))
example_end

Sent: you 're going to fall with that tricycle .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|fall_5(pro:per|you_1,$1),prep|with_6(pro:dem|that_7($2,n|tricycle_8($2)),$1)),$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: put the puzzle on it ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,det:art|the_2($1,n|puzzle_3($1)),$0),prep|on_4(pro:per|it_5,$0)))
example_end

Sent: why did you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: Adam did you put the puzzle on his feet ?
Sem: lambda $0_{r}.Q(mod|do-past_2(and(v|put-zero_4(pro:per|you_3,det:art|the_5($1,n|puzzle_6($1)),$0),prep|on_7(det:poss|his_8($2,n|foot-pl_9($2)),$0)),$0))
example_end

Sent: what did you do with his foot .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(det:poss|his_6($2,n|foot_7($2)),$0)),$0)
example_end

Sent: we don 't want to lose the pieces .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|we_1,lambda $1_{r}.v|lose_6(pro:sub|we_1,det:art|the_7($2,n|piece-pl_8($2)),$1),$0),$0),$0)
example_end

Sent: no I think you 've seen them all .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.aux|~have_5(part|see-pastp_6(pro:per|you_4,post|all_8($2,pro:obj|them_7($2)),$1),$1),$0),co|no_1($0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: shall I give you a piece ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|give_3(pro:sub|i_2,det:art|a_5($1,n|piece_6($1)),pro:per|you_4,$0),$0))
example_end

Sent: give you a piece ?
Sem: lambda $0_{r}.Q(v|give_1(you,det:art|a_3($1,n|piece_4($1)),pro:per|you_2,$0))
example_end

Sent: no she gave you a piece now .
Sem: lambda $0_{r}.and(and(v|give-past_3(pro:sub|she_2,det:art|a_5($1,n|piece_6($1)),pro:per|you_4,$0),adv|now_7($0)),co|no_1($0))
example_end

Sent: Cromer 's piece ?
Sem: BARE($0,Q(n:prop|cromer_1's($1,n|piece_3($1),$0)))
example_end

Sent: no give it back to Ursula .
Sem: lambda $0_{r}.and(and(and(v|give_2(you,pro:per|it_3,$0),adv|back_4($0)),prep|to_5(n:prop|ursula_6,$0)),co|no_1($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: on the table ?
Sem: Q(prep|on_1(det:art|the_2($0,n|table_3($0))))
example_end

Sent: maybe you should turn it over .
Sem: lambda $0_{r}.mod|should_3(and(and(v|turn_4(pro:per|you_2,pro:per|it_5,$0),adv|maybe_1($0)),adv|over_6($0)),$0)
example_end

Sent: no you can 't have any more now until you pick that up off the floor .
Sem: lambda $0_{r}.and(not(prep|until_9(and(and(v|pick_11(pro:per|you_10,pro:dem|that_12,$0),adv|up_13($0)),prep|off_14(det:art|the_15($1,n|floor_16($1)),$0)),mod|can_3(and(v|have_5(pro:per|you_2,qn|any_6($2,pro:indef|more_7($2)),$0),adv|now_8($0)),$0)),$0),co|no_1($0))
example_end

Sent: you 've still got some of this .
Sem: lambda $0_{r}.aux|~have_2(and(v|get-past_4(pro:per|you_1,qn|some_5(pro:dem|this_7),$0),adv|still_3($0)),$0)
example_end

Sent: what 's wrong with this ?
Sem: BARE($0,adj|wrong_3($0))
example_end

Sent: no did you ask Ursula ?
Sem: lambda $0_{r}.Q(and(mod|do-past_2(v|ask_4(pro:per|you_3,_,n:prop|ursula_5,$0),$0),co|no_1($0)))
example_end

Sent: no don 't bother the tape honey .
Sem: lambda $0_{r}.and(not(mod|do_2(v|bother_4(you,det:art|the_5($1,n|tape_6($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: you 're going to check it ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|check_5(pro:per|you_1,pro:per|it_6,$1),$0),$0))
example_end

Sent: it 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:per|it_1,$0)
example_end

Sent: who did that ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2($1,pro:dem|that_3,$0)
example_end

Sent: it 's Ursula 's .
Sem: lambda $0_{r}.poss|~s_4(n:prop|ursula_3,pro:per|it_1,$0)
example_end

Sent: ask her if you may see it .
Sem: lambda $0_{r}.v|ask_1(you,pro:obj|her_2,lambda $1_{r}.mod|may_5(v|see_6(pro:per|you_4,pro:per|it_7,$1),$1),$0)
example_end

Sent: why don 't you ask her .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|ask_5(pro:per|you_4,_,pro:obj|her_6,$0),$1($0)),$0),$0)
example_end

Sent: it 's an extension for the microphone .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,att(n|extension_4(pro:per|it_1,$0),prep|for_5(det:art|the_6($1,n|microphone_7($1)))))
example_end

Sent: Adam who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|adam_1,$0)
example_end

Sent: what are you doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: taking diamond ?
Sem: lambda $0_{r}.Q(part|take-presp_1(you,BARE($1,n|diamond_2($1)),$0))
example_end

Sent: no it doesn 't need to go in the refrigerator .
Sem: lambda $0_{r}.and(not(mod|do_3(v|need_5(pro:per|it_2,lambda $1_{r}.and(v|go_7(pro:per|it_2,$1),prep|in_8(det:art|the_9($2,n|refrigerator_10($2)),$1)),$0),$0),$0),co|no_1($0))
example_end

Sent: what is it Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what happened to it ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:per|it_4,$0))
example_end

Sent: you just put it in the box .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:per|you_1,pro:per|it_4,$0),adv|just_2($0)),prep|in_5(det:art|the_6($1,n|box_7($1)),$0))
example_end

Sent: that 's a busy bulldozer ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,and(n|bulldoze-dv_5(pro:dem|that_1,$0),adj|busy_4(pro:dem|that_1,$0))))
example_end

Sent: oh going to town ?
Sem: lambda $0_{r}.Q(and(and(part|go-presp_2(you,$0),prep|to_3(BARE($1,n|town_4($1)),$0)),co|oh_1($0)))
example_end

Sent: oh this is a steam shovel ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:dem|this_2,and_comp(n|steam_5(pro:dem|this_2,$0),n|shovel_6(pro:dem|this_2,$0))),co|oh_1($0)))
example_end

Sent: no I don 't think you should waste any more of this tape .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|should_7(v|waste_8(pro:per|you_6,qn|any_9($2,qn|more_10(pro:dem|this_12($3,n|tape_13($3)),$2)),$1),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: yes you give it to Ursula .
Sem: lambda $0_{r}.and(and(v|give_3(pro:per|you_2,pro:per|it_4,$0),prep|to_5(n:prop|ursula_6,$0)),co|yes_1($0))
example_end

Sent: oh it 's a steam shovel ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:per|it_2,and_comp(n|steam_5(pro:per|it_2,$0),n|shovel_6(pro:per|it_2,$0))),co|oh_1($0)))
example_end

Sent: you 're sitting on the microphone .
Sem: lambda $0_{r}.aux|~be_2(and(part|sit-presp_3(pro:per|you_1,$0),prep|on_4(det:art|the_5($1,n|microphone_6($1)),$0)),$0)
example_end

Sent: you 're sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:per|you_1,$0)
example_end

Sent: where are you sitting Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|sit-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: busy bulldozer going up the hill ?
Sem: lambda $0_{r}.Q(and(part|go-presp_3(BARE($1,and(adj|busy_1($1),n|bulldoze-dv_2($1))),$0),prep|up_4(det:art|the_5($2,n|hill_6($2)),$0)))
example_end

Sent: you 're moving a rock .
Sem: lambda $0_{r}.aux|~be_2(part|move-presp_3(pro:per|you_1,det:art|a_4($1,n|rock_5($1)),$0),$0)
example_end

Sent: it 's twelve ?
Sem: BARE($0,det:num|twelve_3($0))
example_end

Sent: twelve fourteen o'clock ?
Sem: BARE($0,Q(and_comp(det:num|fourteen_2(n|o'clock_3($0)),det:num|twelve_1(n|o'clock_3($0)))))
example_end

Sent: what happens at twelve fourteen o'clock ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_2($1,$0),prep|at_3(BARE($2,and_comp(det:num|fourteen_5(n|o'clock_6($2)),det:num|twelve_4(n|o'clock_6($2)))),$0))
example_end

Sent: shiny factory ?
Sem: BARE($0,Q(and(adj|shine-dn_1($0),n|factory_2($0))))
example_end

Sent: he 's shining the factory .
Sem: lambda $0_{r}.aux|~be_2(part|shine-presp_3(pro:sub|he_1,det:art|the_4($1,n|factory_5($1)),$0),$0)
example_end

Sent: you 're missing the factory ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|miss-presp_3(pro:per|you_1,det:art|the_4($1,n|factory_5($1)),$0),$0))
example_end

Sent: oh you 're packing the suitcase .
Sem: lambda $0_{r}.and(aux|~be_3(part|pack-presp_4(pro:per|you_2,det:art|the_5($1,n|suitcase_6($1)),$0),$0),co|oh_1($0))
example_end

Sent: flower yes .
Sem: lambda $0_{r}.and(n|flower_1($0),co|yes_2($0))
example_end

Sent: what kind of flowers are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_6,att(n|kind_2(pro:sub|they_6,$0),prep|of_3(BARE($2,n|flower-pl_4($2)))))
example_end

Sent: oh they 're blue flowers .
Sem: lambda $0_{r}.and(and(n|flower-pl_5(pro:sub|they_2,$0),adj|blue_4(pro:sub|they_2,$0)),co|oh_1($0))
example_end

Sent: am I sitting on the microphone cord ?
Sem: lambda $0_{r}.Q(aux|be-1s_1(and(part|sit-presp_3(pro:sub|i_2,$0),prep|on_4(det:art|the_5($1,and_comp(n|microphone_6($1),n|cord_7($1))),$0)),$0))
example_end

Sent: oh I should think so .
Sem: lambda $0_{r}.and(mod|should_3(and(v|think_4(pro:sub|i_2,$0),co|so_5($0)),$0),co|oh_1($0))
example_end

Sent: you don 't look where you 're going .
Sem: lambda $0_{r}.not(mod|do_2(co|look_4(pro:per|you_1,lambda $1_{r}.aux|~be_7(and(part|go-presp_8(pro:per|you_6,$1),adv:int|where_5($1)),$1),$0),$0),$0)
example_end

Sent: look Adam .
Sem: lambda $0_{r}.co|look_1(you,$0)
example_end

Sent: Adam gave Ursula ?
Sem: lambda $0_{r}.Q(and(v|give-past_2(n:prop|adam_1,$0),n:prop|ursula_3($0)))
example_end

Sent: did Adam give that to Ursula ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|give_3(n:prop|adam_2,pro:dem|that_4,$0),prep|to_5(n:prop|ursula_6,$0)),$0))
example_end

Sent: is that a doggie ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|dog-dim_4(pro:rel|that_2,$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh you think that 's a train ?
Sem: lambda $0_{r}.Q(and(v|think_3(pro:per|you_2,lambda $1_{r}.det:art|a_6(pro:dem|that_4,n|train_7(pro:dem|that_4,$1)),$0),co|oh_1($0)))
example_end

Sent: Uncle Clyde ?
Sem: BARE($0,Q(n:prop|uncle_1_clyde_2($0)))
example_end

Sent: what is he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: and that 's a train .
Sem: lambda $0_{r}.det:art|a_4(pro:dem|that_2,n|train_5(pro:dem|that_2,$0))
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: that 's a tape recorder .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|tape_4(pro:dem|that_1,$0),n|record-dv_5(pro:dem|that_1,$0)))
example_end

Sent: don 't take that paper off the film .
Sem: lambda $0_{r}.not(mod|do_1(and(v|take_3(you,pro:dem|that_4($1,n|paper_5($1)),$0),prep|off_6(det:art|the_7($2,n|film_8($2)),$0)),$0),$0)
example_end

Sent: let Adam tear it .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.n|tear_3(n:prop|adam_2,pro:per|it_4,$1),$0)
example_end

Sent: I think perhaps you 'd better give it back to Ursula .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.adj|good-cp_6(mod|~genmod_5(and(and(and(v|give_7(pro:per|you_4,pro:per|it_8,$1),adv|perhaps_3($1)),adv|back_9($1)),prep|to_10(n:prop|ursula_11,$1)),$1),$1),$0)
example_end

Sent: did you say thank_you ?
Sem: lambda $0_{r}.Q(and(v|do-past_1(v|say_3(pro:per|you_2,$0),$0),n|thank_you_4(you,$0)))
example_end

Sent: yes that 's film .
Sem: lambda $0_{r}.and(n|film_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: making steamshovel ?
Sem: lambda $0_{r}.Q(part|make-presp_1(you,BARE($1,n|steamshovel_2($1)),$0))
example_end

Sent: what about the tape ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|tape_4($0))))
example_end

Sent: where 's the tape ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|tape_4($1)),$0))
example_end

Sent: you have_to pick the puzzle up first .
Sem: lambda $0_{r}.and(mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|pick_4(pro:per|you_1,$1),$0),adj|first_8($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: turning it ?
Sem: lambda $0_{r}.Q(part|turn-presp_1(you,pro:per|it_2,$0))
example_end

Sent: would you like a piece ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,n|piece_5($1)),$0),$0))
example_end

Sent: may I tear it off for you ?
Sem: lambda $0_{r}.Q(mod|may_1(and(and(v|tear_3(pro:sub|i_2,pro:per|it_4,$0),adv|off_5($0)),prep|for_6(pro:per|you_7,$0)),$0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I don 't want a piece .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|i_1,det:art|a_5($1,n|piece_6($1)),$0),$0),$0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where did the scissors go ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-past_2(and(v|go_5(det:art|the_3($1,n|scissors_4($1)),$0),$2($0)),$0)
example_end

Sent: Ursula may need that at her work .
Sem: lambda $0_{r}.mod|may_2(and(v|need_3(n:prop|ursula_1,pro:dem|that_4,$0),prep|at_5(det:poss|her_6($1,n|work_7($1)),$0)),$0)
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: busy bulldozer ?
Sem: BARE($0,Q(and(adj|busy_1($0),n|bulldoze-dv_2($0))))
example_end

Sent: all the way ?
Sem: qn|all_1(BARE($0,Q(det:art|the_2($1,n|way_3($1),$0))))
example_end

Sent: here they are .
Sem: lambda $0_{r}.adv|here_1(pro:sub|they_2,$0)
example_end

Sent: I don 't think she likes that little dirty tape there .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|like-3s_6(pro:sub|she_5,adv|there_11(pro:rel|that_7($2,and(adj|dirt-dn_9($2),and(adj|little_8($2),n|tape_10($2))))),$1),$0),$0),$0)
example_end

Sent: it may have broken off from this one .
Sem: lambda $0_{r}.aux|have_3(mod|may_2(and(and(part|break-pastp_4(pro:per|it_1,$0),adv|off_5($0)),prep|from_6(pro:dem|this_7($1,pro:indef|one_8($1)),$0)),$0),$0)
example_end

Sent: let me put it in here Adam .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.and(v|put-zero_3(pro:obj|me_2,pro:per|it_4,$1),adv|here_6($1)),$0)
example_end

Sent: what will she use for tape if you break that up ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|if_7(and(v|break_9(pro:per|you_8,pro:dem|that_10,$0),adv|up_11($0)),mod|will_2(and(v|use_4(pro:sub|she_3,$1,$0),prep|for_5(BARE($2,n|tape_6($2)),$0)),$0))
example_end

Sent: oh microphone ribbon .
Sem: lambda $0_{r}.and(and_comp(n|microphone_2($0),n|ribbon_3($0)),co|oh_1($0))
example_end

Sent: why does the microphone need a ribbon ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|need_5(det:art|the_3($1,n|microphone_4($1)),det:art|a_6($2,n|ribbon_7($2)),$0),$3($0)),$0)
example_end

Sent: I tie it .
Sem: lambda $0_{r}.v|tie_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: I tie it up .
Sem: lambda $0_{r}.and(v|tie_2(pro:sub|i_1,pro:per|it_3,$0),adv|up_4($0))
example_end

Sent: oh you 're tying it up .
Sem: lambda $0_{r}.and(aux|~be_3(and(part|tie-presp_4(pro:per|you_2,pro:per|it_5,$0),adv|up_6($0)),$0),co|oh_1($0))
example_end

Sent: yes it needs a bib .
Sem: lambda $0_{r}.and(v|need-3s_3(pro:per|it_2,det:art|a_4($1,n|bib_5($1)),$0),co|yes_1($0))
example_end

Sent: why does the microphone need a bib ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|need_5(det:art|the_3($1,n|microphone_4($1)),det:art|a_6($2,n|bib_7($2)),$0),$3($0)),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I why are you putting it in there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_3(and(and(part|put-presp_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),adv|there_8($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:dem|that_1,$1(pro:dem|that_1,$0))
example_end

Sent: a trash truck ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|trash_2($1),n|truck_3($1)),$0)))
example_end

Sent: no don 't put it on your tricycle Adam .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|put-zero_4(you,pro:per|it_5,$0),prep|on_6(det:poss|your_7($1,n|tricycle_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: oh you 're putting some gas in the tricycle ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|put-presp_4(pro:per|you_2,qn|some_5($1,n|gas_6($1)),$0),prep|in_7(det:art|the_8($2,n|tricycle_9($2)),$0)),$0),co|oh_1($0)))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: that 's part of the tape recorder .
Sem: lambda $0_{r}.att(n|part_3(pro:dem|that_1,$0),prep|of_4(det:art|the_5($1,and_comp(n|tape_6($1),n|record-dv_7($1)))))
example_end

Sent: oh that 's a street broom .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and_comp(n|street_5(pro:dem|that_2,$0),n|broom_6(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: alright but don 't play with the cord like that .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(v|play_5(you,$0),prep|with_6(det:art|the_7($1,n|cord_8($1)),$0)),prep|like_9(pro:dem|that_10,$0)),$0),$0),adj|alright_1($0))
example_end

Sent: no honey .
Sem: lambda $0_{r}.qn|no_1($0)
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: no you can 't play with it Adam .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|play_5(pro:per|you_2,$0),prep|with_6(pro:per|it_7,$0)),$0),$0),co|no_1($0))
example_end

Sent: let 's put the puzzle together .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|put-zero_3(pro:obj|~us_2,det:art|the_4($2,n|puzzle_5($2)),$1),adv|together_6($1)),$0)
example_end

Sent: poor head .
Sem: BARE($0,and(adj|poor_1($0),n|head_2($0)))
example_end

Sent: oh poor head .
Sem: lambda $0_{r}.and(and(adj|poor_2($0),n|head_3($0)),co|oh_1($0))
example_end

Sent: how 's your doggie doing ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|do-presp_5(det:poss|your_3($1,n|dog-dim_4($1)),$0),$2($0)),$0)
example_end

Sent: fine thank_you .
Sem: lambda $0_{r}.and(adj|fine_1($0),n|thank_you_2(you,$0))
example_end

Sent: oh the doggie eats breakfast .
Sem: lambda $0_{r}.and(v|eat-3s_4(det:art|the_2($1,n|dog-dim_3($1)),BARE($2,n|breakfast_5($2)),$0),co|oh_1($0))
example_end

Sent: is he eating his breakfast now ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(and(part|eat-presp_3(pro:sub|he_2,det:poss|his_4($1,n|breakfast_5($1)),$0),adv|now_6($0)),$0))
example_end

Sent: what does he have for breakfast ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(and(v|have_4(pro:sub|he_3,$1,$0),prep|for_5(BARE($2,n|breakfast_6($2)),$0)),$0)
example_end

Sent: oh he has cereal .
Sem: lambda $0_{r}.and(v|have-3s_3(pro:sub|he_2,BARE($1,n|cereal_4($1)),$0),co|oh_1($0))
example_end

Sent: what kind of cereal ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|cereal_4($2)))))
example_end

Sent: he has hot cereal .
Sem: lambda $0_{r}.aux|have-3s_2(pro:sub|he_1,BARE($1,and(adj|hot_3($1),n|cereal_4($1))),$0)
example_end

Sent: what about your puzzle ?
Sem: att(pro:int|what_1,adv|about_2(det:poss|your_3($0,n|puzzle_4($0))))
example_end

Sent: will that fit in there ?
Sem: lambda $0_{r}.Q(mod|will_1(and(v|fit-zero_3(pro:dem|that_2,$0),adv|there_5($0)),$0))
example_end

Sent: want your vitamins ?
Sem: lambda $0_{r}.Q(v|want_1(you,det:poss|your_2($1,n|vitamin-pl_3($1)),$0))
example_end

Sent: what kinds of vitamins are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_6,att(n|kind-pl_2(pro:dem|those_6,$0),prep|of_3(BARE($2,n|vitamin-pl_4($2)))))
example_end

Sent: Adam 's vitamins .
Sem: n:prop|adam_1's($0,n|vitamin-pl_3($0))
example_end

Sent: vitamin Cromer 's .
Sem: BARE($0,att(n|vitamin_1($0),poss|~s_3(n:prop|cromer_2)))
example_end

Sent: I need a vitamin too .
Sem: lambda $0_{r}.v|need_2(post|too_5(pro:sub|i_1),det:art|a_3($1,n|vitamin_4($1)),$0)
example_end

Sent: what kind of vitamin ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|vitamin_4($2)))))
example_end

Sent: are you going to give it to Ursula ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|give_5(pro:per|you_2,pro:per|it_6,$1),prep|to_7(n:prop|ursula_8,$1)),$0),$0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: no not that bag Adam .
Sem: lambda $0_{r}.and(not(det:dem|that_3($1,n|bag_4($1)),$0),co|no_1($0))
example_end

Sent: so you can put it in a notebook if you like .
Sem: lambda $0_{r}.conj|if_9(co|like_11(pro:per|you_10,$0),mod|can_3(and(and(v|put-zero_4(pro:per|you_2,pro:per|it_5,$0),co|so_1($0)),prep|in_6(det:art|a_7($1,n|notebook_8($1)),$0)),$0))
example_end

Sent: shall we look at these first ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(and(cop|look_3(pro:sub|we_2,$0),prep|at_4(pro:dem|these_5,$0)),adj|first_6($0)),$0))
example_end

Sent: it 's a watch ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,n|watch_4(pro:per|it_1,$0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: you could use the paper .
Sem: lambda $0_{r}.mod|could_2(v|use_3(pro:per|you_1,det:art|the_4($1,n|paper_5($1)),$0),$0)
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: no he can 't have one .
Sem: lambda $0_{r}.and(not(mod|can_3(v|have_5(pro:sub|he_2,pro:indef|one_6,$0),$0),$0),co|no_1($0))
example_end

Sent: he 's too little .
Sem: lambda $0_{r}.adv|too_3(adj|little_4(pro:sub|he_1,$0))
example_end

Sent: you going to tell her a story ?
Sem: lambda $0_{r}.Q(part|go-presp_2(pro:per|you_1,lambda $1_{r}.v|tell_4(pro:per|you_1,det:art|a_6($2,n|story_7($2)),pro:obj|her_5,$1),$0))
example_end

Sent: no that 's alright Adam .
Sem: lambda $0_{r}.and(adj|alright_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: she doesn 't have any games in that one Adam .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:sub|she_1,qn|any_5($1,n|game-pl_6($1)),$0),prep|in_7(pro:dem|that_8($2,pro:indef|one_9($2)),$0)),$0),$0)
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: it 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:per|it_1,$1(pro:per|it_1,$0))
example_end

Sent: may I see it ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,pro:per|it_4,$0),$0))
example_end

Sent: it 's a mirror ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,n|mirror_4(pro:per|it_1,$0)))
example_end

Sent: what do you see in the mirror ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|see_4(pro:per|you_3,$1,$0),prep|in_5(det:art|the_6($2,n|mirror_7($2)),$0)),$0)
example_end

Sent: it 's a watch ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,n|watch_4(pro:per|it_1,$0)))
example_end

Sent: what kind of watch ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|watch_4($2)))))
example_end

Sent: does it look like Daddy 's watch ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(cop|look_3(pro:per|it_2,$0),conj|like_4(n:prop|daddy_5's($1,n|watch_7($1)),$0)),$0))
example_end

Sent: it looks like Daddy 's watch ?
Sem: lambda $0_{r}.Q(and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(n:prop|daddy_4's($1,n|watch_6($1)),$0)))
example_end

Sent: it doesn 't have a band .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|it_1,det:art|a_5($1,n|band_6($1)),$0),$0),$0)
example_end

Sent: maybe it 's in here .
Sem: lambda $0_{r}.and(and(cop|~be_3(pro:per|it_2,$0),adv|maybe_1($0)),adv|in_4(adv|here_5($0)))
example_end

Sent: oh what 're you going to do ?
Sem: lambda $2_{e}.lambda $0_{r}.and(aux|~be_3(part|go-presp_5(pro:per|you_4,lambda $1_{r}.v|do_7(pro:per|you_4,$2,$1),$0),$0),co|oh_1($0))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: okay I 'll hold it .
Sem: lambda $0_{r}.and(mod|~will_3(v|hold_4(pro:sub|i_2,pro:per|it_5,$0),$0),co|okay_1($0))
example_end

Sent: it won 't stay there .
Sem: lambda $0_{r}.not(mod|will_2(and(cop|stay_4(pro:per|it_1,$0),adv|there_5($0)),$0),$0)
example_end

Sent: you 'd better take it back to Urs .
Sem: lambda $0_{r}.mod|~genmod_2_good-cp_3(and(and(v|take_4(pro:per|you_1,pro:per|it_5,$0),adv|back_6($0)),prep|to_7(n:prop|ursula_8,$0)),$0)
example_end

Sent: you 've never seen a watch ?
Sem: lambda $0_{r}.Q(aux|~have_2(and(part|see-pastp_4(pro:per|you_1,det:art|a_5($1,n|watch_6($1)),$0),adv|never_3($0)),$0))
example_end

Sent: oh that 's not a chair .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:dem|that_2,n|chair_6(pro:dem|that_2,$0)),$0),co|oh_1($0))
example_end

Sent: I think you 'd better take the watch back to Urs .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|~genmod_4_good-cp_5(and(and(v|take_6(pro:per|you_3,det:art|the_7($2,n|watch_8($2)),$1),adv|back_9($1)),prep|to_10(n:prop|ursula_11,$1)),$1),$0)
example_end

Sent: how did you attach that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|attach_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: that 's good .
Sem: lambda $0_{r}.adj|good_3(pro:dem|that_1,$0)
example_end

Sent: we could put this in the box .
Sem: lambda $0_{r}.mod|could_2(and(v|put-zero_3(pro:sub|we_1,pro:dem|this_4,$0),prep|in_5(det:art|the_6($1,n|box_7($1)),$0)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: I know what you can do .
Sem: lambda $0_{r}.v|know_2(pro:sub|i_1,lambda $1_{r}.mod|can_5(v|do_6(pro:per|you_4,pro:int|what_3,$1),$1),$0)
example_end

Sent: why don 't you use some of the other tape that Urs gave you ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|use_5(pro:per|you_4,qn|some_6(det:art|the_8($1,and(qn|other_9($1),n|tape_10($1)))),$0),$2($0)),$0),$0)
example_end

Sent: why don 't you use some of this ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|use_5(pro:per|you_4,qn|some_6(pro:dem|this_8),$0),$1($0)),$0),$0)
example_end

Sent: not cut it off .
Sem: lambda $0_{r}.not(and(v|cut-zero_2(you,pro:per|it_3,$0),adv|off_4($0)),$0)
example_end

Sent: no look .
Sem: lambda $0_{r}.and(co|look_2(you,$0),co|no_1($0))
example_end

Sent: cut it off on there .
Sem: lambda $0_{r}.and(and(v|cut-zero_1(you,pro:per|it_2,$0),adv|off_3($0)),prep|on_4(adv|there_5($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: well cut it off .
Sem: lambda $0_{r}.and(and(v|cut-zero_2(you,pro:per|it_3,$0),adv|off_4($0)),co|well_1($0))
example_end

Sent: I 'm helping you cut it .
Sem: lambda $0_{r}.aux|~be_2(part|help-presp_3(pro:sub|i_1,lambda $1_{r}.v|cut-zero_5(pro:per|you_4,pro:per|it_6,$1),$0),$0)
example_end

Sent: see there where your finger is ?
Sem: lambda $0_{r}.Q(and(v|see_1(you,lambda $1_{r}.and(cop|be-3s_6(det:poss|your_4($2,n|finger_5($2)),$1),adv:int|where_3($1)),$0),adv|there_2($0)))
example_end

Sent: that 's good .
Sem: lambda $0_{r}.adj|good_3(pro:dem|that_1,$0)
example_end

Sent: oh another one .
Sem: lambda $0_{r}.and(qn|another_2($1,pro:indef|one_3($1),$0),co|oh_1($0))
example_end

Sent: Adam shall I help you cut it off ?
Sem: lambda $0_{r}.Q(mod|shall_2(v|help_4(pro:sub|i_3,lambda $1_{r}.and(v|cut-zero_6(pro:per|you_5,pro:per|it_7,$1),adv|off_8($1)),$0),$0))
example_end

Sent: that 's enough Adam .
Sem: lambda $0_{r}.adj|enough_3(pro:dem|that_1,$0)
example_end

Sent: d you want to stand up there ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|stand_5(pro:per|you_2,$1),adv|up_6(adv|there_7($1))),$0),$0))
example_end

Sent: I didn 't think it was .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.cop|be-past_6(pro:per|it_5,$1),$0),$0),$0)
example_end

Sent: d you know that ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: I was crossing the street .
Sem: lambda $0_{r}.aux|be-past_2(part|cross-presp_3(pro:sub|i_1,det:art|the_4($1,n|street_5($1)),$0),$0)
example_end

Sent: I was crossing the street .
Sem: lambda $0_{r}.aux|be-past_2(part|cross-presp_3(pro:sub|i_1,det:art|the_4($1,n|street_5($1)),$0),$0)
example_end

Sent: how will I get to the other side ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will_2(and(and(v|get_4(pro:sub|i_3,$0),$1($0)),prep|to_5(det:art|the_6($2,and(qn|other_7($2),n|side_8($2))),$0)),$0)
example_end

Sent: what d you have_to do when you cross the street ?
Sem: lambda $2_{e}.lambda $0_{r}.conj|when_6(v|cross_8(pro:per|you_7,det:art|the_9($1,n|street_10($1)),$0),mod:aux|have_to_4(mod|do_2(v|do_5(pro:per|you_3,$2,$0),$0),$0))
example_end

Sent: no you don 't kick cars do you ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(v|kick_5(pro:per|you_2,BARE($1,n|car-pl_6($1)),$0),$0),$0),v|do_7(pro:per|you_8,$0)),co|no_1($0)))
example_end

Sent: tell you a story ?
Sem: lambda $0_{r}.Q(v|tell_1(you,det:art|a_3($1,n|story_4($1)),pro:per|you_2,$0))
example_end

Sent: why don 't you tell us a story ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|tell_5(pro:per|you_4,det:art|a_7($1,n|story_8($1)),pro:obj|us_6,$0),$2($0)),$0),$0)
example_end

Sent: where did you see boats ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,BARE($1,n|boat-pl_5($1)),$0),$2($0)),$0)
example_end

Sent: where were you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(pro:per|you_3,$0),$1($0))
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: some kind of bug .
Sem: qn|some_1($0,att(n|kind_2($0),prep|of_3(BARE($1,n|bug_4($1)))))
example_end

Sent: you won 't have anymore tape .
Sem: lambda $0_{r}.not(mod|will_2(aux|have_4(pro:per|you_1,BARE($1,and(adv|anymore_5($1),n|tape_6($1))),$0),$0),$0)
example_end

Sent: Adam where did you see the boats ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_3(and(v|see_5(pro:per|you_4,det:art|the_6($1,n|boat-pl_7($1)),$0),$2($0)),$0)
example_end

Sent: where were you Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(pro:per|you_3,$0),$1($0))
example_end

Sent: were you lost ?
Sem: lambda $0_{r}.Q(v|lose-past_3(pro:per|you_2,$0))
example_end

Sent: were you lost ?
Sem: lambda $0_{r}.Q(v|lose-past_3(pro:per|you_2,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: see if it can fly .
Sem: lambda $0_{r}.v|see_1(you,lambda $1_{r}.mod|can_4(v|fly_5(pro:per|it_3,$1),$1),$0)
example_end

Sent: that 's a duck ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,n|duck_4(pro:dem|that_1,$0)))
example_end

Sent: what about the tail ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|tail_4($0))))
example_end

Sent: that 's a duck ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,n|duck_4(pro:dem|that_1,$0)))
example_end

Sent: in the water ?
Sem: Q(prep|in_1(det:art|the_2($0,n|water_3($0))))
example_end

Sent: what does the duck do in the water ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(and(v|do_5(det:art|the_3($1,n|duck_4($1)),$2,$0),prep|in_6(det:art|the_7($3,n|water_8($3)),$0)),$0)
example_end

Sent: he 's swimming .
Sem: lambda $0_{r}.aux|~be_2(part|swim-presp_3(pro:sub|he_1,$0),$0)
example_end

Sent: it might frighten Paul .
Sem: lambda $0_{r}.mod|might_2(v|frighten_3(pro:per|it_1,n:prop|paul_4,$0),$0)
example_end

Sent: no we already have a road .
Sem: lambda $0_{r}.and(and(v|have_4(pro:sub|we_2,det:art|a_5($1,n|road_6($1)),$0),adv|already_3($0)),co|no_1($0))
example_end

Sent: a street light .
Sem: det:art|a_1($0,and_comp(n|street_2($0),n|light_3($0)))
example_end

Sent: with that .
Sem: prep|with_1(pro:dem|that_2)
example_end

Sent: how can I make a street light ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|make_4(pro:sub|i_3,det:art|a_5($1,and_comp(n|street_6($1),n|light_7($1))),$0),$2($0)),$0)
example_end

Sent: you show me how .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|show_2(pro:per|you_1,pro:obj|me_3,$0),$1($0))
example_end

Sent: a steam shovel !
Sem: det:art|a_1($0,and_comp(n|steam_2($0),n|shovel_3($0)))
example_end

Sent: I 'm making a street light .
Sem: lambda $0_{r}.aux|~be_2(part|make-presp_3(pro:sub|i_1,det:art|a_4($1,and_comp(n|street_5($1),n|light_6($1))),$0),$0)
example_end

Sent: I don 't think we need another one do we ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:sub|we_5,qn|another_7($2,pro:indef|one_8($2)),$1),$0),$0),$0),mod|do_9(pro:sub|we_10,$0)))
example_end

Sent: don 't you think Robin has_to look both ways when he crosses the street ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|think_4(pro:per|you_3,lambda $1_{r}.conj|when_10(v|cross-3s_12(pro:sub|he_11,det:art|the_13($2,n|street_14($2)),$1),mod:aux|has_to_6(cop|look_7(n:prop|robin_5,qn|both_8($3,n|way-pl_9($3)),$1),$1)),$0),$0),$0))
example_end

Sent: do I want you to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_1(v|want_3(pro:sub|i_2,lambda $1_{r}.v|do_6(pro:per|you_4,$2,$1),$0),$0)
example_end

Sent: no that 's not nice to do .
Sem: lambda $0_{r}.and(not(adj|nice_5(pro:dem|that_2,lambda $1_{r}.v|do_7(pro:dem|that_2,$1),$0),$0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: that 's a convertible .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|convertible_4(pro:dem|that_1,$0))
example_end

Sent: well it doesn 't seem to have a top .
Sem: lambda $0_{r}.and(not(mod|do_3(cop|seem_5(pro:per|it_2,lambda $1_{r}.v|have_7(pro:per|it_2,det:art|a_8($2,n|top_9($2)),$1),$0),$0),$0),co|well_1($0))
example_end

Sent: you just said you saw ducks .
Sem: lambda $0_{r}.and(v|say-past_3(pro:per|you_1,lambda $1_{r}.v|saw_5(pro:per|you_4,BARE($2,n|duck-pl_6($2)),$1),$0),adv|just_2($0))
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: where did you see the ducks ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,det:art|the_5($1,n|duck-pl_6($1)),$0),$2($0)),$0)
example_end

Sent: at the river ?
Sem: Q(prep|at_1(det:art|the_2($0,n|river_3($0))))
example_end

Sent: was that a river ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|river_4(pro:rel|that_2,$0)))
example_end

Sent: where was the water ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(det:art|the_3($1,n|water_4($1)),$0),$2($0))
example_end

Sent: I know where you went .
Sem: lambda $0_{r}.v|know_2(pro:sub|i_1,lambda $1_{r}.and(v|go-past_5(pro:per|you_4,$1),pro:rel|where_3($1)),$0)
example_end

Sent: did you see a boat with a swan in back of it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,det:art|a_4($1,att(n|boat_5($1),adv|back_10(prep|with_6(det:art|a_7($2,n|swan_8($2)))))),$0),$0))
example_end

Sent: did you answer Urs ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|answer_3(pro:per|you_2,n:prop|ursula_4,$0),$0))
example_end

Sent: did you tell Urs ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|tell_3(pro:per|you_2,n:prop|ursula_4,$0),$0))
example_end

Sent: did you go on the boat ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(v|go_3(pro:per|you_2,$0),prep|on_4(det:art|the_5($1,n|boat_6($1)),$0)),$0))
example_end

Sent: where was the swan boat Adam ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(det:art|the_3($1,and_comp(n|swan_4($1),n|boat_5($1))),$0),$2($0))
example_end

Sent: do you know where the swan boat was ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.and(cop|be-past_8(det:art|the_5($2,and_comp(n|swan_6($2),n|boat_7($2))),$1),adv:int|where_4($1)),$0),$0))
example_end

Sent: you broke another one ?
Sem: lambda $0_{r}.Q(v|break-past_2(pro:per|you_1,qn|another_3($1,pro:indef|one_4($1)),$0))
example_end

Sent: you go put it up .
Sem: lambda $0_{r}.and(v|put-zero_3(pro:per|you_1,pro:per|it_4,$0),adv|up_5($0))
example_end

Sent: let me show you how .
Sem: lambda $0_{r}.v|let-zero_1(you,pro:obj|me_2,$0)
example_end

Sent: you put this part on the floor .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,pro:dem|this_3($1,n|part_4($1)),$0),prep|on_5(det:art|the_6($2,n|floor_7($2)),$0))
example_end

Sent: you 've used up all of the tape .
Sem: lambda $0_{r}.aux|~have_2(and(part|use-pastp_3(pro:per|you_1,pro:indef|all_5(det:art|the_7($1,n|tape_8($1))),$0),adv|up_4($0)),$0)
example_end

Sent: oh I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|oh_1($0))
example_end

Sent: open the alligator ?
Sem: lambda $0_{r}.Q(v|open_1(you,det:art|the_2($1,n|alligator_3($1)),$0))
example_end

Sent: what 's an alligator ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|alligator_4($2)),$0)
example_end

Sent: what 's an alligator ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|alligator_4($2)),$0)
example_end

Sent: what 's an alligator ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|alligator_4($2)),$0)
example_end

Sent: well what 's an elevator ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(det:art|a_4($2,n|elevator_5($2)),$0),co|well_1($0))
example_end

Sent: what 's an alligator ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|alligator_4($2)),$0)
example_end

Sent: put what up ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|put-zero_1(you,$1,$0),adv|up_3($0))
example_end

Sent: why don 't you tell me that story ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|tell_5(pro:per|you_4,pro:dem|that_7($1,n|story_8($1)),pro:obj|me_6,$0),$2($0)),$0),$0)
example_end

Sent: you read it to me okay ?
Sem: lambda $0_{r}.Q(and(and(v|read-zero_2(pro:per|you_1,pro:per|it_3,$0),prep|to_4(pro:obj|me_5,$0)),adj|okay_6($0)))
example_end

Sent: you read it to me .
Sem: lambda $0_{r}.and(v|read-zero_2(pro:per|you_1,pro:per|it_3,$0),prep|to_4(pro:obj|me_5,$0))
example_end

Sent: you read it to me .
Sem: lambda $0_{r}.and(v|read-zero_2(pro:per|you_1,pro:per|it_3,$0),prep|to_4(pro:obj|me_5,$0))
example_end

Sent: what 's this doggie 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|dog_4's($2,n|name_6($2)),$0)
example_end

Sent: what kind of doggie was he ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|he_6,att(n|kind_2(pro:sub|he_6,$0),prep|of_3(BARE($2,n|dog-dim_4($2)))))
example_end

Sent: what kind of house did he live in ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-past_5(and(adj|live_7(pro:sub|he_6,$0),adv|in_8($1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|house_4($3))))),$0)),$0)
example_end

Sent: oh a barn .
Sem: lambda $0_{r}.and(det:art|a_2($1,n|barn_3($1),$0),co|oh_1($0))
example_end

Sent: did he have something pretty to wear ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|have_3(pro:sub|he_2,lambda $1_{r}.v|wear_7(BARE($2,and(adj|pretty_5($2),pro:indef|something_4($2))),$1),$0),$0))
example_end

Sent: what did he have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|have_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: what kind of bed did he sleep on ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do-past_5(and(v|sleep_7(pro:sub|he_6,$0),adv|on_8($1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|bed_4($3))))),$0)),$0)
example_end

Sent: was that a soft bed or a hard bed ?
Sem: lambda $0_{r}.Q(det:art|a_7(pro:rel|that_2,det:art|a_3(pro:rel|that_2,and(and(n|bed_9(pro:rel|that_2,$0),adj|soft_4(pro:rel|that_2,$0)),adj|hard_8(pro:rel|that_2,$0)))))
example_end

Sent: what kind of yard did he have ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do-past_5(v|have_7(pro:sub|he_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|yard_4($3))))),$0),$0)
example_end

Sent: was it a big yard or a small yard ?
Sem: lambda $0_{r}.Q(det:art|a_7(pro:per|it_2,det:art|a_3(pro:per|it_2,and(and(n|yard_9(pro:per|it_2,$0),adj|big_4(pro:per|it_2,$0)),adj|small_8(pro:per|it_2,$0)))))
example_end

Sent: why was Peppy lonely ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(adv|lone-dadj_4(n:prop|peppy_3,$0))
example_end

Sent: a big moving truck .
Sem: det:art|a_1($0,and(n:gerund|move-presp_3($0),and(adj|big_2($0),n|truck_4($0))))
example_end

Sent: you read that story to me .
Sem: lambda $0_{r}.and(v|read-zero_2(pro:per|you_1,pro:dem|that_3($1,n|story_4($1)),$0),prep|to_5(pro:obj|me_6,$0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: baby who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,n|baby_1($2)),$0)
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: is that a pony ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|pony_4(pro:rel|that_2,$0)))
example_end

Sent: is that a zebra ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|zebra_4(pro:rel|that_2,$0)))
example_end

Sent: or a donkey .
Sem: det:art|a_2($0,n|donkey_3($0))
example_end

Sent: those are the wise men .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|those_1,and(n|man-pl_5(pro:dem|those_1,$0),adj|wise_4(pro:dem|those_1,$0)))
example_end

Sent: what are these ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|these_3,$0)
example_end

Sent: I don 't think you need a rifle .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:per|you_5,det:art|a_7($2,n|rifle_8($2)),$1),$0),$0),$0)
example_end

Sent: what would you do with it ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will-cond_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(pro:per|it_6,$0)),$0)
example_end

Sent: can you blow it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|blow_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: can you make the windmill go ?
Sem: lambda $0_{r}.Q(mod|can_1(v|make_3(pro:per|you_2,lambda $1_{r}.v|go_6(det:art|the_4($2,n|windmill_5($2)),$1),$0),$0))
example_end

Sent: the other one is broken .
Sem: lambda $0_{r}.part|break-pastp_5(att(pro:indef|one_3,BARE($1,qn|other_2($1))),$0)
example_end

Sent: okay Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|okay_1($0))
example_end

Sent: can you blow it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|blow_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: blow it sideways .
Sem: lambda $0_{r}.and(v|blow_1(you,pro:per|it_2,$0),adv|sideways_3($0))
example_end

Sent: the pin is broken .
Sem: lambda $0_{r}.part|break-pastp_4(det:art|the_1($1,n|pin_2($1)),$0)
example_end

Sent: I 'll have_to get a better pin .
Sem: lambda $0_{r}.mod:aux|have_to_3(mod|~will_2(v|get_4(pro:sub|i_1,det:art|a_5($1,and(adj|good-cp_6($1),n|pin_7($1))),$0),$0),$0)
example_end

Sent: blow it on the side .
Sem: lambda $0_{r}.and(v|blow_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|side_5($1)),$0))
example_end

Sent: blow into here .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),prep|into_2(adv|here_3($0)))
example_end

Sent: there it goes .
Sem: lambda $0_{r}.and(v|go-3s_3(pro:per|it_2,$0),adv|there_1($0))
example_end

Sent: did you say thank_you ?
Sem: lambda $0_{r}.Q(and(v|do-past_1(v|say_3(pro:per|you_2,$0),$0),n|thank_you_4(you,$0)))
example_end

Sent: Adam how does your Daddy shave ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-3s_3(and(v|shave_6(det:poss|your_4($1,n:prop|daddy_5($1)),$0),$2($0)),$0)
example_end

Sent: he does .
Sem: lambda $0_{r}.v|do-3s_2(pro:sub|he_1,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: you open it .
Sem: lambda $0_{r}.v|open_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: what d you find Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|find_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: I can take the top off .
Sem: lambda $0_{r}.mod|can_2(and(v|take_3(pro:sub|i_1,det:art|the_4($1,n|top_5($1)),$0),adv|off_6($0)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: d you know what they call these ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_1(v|know_3(pro:per|you_2,$1,$0),$0)
example_end

Sent: d you know where they go ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.and(v|go_6(pro:sub|they_5,$1),adv:int|where_4($1)),$0),$0))
example_end

Sent: where do they go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|go_4(pro:sub|they_3,$0),$1($0)),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: d you wan me squeeze it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|squeeze_5(pro:obj|me_4,pro:per|it_6,$1),$0),$0))
example_end

Sent: are you going to going to shave ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(n:gerund|go-presp_5(pro:per|you_2,lambda $1_{r}.v|shave_7(pro:per|you_2,$1),$0),$0))
example_end

Sent: if you 're going to shave I think you 'd better put your blade in first .
Sem: lambda $0_{r}.conj|if_1(aux|~be_3(part|go-presp_4(pro:per|you_2,lambda $1_{r}.v|shave_6(pro:per|you_2,$1),$0),$0),v|think_8(pro:sub|i_7,lambda $2_{r}.mod|~genmod_10(and(and(and(v|put-zero_12(pro:per|you_9,det:poss|your_13($3,n|blade_14($3)),$2),adj|good-cp_11($2)),adv|in_15($2)),adv|first_16($2)),$2),$0))
example_end

Sent: that 's a little ?
Sem: lambda $0_{r}.Q(cop|~be_2(pro:dem|that_1,lambda $1_{r}.adj|little_4(pro:dem|that_1,$1),$0))
example_end

Sent: isn 't that what your Daddy does ?
Sem: lambda $0_{r}.not(pro:int|what_4(pro:dem|that_3,$0),$0)
example_end

Sent: here 's a mirror .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|mirror_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: on your face .
Sem: prep|on_1(det:poss|your_2($0,n|face_3($0)))
example_end

Sent: see that little boy ?
Sem: lambda $0_{r}.Q(v|see_1(you,pro:rel|that_2($1,and(adj|little_3($1),n|boy_4($1))),$0))
example_end

Sent: what 're you doing Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: don 't you think he 's too young ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|think_4(pro:per|you_3,lambda $1_{r}.adv|too_7(adj|young_8(pro:sub|he_5,$1)),$0),$0),$0))
example_end

Sent: d you think I should shave ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|should_5(v|shave_6(pro:sub|i_4,$1),$1),$0),$0))
example_end

Sent: well you get it .
Sem: lambda $0_{r}.and(v|get_3(pro:per|you_2,pro:per|it_4,$0),co|well_1($0))
example_end

Sent: they 're in your box there .
Sem: lambda $0_{r}.adv|there_6(prep|in_3(det:poss|your_4($1,n|box_5($1)),pro:sub|they_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: don 't you look in the mirror when you shave ?
Sem: lambda $0_{r}.Q(not(conj|when_8(v|shave_10(pro:per|you_9,$0),mod|do_1(and(cop|look_4(pro:per|you_3,$0),prep|in_5(det:art|the_6($1,n|mirror_7($1)),$0)),$0)),$0))
example_end

Sent: you 'll have_to take it off .
Sem: lambda $0_{r}.mod:aux|have_to_3(mod|~will_2(and(v|take_4(pro:per|you_1,pro:per|it_5,$0),adv|off_6($0)),$0),$0)
example_end

Sent: now go look in the mirror .
Sem: lambda $0_{r}.and(and(co|look_3(you,$0),adv|now_1($0)),prep|in_4(det:art|the_5($1,n|mirror_6($1)),$0))
example_end

Sent: go out and get a paper towel .
Sem: lambda $0_{r}.and(v|get_4(you,det:art|a_5($1,and_comp(n|paper_6($1),n|towel_7($1))),$0),adv|out_2($0))
example_end

Sent: where did you see ant ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,BARE($1,n|ant_5($1)),$0),$2($0)),$0)
example_end

Sent: I guess from the open window out there in the hall .
Sem: lambda $0_{r}.and(v|guess_2(pro:sub|i_1,$0),adv|there_8(prep|from_3(det:art|the_4($1,and(adj|open_5($1),n|window_6($1))),$0)))
example_end

Sent: oh yes I see it .
Sem: lambda $0_{r}.and(v|see_4(pro:sub|i_3,pro:per|it_5,$0),and(co|yes_2($0),co|oh_1($0)))
example_end

Sent: want a little water ?
Sem: lambda $0_{r}.Q(v|want_1(you,det:art|a_2($1,and(adj|little_3($1),n|water_4($1))),$0))
example_end

Sent: if you 're careful you may have some water .
Sem: lambda $0_{r}.mod|may_6(conj|if_1(co|careful_4(pro:per|you_2,$0),v|have_7(pro:per|you_5,qn|some_8($1,n|water_9($1)),$0)),$0)
example_end

Sent: he scratched himself .
Sem: lambda $0_{r}.v|scratch-past_2(pro:sub|he_1,pro:refl|himself_3,$0)
example_end

Sent: you fell down on something .
Sem: lambda $0_{r}.and(and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0)),prep|on_4(pro:indef|something_5,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you 're not too big .
Sem: lambda $0_{r}.not(adv|too_4(adj|big_5(pro:per|you_1,$0)),$0)
example_end

Sent: when did you shave just like Daddy ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|shave_4(pro:per|you_3,$0),$1($0)),adj|just_5(co|like_6(n:prop|daddy_7,$0))),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: not down your neck .
Sem: not(v|down_2(det:poss|your_3($0,n|neck_4($0))))
example_end

Sent: did you take the water out ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|take_3(pro:per|you_2,det:art|the_4($1,n|water_5($1)),$0),adv|out_6($0)),$0))
example_end

Sent: now you may put it in .
Sem: lambda $0_{r}.mod|may_3(and(and(v|put-zero_4(pro:per|you_2,pro:per|it_5,$0),adv|now_1($0)),adv|in_6($0)),$0)
example_end

Sent: whoops you had an accident .
Sem: lambda $0_{r}.and(v|have-past_3(pro:per|you_2,det:art|a_4($1,n|accident_5($1)),$0),co|whoops_1($0))
example_end

Sent: don 't have an accident ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_3(you,det:art|a_4($1,n|accident_5($1)),$0),$0),$0))
example_end

Sent: shall I close the box ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|close_3(pro:sub|i_2,det:art|the_4($1,n|box_5($1)),$0),$0))
example_end

Sent: I like it .
Sem: lambda $0_{r}.v|like_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: aren 't you going to drink your juice first ?
Sem: lambda $0_{r}.Q(not(aux|be_1(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|drink_6(pro:per|you_3,det:poss|your_7($2,n|juice_8($2)),$1),adv|first_9($1)),$0),$0),$0))
example_end

Sent: what 're you drinking ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|drink-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: is your juice chewy ?
Sem: lambda $0_{r}.Q(n|chewy_4(det:poss|your_2($1,n|juice_3($1)),$0))
example_end

Sent: your glass is chewy ?
Sem: lambda $0_{r}.Q(n|chewy_4(det:poss|your_1($1,n|glass_2($1)),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: he did ?
Sem: lambda $0_{r}.Q(v|do-past_2(pro:sub|he_1,$0))
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: that 's a bird and a tree .
Sem: lambda $0_{r}.det:art|a_6(pro:dem|that_1,det:art|a_3(pro:dem|that_1,n|tree_7(pro:dem|that_1,$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what about this ?
Sem: att(pro:int|what_1,prep|about_2(pro:dem|this_3))
example_end

Sent: is that a new shirt ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,and(n|shirt_5(pro:rel|that_2,$0),adj|new_4(pro:rel|that_2,$0))))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what was it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: where 's the baby stuck ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.cop|~be_2(and(v|stick-past_5(det:art|the_3($1,n|baby_4($1)),$0),$2($0)),$0)
example_end

Sent: baby duck .
Sem: BARE($0,and(n|baby_1($0),n|duck_2($0)))
example_end

Sent: it 's a baby duck ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,and(n|duck_5(pro:per|it_1,$0),n|baby_4(pro:per|it_1,$0))))
example_end

Sent: you saw boats ?
Sem: lambda $0_{r}.Q(v|saw_2(pro:per|you_1,BARE($1,n|boat-pl_3($1)),$0))
example_end

Sent: did you see a birdhouse ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,det:art|a_4($1,n|birdhouse_5($1)),$0),$0))
example_end

Sent: did you see a castle for birds ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,det:art|a_4($1,att(n|castle_5($1),prep|for_6(BARE($2,n|bird-pl_7($2))))),$0),$0))
example_end

Sent: did you see a swan ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,det:art|a_4($1,n|swan_5($1)),$0),$0))
example_end

Sent: and trees ?
Sem: BARE($0,Q(n|tree-pl_2($0)))
example_end

Sent: they 're made like trees .
Sem: lambda $0_{r}.aux|~be_2(and(v|make-past_3(pro:sub|they_1,$0),prep|like_4(BARE($1,n|tree-pl_5($1)),$0)),$0)
example_end

Sent: one minute .
Sem: BARE($0,det:num|one_1(n|minute_2($0)))
example_end

Sent: don 't look .
Sem: lambda $0_{r}.not(mod|do_1(co|look_3(you,$0),$0),$0)
example_end

Sent: that 's a ring .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|ring_4(pro:dem|that_1,$0))
example_end

Sent: you hold the ring in your hand .
Sem: lambda $0_{r}.and(v|hold_2(pro:per|you_1,det:art|the_3($1,n|ring_4($1)),$0),prep|in_5(det:poss|your_6($2,n|hand_7($2)),$0))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what does the horse do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|do_5(det:art|the_3($1,n|horse_4($1)),$2,$0),$0)
example_end

Sent: let 's do some tricks .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|do_3(pro:obj|~us_2,qn|some_4($2,n|trick-pl_5($2)),$1),$0)
example_end

Sent: d you want him to run ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|run_6(pro:obj|him_4,$1),$0),$0))
example_end

Sent: where 's a bird ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|bird_4($1)),$0),$2($0))
example_end

Sent: a house_bird .
Sem: det:art|a_1($0,chi|house_bird_2($0))
example_end

Sent: what kind of bird is a house_bird Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_6($2,chi|house_bird_7($2)),att(n|kind_2(det:art|a_6($2,chi|house_bird_7($2)),$0),prep|of_3(BARE($3,n|bird_4($3)))))
example_end

Sent: what 's a house_bird ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,chi|house_bird_4($2)),$0)
example_end

Sent: yes what a house_bird is .
Sem: lambda $1_{e}.lambda $0_{r}.and($1(det:art|a_3($2,chi|house_bird_4($2)),$0),co|yes_1($0))
example_end

Sent: they are what Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_1,$0)
example_end

Sent: what is he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: Smith 's barn .
Sem: n:prop|smith_1's($0,n|barn_3($0))
example_end

Sent: Smith 's .
Sem: poss|~s_2(n:prop|smith_1)
example_end

Sent: who are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: not in this one no .
Sem: pro:dem|this_3($0,pro:indef|one_4($0))
example_end

Sent: the other one .
Sem: det:art|the_1($0,att(pro:indef|one_3,BARE($1,qn|other_2($1)),$0))
example_end

Sent: it 's my purse .
Sem: lambda $0_{r}.det:poss|my_3(pro:per|it_1,n|purse_4(pro:per|it_1,$0))
example_end

Sent: nothing happened to it .
Sem: lambda $0_{r}.and(v|happen-past_2(pro:indef|nothing_1,$0),prep|to_3(pro:per|it_4,$0))
example_end

Sent: oh we can make the toys stand up .
Sem: lambda $0_{r}.and(mod|can_3(v|make_4(pro:sub|we_2,lambda $1_{r}.and(v|stand_7(det:art|the_5($2,n|toy-pl_6($2)),$1),adv|up_8($1)),$0),$0),co|oh_1($0))
example_end

Sent: now he stands up .
Sem: lambda $0_{r}.and(and(v|stand-3s_3(pro:sub|he_2,$0),adv|now_1($0)),adv|up_4($0))
example_end

Sent: make a what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|make_1(you,$1,$0)
example_end

Sent: Adam what 's a house_bird ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_4($2,chi|house_bird_5($2)),$0)
example_end

Sent: no that won 't fit around there .
Sem: lambda $0_{r}.and(not(mod|will_3(and(v|fit-zero_5(pro:rel|that_2,$0),prep|around_6(adv|there_7($0))),$0),$0),co|no_1($0))
example_end

Sent: d you know where the little stick is Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.and(cop|be-3s_8(det:art|the_5($2,and(adj|little_6($2),n|stick_7($2))),$1),adv:int|where_4($1)),$0),$0))
example_end

Sent: he 's dancing look at this .
Sem: lambda $0_{r}.and(aux|~be_2(part|dance-presp_3(pro:sub|he_1,$0),$0),and(cop|look_4(you,$0),prep|at_5(pro:dem|this_6,$0)))
example_end

Sent: we finished our game .
Sem: lambda $0_{r}.v|finish-past_2(pro:sub|we_1,det:poss|our_3($1,n|game_4($1)),$0)
example_end

Sent: you want to do it again ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|do_4(pro:per|you_1,pro:per|it_5,$1),adv|again_6($1)),$0))
example_end

Sent: new one .
Sem: att(pro:indef|one_2,BARE($0,adj|new_1($0)))
example_end

Sent: isn 't it open already ?
Sem: lambda $0_{r}.Q(not(cop|be_1(and(v|open_4(pro:per|it_3,$0),adv|already_5($0)),$0),$0))
example_end

Sent: it 's going to break .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|it_1,lambda $1_{r}.v|break_5(pro:per|it_1,$1),$0),$0)
example_end

Sent: not if you 're careful .
Sem: lambda $0_{r}.neg|not_1(co|careful_5(pro:per|you_3,$0))
example_end

Sent: they are the same .
Sem: lambda $0_{r}.adj|same_4(pro:sub|they_1,$0)
example_end

Sent: you 're doing some work ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|do-presp_3(pro:per|you_1,qn|some_4($1,n|work_5($1)),$0),$0))
example_end

Sent: it seems to me that you tire of your games very easily .
Sem: lambda $0_{r}.and(cop|seem-3s_2(pro:per|it_1,lambda $1_{r}.and(and(v|tire_7(pro:per|you_6,$1),prep|of_8(det:poss|your_9($2,n|game-pl_10($2)),$1)),adv|very_11(adv|ease-dadj_12($1))),$0),prep|to_3(pro:obj|me_4,$0))
example_end

Sent: you open it .
Sem: lambda $0_{r}.v|open_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: train tracks ?
Sem: BARE($0,Q(and_comp(n|train_1($0),v|track-3s_2($0))))
example_end

Sent: it popped .
Sem: lambda $0_{r}.v|pop-past_2(pro:per|it_1,$0)
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: you broken the trains .
Sem: lambda $0_{r}.part|break-pastp_2(pro:per|you_1,det:art|the_3($1,n|train-pl_4($1)),$0)
example_end

Sent: you lost your cars .
Sem: lambda $0_{r}.v|lose-past_2(pro:per|you_1,det:poss|your_3($1,n|car-pl_4($1)),$0)
example_end

Sent: you left the others behind .
Sem: lambda $0_{r}.and(v|leave-past_2(pro:per|you_1,det:art|the_3($1,n:pt|others_4($1)),$0),adv|behind_5($0))
example_end

Sent: oh you 're telling a story .
Sem: lambda $0_{r}.and(aux|~be_3(part|tell-presp_4(pro:per|you_2,det:art|a_5($1,n|story_6($1)),$0),$0),co|oh_1($0))
example_end

Sent: telling the same story .
Sem: lambda $0_{r}.part|tell-presp_1(you,det:art|the_2($1,and(adj|same_3($1),n|story_4($1))),$0)
example_end

Sent: you lost your caboozle .
Sem: lambda $0_{r}.v|lose-past_2(pro:per|you_1,det:poss|your_3($1,wplay|caboozle_4($1)),$0)
example_end

Sent: sit down here .
Sem: lambda $0_{r}.and(and(v|sit_1(you,$0),adv|down_2($0)),adv|here_3($0))
example_end

Sent: dry you off ?
Sem: lambda $0_{r}.Q(and(v|dry_1(you,pro:per|you_2,$0),adv|off_3($0)))
example_end

Sent: there are your Soakies .
Sem: lambda $0_{r}.and(cop|be-pres_2(det:poss|your_3($1,n:prop|soakies_4($1)),$0),adv|there_1($0))
example_end

Sent: why don 't you wash them off ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|wash_5(pro:per|you_4,pro:obj|them_6,$0),$1($0)),adv|off_7($0)),$0),$0)
example_end

Sent: sit down .
Sem: lambda $0_{r}.and(v|sit_1(you,$0),adv|down_2($0))
example_end

Sent: no sit down .
Sem: lambda $0_{r}.and(and(v|sit_2(you,$0),adv|down_3($0)),co|no_1($0))
example_end

Sent: what did you play over at the park ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|play_4(pro:per|you_3,$1,$0),adv|over_5(prep|at_6(det:art|the_7($2,n|park_8($2)),$0))),$0)
example_end

Sent: you played with your truck ?
Sem: lambda $0_{r}.Q(and(v|play-past_2(pro:per|you_1,$0),prep|with_3(det:poss|your_4($1,n|truck_5($1)),$0)))
example_end

Sent: did you cover it with the sand ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|cover_3(pro:per|you_2,pro:per|it_4,$0),prep|with_5(det:art|the_6($1,n|sand_7($1)),$0)),$0))
example_end

Sent: did you share it with anybody ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|share_3(pro:per|you_2,pro:per|it_4,$0),prep|with_5(pro:indef|anybody_6,$0)),$0))
example_end

Sent: what happened to Tom ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(n:prop|tom_4,$0))
example_end

Sent: what happened to him ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:obj|him_4,$0))
example_end

Sent: well I guess he did .
Sem: lambda $0_{r}.and(v|guess_3(pro:sub|i_2,lambda $1_{r}.v|do-past_5(pro:sub|he_4,$1),$0),co|well_1($0))
example_end

Sent: sit down dear .
Sem: lambda $0_{r}.and(v|sit_1(you,$0),adv|down_2($0))
example_end

Sent: you 're a boy ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,n|boy_4(pro:per|you_1,$0)))
example_end

Sent: sit down boy .
Sem: lambda $0_{r}.and(v|sit_1(you,$0),adv|down_2($0))
example_end

Sent: who are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: sit down dear .
Sem: lambda $0_{r}.and(v|sit_1(you,$0),adv|down_2($0))
example_end

Sent: yes Adam Smith .
Sem: lambda $0_{r}.and(n:prop|smith_3_adam_2($0),co|yes_1($0))
example_end

Sent: that 's the boy .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|boy_4(pro:dem|that_1,$0))
example_end

Sent: sit down dear or you 'll have_to get out .
Sem: lambda $0_{r}.mod:aux|have_to_7(mod|~will_6(and(and(v|get_8(pro:per|you_5,$0),adv|down_2($0)),adv|out_9($0)),$0),$0)
example_end

Sent: well sit down if you want to .
Sem: lambda $0_{r}.and(conj|if_4(v|want_6(pro:per|you_5,$0),and(v|sit_2(you,$0),adv|down_3($0))),co|well_1($0))
example_end

Sent: your Soakie put them up in the bag .
Sem: lambda $0_{r}.and(and(v|put-zero_3(you,pro:obj|them_4,$0),adv|up_5($0)),prep|in_6(det:art|the_7($1,n|bag_8($1)),$0))
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: don 't you have_to hold the bag with your hand ?
Sem: lambda $0_{r}.Q(not(mod:aux|have_to_4(mod|do_1(and(v|hold_5(pro:per|you_3,det:art|the_6($1,n|bag_7($1)),$0),prep|with_8(det:poss|your_9($2,n|hand_10($2)),$0)),$0),$0),$0))
example_end

Sent: Adam you don 't need water dear .
Sem: lambda $0_{r}.not(mod|do_3(v|need_5(pro:per|you_2,BARE($1,n|water_6($1)),$0),$0),$0)
example_end

Sent: are your fingernails clean ?
Sem: lambda $0_{r}.Q(adj|clean_4(det:poss|your_2($1,n|finger+nail_3($1)),$0))
example_end

Sent: nope they 're still dirty .
Sem: lambda $0_{r}.and(adv|still_4(adj|dirt-dn_5(pro:sub|they_2,$0)),co|nope_1($0))
example_end

Sent: no they 're still dirty .
Sem: lambda $0_{r}.and(adv|still_4(adj|dirt-dn_5(pro:sub|they_2,$0)),co|no_1($0))
example_end

Sent: here 's some soap dear .
Sem: lambda $0_{r}.and(cop|~be_2(qn|some_3($1,n|soap_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: a monkey train backing up .
Sem: lambda $0_{r}.part|back-presp_4_up_5(det:art|a_1($1,and_comp(n|monkey_2($1),n|train_3($1))),$0)
example_end

Sent: because you might fall and hurt yourself .
Sem: lambda $0_{r}.mod|might_3(v|hurt-zero_6(pro:per|you_2,pro:refl|yourself_7,$0),$0)
example_end

Sent: don 't play there either .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|play_3(you,$0),adv|there_4($0)),adv|either_5($0)),$0),$0)
example_end

Sent: you said it first .
Sem: lambda $0_{r}.and(v|say-past_2(pro:per|you_1,pro:per|it_3,$0),adv|first_4($0))
example_end

Sent: what about the treasure house ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,and_comp(n|treasure_4($0),n|house_5($0)))))
example_end

Sent: that mirror ?
Sem: BARE($0,Q(pro:dem|that_1($1,n|mirror_2($1),$0)))
example_end

Sent: so you can see .
Sem: lambda $0_{r}.mod|can_3(and(v|see_4(pro:per|you_2,$0),co|so_1($0)),$0)
example_end

Sent: hop to the shower ?
Sem: lambda $0_{r}.Q(and(n|hop_1(you,$0),prep|to_2(det:art|the_3($1,n|shower_4($1)),$0)))
example_end

Sent: what are you saying ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|say-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: who bakes pies ?
Sem: lambda $1_{e}.lambda $0_{r}.v|bake-3s_2($1,BARE($2,n|pie-pl_3($2)),$0)
example_end

Sent: what kind of pies do I bake ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_5(v|bake_7(pro:sub|i_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|pie-pl_4($3))))),$0),$0)
example_end

Sent: where is the tape recorder ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,and_comp(n|tape_4($1),n|record-dv_5($1))),$0),$2($0))
example_end

Sent: a treasure chest .
Sem: det:art|a_1($0,and_comp(n|treasure_2($0),n|chest_3($0)))
example_end

Sent: remember when Twinkles found a treasure chest with jewels and money in it ?
Sem: lambda $0_{r}.Q(conj|when_2(v|find-past_4(n:prop|twinkles_3,det:art|a_5($1,att(and_comp(n|treasure_6($1),n|chest_7($1)),prep|with_8(BARE($2,att(n|money_11($2),prep|in_12(pro:per|it_13)))))),$0),v|remember_1(you,$0)))
example_end

Sent: I think you may knock it off Adam .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|may_4(and(v|knock_5(pro:per|you_3,pro:per|it_6,$1),prep|off_7($1)),$1),$0)
example_end

Sent: I don 't think you would intend to .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|will-cond_6(v|intend_7(pro:per|you_5,$1),$1),$0),$0),$0)
example_end

Sent: it would be a what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will-cond_2(det:art|a_4(pro:per|it_1,$1(pro:per|it_1,$0)),$0)
example_end

Sent: is that a rope ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|rope_4(pro:rel|that_2,$0)))
example_end

Sent: it 's not a rope .
Sem: lambda $0_{r}.not(det:art|a_4(pro:per|it_1,n|rope_5(pro:per|it_1,$0)),$0)
example_end

Sent: it 's like a rope .
Sem: lambda $0_{r}.and(cop|~be_2(pro:per|it_1,$0),conj|like_3(det:art|a_4($1,n|rope_5($1)),$0))
example_end

Sent: it 's a cord .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|cord_4(pro:per|it_1,$0))
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: it 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:per|it_1,$1(pro:per|it_1,$0))
example_end

Sent: it 's like a rope yes .
Sem: lambda $0_{r}.and(and(cop|~be_2(pro:per|it_1,$0),conj|like_3(det:art|a_4($1,n|rope_5($1)),$0)),co|yes_6($0))
example_end

Sent: I want you to steal ?
Sem: lambda $0_{r}.Q(v|want_2(pro:sub|i_1,lambda $1_{r}.v|steal_5(pro:per|you_3,$1),$0))
example_end

Sent: you 're welcome .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: how does that feel ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|feel_4(det:dem|that_3,$0),$1($0)),$0)
example_end

Sent: is that the trailer home ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,and_comp(n|trailer_4(pro:rel|that_2,$0),adv|home_5(pro:rel|that_2,$0))))
example_end

Sent: no I 'm not a Bobo .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:sub|i_2,n:prop|bobo_6(pro:sub|i_2,$0)),$0),co|no_1($0))
example_end

Sent: I won 't bounce back .
Sem: lambda $0_{r}.not(mod|will_2(and(v|bounce_4(pro:sub|i_1,$0),adv|back_5($0)),$0),$0)
example_end

Sent: oh did that hurt ?
Sem: lambda $0_{r}.Q(and(v|do-past_2(v|hurt-zero_4(pro:dem|that_3,$0),$0),co|oh_1($0)))
example_end

Sent: you are a silly boy .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,and(n|boy_5(pro:per|you_1,$0),adj|silly_4(pro:per|you_1,$0)))
example_end

Sent: you 're a nut .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,n|nut_4(pro:per|you_1,$0))
example_end

Sent: are you the kind of nut that a squirrel would eat ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:per|you_2,att(n|kind_4(pro:per|you_2,$0),prep|of_5(BARE($1,n|nut_6($1))))))
example_end

Sent: oh yes you are .
Sem: lambda $0_{r}.and(and(cop|be-pres_4(pro:per|you_3,$0),co|oh_1($0)),co|yes_2($0))
example_end

Sent: a squirrel might catch you so he 'd have something to eat .
Sem: lambda $0_{r}.and(mod|might_3(v|catch_4(det:art|a_1($1,n|squirrel_2($1)),pro:per|you_5,$0),$0),mod|~genmod_8(v|have_9_so_6(pro:sub|he_7,BARE($2,rel(pro:indef|something_10($2),lambda $3_{r}.v|eat_12(you,$3))),$0),$0))
example_end

Sent: you 're welcome .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: it 's turning .
Sem: lambda $0_{r}.aux|~be_2(part|turn-presp_3(pro:per|it_1,$0),$0)
example_end

Sent: what happens at light time ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_2($1,$0),prep|at_3(BARE($2,and_comp(adj|light_4($2),n|time_5($2))),$0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: yes dear .
Sem: lambda $0_{r}.and(co|dear_2($0),co|yes_1($0))
example_end

Sent: you have a hanger ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,det:art|a_3($1,n|hang-dv_4($1)),$0))
example_end

Sent: park it over there near your garage dear .
Sem: lambda $0_{r}.and(and(v|park_1(you,pro:per|it_2,$0),adv|over_3(adv|there_4($0))),prep|near_5(det:poss|your_6($1,n|garage_7($1)),$0))
example_end

Sent: why don 't you park it over here ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|park_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),adv|over_7(adv|here_8($0))),$0),$0)
example_end

Sent: what story do you want to night ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_3(and(v|want_5(pro:per|you_4,$1($2,n|story_2($2)),$0),n|night_7_to_6($0)),$0)
example_end

Sent: where is Lassie ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(n:prop|lassie_3,$0),$1($0))
example_end

Sent: is it up there ?
Sem: lambda $0_{r}.Q(and(aux|be-3s_1(pro:per|it_2,$0),adv|up_3(adv|there_4($0))))
example_end

Sent: here 's a clean one .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,att(pro:indef|one_5,BARE($2,adj|clean_4($2)),$1)),$0),pro:exist|here_1($0))
example_end

Sent: okay you read it to me tonight .
Sem: lambda $0_{r}.and(and(and(v|read-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|to_5(pro:obj|me_6,$0)),adv:tem|tonight_7($0)),co|okay_1($0))
example_end

Sent: no I looked .
Sem: lambda $0_{r}.and(cop|look-past_3(pro:sub|i_2,$0),co|no_1($0))
example_end

Sent: I looked .
Sem: lambda $0_{r}.cop|look-past_2(pro:sub|i_1,$0)
example_end

Sent: yes somebody 's in that car .
Sem: lambda $0_{r}.and(and(cop|~be_3(pro:indef|somebody_2,$0),prep|in_4(pro:dem|that_5($1,n|car_6($1)),$0)),co|yes_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: one house flying up in the air .
Sem: lambda $0_{r}.and(and(part|fly-presp_3(BARE($1,det:num|one_1(n|house_2($1))),$0),adv|up_4($0)),prep|in_5(det:art|the_6($2,n|air_7($2)),$0))
example_end

Sent: colonial I guess .
Sem: lambda $0_{r}.and(BARE($1,adj|colonial_1($1)),v|guess_3(pro:sub|i_2,$0))
example_end

Sent: that 's the water .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|water_4(pro:dem|that_1,$0))
example_end

Sent: the waves of the water .
Sem: det:art|the_1($0,att(n|wave-pl_2($0),prep|of_3(det:art|the_4($1,n|water_5($1)))))
example_end

Sent: I said to myself .
Sem: lambda $0_{r}.and(v|say-past_2(pro:sub|i_1,$0),prep|to_3(pro:refl|myself_4,$0))
example_end

Sent: oh it 's floating .
Sem: lambda $0_{r}.and(cop|~be_3(part|float-presp_4(pro:per|it_2,$0),$0),co|oh_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: he 's crying .
Sem: lambda $0_{r}.aux|~be_2(part|cry-presp_3(pro:sub|he_1,$0),$0)
example_end

Sent: he 's sad .
Sem: lambda $0_{r}.adj|sad_3(pro:sub|he_1,$0)
example_end

Sent: he 's happy now ?
Sem: lambda $0_{r}.Q(adv|now_4(adj|happy_3(pro:sub|he_1,$0)))
example_end

Sent: oh you 're making mud pies .
Sem: lambda $0_{r}.and(aux|~be_3(part|make-presp_4(pro:per|you_2,BARE($1,and_comp(n|mud_5($1),n|pie-pl_6($1))),$0),$0),co|oh_1($0))
example_end

Sent: did you make mud pies over at the park ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(and(v|make_3(pro:per|you_2,BARE($1,and_comp(n|mud_4($1),n|pie-pl_5($1))),$0),adv|over_6($0)),prep|at_7(det:art|the_8($2,n|park_9($2)),$0)),$0))
example_end

Sent: he went for a walk with his mother .
Sem: lambda $0_{r}.and(v|go-past_2(pro:sub|he_1,$0),prep|for_3(det:art|a_4($1,att(n|walk_5($1),prep|with_6(det:poss|his_7($2,n|mother_8($2))))),$0))
example_end

Sent: and he had lots_of friends .
Sem: lambda $0_{r}.v|have-past_3(pro:sub|he_2,qn|lots_of_4($1,n|friend-pl_5($1)),$0)
example_end

Sent: okay hop over in your bed .
Sem: lambda $0_{r}.and(and(and(v|hop_2(you,$0),adv|over_3($0)),prep|in_4(det:poss|your_5($1,n|bed_6($1)),$0)),co|okay_1($0))
example_end

Sent: you have sand on the floor .
Sem: lambda $0_{r}.and(v|have_2(pro:per|you_1,BARE($1,n|sand_3($1)),$0),prep|on_4(det:art|the_5($2,n|floor_6($2)),$0))
example_end

Sent: well you get up in the bed first .
Sem: lambda $0_{r}.and(and(and(and(v|get_3(pro:per|you_2,$0),adv|up_4($0)),prep|in_5(det:art|the_6($1,n|bed_7($1)),$0)),adv|first_8($0)),co|well_1($0))
example_end

Sent: did you have fun today ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|have_3(pro:per|you_2,BARE($1,n|fun_4($1)),$0),adv:tem|today_5($0)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what did you play ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|play_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: did you play with your truck today ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(and(v|play_3(pro:per|you_2,$0),prep|with_4(det:poss|your_5($1,n|truck_6($1)),$0)),adv:tem|today_7($0)),$0))
example_end

Sent: and you played games with Urs didn 't you ?
Sem: lambda $0_{r}.Q(and(and(v|play-past_3(pro:per|you_2,BARE($1,n|game-pl_4($1)),$0),prep|with_5(n:prop|ursula_6,$0)),not(mod|do_7(pro:per|you_9,$0),$0)))
example_end

Sent: and then went to the park .
Sem: lambda $0_{r}.and(and(v|go-past_3(you,$0),adv:tem|then_2($0)),prep|to_4(det:art|the_5($1,n|park_6($1)),$0))
example_end

Sent: played with toys sang some songs etcetera .
Sem: lambda $0_{r}.and(and(v|play-past_1(you,$0),prep|with_2(BARE($1,n|toy-pl_3($1)),$0)),adv|etcetera_7($0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: so I may put your cup up .
Sem: lambda $0_{r}.and(mod|may_3(and(v|put-zero_4(pro:sub|i_2,det:poss|your_5($1,n|cup_6($1)),$0),adv|up_7($0)),$0),conj|so_1($0))
example_end

Sent: how do I know to put your cup up ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:sub|i_3,lambda $1_{r}.and(v|put-zero_6(pro:sub|i_3,det:poss|your_7($2,n|cup_8($2)),$1),adv|up_9($1)),$0),$3($0)),$0)
example_end

Sent: because it has_to be put up .
Sem: lambda $0_{r}.cop|be_4(mod:aux|has_to_3(and(part|put-pastp_5(pro:per|it_2,$0),adv|up_6($0)),$0),$0)
example_end

Sent: you don 't knock water down ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(v|knock_4(pro:per|you_1,BARE($1,n|water_5($1)),$0),adv|down_6($0)),$0),$0))
example_end

Sent: no please .
Sem: lambda $0_{r}.and(co|please_2($0),co|no_1($0))
example_end

Sent: it has some water in it ?
Sem: lambda $0_{r}.Q(aux|have-3s_2(pro:per|it_1,qn|some_3($1,att(n|water_4($1),prep|in_5(pro:per|it_6))),$0))
example_end

Sent: you drank it all .
Sem: lambda $0_{r}.v|drink-past_2(pro:per|you_1,adv|all_4($1,pro:per|it_3($1)),$0)
example_end

Sent: tell you a song ?
Sem: lambda $0_{r}.Q(v|tell_1(you,det:art|a_3($1,n|song_4($1)),pro:per|you_2,$0))
example_end

Sent: you tell me a story .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,det:art|a_4($1,n|story_5($1)),pro:obj|me_3,$0)
example_end

Sent: you sing me a song .
Sem: lambda $0_{r}.v|sing_2(pro:per|you_1,det:art|a_4($1,n|song_5($1)),pro:obj|me_3,$0)
example_end

Sent: yes good night .
Sem: lambda $0_{r}.and(and(adj|good_2($0),n|night_3($0)),co|yes_1($0))
example_end

Sent: because I don 't sing very well .
Sem: lambda $0_{r}.not(mod|do_3(and(v|sing_5(pro:sub|i_2,$0),adv|very_6(adv|well_7($0))),$0),$0)
example_end

Sent: don 't do what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_1(v|do_3(you,$1,$0),$0),$0)
example_end

Sent: don 't waste the tape ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|waste_3(you,det:art|the_4($1,n|tape_5($1)),$0),$0),$0))
example_end

Sent: good night dear .
Sem: lambda $0_{r}.and(and(adj|good_1($0),n|night_2($0)),co|dear_3($0))
example_end

Sent: they 're on the bed Adam .
Sem: lambda $0_{r}.prep|on_3(det:art|the_4($1,n|bed_5($1)),pro:sub|they_1,$0)
example_end

Sent: what color are yours ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:poss|yours_4,n|color_2(pro:poss|yours_4,$0))
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: what color is that one in your hand ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4($2,att(pro:indef|one_5,prep|in_6(det:poss|your_7($3,n|hand_8($3))),$2)),n|color_2(pro:dem|that_4($2,att(pro:indef|one_5,prep|in_6(det:poss|your_7($3,n|hand_8($3))),$2)),$0))
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: this is black ?
Sem: lambda $0_{r}.Q(n|black_3(pro:dem|this_1,$0))
example_end

Sent: this is yellow .
Sem: lambda $0_{r}.n|yellow_3(pro:dem|this_1,$0)
example_end

Sent: no you come over here and throw over there .
Sem: lambda $0_{r}.and(and(and(v|throw_7(pro:per|you_2,$0),adv|over_4(adv|here_5($0))),adv|over_8(adv|there_9($0))),co|no_1($0))
example_end

Sent: see if you can get your spears onto the bed .
Sem: lambda $0_{r}.v|see_1(you,lambda $1_{r}.mod|can_4(and(v|get_5(pro:per|you_3,det:poss|your_6($2,n|spear-pl_7($2)),$1),prep|onto_8(det:art|the_9($3,n|bed_10($3)),$1)),$1),$0)
example_end

Sent: why would you throw bugs ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|throw_4(pro:per|you_3,BARE($1,n|bug-pl_5($1)),$0),$2($0)),$0)
example_end

Sent: bugs try to get your spear ?
Sem: lambda $0_{r}.Q(v|try_2(BARE($1,n|bug-pl_1($1)),lambda $2_{r}.v|get_4(BARE($3,n|bug-pl_1($3)),det:poss|your_5($4,n|spear_6($4)),$2),$0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: you have_to come back here .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|come_4(pro:per|you_1,$1),$0)
example_end

Sent: why would you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: my turn .
Sem: det:poss|my_1($0,n|turn_2($0))
example_end

Sent: Adam wanted to know the other day where the sun went when night came and why the rain was wet .
Sem: lambda $2_{e}.lambda $0_{r}.v|want-past_2(n:prop|adam_1,lambda $1_{r}.$2(part|wet-pastp_20(n:prop|adam_1,$1)),$0)
example_end

Sent: on the dresser .
Sem: prep|on_1(det:art|the_2($0,n|dresser_3($0)))
example_end

Sent: yours went on the bed .
Sem: lambda $0_{r}.and(v|go-past_2(pro:poss|yours_1,$0),prep|on_3(det:art|the_4($1,n|bed_5($1)),$0))
example_end

Sent: let 's play what again ?
Sem: lambda $2_{e}.lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|play_3(pro:obj|~us_2,$2,$1),adv|again_5($1)),$0)
example_end

Sent: I wasn 't looking .
Sem: lambda $0_{r}.not(aux|be_2(part|look-presp_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: put Ursula 's coat back up on the bed please .
Sem: lambda $0_{r}.and(and(and(v|put-zero_1(you,n:prop|ursula_2's($1,n|coat_4($1)),$0),adv|back_5(adv|up_6($0))),prep|on_7(det:art|the_8($2,n|bed_9($2)),$0)),co|please_10($0))
example_end

Sent: you knocked it down .
Sem: lambda $0_{r}.and(v|knock-past_2(pro:per|you_1,pro:per|it_3,$0),adv|down_4($0))
example_end

Sent: throw on the bed Adam .
Sem: lambda $0_{r}.and(v|throw_1(you,$0),prep|on_2(det:art|the_3($1,n|bed_4($1)),$0))
example_end

Sent: I threw mine on the bed .
Sem: lambda $0_{r}.and(v|throw-past_2(pro:sub|i_1,n|mine_3,$0),prep|on_4(det:art|the_5($1,n|bed_6($1)),$0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: would you go get that ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|get_4(pro:per|you_2,pro:dem|that_5,$0),$0))
example_end

Sent: because you hurt Paul .
Sem: lambda $0_{r}.v|hurt-zero_3(pro:per|you_2,n:prop|paul_4,$0)
example_end

Sent: why would you want to do that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,pro:dem|that_7,$1),$0),$2($0)),$0)
example_end

Sent: why would you want to hurt him ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|hurt-zero_6(pro:per|you_3,pro:obj|him_7,$1),$0),$2($0)),$0)
example_end

Sent: Adam now don 't bother him anymore .
Sem: lambda $0_{r}.not(mod|do_3(and(and(v|bother_5(you,pro:obj|him_6,$0),adv|now_2($0)),adv|anymore_7($0)),$0),$0)
example_end

Sent: he went way over there to play by himself .
Sem: lambda $0_{r}.and(v|go-past_2(pro:sub|he_1,lambda $1_{r}.and(n|play_7(pro:sub|he_1,$1),prep|by_8(pro:refl|himself_9,$1)),$0),prep|over_4(adv|way_3(adv|there_5($0))))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: why d you want to shoot him ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|shoot_6(pro:per|you_3,pro:obj|him_7,$1),$0),$2($0)),$0)
example_end

Sent: well he won 't like to play with you if you keep doing things like that to him .
Sem: lambda $0_{r}.and(not(conj|if_10(and(and(part|do-presp_13(pro:per|you_11,BARE($1,n|thing-pl_14($1)),$0),prep|like_15(pro:dem|that_16,$0)),prep|to_17(pro:obj|him_18,$0)),mod|will_3(v|like_5(pro:sub|he_2,lambda $2_{r}.and(v|play_7(pro:sub|he_2,$2),prep|with_8(pro:per|you_9,$2)),$0),$0)),$0),co|well_1($0))
example_end

Sent: I saw he can walk yes .
Sem: lambda $0_{r}.and(v|see-past_2(pro:sub|i_1,lambda $1_{r}.mod|can_4(v|walk_5(pro:sub|he_3,$1),$1),$0),co|yes_6($0))
example_end

Sent: what d you do with those little animals Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(pro:dem|those_6($2,and(adj|little_7($2),n|animal-pl_8($2))),$0)),$0)
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: where are the other ones ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,att(pro:indef|one-pl_5,BARE($2,qn|other_4($2)),$1)),$0))
example_end

Sent: let 's go find Perro .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|find_4(pro:obj|~us_2,n:prop|perro_5,$1),$0)
example_end

Sent: oh come on .
Sem: lambda $0_{r}.and(and(v|come_2(you,$0),adv|on_3($0)),co|oh_1($0))
example_end

Sent: what did you do with the animals Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(det:art|the_6($2,n|animal-pl_7($2)),$0)),$0)
example_end

Sent: it clip off ?
Sem: lambda $0_{r}.Q(and(v|clip_2(pro:per|it_1,$0),adv|off_3($0)))
example_end

Sent: what kind of bird is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_6,att(n|kind_2(pro:rel|that_6,$0),prep|of_3(BARE($2,n|bird_4($2)))))
example_end

Sent: what kind of bird is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|bird_4($2)))))
example_end

Sent: those are rockets ?
Sem: lambda $0_{r}.Q(n|rocket-pl_3(pro:dem|those_1,$0))
example_end

Sent: did you look up on top of the dresser ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(and(cop|look_3(pro:per|you_2,$0),adv|up_4($0)),prep|on_5(BARE($1,att(n|top_6($1),prep|of_7(det:art|the_8($2,n|dresser_9($2))))),$0)),$0))
example_end

Sent: I didn 't say that Adam .
Sem: lambda $0_{r}.not(mod|do_2(v|say_4(pro:sub|i_1,pro:rel|that_5,$0),$0),$0)
example_end

Sent: that 's different .
Sem: lambda $0_{r}.adj|different_3(pro:dem|that_1,$0)
example_end

Sent: that 's all !
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: it won 't stay .
Sem: lambda $0_{r}.not(mod|will_2(cop|stay_4(pro:per|it_1,$0),$0),$0)
example_end

Sent: we 're playing a little game .
Sem: lambda $0_{r}.aux|~be_2(part|play-presp_3(pro:sub|we_1,det:art|a_4($1,and(adj|little_5($1),n|game_6($1))),$0),$0)
example_end

Sent: stay on top of the ball game .
Sem: lambda $0_{r}.and(n|stay_1(you,$0),prep|on_2(BARE($1,att(n|top_3($1),prep|of_4(det:art|the_5($2,and_comp(n|ball_6($2),n|game_7($2)))))),$0))
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: that 's a lumber company truck .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(and_comp(n|lumber_4(pro:dem|that_1,$0),n|company_5(pro:dem|that_1,$0)),n|truck_6(pro:dem|that_1,$0)))
example_end

Sent: did you think that ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|think_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: Adam come and let me tie your shoes please .
Sem: lambda $0_{r}.and(v|let-zero_4(you,lambda $1_{r}.v|tie_6(pro:obj|me_5,det:poss|your_7($2,n|shoe-pl_8($2)),$1),$0),co|please_9($0))
example_end

Sent: I only tied one please .
Sem: lambda $0_{r}.and(and(v|tie-past_3(pro:sub|i_1,pro:indef|one_4,$0),adv|only_2($0)),co|please_5($0))
example_end

Sent: everything is what Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:indef|everything_1,$0)
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: yes you did Adam Smith .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: black shoes ?
Sem: BARE($0,Q(and(adj|black_1($0),n|shoe-pl_2($0))))
example_end

Sent: and what did Paul get ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|get_5(n:prop|paul_4,$1,$0),$0)
example_end

Sent: he curls his feet up so you can 't get the shoes on .
Sem: lambda $0_{r}.conj|so_6(not(mod|can_8(and(v|get_10(pro:per|you_7,BARE($1,n|shoe-pl_12_the_11($1)),$0),adv|on_13($0)),$0),$0),and(v|curl-3s_2(pro:sub|he_1,det:poss|his_3($2,n|foot-pl_4($2)),$0),adv|up_5($0)))
example_end

Sent: Adam where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_3(and(part|go-presp_5(pro:per|you_4,$0),$1($0)),$0)
example_end

Sent: he 's learning isn 't he ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(part|learn-presp_3(pro:sub|he_1,$0),$0),not(cop|be_4(pro:sub|he_6,$0),$0)))
example_end

Sent: what kind of toys do you think she must have in the bag ?
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.v|do_5(v|think_7(pro:per|you_6,lambda $1_{r}.mod|must_9(and(v|have_10(pro:sub|she_8,$2($3,att(n|kind_2($3),prep|of_3(BARE($4,n|toy-pl_4($4))))),$1),prep|in_11(det:art|the_12($5,n|bag_13($5)),$1)),$1),$0),$0)
example_end

Sent: oh Adam what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|this_5,$0),co|oh_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: d you think you can juggle ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.mod|can_5(v|juggle_6(pro:per|you_4,$1),$1),$0),$0))
example_end

Sent: oh what is this Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|this_4,$0),co|oh_1($0))
example_end

Sent: a pig !
Sem: det:art|a_1($0,n|pig_2($0))
example_end

Sent: does a pig have that in back ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|have_4(det:art|a_2($1,n|pig_3($1)),pro:dem|that_5,$0),prep|in_6(n|back_7($0))),$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: no it wasn 't a whale .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:per|it_2,n|whale_6(pro:per|it_2,$0)),$0),co|no_1($0))
example_end

Sent: what popped out ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|pop-past_2($1,$0),adv|out_3($0))
example_end

Sent: I don 't think anything did .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|do-past_6(pro:indef|anything_5,$1),$0),$0),$0)
example_end

Sent: a bee might try to get the nectar from the flower yes .
Sem: lambda $0_{r}.and(mod|might_3(v|try_4(det:art|a_1($1,n|bee_2($1)),lambda $2_{r}.and(v|get_6(det:art|a_1($1,n|bee_2($1)),det:art|the_7($3,n|nectar_8($3)),$2),prep|from_9(det:art|the_10($4,n|flower_11($4)),$2)),$0),$0),co|yes_12($0))
example_end

Sent: if it were real but this is a plastic flower .
Sem: lambda $0_{r}.and(adj|real_4(pro:per|it_2,$0),det:art|a_8(pro:dem|this_6,and(n|flower_10(pro:dem|this_6,$0),adj|plastic_9(pro:dem|this_6,$0))))
example_end

Sent: it 's an orchid .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|orchid_4(pro:per|it_1,$0))
example_end

Sent: perhaps if it were a real flower a bug might get in there too .
Sem: lambda $0_{r}.mod|might_10(conj|if_2(det:art|a_5(pro:per|it_3,and(n|flower_7(pro:per|it_3,$0),adj|real_6(pro:per|it_3,$0))),and(and(and(v|get_11(det:art|a_8($1,n|bug_9($1)),$0),adv|perhaps_1($0)),adv|in_12(adv|there_13($0))),post|too_14($0))),$0)
example_end

Sent: Adam who is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: a chatty doll .
Sem: det:art|a_1($0,and(adj|chat-dn_2($0),n|doll_3($0)))
example_end

Sent: which one Adam ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,det:num|one_2($1))
example_end

Sent: I think one did break in Cambridge .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|do-past_4(and(v|break_5(det:num|one_3,$1),prep|in_6(n:prop|cambridge_7,$1)),$1),$0)
example_end

Sent: Adam what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: good Adam .
Sem: BARE($0,adj|good_1($0))
example_end

Sent: you paste them together .
Sem: lambda $0_{r}.and(v|paste_2(pro:per|you_1,pro:obj|them_3,$0),adv|together_4($0))
example_end

Sent: you can make a bracelet with paper clips .
Sem: lambda $0_{r}.mod|can_2(and(v|make_3(pro:per|you_1,det:art|a_4($1,n|bracelet_5($1)),$0),prep|with_6(BARE($2,and_comp(n|paper_7($2),n|clip-pl_8($2))),$0)),$0)
example_end

Sent: what shall we do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|do_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: what d you think you could do with them Adam ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.mod|could_6(and(v|do_7(pro:per|you_5,pro:int|what_1,$1),prep|with_8(pro:obj|them_9,$1)),$1),$0),$0))
example_end

Sent: that 's a good idea .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: he has just one baby .
Sem: lambda $0_{r}.aux|have-3s_2(pro:sub|he_1,adv|just_3(BARE($1,det:num|one_4(n|baby_5($1)))),$0)
example_end

Sent: no he just likes to throw things .
Sem: lambda $0_{r}.and(and(v|like-3s_4(pro:sub|he_2,lambda $1_{r}.v|throw_6(pro:sub|he_2,BARE($2,n|thing-pl_7($2)),$1),$0),adv|just_3($0)),co|no_1($0))
example_end

Sent: do you like flowers ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,BARE($1,n|flower-pl_4($1)),$0),$0))
example_end

Sent: I think you have just one car .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|have_4(pro:per|you_3,adj|just_5(BARE($2,det:num|one_6(n|car_7($2)))),$1),$0)
example_end

Sent: you play over her .
Sem: lambda $0_{r}.and(v|play_2(pro:per|you_1,$0),adv|over_3(pro:obj|her_4,$0))
example_end

Sent: Adam we forgot to bring that flag home from nursery school .
Sem: lambda $0_{r}.v|forget-past_3(pro:sub|we_2,lambda $1_{r}.and(and(v|bring_5(pro:sub|we_2,pro:dem|that_6($2,n|flag_7($2)),$1),n|home_8($1)),prep|from_9(BARE($3,and_comp(n|nursery_10($3),n|school_11($3))),$1)),$0)
example_end

Sent: did you make one ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|make_3(pro:per|you_2,pro:indef|one_4,$0),$0))
example_end

Sent: no I don 't think that 's your train .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.det:poss|your_8(pro:rel|that_6,n|train_9(pro:rel|that_6,$1)),$0),$0),$0),co|no_1($0))
example_end

Sent: I don 't think you need your train .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:per|you_5,det:poss|your_7($2,n|train_8($2)),$1),$0),$0),$0)
example_end

Sent: you 've got that train .
Sem: lambda $0_{r}.aux|~have_2(part|get-pastp_3(pro:per|you_1,pro:dem|that_4($1,n|train_5($1)),$0),$0)
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: just put your mouth on there a little .
Sem: lambda $0_{r}.and(and(and(v|put-zero_2(you,det:poss|your_3($1,n|mouth_4($1)),$0),adv|just_1($0)),prep|on_5(adv|there_6($0))),adj|little_8($0))
example_end

Sent: don 't cover the hole .
Sem: lambda $0_{r}.not(mod|do_1(v|cover_3(you,det:art|the_4($1,n|hole_5($1)),$0),$0),$0)
example_end

Sent: I was just doing this .
Sem: lambda $0_{r}.cop|be-past_2(and(part|do-presp_4(pro:sub|i_1,pro:dem|this_5,$0),adv|just_3($0)),$0)
example_end

Sent: come away Paul .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|away_2($0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: in the hace ?
Sem: Q(prep|in_1(det:art|the_2($0,chi|hace_3($0))))
example_end

Sent: no I don 't think they say the hace .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|say_7(pro:sub|they_6,det:art|the_8($2,chi|hace_9($2)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: I think they say the face .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|say_4(pro:sub|they_3,det:art|the_5($2,n|face_6($2)),$1),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: like a rocket ?
Sem: Q(prep|like_1(det:art|a_2($0,n|rocket_3($0))))
example_end

Sent: no what does that mean ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do-3s_3(adj|mean_5(pro:dem|that_4,$1,$0),$0),co|no_1($0))
example_end

Sent: I think he makes up his own newscasts .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|make-3s_4_up_5(pro:sub|he_3,det:poss|his_6($2,and(adj|own_7($2),n|newscast-pl_8($2))),$1),$0)
example_end

Sent: what d you say about Tallahassee ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|say_4(pro:per|you_3,$1,$0),prep|about_5(n:prop|tallahassee_6,$0)),$0)
example_end

Sent: oh has a hassy boy .
Sem: lambda $0_{r}.and(v|have-3s_2(you,det:art|a_3($1,and(chi|hassy_4($1),n|boy_5($1))),$0),co|oh_1($0))
example_end

Sent: Adam what 's a hassy boy .
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_4($2,and(chi|hassy_5($2),n|boy_6($2))),$0)
example_end

Sent: what 's a hassy ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,chi|hassy_4($2)),$0)
example_end

Sent: a genie back .
Sem: det:art|a_1($0,and_comp(n|genie_2($0),adv|back_3($0)))
example_end

Sent: what 's a genie ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|genie_4($2)),$0)
example_end

Sent: what kind of statue ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|statue_4($2)))))
example_end

Sent: yes he was .
Sem: lambda $0_{r}.and(cop|be-past_3(pro:sub|he_2,$0),co|yes_1($0))
example_end

Sent: about Tallahassee .
Sem: prep|about_1(n:prop|tallahassee_2)
example_end

Sent: I don 't think she really walks .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(n|walk-pl_7(pro:sub|she_5,$1),adv|real-dadj_6($1)),$0),$0),$0)
example_end

Sent: you didn 't finish telling Ursula about the American flag that you made because it 's whose birthday tomorrow ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|finish_4(pro:per|you_1,lambda $1_{r}.and(part|tell-presp_5(pro:per|you_1,n:prop|ursula_6,$1),prep|about_7(det:art|the_8($2,and(n:prop|american_9($2),n|flag_10($2))),$1)),$0),$0),$0))
example_end

Sent: it 's yours ?
Sem: lambda $0_{r}.Q(pro:poss|yours_3(pro:per|it_1,$0))
example_end

Sent: why 're you going to do that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,pro:dem|that_7,$1),$0),$2($0)),$0)
example_end

Sent: Adam I think Mommy broke the dolly .
Sem: lambda $0_{r}.v|think_3(pro:sub|i_2,lambda $1_{r}.v|break-past_5(n:prop|mommy_4,det:art|the_6($2,n|doll-dim_7($2)),$1),$0)
example_end

Sent: broke the leg off .
Sem: lambda $0_{r}.and(v|break-past_1(you,det:art|the_2($1,n|leg_3($1)),$0),adv|off_4($0))
example_end

Sent: what 're you doing Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: but you can have a pencil Adam .
Sem: lambda $0_{r}.mod|can_3(v|have_4(pro:per|you_2,det:art|a_5($1,n|pencil_6($1)),$0),$0)
example_end

Sent: would you like some paper ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,qn|some_4($1,n|paper_5($1)),$0),$0))
example_end

Sent: say yes please .
Sem: lambda $0_{r}.co|say_1(you,BARE($1,and_comp(co|yes_2($1),co|please_3($1))),$0)
example_end

Sent: she can 't hear your head shake .
Sem: lambda $0_{r}.not(mod|can_2(v|hear_4(pro:sub|she_1,lambda $1_{r}.n|shake_7(det:poss|your_5($2,n|head_6($2)),$1),$0),$0),$0)
example_end

Sent: did I put that in there ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|put-zero_3(pro:sub|i_2,pro:dem|that_4,$0),prep|in_5(adv|there_6($0))),$0))
example_end

Sent: all set .
Sem: BARE($0,qn|all_1(n|set_2($0)))
example_end

Sent: why are you so tired ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|tire-pastp_5(pro:per|you_3,$0),$1($0)),adv|so_4($0)),$0)
example_end

Sent: that dolly was made in Italy .
Sem: lambda $0_{r}.aux|be-past_3(and(part|make-pastp_4(pro:dem|that_1($1,n|doll-dim_2($1)),$0),prep|in_5(n:prop|italy_6,$0)),$0)
example_end

Sent: to be sold in the stores .
Sem: lambda $0_{r}.aux|be_2(and(part|sell-pastp_3(you,$0),prep|in_4(det:art|the_5($1,n|store-pl_6($1)),$0)),$0)
example_end

Sent: you had an accident .
Sem: lambda $0_{r}.v|have-past_2(pro:per|you_1,det:art|a_3($1,n|accident_4($1)),$0)
example_end

Sent: your train fell off the track .
Sem: lambda $0_{r}.and(v|fall-past_3(det:poss|your_1($1,n|train_2($1)),$0),prep|off_4(det:art|the_5($2,n|track_6($2)),$0))
example_end

Sent: Jack fell down and broke his crown .
Sem: lambda $0_{r}.and(v|break-past_5(n:prop|jack_1,det:poss|his_6($1,n|crown_7($1)),$0),adv|down_3($0))
example_end

Sent: you did a long long time ago .
Sem: lambda $0_{r}.and(v|do-past_2(pro:per|you_1,$0),adv|ago_7(det:art|a_3($1,and(adj|long_5($1),and(adj|long_4($1),n|time_6($1)))),$0))
example_end

Sent: mhm that people bring .
Sem: lambda $0_{r}.and(v|bring_4(BARE($1,n|person-pl_3($1)),$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: what was it doing ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-past_2(part|do-presp_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: oh it 's an airplane .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|airplane_5(pro:per|it_2,$0)),co|oh_1($0))
example_end

Sent: what is that turning ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: yes it may knock Paul .
Sem: lambda $0_{r}.and(mod|may_3(v|knock_4(pro:per|it_2,n:prop|paul_5,$0),$0),co|yes_1($0))
example_end

Sent: no he 's saying I think that would be nice to eat .
Sem: lambda $0_{r}.and(aux|~be_3(part|say-presp_4(pro:sub|he_2,lambda $1_{r}.v|think_6(pro:sub|i_5,lambda $2_{r}.mod|will-cond_8(adj|nice_10(pro:dem|that_7,lambda $3_{r}.v|eat_12(pro:dem|that_7,$3),$2),$2),$1),$0),$0),co|no_1($0))
example_end

Sent: it 's a car horn .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|car_4(pro:per|it_1,$0),n|horn_5(pro:per|it_1,$0)))
example_end

Sent: it sounds like the horn is stuck .
Sem: lambda $0_{r}.prep|like_3(aux|be-3s_6(part|stick-pastp_7(det:art|the_4($1,n|horn_5($1)),$0),$0),v|sound-3s_2(pro:per|it_1,$0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: it may pop .
Sem: lambda $0_{r}.mod|may_2(n|pop_3(pro:per|it_1,$0),$0)
example_end

Sent: you 're going to take the broken doll to the shop on the airplane .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|take_5(pro:per|you_1,det:art|the_6($2,and(part|break-pastp_7($2),n|doll_8($2))),$1),prep|to_9(det:art|the_10($3,att(n|shop_11($3),prep|on_12(det:art|the_13($4,n|airplane_14($4))))),$1)),$0),$0)
example_end

Sent: and who is he ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|he_4,$0)
example_end

Sent: well why did you give him the broken doll ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(v|give_5(pro:per|you_4,det:art|the_7($1,and(part|break-pastp_8($1),n|doll_9($1))),pro:obj|him_6,$0),$2($0)),$0),co|well_1($0))
example_end

Sent: the salesman who breaks dolls .
Sem: det:art|the_1($0,n|salesman_2($0))
example_end

Sent: now come over here with it Adam .
Sem: lambda $0_{r}.and(and(and(v|come_2(you,$0),adv|now_1($0)),adv|over_3(adv|here_4($0))),prep|with_5(pro:per|it_6,$0))
example_end

Sent: oh that 's nice .
Sem: lambda $0_{r}.and(adj|nice_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: what kind of fish did you catch ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-past_5(v|catch_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|fish_4($3))))),$0),$0)
example_end

Sent: a big fish .
Sem: det:art|a_1($0,and(adj|big_2($0),n|fish_3($0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: what kind of big fish is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_7,att(n|kind_2(pro:per|it_7,$0),prep|of_3(BARE($2,and(adj|big_4($2),n|fish_5($2))))))
example_end

Sent: oh it 's a large one .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,and(pro:indef|one_6(pro:per|it_2,$0),n|large_5(pro:per|it_2,$0))),co|oh_1($0))
example_end

Sent: that 's a small fish .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|fish_5(pro:dem|that_1,$0),adj|small_4(pro:dem|that_1,$0)))
example_end

Sent: oh a sword fish .
Sem: lambda $0_{r}.and(det:art|a_2($1,and_comp(n|sword_3($1),n|fish_4($1)),$0),co|oh_1($0))
example_end

Sent: oh what kind of fish is this ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|this_7,att(n|kind_3(pro:dem|this_7,$0),prep|of_4(BARE($2,n|fish_5($2))))),co|oh_1($0))
example_end

Sent: what was that breaking ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: what kind of fish is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_6,att(n|kind_2(pro:dem|this_6,$0),prep|of_3(BARE($2,n|fish_4($2)))))
example_end

Sent: you caught a brush ?
Sem: lambda $0_{r}.Q(v|catch-past_2(pro:per|you_1,det:art|a_3($1,n|brush_4($1)),$0))
example_end

Sent: we have enough fish for supper .
Sem: lambda $0_{r}.and(v|have_2(pro:sub|we_1,BARE($1,and(adj|enough_3($1),n|fish_4($1))),$0),prep|for_5(BARE($2,n|supper_6($2)),$0))
example_end

Sent: to my children .
Sem: prep|to_1(det:poss|my_2($0,n|child-pl_3($0)))
example_end

Sent: you might hurt his head .
Sem: lambda $0_{r}.mod|might_2(v|hurt-zero_3(pro:per|you_1,det:poss|his_4($1,n|head_5($1)),$0),$0)
example_end

Sent: you 're brushing his hair like a Beatle 's hair ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|brush-presp_3(pro:per|you_1,det:poss|his_4($1,n|hair_5($1)),$0),prep|like_6(n:prop|beatle_8's($2,n|hair_10($2)),$0)),$0))
example_end

Sent: the toy that rolls .
Sem: det:art|the_1($0,n|toy_2($0))
example_end

Sent: to eat the bird .
Sem: lambda $0_{r}.v|eat_2(you,det:art|the_3($1,n|bird_4($1)),$0)
example_end

Sent: that 's going to pop .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:rel|that_1,lambda $1_{r}.n|pop_5(pro:rel|that_1,$1),$0),$0)
example_end

Sent: your name .
Sem: det:poss|your_1($0,n|name_2($0))
example_end

Sent: no that 's a .
Sem: lambda $0_{r}.and(n:let|a_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: this is h .
Sem: lambda $0_{r}.n:let|h_3(pro:dem|this_1,$0)
example_end

Sent: yes that 's Hercules .
Sem: lambda $0_{r}.and(n:prop|hercules_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: Hercules begins with an h .
Sem: lambda $0_{r}.and(v|begin-3s_2(n:prop|hercules_1,$0),prep|with_3(det:art|a_4($1,n:let|h_5($1)),$0))
example_end

Sent: your name begins with a a .
Sem: lambda $0_{r}.and(v|begin-3s_3(det:poss|your_1($1,n|name_2($1)),$0),prep|with_4(det:art|a_5($2,n:let|a_6($2)),$0))
example_end

Sent: Paul 's name begins with a p .
Sem: lambda $0_{r}.and(v|begin-3s_4(n:prop|paul_1's($1,n|name_3($1)),$0),prep|with_5(det:art|a_6($2,n:let|p_7($2)),$0))
example_end

Sent: a d a m .
Sem: BARE($0,n:let|a_1($0))
example_end

Sent: no it seems that something must have been broken .
Sem: lambda $0_{r}.and(pro:rel|that_4(aux|be-pastp_8(aux|have_7(mod|must_6(part|break-pastp_9(pro:indef|something_5,$0),$0),$0),$0),cop|seem-3s_3(pro:per|it_2,$0)),co|no_1($0))
example_end

Sent: I don 't think Robin would have been walking down Washington Street .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.aux|be-pastp_8(aux|have_7(mod|will-cond_6(and(part|walk-presp_9(n:prop|robin_5,$1),prep|down_10(BARE($2,and_comp(n:prop|washington_11($2),n:prop|street_12($2))),$1)),$1),$1),$1),$0),$0),$0)
example_end

Sent: you thought you had it .
Sem: lambda $0_{r}.v|think-past_2(pro:per|you_1,lambda $1_{r}.v|have-past_4(pro:per|you_3,pro:per|it_5,$1),$0)
example_end

Sent: I don 't know who broke it .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|break-past_6(pro:int|who_5,pro:per|it_7,$1),$0),$0),$0)
example_end

Sent: no I didn 't break it .
Sem: lambda $0_{r}.and(not(mod|do_3(v|break_5(pro:sub|i_2,pro:per|it_6,$0),$0),$0),co|no_1($0))
example_end

Sent: you didn 't break it .
Sem: lambda $0_{r}.not(mod|do_2(v|break_4(pro:per|you_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: it looks like the one that was on our rug that came back from the rug cleaning company .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|the_4($1,pro:indef|one_5($1)),$0))
example_end

Sent: this been wrapped on here .
Sem: lambda $0_{r}.aux|be-pastp_2(and(part|wrap-pastp_3(pro:dem|this_1,$0),prep|on_4(adv|here_5($0))),$0)
example_end

Sent: and the company man come ?
Sem: lambda $0_{r}.Q(v|come_5(det:art|the_2($1,and_comp(n|company_3($1),n|man_4($1))),$0))
example_end

Sent: the mailman ?
Sem: BARE($0,Q(det:art|the_1($1,n|mail+man_2($1),$0)))
example_end

Sent: an advertisement ?
Sem: BARE($0,Q(det:art|a_1($1,n|advertisement_2($1),$0)))
example_end

Sent: what 're they advertising ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|advertise-presp_4(pro:sub|they_3,$1,$0),$0)
example_end

Sent: careful careful .
Sem: lambda $0_{r}.and(co|careful_1($0),co|careful_2($0))
example_end

Sent: you don 't use your fishing rod like that .
Sem: lambda $0_{r}.not(mod|do_2(and(v|use_4(pro:per|you_1,det:poss|your_5($1,and_comp(part|fish-presp_6($1),n|rod_7($1))),$0),prep|like_8(pro:dem|that_9,$0)),$0),$0)
example_end

Sent: for catching fish .
Sem: lambda $0_{r}.part|catch-presp_2(you,BARE($1,n|fish_3($1)),$0)
example_end

Sent: the Indians tied him up .
Sem: lambda $0_{r}.and(v|tie-past_3(det:art|the_1($1,n:prop|indians_2($1)),pro:obj|him_4,$0),adv|up_5($0))
example_end

Sent: why would you tie the poor Indians up ?
Sem: lambda $4_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|tie_4(pro:per|you_3,det:art|the_5($1,att(BARE($2,n:prop|indians_7($2)),BARE($3,adj|poor_6($3)),$1)),$0),$4($0)),adv|up_8($0)),$0)
example_end

Sent: because he tied the cowboy up ?
Sem: lambda $0_{r}.Q(and(v|tie-past_3(pro:sub|he_2,det:art|the_4($1,n|cow+boy_5($1)),$0),adv|up_6($0)))
example_end

Sent: why are they going to do that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:sub|they_3,lambda $1_{r}.v|do_6(pro:sub|they_3,pro:dem|that_7,$1),$0),$2($0)),$0)
example_end

Sent: those are baby fish .
Sem: lambda $0_{r}.and(n|fish_4(pro:dem|those_1,$0),n|baby_3(pro:dem|those_1,$0))
example_end

Sent: why would you put that in your mouth ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|put-zero_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),prep|in_6(det:poss|your_7($2,n|mouth_8($2)),$0)),$0)
example_end

Sent: why would you put that in your mouth ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|put-zero_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),prep|in_6(det:poss|your_7($2,n|mouth_8($2)),$0)),$0)
example_end

Sent: these go on paper that you put in notebooks .
Sem: lambda $0_{r}.and(v|go_2(pro:dem|these_1,$0),prep|on_3(BARE($1,n|paper_4($1)),$0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: you play on this side .
Sem: lambda $0_{r}.and(v|play_2(pro:per|you_1,$0),prep|on_3(pro:dem|this_4($1,n|side_5($1)),$0))
example_end

Sent: American pole ?
Sem: BARE($0,Q(and(n:prop|american_1($0),n|pole_2($0))))
example_end

Sent: what 're you doing Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: Adam what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: if you break the pencil what will you have_to write with ?
Sem: lambda $3_{e}.lambda $0_{r}.mod|will_7(conj|if_1(v|break_3(pro:per|you_2,det:art|the_4($1,n|pencil_5($1)),$0),mod:aux|have_to_9(pro:per|you_8,lambda $2_{r}.v|write_11($3,$2),$0)),$0)
example_end

Sent: how could you write with it if you break it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.conj|if_7(v|break_9(pro:per|you_8,pro:per|it_10,$0),mod|could_2(and(and(v|write_4(pro:per|you_3,$0),$1($0)),prep|with_5(pro:per|it_6,$0)),$0))
example_end

Sent: I don 't think that would work .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|will-cond_6(v|work_7(pro:rel|that_5,$1),$1),$0),$0),$0)
example_end

Sent: don 't break the pencil .
Sem: lambda $0_{r}.not(mod|do_1(v|break_3(you,det:art|the_4($1,n|pencil_5($1)),$0),$0),$0)
example_end

Sent: no you don 't know what to do with pencils any more .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|know_5(pro:per|you_2,lambda $1_{r}.and(v|do_8(_,pro:int|what_6,$1),prep|with_9(BARE($2,n|pencil-pl_10($2)),$1)),$0),qn|any_11(pro:indef|more_12($0))),$0),$0),co|no_1($0))
example_end

Sent: no Mommy doesn 't let you play with pencils anymore does she ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(and(v|let-zero_5(n:prop|mommy_2,lambda $1_{r}.and(v|play_7(pro:per|you_6,$1),prep|with_8(BARE($2,n|pencil-pl_9($2)),$1)),$0),adv|anymore_10($0)),$0),$0),v|do-3s_11(pro:sub|she_12,$0)),co|no_1($0)))
example_end

Sent: why would you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: for you ?
Sem: Q(conj|for_1(pro:per|you_2))
example_end

Sent: would you like a house ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,n|house_5($1)),$0),$0))
example_end

Sent: shall we close the door ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|close_3(pro:sub|we_2,det:art|the_4($1,n|door_5($1)),$0),$0))
example_end

Sent: I was talking to your Mother .
Sem: lambda $0_{r}.aux|be-past_2(and(part|talk-presp_3(pro:sub|i_1,$0),prep|to_4(det:poss|your_5($1,n:prop|mother_6($1)),$0)),$0)
example_end

Sent: you must have been so hungry Adam .
Sem: lambda $0_{r}.aux|have_3(mod|must_2(adv|so_5(adj|hungry_6(pro:per|you_1,$0)),$0),$0)
example_end

Sent: what did you have for lunch at school today ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(and(and(v|have_4(pro:per|you_3,$1,$0),prep|for_5(BARE($2,n|lunch_6($2)),$0)),prep|at_7(BARE($3,n|school_8($3)),$0)),adv:tem|today_9($0)),$0)
example_end

Sent: if I were you ?
Sem: lambda $0_{r}.Q(pro:per|you_4(pro:sub|i_2,$0))
example_end

Sent: why does your tummy cry ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|cry_5(det:poss|your_3($1,n|tummy_4($1)),$0),$2($0)),$0)
example_end

Sent: to eat ?
Sem: lambda $0_{r}.Q(v|eat_2(you,$0))
example_end

Sent: you had two lunches already .
Sem: lambda $0_{r}.and(v|have-past_2(pro:per|you_1,BARE($1,det:num|two_3(n|lunch-pl_4($1))),$0),adv|already_5($0))
example_end

Sent: why d you want something to eat ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|eat_7(pro:indef|something_5,$1),$0),$2($0)),$0)
example_end

Sent: oh you 're not peeking .
Sem: lambda $0_{r}.and(not(aux|~be_3(part|peek-presp_5(pro:per|you_2,$0),$0),$0),co|oh_1($0))
example_end

Sent: don 't you peek then until you ask her .
Sem: lambda $0_{r}.not(conj|until_6(v|ask_8(pro:per|you_7,_,pro:obj|her_9,$0),mod|do_1(and(and(v|peek_4(you,$0),pro:per|you_3($0)),adv:tem|then_5($0)),$0)),$0)
example_end

Sent: did you show Urs your art gallery ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:poss|your_5($1,and_comp(n|art_6($1),n|gallery_7($1))),n:prop|ursula_4,$0),$0)
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: did you show her your basket ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:poss|your_5($1,n|basket_6($1)),det:poss|her_4,$0),$0)
example_end

Sent: where 's the hole Adam ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|hole_4($1)),$0))
example_end

Sent: where 's one hole ?
Sem: lambda $0_{r}.Q(adv:int|where_1(BARE($1,det:num|one_3(n|hole_4($1))),$0))
example_end

Sent: oh you mean one place to put things .
Sem: lambda $0_{r}.and(v|mean_3(pro:per|you_2,BARE($1,rel(det:num|one_4(n|place_5($1)),lambda $2_{r}.v|put-zero_7(_,BARE($3,n|thing-pl_8($3)),$2))),$0),co|oh_1($0))
example_end

Sent: what are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_3,$0)
example_end

Sent: so you can turn the train around in two places .
Sem: lambda $0_{r}.and(mod|can_3(and(and(v|turn_4(pro:per|you_2,det:art|the_5($1,n|train_6($1)),$0),adv|around_7($0)),prep|in_8(BARE($2,det:num|two_9(n|place-pl_10($2))),$0)),$0),co|so_1($0))
example_end

Sent: did you tell Urs what we did Sunday Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_1(v|tell_3(pro:per|you_2,$1,n:prop|ursula_4,$0),$0)
example_end

Sent: what else did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|do_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: you did nothing ?
Sem: lambda $0_{r}.Q(v|do-past_2(pro:per|you_1,pro:indef|nothing_3,$0))
example_end

Sent: you have_to attach it with train tracks .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|attach_4(pro:per|you_1,$1),$0)
example_end

Sent: the train track 's in the box .
Sem: lambda $0_{r}.prep|in_5(det:art|the_6($1,n|box_7($1)),det:art|the_1($2,and_comp(n|train_2($2),n|track_3($2))),$0)
example_end

Sent: you could guess .
Sem: lambda $0_{r}.mod|could_2(v|guess_3(pro:per|you_1,$0),$0)
example_end

Sent: well you 're close .
Sem: lambda $0_{r}.and(adj|close_4(pro:per|you_2,$0),co|well_1($0))
example_end

Sent: but it 's something that goes along with the train .
Sem: lambda $0_{r}.pro:indef|something_4(pro:per|it_2,$0)
example_end

Sent: must be a railroad crossing sign .
Sem: det:art|a_3($0,and_comp(and_comp(n|railroad_4($0),part|cross-presp_5($0)),n|sign_6($0)))
example_end

Sent: what did you tell me ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|tell_4(pro:per|you_3,$1,pro:obj|me_5,$0),$0)
example_end

Sent: a sponge .
Sem: det:art|a_1($0,n|sponge_2($0))
example_end

Sent: maybe to clean the track .
Sem: lambda $0_{r}.and(v|clean_3(you,det:art|the_4($1,n|track_5($1)),$0),adv|maybe_1($0))
example_end

Sent: the other set of wheels must have come off .
Sem: lambda $0_{r}.v|have_7(mod|must_6(and(v|come_8(det:art|the_1($1,att(and(qn|other_2($1),n|set_3($1)),prep|of_4(BARE($2,n|wheel-pl_5($2))))),$0),adv|off_9($0)),$0),$0)
example_end

Sent: perhaps the wheels are down in the box .
Sem: lambda $0_{r}.adv|down_5(co|perhaps_1(prep|in_6(det:art|the_7($1,n|box_8($1)),det:art|the_2($2,n|wheel-pl_3($2)),$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: the black tracks don 't belong to the same set .
Sem: lambda $0_{r}.not(mod|do_4(and(v|belong_6(det:art|the_1($1,and_comp(n|black_2($1),n|track-pl_3($1))),$0),prep|to_7(det:art|the_8($2,and(adj|same_9($2),n|set_10($2))),$0)),$0),$0)
example_end

Sent: why don 't you know how ?
Sem: lambda $2_{<r,t>}.lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|know_5(pro:per|you_4,$0),$1($0)),$2($0)),$0),$0)
example_end

Sent: what bag dear ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|bag_2($1))
example_end

Sent: why d you need a bag ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:per|you_3,det:art|a_5($1,n|bag_6($1)),$0),$2($0)),$0)
example_end

Sent: you almost stepped on your finger .
Sem: lambda $0_{r}.and(and(part|step-pastp_3(pro:per|you_1,$0),adv|almost_2($0)),prep|on_4(det:poss|your_5($1,n|finger_6($1)),$0))
example_end

Sent: a finger toe .
Sem: det:art|a_1($0,and_comp(n|finger_2($0),n|toe_3($0)))
example_end

Sent: what 's a finger toe ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,and_comp(n|finger_4($2),n|toe_5($2))),$0)
example_end

Sent: finger people .
Sem: BARE($0,and_comp(v|finger_1($0),n|person-pl_2($0)))
example_end

Sent: what kind of people are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_6,att(n|kind_2(pro:dem|those_6,$0),prep|of_3(BARE($2,n|person-pl_4($2)))))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh when you used to be in Italy .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(v|use-past_4(pro:per|you_3,lambda $1_{r}.and(cop|be_6(pro:per|you_3,$1),prep|in_7(n:prop|italy_8,$1)),$0),$2($0)),co|oh_1($0))
example_end

Sent: oh when did you go to Italy ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(and(v|go_5(pro:per|you_4,$0),$1($0)),prep|to_6(n:prop|italy_7,$0)),$0),co|oh_1($0))
example_end

Sent: what did you see in Italy ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,$1,$0),prep|in_5(n:prop|italy_6,$0)),$0)
example_end

Sent: lions and Italy tigers ?
Sem: BARE($0,Q(and_comp(n:prop|italy_3($0),n|tiger-pl_4($0))))
example_end

Sent: Italian tigers ?
Sem: BARE($0,Q(and(n:prop|italian_1($0),n|tiger-pl_2($0))))
example_end

Sent: how are they different ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(adj|different_4(pro:sub|they_3,$0))
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: do you know an Italian song ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,det:art|a_4($1,and(n:prop|italian_5($1),n|song_6($1))),$0),$0))
example_end

Sent: do you know anything about Italy at all ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,att(att(pro:indef|anything_4,prep|about_5(n:prop|italy_6)),prep|at_7(BARE($1,pro:indef|all_8($1)))),$0),$0))
example_end

Sent: what d you know about Italy ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$1,$0),prep|about_5(n:prop|italy_6,$0)),$0)
example_end

Sent: somebody told you about Italy ?
Sem: lambda $0_{r}.Q(and(v|tell-past_2(pro:indef|somebody_1,_,pro:per|you_3,$0),prep|about_4(n:prop|italy_5,$0)))
example_end

Sent: could you tell us about Italy please ?
Sem: lambda $0_{r}.Q(and(mod|could_1(and(v|tell_3(pro:per|you_2,_,pro:obj|us_4,$0),prep|about_5(n:prop|italy_6,$0)),$0),co|please_7($0)))
example_end

Sent: I 'd like to know .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:sub|i_1,lambda $1_{r}.v|know_5(pro:sub|i_1,$1),$0),$0)
example_end

Sent: come on let 's finish the train .
Sem: lambda $0_{r}.and(v:obj|let_3(you,lambda $1_{r}.v|finish_5(pro:obj|~us_4,det:art|the_6($2,n|train_7($2)),$1),$0),and(v|come_1(you,$0),adv|on_2($0)))
example_end

Sent: a motor boat on the street ?
Sem: BARE($0,Q(det:art|a_1($1,att(and_comp(n|motor_2($1),n|boat_3($1)),prep|on_4(det:art|the_5($2,n|street_6($2)))),$0)))
example_end

Sent: what was a motor boat doing out on the street ?
Sem: lambda $2_{e}.lambda $0_{r}.cop|be-past_2(and(part|do-presp_6(det:art|a_3($1,and_comp(n|motor_4($1),n|boat_5($1))),$2,$0),adv|out_7(prep|on_8(det:art|the_9($3,n|street_10($3)),$0))),$0)
example_end

Sent: I didn 't hear a motor boat .
Sem: lambda $0_{r}.not(mod|do_2(v|hear_4(pro:sub|i_1,det:art|a_5($1,and_comp(n|motor_6($1),n|boat_7($1))),$0),$0),$0)
example_end

Sent: I thought you were putting them together .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.aux|be-past_4(and(part|put-presp_5(pro:per|you_3,pro:obj|them_6,$1),adv|together_7($1)),$1),$0)
example_end

Sent: I should think so .
Sem: lambda $0_{r}.mod|should_2(and(v|think_3(pro:sub|i_1,$0),co|so_4($0)),$0)
example_end

Sent: did you go outside at nursery school ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(and(v|go_3(pro:per|you_2,$0),adv|outside_4($0)),prep|at_5(BARE($1,and_comp(n|nursery_6($1),n|school_7($1))),$0)),$0))
example_end

Sent: what did you do outside ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),adv|outside_5($0)),$0)
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you rode on the Dodge car ?
Sem: lambda $0_{r}.Q(and(v|ride-past_2(pro:per|you_1,$0),prep|on_3(det:art|the_4($1,and_comp(n:prop|dodge_5($1),n|car_6($1))),$0)))
example_end

Sent: oh it was a small one ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:per|it_2,and(pro:indef|one_6(pro:per|it_2,$0),adj|small_5(pro:per|it_2,$0))),co|oh_1($0)))
example_end

Sent: a small tricycle ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|small_2($1),n|tricycle_3($1)),$0)))
example_end

Sent: well people are born all over the world .
Sem: lambda $0_{r}.and(cop|be-pres_3(and(adj|born_4(BARE($1,n|person-pl_2($1)),$0),adv|all_5(prep|over_6(det:art|the_7($2,n|world_8($2)),$0))),$0),co|well_1($0))
example_end

Sent: you were born in America .
Sem: lambda $0_{r}.cop|be-past_2(and(adj|born_3(pro:per|you_1,$0),prep|in_4(n:prop|america_5,$0)),$0)
example_end

Sent: no you were born in Boston .
Sem: lambda $0_{r}.and(cop|be-past_3(and(adj|born_4(pro:per|you_2,$0),prep|in_5(n:prop|boston_6,$0)),$0),co|no_1($0))
example_end

Sent: because your mother and father live in Boston .
Sem: lambda $0_{r}.and(adj|live_6(det:poss|your_2($1,n|father_5($1)),$0),prep|in_7(n:prop|boston_8,$0))
example_end

Sent: Italian people yes .
Sem: lambda $0_{r}.and(and(n:prop|italian_1($0),n|person-pl_2($0)),co|yes_3($0))
example_end

Sent: how do you flash them ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|flash_4(pro:per|you_3,pro:obj|them_5,$0),$1($0)),$0)
example_end

Sent: it doesn 't seem to .
Sem: lambda $0_{r}.not(mod|do_2(cop|seem_4(pro:per|it_1,$0),$0),$0)
example_end

Sent: I think that 's a different train .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:dem|that_3,and(n|train_7(pro:dem|that_3,$1),adj|different_6(pro:dem|that_3,$1))),$0)
example_end

Sent: don 't you think so ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|think_4(pro:per|you_3,$0),co|so_5($0)),$0),$0))
example_end

Sent: what comes first on the train ?
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|come-3s_2($1,$0),adv|first_3($0)),prep|on_4(det:art|the_5($2,n|train_6($2)),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: well it could be that way .
Sem: lambda $0_{r}.and(mod|could_3(pro:dem|that_5(pro:per|it_2,n|way_6(pro:per|it_2,$0)),$0),co|well_1($0))
example_end

Sent: no turn it around .
Sem: lambda $0_{r}.and(and(n|turn_2(you,pro:per|it_3,$0),adv|around_4($0)),qn|no_1($0))
example_end

Sent: on the side .
Sem: prep|on_1(det:art|the_2($0,n|side_3($0)))
example_end

Sent: this way .
Sem: pro:dem|this_1($0,n|way_2($0))
example_end

Sent: it says stop and go .
Sem: lambda $0_{r}.v|say-3s_2(pro:per|it_1,lambda $1_{r}.v|go_5(you,$1),$0)
example_end

Sent: for the cars that are waiting to cross the track maybe .
Sem: adv|maybe_11(det:art|the_2($0,n|car-pl_3($0)))
example_end

Sent: well yes they do .
Sem: lambda $0_{r}.and(and(v|do_4(pro:sub|they_3,$0),co|well_1($0)),co|yes_2($0))
example_end

Sent: when there 's a train track across a street you have_to cross part of the train track .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(mod:aux|have_to_11(pro:per|you_10,lambda $1_{r}.adj|cross_13(pro:per|you_10,$1),$0),and(and(cop|~be_3(det:art|a_4($2,and_comp(n|train_5($2),n|track_6($2))),$0),$3($0)),prep|across_7(det:art|a_8($4,n|street_9($4)),$0)))
example_end

Sent: because they have a factory .
Sem: lambda $0_{r}.v|have_3(pro:sub|they_2,det:art|a_4($1,n|factory_5($1)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: are you doing it very carefully ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|do-presp_3(pro:per|you_2,pro:per|it_4,$0),adv|very_5(adv|care-dadj_6($0))),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I think that doesn 't go there .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.not(mod|do_4(and(v|go_6(pro:dem|that_3,$1),adv|there_7($1)),$1),$1),$0)
example_end

Sent: it 's stopped ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|stop-pastp_3(pro:per|it_1,$0),$0))
example_end

Sent: here 's a piece that isn 't broken .
Sem: lambda $0_{r}.pro:exist|here_1(det:art|a_3($1,n|piece_4($1)),$0)
example_end

Sent: you need some more track .
Sem: lambda $0_{r}.v|need_2(pro:per|you_1,qn|some_3($1,and(qn|more_4($1),n|track_5($1))),$0)
example_end

Sent: here 's a piece .
Sem: lambda $0_{r}.pro:exist|here_1(det:art|a_3($1,n|piece_4($1)),$0)
example_end

Sent: put it under the bridge .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|under_3(det:art|the_4($1,n|bridge_5($1)),$0))
example_end

Sent: it needs another piece of track .
Sem: lambda $0_{r}.v|need-3s_2(pro:per|it_1,qn|another_3($1,att(n|piece_4($1),prep|of_5(BARE($2,n|track_6($2))))),$0)
example_end

Sent: are you too tired ?
Sem: lambda $0_{r}.Q(adv|too_3(part|tire-pastp_4(pro:per|you_2,$0)))
example_end

Sent: I thought you said something about Italy .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.and(v|say-past_4(pro:per|you_3,pro:indef|something_5,$1),prep|about_6(n:prop|italy_7,$1)),$0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: I didn 't say I don 't have it .
Sem: lambda $0_{r}.not(mod|do_2(v|say_4(pro:sub|i_1,lambda $1_{r}.not(mod|do_6(v|have_8(pro:sub|i_5,pro:per|it_9,$1),$1),$1),$0),$0),$0)
example_end

Sent: did I ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:sub|i_2,$0))
example_end

Sent: let 's put this one on .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|put-zero_3(pro:obj|~us_2,pro:dem|this_4($2,pro:indef|one_5($2)),$1),adv|on_6($1)),$0)
example_end

Sent: it 's hard .
Sem: lambda $0_{r}.adj|hard_3(pro:per|it_1,$0)
example_end

Sent: you need some more track don 't you ?
Sem: lambda $0_{r}.Q(and(v|need_2(pro:per|you_1,qn|some_3($1,and(qn|more_4($1),n|track_5($1))),$0),not(mod|do_6(pro:per|you_8,$0),$0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: what 're you doing Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: they don 't fit on that set .
Sem: lambda $0_{r}.not(mod|do_2(and(v|fit-zero_4(pro:sub|they_1,$0),prep|on_5(pro:dem|that_6($1,v|set-zero_7($1)),$0)),$0),$0)
example_end

Sent: no but it doesn 't fit .
Sem: lambda $0_{r}.and(not(mod|do_4(v|fit-zero_6(pro:per|it_3,$0),$0),$0),co|no_1($0))
example_end

Sent: a meeting ?
Sem: BARE($0,Q(det:art|a_1($1,n:gerund|meet-presp_2($1),$0)))
example_end

Sent: I don 't hear Paul .
Sem: lambda $0_{r}.not(mod|do_2(v|hear_4(pro:sub|i_1,n:prop|paul_5,$0),$0),$0)
example_end

Sent: no that was someone on the street dear .
Sem: lambda $0_{r}.and(att(pro:indef|someone_4(pro:dem|that_2,$0),prep|on_5(det:art|the_6($1,n|street_7($1)))),qn|no_1($0))
example_end

Sent: talking I suppose .
Sem: lambda $0_{r}.v|suppose_3(pro:sub|i_2,lambda $1_{r}.part|talk-presp_1(you,$1),$0)
example_end

Sent: oh Adam why did you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do-past_4(and(v|do_6(pro:per|you_5,pro:dem|that_7,$0),$1($0)),$0),co|oh_1($0))
example_end

Sent: no I don 't think that 's the wrong way .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.det:art|the_8(pro:dem|that_6,and(n|way_10(pro:dem|that_6,$1),adj|wrong_9(pro:dem|that_6,$1))),$0),$0),$0),co|no_1($0))
example_end

Sent: if you don 't put that down that 's part of my bed .
Sem: lambda $0_{r}.conj|if_1(not(mod|do_3(and(v|put-zero_5(pro:per|you_2,pro:dem|that_6,$0),n|down_7($0)),$0),$0),att(n|part_10(pro:rel|that_8,$0),prep|of_11(det:poss|my_12($1,n|bed_13($1)))))
example_end

Sent: why d you want to shoot ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.co|shoot_6(pro:per|you_3,$1),$0),$2($0)),$0)
example_end

Sent: shoot cows ?
Sem: BARE($0,Q(and_comp(n|shoot_1($0),n|cow-pl_2($0))))
example_end

Sent: poor cows .
Sem: BARE($0,and(adj|poor_1($0),n|cow-pl_2($0)))
example_end

Sent: then what will you do for milk ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_3(and(and(v|do_5(pro:per|you_4,$1,$0),adv:tem|then_1($0)),prep|for_6(BARE($2,n|milk_7($2)),$0)),$0)
example_end

Sent: your automatic rifle .
Sem: det:poss|your_1($0,and(adj|automatic_2($0),n|rifle_3($0)))
example_end

Sent: no you can 't play with this this is part of my automatic bed .
Sem: lambda $0_{r}.and(and(not(mod|can_3(and(v|play_5(pro:per|you_2,$0),prep|with_6(pro:dem|this_7,$0)),$0),$0),att(n|part_10(pro:dem|this_8,$0),prep|of_11(det:poss|my_12($1,and(n|automatic_13($1),n|bed_14($1)))))),co|no_1($0))
example_end

Sent: no no Adam you don 't hit anybody with that .
Sem: lambda $0_{r}.and(not(mod|do_5(and(v|hit-zero_7(pro:per|you_4,pro:indef|anybody_8,$0),prep|with_9(pro:dem|that_10,$0)),$0),$0),co|no_1($0))
example_end

Sent: Adam don 't break it dear .
Sem: lambda $0_{r}.not(mod|do_2(v|break_4(you,pro:per|it_5,$0),$0),$0)
example_end

Sent: because it 's not yours .
Sem: lambda $0_{r}.not(pro:poss|yours_5(pro:per|it_2,$0),$0)
example_end

Sent: why would you want to pull that anyway ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|will-cond_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|pull_6(pro:per|you_3,pro:dem|that_7,$1),$0),$2($0)),$0),adv|anyway_8($0))
example_end

Sent: automatic bow and arrow ?
Sem: BARE($0,Q(and(adj|automatic_1($0),n|arrow_4($0))))
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: why d you need to flash the light ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:per|you_3,lambda $1_{r}.v|flash_6(pro:per|you_3,det:art|the_7($2,n|light_8($2)),$1),$0),$3($0)),$0)
example_end

Sent: lights flash ?
Sem: lambda $0_{r}.Q(n|flash_2(BARE($1,v|light-3s_1($1)),$0))
example_end

Sent: winter stop ?
Sem: BARE($0,Q(and_comp(n|winter_1($0),n|stop_2($0))))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: it 's not round ?
Sem: lambda $0_{r}.Q(not(v|round_4(pro:per|it_1,$0),$0))
example_end

Sent: you know how to put that in .
Sem: lambda $0_{r}.v|know_2(pro:per|you_1,lambda $1_{r}.and(and(v|put-zero_5(_,det:dem|that_6,$1),adv:int|how_3($1)),adv|in_7($1)),$0)
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: it 's stopped ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|stop-pastp_3(pro:per|it_1,$0),$0))
example_end

Sent: the sheriff ?
Sem: BARE($0,Q(det:art|the_1($1,n|sheriff_2($1),$0)))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: don 't do that Adam .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,det:dem|that_4,$0),$0),$0)
example_end

Sent: that 's no shovel .
Sem: lambda $0_{r}.not(n|shovel_4(pro:dem|that_1,$0),$0)
example_end

Sent: Adam you 're silly .
Sem: lambda $0_{r}.adj|silly_4(pro:per|you_2,$0)
example_end

Sent: are you silly ?
Sem: lambda $0_{r}.co|silly_3($0)
example_end

Sent: why don 't you go get your cards .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|go_5(pro:per|you_4,lambda $1_{r}.v|get_6(pro:per|you_4,det:poss|your_7($2,n|card-pl_8($2)),$1),$0),$3($0)),$0),$0)
example_end

Sent: yes you knocked that down .
Sem: lambda $0_{r}.and(and(v|knock-past_3(pro:per|you_2,pro:rel|that_4,$0),adv|down_5($0)),co|yes_1($0))
example_end

Sent: put it back up there .
Sem: lambda $0_{r}.and(and(v|put-zero_1(you,pro:per|it_2,$0),adv|back_3($0)),adv|up_4(adv|there_5($0)))
example_end

Sent: you may break that .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,pro:dem|that_4,$0),$0)
example_end

Sent: put it up on the dresser .
Sem: lambda $0_{r}.and(and(v|put-zero_1(you,pro:per|it_2,$0),adv|up_3($0)),prep|on_4(det:art|the_5($1,n|dresser_6($1)),$0))
example_end

Sent: what are you going to do with that ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),prep|with_7(pro:dem|that_8,$1)),$0),$0)
example_end

Sent: that 's enough being silly .
Sem: lambda $0_{r}.adj|enough_3(adj|silly_5(pro:dem|that_1,$0))
example_end

Sent: story about George Washington .
Sem: BARE($0,att(n|story_1($0),prep|about_2(n:prop|washington_4_george_3)))
example_end

Sent: did she tell you ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|tell_3(pro:sub|she_2,_,pro:per|you_4,$0),$0))
example_end

Sent: she did ?
Sem: lambda $0_{r}.Q(v|do-past_2(pro:sub|she_1,$0))
example_end

Sent: let 's have a race .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|have_3(pro:obj|~us_2,det:art|a_4($2,n|race_5($2)),$1),$0)
example_end

Sent: have a race ?
Sem: lambda $0_{r}.Q(v|have_1(you,det:art|a_2($1,n|race_3($1)),$0))
example_end

Sent: mine didn 't .
Sem: lambda $0_{r}.not(mod|do_2(n|mine_1,$0),$0)
example_end

Sent: your horse is for riding Adam .
Sem: lambda $0_{r}.and(cop|be-3s_3(det:poss|your_1($1,n|horse_2($1)),$0),prep|for_4(BARE($2,n:gerund|ride-presp_5($2)),$0))
example_end

Sent: you 're trying to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|try-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: don 't break it anymore dear .
Sem: lambda $0_{r}.not(mod|do_1(and(v|break_3(you,pro:per|it_4,$0),adv|anymore_5($0)),$0),$0)
example_end

Sent: what did I do to those ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:sub|i_3,$1,$0),prep|to_5(pro:dem|those_6,$0)),$0)
example_end

Sent: I put glue on them .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:sub|i_1,BARE($1,n|glue_3($1)),$0),prep|on_4(pro:obj|them_5,$0))
example_end

Sent: you put it together .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,pro:per|it_3,$0),adv|together_4($0))
example_end

Sent: why did you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: playing the banjo .
Sem: lambda $0_{r}.part|play-presp_1(you,det:art|the_2($1,n|banjo_3($1)),$0)
example_end

Sent: no you play the banjo .
Sem: lambda $0_{r}.and(v|play_3(pro:per|you_2,det:art|the_4($1,n|banjo_5($1)),$0),co|no_1($0))
example_end

Sent: they 're wrong ?
Sem: lambda $0_{r}.Q(adj|wrong_3(pro:sub|they_1,$0))
example_end

Sent: why are they wrong ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(adj|wrong_4(pro:sub|they_3,$0))
example_end

Sent: would you like to do a puzzle ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|do_5(pro:per|you_2,det:art|a_6($2,n|puzzle_7($2)),$1),$0),$0))
example_end

Sent: what puzzle would you like to do ?
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.mod|will-cond_3(v|like_5(pro:per|you_4,lambda $1_{r}.v|do_7(pro:per|you_4,$2($3,n|puzzle_2($3)),$1),$0),$0)
example_end

Sent: what puzzle is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|puzzle_2(pro:dem|that_4,$0))
example_end

Sent: I don 't know what puzzle that is .
Sem: lambda $2_{e}.lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.$2(pro:rel|that_7,n|puzzle_6(pro:rel|that_7,$1)),$0),$0),$0)
example_end

Sent: you have_to look .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.cop|look_4(pro:per|you_1,$1),$0)
example_end

Sent: why d you think that 's the wrong place in Italy when you 're not in Italy ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|when_12(not(and(cop|~be_14(pro:per|you_13,$0),prep|in_16(n:prop|italy_17,$0)),$0),v|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.det:art|the_7(pro:dem|that_5,att(and(n|place_9(pro:dem|that_5,$1),adj|wrong_8(pro:dem|that_5,$1)),prep|in_10(n:prop|italy_11))),$0),$2($0)),$0))
example_end

Sent: you have_to take them apart Adam .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|take_4(pro:per|you_1,$1),$0)
example_end

Sent: you have a broken leg .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,det:art|a_3($1,and(part|break-pastp_4($1),n|leg_5($1))),$0)
example_end

Sent: how did you get a broken leg ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|you_3,det:art|a_5($1,and(part|break-pastp_6($1),n|leg_7($1))),$0),$2($0)),$0)
example_end

Sent: no Adam you 've got parts of the sign on the floor there .
Sem: lambda $0_{r}.and(aux|~have_4(and(and(part|get-pastp_5(pro:per|you_3,BARE($1,att(n|part-pl_6($1),prep|of_7(det:art|the_8($2,n|sign_9($2))))),$0),prep|on_10(det:art|the_11($3,n|floor_12($3)),$0)),adv|there_13($0)),$0),co|no_1($0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: can 't you take them out ?
Sem: lambda $0_{r}.Q(not(mod|can_1(and(v|take_4(pro:per|you_3,pro:obj|them_5,$0),adv|out_6($0)),$0),$0))
example_end

Sent: have you ever seen a stretching man ?
Sem: lambda $0_{r}.Q(aux|have_1(and(part|see-pastp_4(pro:per|you_2,det:art|a_5($1,and(part|stretch-presp_6($1),n|man_7($1))),$0),adv|ever_3($0)),$0))
example_end

Sent: you have ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,$0))
example_end

Sent: where is a stretching office ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|a_3($1,and_comp(part|stretch-presp_4($1),n|office_5($1))),$0))
example_end

Sent: stretching arm .
Sem: lambda $0_{r}.part|stretch-presp_1(you,BARE($1,n|arm_2($1)),$0)
example_end

Sent: can you think about it ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|think_3(pro:per|you_2,$0),prep|about_4(pro:per|it_5,$0)),$0))
example_end

Sent: Mr Package ?
Sem: BARE($0,Q(n:prop|mr_1_package_2($0)))
example_end

Sent: does it look like anything you 've seen before ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(cop|look_3(_,pro:per|it_2,$0),conj|like_4(pro:indef|anything_5,$0)),$0))
example_end

Sent: he 's working with his father .
Sem: lambda $0_{r}.aux|~be_2(and(part|work-presp_3(pro:sub|he_1,$0),prep|with_4(det:poss|his_5($1,n|father_6($1)),$0)),$0)
example_end

Sent: he 's making something .
Sem: lambda $0_{r}.aux|~be_2(part|make-presp_3(pro:sub|he_1,pro:indef|something_4,$0),$0)
example_end

Sent: look at the things you can make .
Sem: lambda $0_{r}.cop|look_1(you,det:art|the_3($1,n|thing-pl_4_at_2($1)),$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: you have_to have wood .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|have_4(pro:per|you_1,$1),$0)
example_end

Sent: those are nice Adam .
Sem: lambda $0_{r}.adj|nice_3(pro:dem|those_1,$0)
example_end

Sent: what will I do with that ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_2(and(v|do_4(pro:sub|i_3,$1,$0),prep|with_5(pro:dem|that_6,$0)),$0)
example_end

Sent: I 'll let you use this .
Sem: lambda $0_{r}.mod|~will_2(v|let-zero_3(pro:sub|i_1,lambda $1_{r}.v|use_5(pro:per|you_4,pro:dem|this_6,$1),$0),$0)
example_end

Sent: it 's called a level .
Sem: lambda $0_{r}.aux|~be_2(part|call-pastp_3(_,det:art|a_4($1,n|level_5($1)),pro:per|it_1,$0),$0)
example_end

Sent: it 's a drill .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|drill_4(pro:per|it_1,$0))
example_end

Sent: you can make holes with it .
Sem: lambda $0_{r}.mod|can_2(and(v|make_3(pro:per|you_1,BARE($1,n|hole-pl_4($1)),$0),prep|with_5(pro:per|it_6,$0)),$0)
example_end

Sent: I think I might have something .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|might_4(v|have_5(pro:sub|i_3,BARE($2,pro:indef|something_6($2)),$1),$1),$0)
example_end

Sent: what are you making ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|make-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: why don 't you want to cut it ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|want_5(pro:per|you_4,lambda $1_{r}.v|cut-zero_7(pro:per|you_4,pro:per|it_8,$1),$0),$2($0)),$0),$0)
example_end

Sent: no you try it .
Sem: lambda $0_{r}.and(v|try_3(pro:per|you_2,pro:per|it_4,$0),co|no_1($0))
example_end

Sent: don 't put your fingers down there because it 's very sharp .
Sem: lambda $0_{r}.not(conj|because_8(adv|very_11(adj|sharp_12(pro:per|it_9,$0)),mod|do_1(and(v|put-zero_3(you,det:poss|your_4($1,n|finger-pl_5($1)),$0),adv|down_6(adv|there_7($0))),$0)),$0)
example_end

Sent: no I don 't want to do it .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|i_2,lambda $1_{r}.v|do_7(pro:sub|i_2,pro:per|it_8,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: I 'm not a little boy .
Sem: lambda $0_{r}.not(det:art|a_4(pro:sub|i_1,and(n|boy_6(pro:sub|i_1,$0),adj|little_5(pro:sub|i_1,$0))),$0)
example_end

Sent: a drill .
Sem: det:art|a_1($0,n|drill_2($0))
example_end

Sent: makes a hole for a screw .
Sem: lambda $0_{r}.and(v|make-3s_1(you,det:art|a_2($1,n|hole_3($1)),$0),prep|for_4(det:art|a_5($2,n|screw_6($2)),$0))
example_end

Sent: it 's a file .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|file_4(pro:per|it_1,$0))
example_end

Sent: look at the edge and you see something like teeth and when you pull them back and forth they cut the wood .
Sem: lambda $0_{r}.coord|and_5(conj|when_12(and(v|pull_14(pro:per|you_13,pro:obj|them_15,$0),adv|forth_18($0)),v|cut-zero_20(pro:sub|they_19,det:art|the_21($1,n|wood_22($1)),$0)),and(v|see_7(pro:per|you_6,BARE($2,att(pro:indef|something_8($2),prep|like_9(BARE($3,n|tooth-pl_10($3))))),$0),prep|at_2(det:art|the_3($4,n|edge_4($4)),$0)))
example_end

Sent: here 's a nail would you like to try ?
Sem: lambda $0_{r}.and(pro:exist|here_1(det:art|a_3($1,n|nail_4($1)),$0),Q(mod|will-cond_5(v|like_7(pro:per|you_6,lambda $2_{r}.v|try_9(pro:per|you_6,$2),$0),$0)))
example_end

Sent: I 'll hold it .
Sem: lambda $0_{r}.mod|~will_2(v|hold_3(pro:sub|i_1,pro:per|it_4,$0),$0)
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: you almost caught me .
Sem: lambda $0_{r}.and(v|catch-past_3(pro:per|you_1,pro:obj|me_4,$0),adv|almost_2($0))
example_end

Sent: why would you hold it with that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|hold_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),prep|with_6(pro:dem|that_7,$0)),$0)
example_end

Sent: you have_to learn .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|learn_4(pro:per|you_1,$1),$0)
example_end

Sent: well you have_to learn how .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(mod:aux|have_to_3(pro:per|you_2,lambda $1_{r}.v|learn_5(pro:per|you_2,$1),$0),$2($0)),co|well_1($0))
example_end

Sent: if you had a big what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|have-past_3(pro:per|you_2,$1,$0)
example_end

Sent: don 't hit my fingers .
Sem: lambda $0_{r}.not(mod|do_1(v|hit-zero_3(you,det:poss|my_4($1,n|finger-pl_5($1)),$0),$0),$0)
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: I 'll hold it while you turn .
Sem: lambda $0_{r}.conj|while_5(v|turn_7(pro:per|you_6,$0),mod|~will_2(v|hold_3(pro:sub|i_1,pro:per|it_4,$0),$0))
example_end

Sent: it won 't move .
Sem: lambda $0_{r}.not(mod|will_2(v|move_4(pro:per|it_1,$0),$0),$0)
example_end

Sent: where 's the fish ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|fish_4($1)),$0))
example_end

Sent: oh I 'm watching the fish .
Sem: lambda $0_{r}.and(aux|~be_3(part|watch-presp_4(pro:sub|i_2,det:art|the_5($1,n|fish_6($1)),$0),$0),co|oh_1($0))
example_end

Sent: the fish stopped ?
Sem: lambda $0_{r}.Q(v|stop-past_3(det:art|the_1($1,n|fish_2($1)),$0))
example_end

Sent: why did he stop ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|stop_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: you turn it dear .
Sem: lambda $0_{r}.v|turn_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: first you mark with a pencil .
Sem: lambda $0_{r}.and(and(v|mark_3(pro:per|you_2,$0),adv|first_1($0)),prep|with_4(det:art|a_5($1,n|pencil_6($1)),$0))
example_end

Sent: oh you can 't put it back on once you 've cut it off .
Sem: lambda $0_{r}.and(not(adv|once_9(aux|~have_11(and(v|cut-zero_12(pro:per|you_10,pro:per|it_13,$0),adv|off_14($0)),$0),mod|can_3(and(and(v|put-zero_5(pro:per|you_2,pro:per|it_6,$0),adv|back_7($0)),adv|on_8($0)),$0)),$0),co|oh_1($0))
example_end

Sent: well I can 't finish it by myself .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|finish_5(pro:sub|i_2,pro:per|it_6,$0),prep|by_7(pro:refl|myself_8,$0)),$0),$0),co|well_1($0))
example_end

Sent: maybe you can drill a hole too .
Sem: lambda $0_{r}.mod|can_3(and(and(v|drill_4(pro:per|you_2,det:art|a_5($1,n|hole_6($1)),$0),adv|maybe_1($0)),adv|too_7($0)),$0)
example_end

Sent: on this part .
Sem: prep|on_1(pro:dem|this_2($0,n|part_3($0)))
example_end

Sent: turn around .
Sem: lambda $0_{r}.and(n|turn_1(you,$0),adv|around_2($0))
example_end

Sent: yes that 's sharp .
Sem: lambda $0_{r}.and(adj|sharp_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: you 'll cut your fingers .
Sem: lambda $0_{r}.mod|~will_2(part|cut-pastp_3(pro:per|you_1,det:poss|your_4($1,n|finger-pl_5($1)),$0),$0)
example_end

Sent: no I 'm not going to do it .
Sem: lambda $0_{r}.and(not(cop|~be_3(part|go-presp_5(pro:sub|i_2,lambda $1_{r}.v|do_7(pro:sub|i_2,pro:per|it_8,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: did you try marking with this ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|try_3(pro:per|you_2,lambda $1_{r}.and(part|mark-presp_4(you,$1),prep|with_5(pro:dem|this_6,$1)),$0),$0))
example_end

Sent: I have a blue one .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,det:art|a_3($1,and(n|blue_4($1),pro:indef|one_5($1))),$0)
example_end

Sent: why don 't you write with it first ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(v|write_5(pro:per|you_4,$0),$1($0)),prep|with_6(pro:per|it_7,$0)),adv|first_8($0)),$0),$0)
example_end

Sent: I 'll hold this while you draw a straight line .
Sem: lambda $0_{r}.n|while_5(v|draw_7(pro:per|you_6,det:art|a_8($1,and(adj|straight_9($1),n|line_10($1))),$0),mod|~will_2(v|hold_3(pro:sub|i_1,pro:dem|this_4,$0),$0))
example_end

Sent: but you have_to hold your pencil against there .
Sem: lambda $0_{r}.mod:aux|have_to_3(pro:per|you_2,lambda $1_{r}.v|hold_5(pro:per|you_2,$1),$0)
example_end

Sent: watch your fingers .
Sem: lambda $0_{r}.v|watch_1(you,det:poss|your_2($1,n|finger-pl_3($1)),$0)
example_end

Sent: don 't cut your thumb Adam .
Sem: lambda $0_{r}.not(mod|do_1(v|cut-zero_3(you,det:poss|your_4($1,n|thumb_5($1)),$0),$0),$0)
example_end

Sent: oh no you cut it .
Sem: lambda $0_{r}.and(and(v|cut-zero_4(pro:per|you_3,pro:per|it_5,$0),co|oh_1($0)),co|no_2($0))
example_end

Sent: are you sure ?
Sem: lambda $0_{r}.Q(adj|sure_3(pro:per|you_2,$0))
example_end

Sent: a wrench .
Sem: det:art|a_1($0,v|wrench_2($0))
example_end

Sent: screw it .
Sem: lambda $0_{r}.v|screw_1(you,pro:per|it_2,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you hurt yourself .
Sem: lambda $0_{r}.v|hurt-zero_2(pro:per|you_1,pro:refl|yourself_3,$0)
example_end

Sent: you could drill a hole through that .
Sem: lambda $0_{r}.mod|could_2(and(v|drill_3(pro:per|you_1,det:art|a_4($1,n|hole_5($1)),$0),prep|through_6(pro:dem|that_7,$0)),$0)
example_end

Sent: now you can drill right through there .
Sem: lambda $0_{r}.n|can_3(and(and(n|drill_4(pro:per|you_2,$0),adv|now_1($0)),adj|right_5(adj|through_6(adv|there_7($0)))),$0)
example_end

Sent: you can screw that on .
Sem: lambda $0_{r}.mod|can_2(and(v|screw_3(pro:per|you_1,pro:dem|that_4,$0),adv|on_5($0)),$0)
example_end

Sent: where 's your screwdriver ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|screw+driver_4($1)),$0),$2($0))
example_end

Sent: did you look behind you ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(cop|look_3(pro:per|you_2,$0),adv|behind_4(pro:per|you_5,$0)),$0))
example_end

Sent: why did you knock it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|knock_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: did you try cutting that ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|try_3(pro:per|you_2,lambda $1_{r}.part|cut-presp_4(pro:per|you_2,pro:dem|that_5,$1),$0),$0))
example_end

Sent: watch your fingers Adam .
Sem: lambda $0_{r}.v|watch_1(you,det:poss|your_2($1,n|finger-pl_3($1)),$0)
example_end

Sent: no dear .
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: I can 't use that while you 're there .
Sem: lambda $0_{r}.not(n|while_6(adv|there_9(pro:per|you_7,$0),mod|can_2(v|use_4(pro:sub|i_1,pro:dem|that_5,$0),$0)),$0)
example_end

Sent: turn that .
Sem: lambda $0_{r}.v|turn_1(you,pro:dem|that_2,$0)
example_end

Sent: what are you going to put in there anyway ?
Sem: lambda $2_{e}.lambda $0_{r}.and(aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|put-zero_6(pro:per|you_3,$2,$1),adv|there_8($1)),$0),$0),adv|anyway_9($0))
example_end

Sent: what would you want to put ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|will-cond_2(v|want_4(pro:per|you_3,lambda $1_{r}.v|put-zero_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: are you getting a runny nose ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|get-presp_3(pro:per|you_2,det:art|a_4($1,and(adj|run-dv_5($1),n|nose_6($1))),$0),$0))
example_end

Sent: can you pull it out now ?
Sem: lambda $0_{r}.Q(mod|can_1(and(and(v|pull_3(pro:per|you_2,pro:per|it_4,$0),adv|out_5($0)),adv|now_6($0)),$0))
example_end

Sent: that 's a level .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|level_4(pro:dem|that_1,$0))
example_end

Sent: to see if something is straight .
Sem: lambda $0_{r}.v|see_2(you,lambda $1_{r}.adv|straight_6(pro:indef|something_4,$1),$0)
example_end

Sent: some water .
Sem: qn|some_1($0,n|water_2($0))
example_end

Sent: where 's your saw ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|your_3($1,n|saw_4($1)),$0))
example_end

Sent: you can make a door that opens .
Sem: lambda $0_{r}.mod|can_2(v|make_3(pro:per|you_1,det:art|a_4($1,n|door_5($1)),$0),$0)
example_end

Sent: can I take a message ?
Sem: lambda $0_{r}.Q(mod|can_1(v|take_3(pro:sub|i_2,det:art|a_4($1,n|message_5($1)),$0),$0))
example_end

Sent: can you cut along here Adam ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|cut-zero_3(pro:per|you_2,$0),prep|along_4(adv|here_5($0))),$0))
example_end

Sent: shall we do it together ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|do_3(pro:sub|we_2,pro:per|it_4,$0),adv|together_5($0)),$0))
example_end

Sent: that 's it .
Sem: lambda $0_{r}.pro:dem|that_1(pro:per|it_3,$0)
example_end

Sent: there 's a door .
Sem: lambda $0_{r}.cop|~be_2(det:art|a_3($1,n|door_4($1)),$0)
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: a car ?
Sem: BARE($0,Q(det:art|a_1($1,n|car_2($1),$0)))
example_end

Sent: is that a garage ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|garage_4(pro:rel|that_2,$0)))
example_end

Sent: I think you have a car up there on the shelf that might just fit in there .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(and(v|have_4(pro:per|you_3,det:art|a_5($2,n|car_6($2)),$1),adv|up_7(adv|there_8($1))),prep|on_9(det:art|the_10($3,n|shelf_11($3)),$1)),$0)
example_end

Sent: on the top shelf .
Sem: prep|on_1(det:art|the_2($0,and_comp(n|top_3($0),n|shelf_4($0))))
example_end

Sent: on the other side .
Sem: prep|on_1(det:art|the_2($0,and(qn|other_3($0),n|side_4($0))))
example_end

Sent: maybe Paul took it .
Sem: lambda $0_{r}.and(v|take-past_3(n:prop|paul_2,pro:per|it_4,$0),adv|maybe_1($0))
example_end

Sent: one named Joe ?
Sem: BARE($0,Q(pro:indef|one_1($0)))
example_end

Sent: how does that go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|go_4(det:dem|that_3,$0),$1($0)),$0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: the magnet ?
Sem: BARE($0,Q(det:art|the_1($1,n|magnet_2($1),$0)))
example_end

Sent: I looked for it at home too .
Sem: lambda $0_{r}.and(and(and(cop|look-past_2(pro:sub|i_1,$0),prep|for_3(pro:per|it_4,$0)),prep|at_5(BARE($1,n|home_6($1)),$0)),post|too_7($0))
example_end

Sent: in June ?
Sem: Q(prep|in_1(n:prop|june_2))
example_end

Sent: begins with a .
Sem: lambda $0_{r}.and(v|begin-3s_1(you,$0),prep|with_2(BARE($1,n:let|a_3($1)),$0))
example_end

Sent: look what 's happening .
Sem: lambda $0_{r}.co|look_1(you,lambda $1_{r}.aux|~be_3(part|happen-presp_4(pro:int|what_2,$1),$1),$0)
example_end

Sent: you take another color .
Sem: lambda $0_{r}.v|take_2(pro:per|you_1,qn|another_3($1,n|color_4($1)),$0)
example_end

Sent: I 'll change .
Sem: lambda $0_{r}.mod|~will_2(v|change_3(pro:sub|i_1,$0),$0)
example_end

Sent: you take this .
Sem: lambda $0_{r}.v|take_2(pro:per|you_1,pro:dem|this_3,$0)
example_end

Sent: don 't go in there yet .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|go_3(you,$0),prep|in_4(adv|there_5($0))),adv|yet_6($0)),$0),$0)
example_end

Sent: remember how we play the surprise game ?
Sem: lambda $0_{r}.Q(v|remember_1(you,lambda $1_{r}.and(v|play_4(pro:sub|we_3,det:art|the_5($2,and(adj|surprise_6($2),n|game_7($2))),$1),adv:int|how_2($1)),$0))
example_end

Sent: what do we do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|do_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: surprise we wait .
Sem: lambda $0_{r}.and(v|wait_3(pro:sub|we_2,$0),n|surprise_1(you,$0))
example_end

Sent: let 's leave the tape recorder .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|leave_3(pro:obj|~us_2,det:art|the_4($2,and_comp(n|tape_5($2),n|record-dv_6($2))),$1),$0)
example_end

Sent: let 's play a game .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|play_3(pro:obj|~us_2,det:art|a_4($2,n|game_5($2)),$1),$0)
example_end

Sent: what did you do to the tape recorder Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:per|you_3,$1,$0),prep|to_5(det:art|the_6($2,and_comp(n|tape_7($2),n|record-dv_8($2))),$0)),$0)
example_end

Sent: so the microphone can 't fall ?
Sem: lambda $0_{r}.Q(not(mod|can_4(v|fall_6(det:art|the_2($1,n|microphone_3($1)),$0),$0),$0))
example_end

Sent: Adam is it Daddy desk or Daddy 's desk ?
Sem: lambda $0_{r}.Q(n:prop|daddy_7's'(pro:per|it_3,n:prop|daddy_4's'(pro:per|it_3,n|desk_9(pro:per|it_3,$0))))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: wait a minute .
Sem: lambda $0_{r}.v|wait_1(you,det:art|a_2($1,n|minute_3($1)),$0)
example_end

Sent: would you like a glass of ginger ale ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,att(n|glass_5($1),prep|of_6(BARE($2,and_comp(n|ginger_7($2),n|ale_8($2)))))),$0),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: can you wind it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|wind_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: you wind it .
Sem: lambda $0_{r}.v|wind_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: look you wind it right here .
Sem: lambda $0_{r}.and(and(v|wind_3(pro:per|you_2,pro:per|it_4,$0),adv|right_5(adv|here_6($0))),co|look_1(you,$0))
example_end

Sent: I have a what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|have_2(pro:sub|i_1,$1,$0)
example_end

Sent: something 's in there .
Sem: lambda $0_{r}.and(aux|~be_2(pro:indef|something_1,$0),adv|in_3(adv|there_4($0)))
example_end

Sent: I 'm writing .
Sem: lambda $0_{r}.aux|~be_2(part|write-presp_3(pro:sub|i_1,$0),$0)
example_end

Sent: I always write when I come don 't I ?
Sem: lambda $0_{r}.Q(and(conj|when_4(v|come_6(pro:sub|i_5,$0),and(v|write_3(pro:sub|i_1,$0),adv|always_2($0))),not(mod|do_7(pro:sub|i_9,$0),$0)))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: that spells one ?
Sem: lambda $0_{r}.Q(n|spell-pl_2(pro:dem|that_1,BARE($1,pro:indef|one_3($1)),$0))
example_end

Sent: can you hear it tick ?
Sem: lambda $0_{r}.Q(mod|can_1(v|hear_3(pro:per|you_2,lambda $1_{r}.v|tick_5(pro:per|it_4,$1),$0),$0))
example_end

Sent: put it on your ear .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|on_3(det:poss|your_4($1,n|ear_5($1)),$0))
example_end

Sent: I can 't turn it off .
Sem: lambda $0_{r}.not(mod|can_2(and(v|turn_4(pro:sub|i_1,pro:per|it_5,$0),adv|off_6($0)),$0),$0)
example_end

Sent: it doesn 't turn off .
Sem: lambda $0_{r}.not(mod|do_2(and(v|turn_4(pro:per|it_1,$0),adv|off_5($0)),$0),$0)
example_end

Sent: because the springs are all wound up .
Sem: lambda $0_{r}.cop|be-pres_4(and(and(v|wound_6(det:art|the_2($1,n|spring-pl_3($1)),$0),adv|all_5($0)),adv|up_7($0)),$0)
example_end

Sent: alright my friend .
Sem: lambda $0_{r}.and(det:poss|my_2($1,n|friend_3($1),$0),co|alright_1($0))
example_end

Sent: what goes up ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|go-3s_2($1,$0),adv|up_3($0))
example_end

Sent: look Adam .
Sem: lambda $0_{r}.co|look_1(you,$0)
example_end

Sent: take the hat .
Sem: lambda $0_{r}.v|take_1(you,det:art|the_2($1,n|hat_3($1)),$0)
example_end

Sent: what d you mean heavy ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,lambda $1_{r}.adj|heavy_5($2,$1),$0),$0)
example_end

Sent: what 're you going to put in it ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|put-zero_6(pro:per|you_3,$2,$1),prep|in_7(pro:per|it_8,$1)),$0),$0)
example_end

Sent: are they just like the bus ?
Sem: lambda $0_{r}.Q(and(cop|be-pres_1(pro:sub|they_2,$0),adv|just_3(prep|like_4(det:art|the_5($1,n|bus_6($1)),$0))))
example_end

Sent: where 's the bus ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|bus_4($1)),$0),$2($0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: give me the button .
Sem: lambda $0_{r}.v|give_1(you,det:art|the_3($1,n|button_4($1)),pro:obj|me_2,$0)
example_end

Sent: that 's the button .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|button_4(pro:dem|that_1,$0))
example_end

Sent: that 's mine .
Sem: lambda $0_{r}.pro:poss|mine_3(pro:dem|that_1,$0)
example_end

Sent: that 's yours .
Sem: lambda $0_{r}.pro:poss|yours_3(pro:dem|that_1,$0)
example_end

Sent: no no switches .
Sem: lambda $0_{r}.and(not(n|switch-pl_3(you,$0),$0),qn|no_1($0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: let 's put the buttons back first .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(and(v|put-zero_3(pro:obj|~us_2,det:art|the_4($2,n|button-pl_5($2)),$1),adv|back_6($1)),adv|first_7($1)),$0)
example_end

Sent: where 's the container ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|contain-dv_4($1)),$0),$2($0))
example_end

Sent: you don 't have it in the container ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(v|have_4(pro:per|you_1,pro:per|it_5,$0),prep|in_6(det:art|the_7($1,n|contain-dv_8($1)),$0)),$0),$0))
example_end

Sent: aren 't they in there ?
Sem: lambda $0_{r}.Q(not(and(aux|be_1(pro:sub|they_3,$0),adv|in_4(adv|there_5($0))),$0))
example_end

Sent: oh I don 't know .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,$0),$0),$0),co|oh_1($0))
example_end

Sent: who are those people in that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3($2,att(n|person-pl_4($2),prep|in_5(pro:dem|that_6))),$0)
example_end

Sent: what d you have in your truck ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,$1,$0),prep|in_5(det:poss|your_6($2,n|truck_7($2)),$0)),$0)
example_end

Sent: a doll in ?
Sem: BARE($0,Q(adv|in_3(det:art|a_1($1,n|doll_2($1)),$0)))
example_end

Sent: then it 's going ?
Sem: lambda $0_{r}.Q(aux|~be_3(and(part|go-presp_4(pro:per|it_2,$0),adv:tem|then_1($0)),$0))
example_end

Sent: where is it going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-3s_2(and(part|go-presp_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: where will it be going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be_4(mod|will_2(and(part|go-presp_5(pro:per|it_3,$0),$1($0)),$0),$0)
example_end

Sent: what 're you doing Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you fix the mail box ?
Sem: lambda $0_{r}.Q(v|fix_2(pro:per|you_1,det:art|the_3($1,and_comp(n|mail_4($1),n|box_5($1))),$0))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you take a picture of Ursula .
Sem: lambda $0_{r}.v|take_2(pro:per|you_1,det:art|a_3($1,att(n|picture_4($1),prep|of_5(n:prop|ursula_6))),$0)
example_end

Sent: and snap it .
Sem: lambda $0_{r}.v|snap_2(you,pro:per|it_3,$0)
example_end

Sent: no don 't turn it on .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|turn_4(you,pro:per|it_5,$0),adv|on_6($0)),$0),$0),co|no_1($0))
example_end

Sent: because Urs can 't hear the tape when it 's on .
Sem: lambda $0_{r}.not(conj|when_8(adv|on_11(pro:per|it_9,$0),mod|can_3(v|hear_5(n:prop|ursula_2,det:art|the_6($1,n|tape_7($1)),$0),$0)),$0)
example_end

Sent: no what migh happen if you knocked it down ?
Sem: lambda $1_{e}.lambda $0_{r}.and(conj|if_5(and(v|knock-past_7(pro:per|you_6,pro:per|it_8,$0),adv|down_9($0)),mod|might_3(v|happen_4($1,$0),$0)),co|no_1($0))
example_end

Sent: with your elbow .
Sem: prep|with_1(det:poss|your_2($0,n|elbow_3($0)))
example_end

Sent: you 'll still hurt yourself .
Sem: lambda $0_{r}.mod|~will_2(and(part|hurt-pastp_4(pro:per|you_1,pro:refl|yourself_5,$0),adv|still_3($0)),$0)
example_end

Sent: how does a gentleman roll ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(n|roll_5(det:art|a_3($1,n|gentleman_4($1)),$0),$2($0)),$0)
example_end

Sent: no you might hurt it .
Sem: lambda $0_{r}.and(mod|might_3(v|hurt-zero_4(pro:per|you_2,pro:per|it_5,$0),$0),co|no_1($0))
example_end

Sent: because you hit it .
Sem: lambda $0_{r}.v|hit-zero_3(pro:per|you_2,pro:per|it_4,$0)
example_end

Sent: the top of the truck .
Sem: det:art|the_1($0,att(n|top_2($0),prep|of_3(det:art|the_4($1,n|truck_5($1)))))
example_end

Sent: but that 's not a trash truck .
Sem: lambda $0_{r}.not(det:art|a_5(pro:dem|that_2,and_comp(n|trash_6(pro:dem|that_2,$0),n|truck_7(pro:dem|that_2,$0))),$0)
example_end

Sent: that 's an armored car truck .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|truck_6(pro:dem|that_1,$0),part|armor-pastp_4(pro:dem|that_1,$0)))
example_end

Sent: it carries money .
Sem: lambda $0_{r}.v|carry-3s_2(pro:per|it_1,BARE($1,n|money_3($1)),$0)
example_end

Sent: they carry money from one building to another building .
Sem: lambda $0_{r}.and(and(v|carry_2(pro:sub|they_1,BARE($1,n|money_3($1)),$0),prep|from_4(BARE($2,det:num|one_5(n|building_6($2))),$0)),prep|to_7(qn|another_8($3,n|building_9($3)),$0))
example_end

Sent: he 's driving the truck .
Sem: lambda $0_{r}.aux|~be_2(part|drive-presp_3(pro:sub|he_1,det:art|the_4($1,n|truck_5($1)),$0),$0)
example_end

Sent: because somebody has_to drive it .
Sem: lambda $0_{r}.mod:aux|has_to_3(v|drive_4(pro:indef|somebody_2,pro:per|it_5,$0),$0)
example_end

Sent: no I don 't think the door opens does it ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|open-3s_8(det:art|the_6($2,n|door_7($2)),$1),$0),$0),$0),mod|do-3s_9(pro:per|it_10,$0)),co|no_1($0)))
example_end

Sent: why are those men driving ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|drive-presp_5(pro:dem|those_3($1,n|man-pl_4($1)),$0),$2($0)),$0)
example_end

Sent: because they have_to take the money to someplace else .
Sem: lambda $0_{r}.mod:aux|have_to_3(and(v|take_4(pro:sub|they_2,det:art|the_5($1,n|money_6($1)),$0),post|else_9(prep|to_7(n|someplace_8,$0))),$0)
example_end

Sent: no that 's where you put your money .
Sem: lambda $0_{r}.and(cop|~be_3(pro:dem|that_2,lambda $1_{r}.and(v|put-zero_6(pro:per|you_5,det:poss|your_7($2,n|money_8($2)),$1),pro:rel|where_4($1)),$0),co|no_1($0))
example_end

Sent: did you ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:per|you_2,$0))
example_end

Sent: you put what in there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,$1,$0),adv|in_4(adv|there_5($0)))
example_end

Sent: so the toys can get down .
Sem: lambda $0_{r}.and(mod|can_4(and(v|get_5(det:art|the_2($1,n|toy-pl_3($1)),$0),adv|down_6($0)),$0),co|so_1($0))
example_end

Sent: with Paul ?
Sem: Q(prep|with_1(n:prop|paul_2))
example_end

Sent: how d you mark something ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|mark_4(pro:per|you_3,pro:indef|something_5,$0),$1($0)),$0)
example_end

Sent: oh go get the carriage Adam for the baby .
Sem: lambda $0_{r}.and(and(v|get_3(you,det:art|the_4($1,n|carriage_5($1)),$0),prep|for_7(det:art|the_8($2,n|baby_9($2)),$0)),co|oh_1($0))
example_end

Sent: oh Adam you 've had a horse in the armored car truck .
Sem: lambda $0_{r}.and(aux|~have_4(and(part|have-pastp_5(pro:per|you_3,det:art|a_6($1,n|horse_7($1)),$0),prep|in_8(det:art|the_9($2,and_comp(n|car_11($2),and(part|armor-pastp_10($2),n|truck_12($2)))),$0)),$0),co|oh_1($0))
example_end

Sent: why did you tip it over ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|tip_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),adv|over_6($0)),$0)
example_end

Sent: that 's a street light .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|street_4(pro:dem|that_1,$0),n|light_5(pro:dem|that_1,$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you always had pennies .
Sem: lambda $0_{r}.and(v|have-past_3(pro:per|you_1,BARE($1,n|penny-pl_4($1)),$0),adv|always_2($0))
example_end

Sent: take it out .
Sem: lambda $0_{r}.and(v|take_1(you,pro:per|it_2,$0),adv|out_3($0))
example_end

Sent: yes take a picture of me .
Sem: lambda $0_{r}.and(v|take_2(you,det:art|a_3($1,att(n|picture_4($1),prep|of_5(pro:obj|me_6))),$0),co|yes_1($0))
example_end

Sent: I see you .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|you_3,$0)
example_end

Sent: you 're so big .
Sem: lambda $0_{r}.aux|~be_2(adv|so_3(adj|big_4(pro:per|you_1,$0)),$0)
example_end

Sent: step on your toys ?
Sem: lambda $0_{r}.Q(and(v|step_1(you,$0),prep|on_2(det:poss|your_3($1,n|toy-pl_4($1)),$0)))
example_end

Sent: on your train ?
Sem: Q(prep|on_1(det:poss|your_2($0,n|train_3($0))))
example_end

Sent: Urs did .
Sem: lambda $0_{r}.v|do-past_2(n:prop|ursula_1,$0)
example_end

Sent: is that a red one ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,and(pro:indef|one_5(pro:rel|that_2,$0),n|red_4(pro:rel|that_2,$0))))
example_end

Sent: poor dollie .
Sem: BARE($0,and(adj|poor_1($0),n|doll-dim_2($0)))
example_end

Sent: it 's a boy I guess .
Sem: lambda $0_{r}.and(det:art|a_3(pro:per|it_1,n|boy_4(pro:per|it_1,$0)),v|guess_6(pro:sub|i_5,$0))
example_end

Sent: well yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|well_1($0))
example_end

Sent: it 's a baby boy .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and(n|boy_5(pro:per|it_1,$0),n|baby_4(pro:per|it_1,$0)))
example_end

Sent: it 's he you forgot .
Sem: lambda $0_{r}.pro:sub|he_3(pro:per|it_1,$0)
example_end

Sent: where is he going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|go-presp_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: yes it has wheels .
Sem: lambda $0_{r}.and(aux|have-3s_3(pro:per|it_2,BARE($1,n|wheel-pl_4($1)),$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it 's dusty and dirty .
Sem: lambda $0_{r}.adj|dirt-dn_5(pro:per|it_1,$0)
example_end

Sent: you need to wash your bus off .
Sem: lambda $0_{r}.v|need_2(pro:per|you_1,lambda $1_{r}.and(v|wash_4(pro:per|you_1,det:poss|your_5($2,n|bus_6($2)),$1),adv|off_7($1)),$0)
example_end

Sent: you don 't put nails in like that .
Sem: lambda $0_{r}.not(mod|do_2(and(and(v|put-zero_4(pro:per|you_1,BARE($1,n|nail-pl_5($1)),$0),prep|in_6($0)),prep|like_7(pro:dem|that_8,$0)),$0),$0)
example_end

Sent: when you 're building things you use nails .
Sem: lambda $0_{r}.conj|when_1(cop|~be_3(n|building_4(pro:per|you_2,BARE($1,n|thing-pl_5($1)),$0),$0),n|use_7(pro:per|you_6,BARE($2,n|nail-pl_8($2)),$0))
example_end

Sent: what 's happening ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|happen-presp_3($1,$0),$0)
example_end

Sent: no did you break something ?
Sem: lambda $0_{r}.Q(and(mod|do-past_2(v|break_4(pro:per|you_3,pro:indef|something_5,$0),$0),co|no_1($0)))
example_end

Sent: what did you break ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|break_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: Adam where are you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-pres_3(pro:per|you_4,$0),$1($0))
example_end

Sent: what 're you doing do with the Howard Johnson ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|do-presp_4(pro:per|you_3,$1,$0),prep|with_6(det:art|the_7($2,n:prop|johnson_9_howard_8($2)),$0)),$0)
example_end

Sent: I 'm going to get some big moving van .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|i_1,lambda $1_{r}.v|get_5(pro:sub|i_1,qn|some_6($2,and(n:gerund|move-presp_8($2),and(adj|big_7($2),n|van_9($2)))),$1),$0),$0)
example_end

Sent: that 's nice .
Sem: lambda $0_{r}.adj|nice_3(pro:dem|that_1,$0)
example_end

Sent: is that yours ?
Sem: lambda $0_{r}.Q(pro:poss|yours_3(pro:dem|that_2,$0))
example_end

Sent: that 's a big camera .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|camera_5(pro:dem|that_1,$0),adj|big_4(pro:dem|that_1,$0)))
example_end

Sent: where did you get this ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|get_4(pro:per|you_3,pro:dem|this_5,$0),$1($0)),$0)
example_end

Sent: from the park ?
Sem: Q(prep|from_1(det:art|the_2($0,n|park_3($0))))
example_end

Sent: he didn 't get that at the park .
Sem: lambda $0_{r}.not(mod|do_2(and(v|get_4(pro:sub|he_1,pro:dem|that_5,$0),prep|at_6(det:art|the_7($1,n|park_8($1)),$0)),$0),$0)
example_end

Sent: no put them back in or we won 't play with them again .
Sem: lambda $0_{r}.and(coord|or_6(not(mod|will_8(and(and(v|play_10(pro:sub|we_7,$0),prep|with_11(pro:obj|them_12,$0)),adv|again_13($0)),$0),$0),and(v|put-zero_2(you,pro:obj|them_3,$0),adj|back_4(adv|in_5($0)))),co|no_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's some turquoise .
Sem: lambda $0_{r}.qn|some_3(pro:dem|that_1,n|turquoise_4(pro:dem|that_1,$0))
example_end

Sent: that 's a key chain .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|key_4(pro:dem|that_1,$0),n|chain_5(pro:dem|that_1,$0)))
example_end

Sent: what about the treasure house ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,and_comp(n|treasure_4($0),n|house_5($0)))))
example_end

Sent: you want to play that game with Urs ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|play_4(pro:per|you_1,pro:dem|that_5($2,n|game_6($2)),$1),prep|with_7(n:prop|ursula_8,$1)),$0))
example_end

Sent: well you can count well can 't you ?
Sem: lambda $0_{r}.Q(and(and(mod|can_3(and(v|count_4(pro:per|you_2,$0),adv|well_5($0)),$0),not(mod|can_6(pro:per|you_8,$0),$0)),co|well_1($0)))
example_end

Sent: a telephone .
Sem: det:art|a_1($0,n|telephone_2($0))
example_end

Sent: you found a number .
Sem: lambda $0_{r}.v|find-past_2(pro:per|you_1,det:art|a_3($1,v|number_4($1)),$0)
example_end

Sent: one hat .
Sem: BARE($0,det:num|one_1(n|hat_2($0)))
example_end

Sent: a queen .
Sem: det:art|a_1($0,n|queen_2($0))
example_end

Sent: no that 's a queen .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|queen_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: is the king and the lady is the queen .
Sem: lambda $0_{r}.det:art|the_8(det:art|the_5($1,n|lady_6($1)),det:art|the_2(det:art|the_5($1,n|lady_6($1)),n|queen_9(det:art|the_5($1,n|lady_6($1)),$0)))
example_end

Sent: show me another one .
Sem: lambda $0_{r}.v|show_1(you,qn|another_3($1,pro:indef|one_4($1)),pro:obj|me_2,$0)
example_end

Sent: well what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|well_1($0))
example_end

Sent: don 't step on them you may tear them .
Sem: lambda $0_{r}.not(and(mod|do_1(and(v|step_3(you,$0),prep|on_4(pro:obj|them_5,$0)),$0),mod|may_7(v|tear_8(pro:per|you_6,pro:obj|them_9,$0),$0)),$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: Adam Smith we 'll have put them up .
Sem: lambda $0_{r}.aux|have_5(mod|~will_4(and(v|put-zero_6(pro:sub|we_3,pro:obj|them_7,$0),adv|up_8($0)),$0),$0)
example_end

Sent: well pick the rest of them up .
Sem: lambda $0_{r}.and(and(v|pick_2(you,det:art|the_3($1,att(n|rest_4($1),prep|of_5(pro:obj|them_6))),$0),adv|up_7($0)),co|well_1($0))
example_end

Sent: do I want you to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_1(v|want_3(pro:sub|i_2,lambda $1_{r}.v|do_6(pro:per|you_4,$2,$1),$0),$0)
example_end

Sent: give me the jug .
Sem: lambda $0_{r}.v|give_1(you,det:art|the_3($1,n|jug_4($1)),pro:obj|me_2,$0)
example_end

Sent: Adam can you find the violin ?
Sem: lambda $0_{r}.Q(mod|can_2(v|find_4(pro:per|you_3,det:art|the_5($1,n|violin_6($1)),$0),$0))
example_end

Sent: shall we pick up the cards first Adam ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|pick_3_up_4(pro:sub|we_2,det:art|the_5($1,n|card-pl_6($1)),$0),adj|first_7($0)),$0))
example_end

Sent: you made a queen ?
Sem: lambda $0_{r}.Q(v|make-past_2(pro:per|you_1,det:art|a_3($1,n|queen_4($1)),$0))
example_end

Sent: would you pick the blocks up under Urs ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(and(v|pick_3(pro:per|you_2,det:art|the_4($1,att(n|block-pl_5($1),adv|under_7(n:prop|ursula_8))),$0),adv|up_6($0)),$0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you made a queen ?
Sem: lambda $0_{r}.Q(v|make-past_2(pro:per|you_1,det:art|a_3($1,n|queen_4($1)),$0))
example_end

Sent: for Celia .
Sem: conj|for_1(n:prop|celia_2)
example_end

Sent: Celia wears sneakers .
Sem: lambda $0_{r}.v|wear-3s_2(n:prop|celia_1,BARE($1,n|sneaker-pl_3($1)),$0)
example_end

Sent: a house can 't dance .
Sem: lambda $0_{r}.not(mod|can_3(v|dance_5(det:art|a_1($1,n|house_2($1)),$0),$0),$0)
example_end

Sent: I don 't think I can .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: it doesn 't really open .
Sem: lambda $0_{r}.not(mod|do_2(and(adj|open_5(pro:per|it_1,$0),adv|real-dadj_4($0)),$0),$0)
example_end

Sent: I think it can be turned .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|be_5(mod|can_4(part|turn-pastp_6(pro:per|it_3,$1),$1),$1),$0)
example_end

Sent: chimney house .
Sem: BARE($0,and_comp(n|chimney_1($0),n|house_2($0)))
example_end

Sent: let 's do it on the table .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|do_3(pro:obj|~us_2,pro:per|it_4,$1),prep|on_5(det:art|the_6($2,n|table_7($2)),$1)),$0)
example_end

Sent: you have enough ?
Sem: lambda $0_{r}.Q(and(v|have_2(pro:per|you_1,$0),adv|enough_3($0)))
example_end

Sent: see you can build it high .
Sem: lambda $0_{r}.and(mod|can_3(v|build_4(pro:per|you_2,lambda $1_{r}.n|high_6(pro:per|it_5,$1),$0),$0),v|see_1(you,$0))
example_end

Sent: it won 't stand up very well .
Sem: lambda $0_{r}.not(mod|will_2(and(and(v|stand_4(pro:per|it_1,$0),adv|up_5($0)),adv|very_6(adv|well_7($0))),$0),$0)
example_end

Sent: you try it .
Sem: lambda $0_{r}.v|try_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: how am I going to find enough games in the store ?
Sem: lambda $4_{<r,t>}.lambda $0_{r}.aux|be-1s_2(and(part|go-presp_4(pro:sub|i_3,lambda $1_{r}.and(v|find_6(pro:sub|i_3,BARE($2,and(qn|enough_7($2),n|game-pl_8($2))),$1),prep|in_9(det:art|the_10($3,n|store_11($3)),$1)),$0),$4($0)),$0)
example_end

Sent: you have_to blow very hard and you 'll be surprised .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|blow_3(pro:per|you_1,lambda $1_{r}.aux|be_9(mod|~will_8(part|surprise-pastp_10(pro:per|you_7,$1),$1),$1),$0),adv|very_4(adv|hard_5($0))),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: blow your own balloons .
Sem: lambda $0_{r}.v|blow_1(you,det:poss|your_2($1,and(adj|own_3($1),n|balloon-pl_4($1))),$0)
example_end

Sent: isn 't that a surprise ?
Sem: lambda $0_{r}.Q(not(det:art|a_4(det:dem|that_3,n|surprise_5(det:dem|that_3,$0)),$0))
example_end

Sent: you can blow it way up in the air .
Sem: lambda $0_{r}.mod|can_2(and(and(v|blow_3(pro:per|you_1,pro:per|it_4,$0),n|way_5(adv|up_6($0))),prep|in_7(det:art|the_8($1,n|air_9($1)),$0)),$0)
example_end

Sent: shall we blow another one ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|blow_3(pro:sub|we_2,qn|another_4($1,pro:indef|one_5($1)),$0),$0))
example_end

Sent: I think he understands happy and sad .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|understand-3s_4(pro:sub|he_3,BARE($2,adj|sad_7($2)),$1),$0)
example_end

Sent: that looks like fun Adam .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:dem|that_1,$0),co|like_3(BARE($1,adj|fun_4($1)),$0))
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: when did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: what 's it doing in Pembroke ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|do-presp_4(pro:per|it_3,$1,$0),prep|in_5(n:prop|pembroke_6,$0)),$0)
example_end

Sent: shall we blow it bigger ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|blow_3(pro:sub|we_2,lambda $1_{r}.adj|big-cp_5(pro:per|it_4,$1),$0),$0))
example_end

Sent: very gentle with it .
Sem: BARE($0,adj|gentle_2($0))
example_end

Sent: it 's behind you .
Sem: lambda $0_{r}.adv|behind_3(pro:per|you_4,pro:per|it_1,$0)
example_end

Sent: look it 's staying on the wall .
Sem: lambda $0_{r}.and(aux|~be_3(and(part|stay-presp_4(pro:per|it_2,$0),prep|on_5(det:art|the_6($1,n|wall_7($1)),$0)),$0),co|look_1(you,$0))
example_end

Sent: it 's very sticky .
Sem: lambda $0_{r}.adv|very_3(n|sticky_4(pro:per|it_1,$0))
example_end

Sent: no it 's more fun when it 's bigger .
Sem: lambda $0_{r}.n|fun_5(pro:per|it_2,$0)
example_end

Sent: like a punch .
Sem: prep|like_1(det:art|a_2($0,n|punch+ball_3($0)))
example_end

Sent: I think he said I don 't like that stuff on me .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:sub|he_3,lambda $2_{r}.not(mod|do_6(co|like_8(pro:sub|i_5,pro:dem|that_9($3,att(n|stuff_10($3),prep|on_11(pro:obj|me_12))),$2),$2),$2),$1),$0)
example_end

Sent: well that 's enough now .
Sem: lambda $0_{r}.and(adv|now_5(adv|enough_4(pro:dem|that_2,$0)),co|well_1($0))
example_end

Sent: well no you blow it bigger .
Sem: lambda $0_{r}.and(and(v|blow_4(pro:per|you_3,lambda $1_{r}.adj|big-cp_6(pro:per|it_5,$1),$0),co|well_1($0)),co|no_2($0))
example_end

Sent: you blow it .
Sem: lambda $0_{r}.v|blow_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: take a deep breath and blow .
Sem: lambda $0_{r}.n|blow_6(you,det:art|a_2($1,and(n|deep_3($1),n|breath_4($1))),$0)
example_end

Sent: yes take a big breath and blow .
Sem: lambda $0_{r}.and(n|blow_7(you,det:art|a_3($1,and(adj|big_4($1),n|breath_5($1))),$0),co|yes_1($0))
example_end

Sent: look see what happens ?
Sem: lambda $0_{r}.Q(and(v|see_2(you,lambda $1_{r}.v|happen-3s_4(pro:int|what_3,$1),$0),co|look_1(you,$0)))
example_end

Sent: you blow .
Sem: lambda $0_{r}.v|blow_2(pro:per|you_1,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: blow again .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|again_2($0))
example_end

Sent: that won 't hurt you .
Sem: lambda $0_{r}.not(mod|will_2(v|hurt-zero_4(pro:rel|that_1,pro:per|you_5,$0),$0),$0)
example_end

Sent: blow it again .
Sem: lambda $0_{r}.and(v|blow_1(you,pro:per|it_2,$0),adv|again_3($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: very gently .
Sem: BARE($0,adv|very_1(adv|gentle-dadj_2($0)))
example_end

Sent: rolling_steam is steam roller .
Sem: lambda $0_{r}.and_comp(n|steam_3(BARE($1,chi|rolling_steam_1($1)),$0),n|roll-dv_4(BARE($2,chi|rolling_steam_1($2)),$0))
example_end

Sent: you 're going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: jump to the nurse .
Sem: lambda $0_{r}.and(n|jump_1(you,$0),prep|to_2(det:art|the_3($1,n|nurse_4($1)),$0))
example_end

Sent: what is the nurse ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|nurse_4($2)),$0)
example_end

Sent: you blow .
Sem: lambda $0_{r}.v|blow_2(pro:per|you_1,$0)
example_end

Sent: wait until you finish .
Sem: lambda $0_{r}.prep|until_2(v|finish_4(pro:per|you_3,$0),v|wait_1(you,$0))
example_end

Sent: blow hard .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|hard_2($0))
example_end

Sent: come on blow again .
Sem: lambda $0_{r}.and(and(v|come_1(you,$0),prep|on_2($0)),and(n|blow_3(you,$0),adv|again_4($0)))
example_end

Sent: blow again .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|again_2($0))
example_end

Sent: that 's enough .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),adv|enough_3($0))
example_end

Sent: what kind of egg dances around ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(v|dance-3s_5($1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|egg_4($3))))),$0),adv|around_6($0))
example_end

Sent: what kind of egg does that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-3s_5($1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|egg_4($3))))),pro:dem|that_6,$0)
example_end

Sent: what kind of egg does tricks ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-3s_5($1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|egg_4($3))))),BARE($4,n|trick-pl_6($4)),$0)
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: you 're about to sit in my chair like a boy .
Sem: lambda $0_{r}.adv|about_3(pro:per|you_1,lambda $1_{r}.and(and(v|sit_5(pro:per|you_1,$1),prep|in_6(det:poss|my_7($2,n|chair_8($2)),$1)),prep|like_9(det:art|a_10($3,n|boy_11($3)),$1)),$0)
example_end

Sent: see it .
Sem: lambda $0_{r}.v|see_1(you,pro:per|it_2,$0)
example_end

Sent: you take it .
Sem: lambda $0_{r}.v|take_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: that 's a big boy .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|boy_5(pro:dem|that_1,$0),adj|big_4(pro:dem|that_1,$0)))
example_end

Sent: blow it again .
Sem: lambda $0_{r}.and(v|blow_1(you,pro:per|it_2,$0),adv|again_3($0))
example_end

Sent: you 're big enough .
Sem: lambda $0_{r}.adv|enough_4(adj|big_3(pro:per|you_1,$0))
example_end

Sent: oh that 's a big one Adam .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and(pro:indef|one_6(pro:dem|that_2,$0),adj|big_5(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: I don 't know whether you need another one .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|need_7(pro:per|you_6,qn|another_8($2,pro:indef|one_9($2)),$1),$0),$0),$0)
example_end

Sent: squeeze it like a turtle .
Sem: lambda $0_{r}.and(v|squeeze_1(you,pro:per|it_2,$0),conj|like_3(det:art|a_4($1,n|turtle_5($1)),$0))
example_end

Sent: why would you squeeze a turtle like that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|squeeze_4(pro:per|you_3,det:art|a_5($1,n|turtle_6($1)),$0),$2($0)),prep|like_7(pro:dem|that_8,$0)),$0)
example_end

Sent: I think that 's from a book .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.prep|from_5(det:art|a_6($2,n|book_7($2)),pro:rel|that_3,$1),$0)
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: well put it on the table .
Sem: lambda $0_{r}.and(and(v|put-zero_2(you,pro:per|it_3,$0),prep|on_4(det:art|the_5($1,n|table_6($1)),$0)),co|well_1($0))
example_end

Sent: oh Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|oh_1($0))
example_end

Sent: a frog let 's see .
Sem: lambda $0_{r}.v:obj|let_3(det:art|a_1($1,n|frog_2($1)),lambda $2_{r}.v|see_5(pro:obj|~us_4,$2),$0)
example_end

Sent: you 're going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: on that 's a wet blow .
Sem: det:art|a_4($0,att(and(adj|wet_5($0),n|blow_6($0)),adv|on_1(pro:dem|that_2)))
example_end

Sent: who is that little boy ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,and(adj|little_4($2),n|boy_5($2))),$0)
example_end

Sent: can I help you Adam ?
Sem: lambda $0_{r}.Q(mod|can_1(v|help_3(pro:sub|i_2,pro:per|you_4,$0),$0))
example_end

Sent: now let 's make a little one for a head .
Sem: lambda $0_{r}.and(v:obj|let_2(you,lambda $1_{r}.and(v|make_4(pro:obj|~us_3,det:art|a_5($2,att(pro:indef|one_7,BARE($3,adj|little_6($3)),$2)),$1),prep|for_8(det:art|a_9($4,n|head_10($4)),$1)),$0),adv|now_1($0))
example_end

Sent: it 's so sticky .
Sem: lambda $0_{r}.adv|so_3(n|sticky_4(pro:per|it_1,$0))
example_end

Sent: it 's finished .
Sem: lambda $0_{r}.aux|~be_2(part|finish-pastp_3(pro:per|it_1,$0),$0)
example_end

Sent: you name it .
Sem: lambda $0_{r}.v|name_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: you 're not an eye ?
Sem: lambda $0_{r}.Q(not(det:art|a_4(pro:per|you_1,n|eye_5(pro:per|you_1,$0)),$0))
example_end

Sent: an arm ?
Sem: BARE($0,Q(det:art|a_1($1,n|arm_2($1),$0)))
example_end

Sent: it 's very hard .
Sem: lambda $0_{r}.adv|very_3(adv|hard_4(pro:per|it_1,$0))
example_end

Sent: I can 't do it .
Sem: lambda $0_{r}.not(mod|can_2(v|do_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: it will break .
Sem: lambda $0_{r}.mod|will_2(v|break_3(pro:per|it_1,$0),$0)
example_end

Sent: was that Do_Bee ?
Sem: lambda $0_{r}.Q(n:prop|do_bee_3(pro:rel|that_2,$0))
example_end

Sent: like one of these ?
Sem: BARE($0,pro:indef|one_2($0))
example_end

Sent: that 's his pen .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|pen_4(pro:dem|that_1,$0))
example_end

Sent: for you ?
Sem: Q(conj|for_1(pro:per|you_2))
example_end

Sent: that 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:dem|that_1,$1(pro:dem|that_1,$0))
example_end

Sent: oh that 's an elephant .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|elephant_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: lost a piggie ?
Sem: lambda $0_{r}.Q(v|lose-past_1(you,det:art|a_2($1,n|pig-dim_3($1)),$0))
example_end

Sent: you 're dripping down ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|drip-presp_3(pro:per|you_1,$0),adv|down_4($0)),$0))
example_end

Sent: at the mouth .
Sem: prep|at_1(det:art|the_2($0,n|mouth_3($0)))
example_end

Sent: yes I 'm writing .
Sem: lambda $0_{r}.and(aux|~be_3(part|write-presp_4(pro:sub|i_2,$0),$0),co|yes_1($0))
example_end

Sent: Adam did .
Sem: lambda $0_{r}.v|do-past_2(n:prop|adam_1,$0)
example_end

Sent: I have one .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,pro:indef|one_3,$0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: I don 't think the doggie wants to write .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|want-3s_7(det:art|the_5($2,n|dog-dim_6($2)),lambda $3_{r}.v|write_9(det:art|the_5($2,n|dog-dim_6($2)),$3),$1),$0),$0),$0)
example_end

Sent: who did that ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2($1,pro:dem|that_3,$0)
example_end

Sent: who did that ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2($1,pro:dem|that_3,$0)
example_end

Sent: I guess Adam did .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.v|do-past_4(n:prop|adam_3,$1),$0)
example_end

Sent: who did what ?
Sem: lambda $2_{e}.lambda $1_{e}.lambda $0_{r}.v|do-past_2($1,$2,$0)
example_end

Sent: that 's a can opener .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|can_4(pro:dem|that_1,$0),adj|open-cp_5(pro:dem|that_1,$0)))
example_end

Sent: have something on the table that Ursula brought Adam .
Sem: lambda $0_{r}.and(v|have_1(you,BARE($1,pro:indef|something_2($1)),$0),prep|on_3(det:art|the_4($2,n|table_5($2)),$0))
example_end

Sent: see it .
Sem: lambda $0_{r}.v|see_1(you,pro:per|it_2,$0)
example_end

Sent: I 'm looking for this .
Sem: lambda $0_{r}.aux|~be_2(and(part|look-presp_3(pro:sub|i_1,$0),prep|for_4(pro:dem|this_5,$0)),$0)
example_end

Sent: I think I did .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|do-past_4(pro:sub|i_3,$1),$0)
example_end

Sent: you can close it if you want .
Sem: lambda $0_{r}.conj|if_5(v|want_7(pro:per|you_6,$0),mod|can_2(v|close_3(pro:per|you_1,pro:per|it_4,$0),$0))
example_end

Sent: she needs that pencil .
Sem: lambda $0_{r}.v|need-3s_2(pro:sub|she_1,pro:rel|that_3($1,n|pencil_4($1)),$0)
example_end

Sent: where did you put Ursula 's other pencil ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,n:prop|ursula_5's($1,and(qn|other_7($1),n|pencil_8($1))),$0),$2($0)),$0)
example_end

Sent: I thought you wanted Ursula to read that .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.v|want-past_4(pro:per|you_3,lambda $2_{r}.v|read-zero_7(n:prop|ursula_5,pro:dem|that_8,$2),$1),$0)
example_end

Sent: Adam Smith ?
Sem: BARE($0,Q(n:prop|smith_2_adam_1($0)))
example_end

Sent: or a baby 's nose .
Sem: n|baby_3's($0,n|nose_5($0))
example_end

Sent: there they are .
Sem: lambda $0_{r}.adv|there_1(pro:sub|they_2,$0)
example_end

Sent: there are the kitties .
Sem: lambda $0_{r}.cop|be-pres_2(det:art|the_3($1,n|kitty-pl_4($1)),$0)
example_end

Sent: they 're sitting at the table .
Sem: lambda $0_{r}.aux|~be_2(and(part|sit-presp_3(pro:sub|they_1,$0),prep|at_4(det:art|the_5($1,n|table_6($1)),$0)),$0)
example_end

Sent: I don 't think they went anyplace .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(v|go-past_6(pro:sub|they_5,$1),adv|anyplace_7($1)),$0),$0),$0)
example_end

Sent: we read that side .
Sem: lambda $0_{r}.v|read-zero_2(pro:sub|we_1,pro:dem|that_3($1,n|side_4($1)),$0)
example_end

Sent: they 're painting .
Sem: lambda $0_{r}.aux|~be_2(part|paint-presp_3(_,pro:sub|they_1,$0),$0)
example_end

Sent: well I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|well_1($0))
example_end

Sent: I just read that .
Sem: lambda $0_{r}.and(v|read-zero_3(pro:sub|i_1,pro:dem|that_4,$0),adv|just_2($0))
example_end

Sent: you read it to me now .
Sem: lambda $0_{r}.and(and(v|read-zero_2(pro:per|you_1,pro:per|it_3,$0),prep|to_4(pro:obj|me_5,$0)),adv|now_6($0))
example_end

Sent: a bear ?
Sem: BARE($0,Q(det:art|a_1($1,n|bear_2($1),$0)))
example_end

Sent: color kittens .
Sem: BARE($0,and_comp(n|color_1($0),n|kitten-pl_2($0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a bucket of paint .
Sem: det:art|a_1($0,att(n|bucket_2($0),prep|of_3(BARE($1,n|paint_4($1)))))
example_end

Sent: color kitten .
Sem: BARE($0,and_comp(n|color_1($0),n|kitten_2($0)))
example_end

Sent: now it 's large enough .
Sem: lambda $0_{r}.adv|enough_5(adv|now_1(n|large_4(pro:per|it_2,$0)))
example_end

Sent: now it 's large enough .
Sem: lambda $0_{r}.adv|enough_5(adv|now_1(n|large_4(pro:per|it_2,$0)))
example_end

Sent: you want to get down ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,lambda $1_{r}.and(v|get_4(you,$1),adv|down_5($1)),$0))
example_end

Sent: get down .
Sem: lambda $0_{r}.and(v|get_1(you,$0),adv|down_2($0))
example_end

Sent: jump down ?
Sem: BARE($0,Q(adv|down_2(BARE($1,n|jump_1($1)),$0)))
example_end

Sent: I don 't know what you 're saying .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.aux|~be_7(part|say-presp_8(pro:per|you_6,pro:int|what_5,$1),$1),$0),$0),$0)
example_end

Sent: what 're you saying ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|say-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: jump down ?
Sem: BARE($0,Q(adv|down_2(BARE($1,n|jump_1($1)),$0)))
example_end

Sent: what about time ?
Sem: att(pro:int|what_1,adv|about_2(BARE($0,n|time_3($0))))
example_end

Sent: that 's mail ?
Sem: lambda $0_{r}.Q(n|mail_3(pro:dem|that_1,$0))
example_end

Sent: post office mail ?
Sem: BARE($0,Q(and_comp(and_comp(n|post_1($0),n|office_2($0)),n|mail_3($0))))
example_end

Sent: where pen Adam ?
Sem: lambda $0_{r}.Q(adv:int|where_1(BARE($1,n|pen_2($1)),$0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: where are you going with Ursula 's cup ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),prep|with_5(n:prop|ursula_6's($2,n|cup_8($2)),$0)),$0)
example_end

Sent: no bring it back .
Sem: lambda $0_{r}.and(and(v|bring_2(you,pro:per|it_3,$0),adv|back_4($0)),co|no_1($0))
example_end

Sent: and bring the pencils back too .
Sem: lambda $0_{r}.and(and(v|bring_2(you,det:art|the_3($1,n|pencil-pl_4($1)),$0),adv|back_5($0)),post|too_6($0))
example_end

Sent: where did you put them ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:obj|them_5,$0),$1($0)),$0)
example_end

Sent: where did you put the milk ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,det:art|the_5($1,n|milk_6($1)),$0),$2($0)),$0)
example_end

Sent: in the refrigerator so it will be nice and warm .
Sem: det:art|the_2($0,n|refrigerator_3($0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that can 't be eaten .
Sem: lambda $0_{r}.not(mod|can_2(part|eat-pastp_5(pro:rel|that_1,$0),$0),$0)
example_end

Sent: it doesn 't taste good does it .
Sem: lambda $0_{r}.and(not(mod|do_2(v|taste_4(pro:per|it_1,lambda $1_{r}.adj|good_5(pro:per|it_1,$1),$0),$0),$0),mod|do-3s_6(pro:per|it_7,$0))
example_end

Sent: well why don 't you take it out ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(not(mod|do_3(and(and(v|take_6(pro:per|you_5,pro:per|it_7,$0),$1($0)),adv|out_8($0)),$0),$0),co|well_1($0))
example_end

Sent: what do you have Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is the pencil ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|pencil_4($2)),$0)
example_end

Sent: you 're going to see the bear ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|see_5(pro:per|you_1,det:art|the_6($2,n|bear_7($2)),$1),$0),$0))
example_end

Sent: there 's ice in here .
Sem: lambda $0_{r}.and(cop|~be_2(BARE($1,n|ice_3($1)),$0),adv|here_5($0))
example_end

Sent: in the fire .
Sem: prep|in_1(det:art|the_2($0,n|fire_3($0)))
example_end

Sent: for cigarette ?
Sem: Q(prep|for_1(BARE($0,n|cigarette_2($0))))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: you don 't see Cromer smoking do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|see_4(pro:per|you_1,lambda $1_{r}.part|smoke-presp_6(n:prop|cromer_5,$1),$0),$0),$0),v|do_7(pro:per|you_8,$0)))
example_end

Sent: to why do you want to smoke ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_3(and(v|want_5(pro:per|you_4,lambda $1_{r}.v|smoke_7(pro:per|you_4,$1),$0),$2($0)),$0)
example_end

Sent: do you know whose face that is ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.pro:rel|whose_4(pro:rel|that_6,n|face_5(pro:rel|that_6,$1)),$0),$0))
example_end

Sent: who is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: who has a moustache ?
Sem: lambda $1_{e}.lambda $0_{r}.v|have-3s_2($1,det:art|a_3($2,n|moustache_4($2)),$0)
example_end

Sent: who looks like that ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|look-3s_2($1,$0),prep|like_3(pro:dem|that_4,$0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: what are you doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: that 's his hair .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|hair_4(pro:dem|that_1,$0))
example_end

Sent: there are his ears .
Sem: lambda $0_{r}.cop|be-pres_2(det:poss|his_3($1,n|ear-pl_4($1)),$0)
example_end

Sent: and two eyes .
Sem: BARE($0,det:num|two_2(n|eye-pl_3($0)))
example_end

Sent: and a nose .
Sem: det:art|a_2($0,n|nose_3($0))
example_end

Sent: and moustache .
Sem: BARE($0,n|moustache_2($0))
example_end

Sent: and mouth .
Sem: BARE($0,n|mouth_2($0))
example_end

Sent: and chin .
Sem: BARE($0,n|chin_2($0))
example_end

Sent: and a necktie .
Sem: det:art|a_2($0,n|necktie_3($0))
example_end

Sent: and shirt .
Sem: BARE($0,n|shirt_2($0))
example_end

Sent: who is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: do you know the man 's name ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,n|man_5's($1,n|name_7($1)),$0),$0))
example_end

Sent: Adam 's a big boy ?
Sem: lambda $0_{r}.Q(det:art|a_3(n:prop|adam_1,and(n|boy_5(n:prop|adam_1,$0),adj|big_4(n:prop|adam_1,$0))))
example_end

Sent: two truck ?
Sem: BARE($0,Q(det:num|two_1(n|truck_2($0))))
example_end

Sent: like a tow truck ?
Sem: Q(prep|like_1(det:art|a_2($0,and_comp(n|tow_3($0),n|truck_4($0)))))
example_end

Sent: use Alvin 's tow truck ?
Sem: lambda $0_{r}.Q(n|use_1(you,n:prop|alvin_2's($1,and_comp(n|tow_4($1),n|truck_5($1))),$0))
example_end

Sent: aren 't you ashamed .
Sem: lambda $0_{r}.not(adj|ashamed_4(pro:per|you_3,$0),$0)
example_end

Sent: ashamed of Daddy ?
Sem: BARE($0,adj|ashamed_1($0))
example_end

Sent: shame Daddy ?
Sem: BARE($0,Q(n|shame_1($0)))
example_end

Sent: don 't stand up on the chair honey .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|stand_3(you,$0),adv|up_4($0)),prep|on_5(det:art|the_6($1,n|chair_7($1)),$0)),$0),$0)
example_end

Sent: remember we don 't stand up on chairs .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(v|stand_5(pro:sub|we_2,$0),adv|up_6($0)),prep|on_7(BARE($1,n|chair-pl_8($1)),$0)),$0),$0),v|remember_1(you,$0))
example_end

Sent: we sit down on chairs .
Sem: lambda $0_{r}.and(and(v|sit_2(pro:sub|we_1,$0),adv|down_3($0)),prep|on_4(BARE($1,n|chair-pl_5($1)),$0))
example_end

Sent: you don 't want to ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|want_4(pro:per|you_1,$0),$0),$0))
example_end

Sent: don 't tie it up ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|tie_3(you,pro:per|it_4,$0),adv|up_5($0)),$0),$0))
example_end

Sent: it 's on the floor .
Sem: lambda $0_{r}.adv|on_3(det:art|the_4($1,n|floor_5($1)),pro:per|it_1,$0)
example_end

Sent: no that 's not the moon .
Sem: lambda $0_{r}.and(not(det:art|the_5(pro:dem|that_2,n|moon_6(pro:dem|that_2,$0)),$0),co|no_1($0))
example_end

Sent: yes that is a train .
Sem: lambda $0_{r}.and(det:art|a_4(pro:rel|that_2,n|train_5(pro:rel|that_2,$0)),co|yes_1($0))
example_end

Sent: no I don 't think he 's tired .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.part|tire-pastp_8(pro:sub|he_6,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: come on pal .
Sem: lambda $0_{r}.v|come_1_on_2(you,$0)
example_end

Sent: come on pal .
Sem: lambda $0_{r}.v|come_1_on_2(you,$0)
example_end

Sent: a pal ?
Sem: BARE($0,Q(det:art|a_1($1,n|pal_2($1),$0)))
example_end

Sent: yes that 's a rooster .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|rooster_5(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: looks like the head of a cow .
Sem: lambda $0_{r}.and(cop|look-3s_1(you,$0),prep|like_2(det:art|the_3($1,att(n|head_4($1),prep|of_5(det:art|a_6($2,n|cow_7($2))))),$0))
example_end

Sent: no I don 't think he would sleep in a bunkhouse .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|will-cond_7(and(v|sleep_8(pro:sub|he_6,$1),prep|in_9(det:art|a_10($2,n|bunkhouse_11($2)),$1)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: a moustache mhm .
Sem: lambda $0_{r}.and(det:art|a_1($1,n|moustache_2($1),$0),co|yes_3($0))
example_end

Sent: that 's a beard .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|beard_4(pro:dem|that_1,$0))
example_end

Sent: that 's a little one .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(pro:indef|one_5(pro:dem|that_1,$0),adj|little_4(pro:dem|that_1,$0)))
example_end

Sent: I don 't know what kind you 'd call that .
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.mod|~genmod_8(v|call_9(pro:per|you_7,$2($3,n|kind_6($3)),pro:dem|that_10,$1),$1),$0),$0),$0)
example_end

Sent: you missed what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|miss-past_2(pro:per|you_1,$1,$0)
example_end

Sent: what are you looking for ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|look-presp_4_for_5(pro:per|you_3,$1,$0),$0)
example_end

Sent: no that 's the doggie .
Sem: lambda $0_{r}.and(det:art|the_4(pro:dem|that_2,n|dog-dim_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: don 't fight me ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|fight_3(you,pro:obj|me_4,$0),$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it 's all squashed up .
Sem: lambda $0_{r}.adv|up_5(adv|all_3(part|squash-pastp_4(pro:per|it_1,$0)))
example_end

Sent: I don 't recognize it .
Sem: lambda $0_{r}.not(mod|do_2(v|recognize_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: that too small ?
Sem: lambda $0_{r}.Q(adv|too_2(adj|small_3(pro:dem|that_1,$0)))
example_end

Sent: what was it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: medicine yes .
Sem: lambda $0_{r}.and(n|medicine_1($0),co|yes_2($0))
example_end

Sent: were you all red ?
Sem: lambda $0_{r}.Q(adv|all_3(adj|red_4(pro:per|you_2,$0)))
example_end

Sent: you 're sleeping ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|sleep-presp_3(pro:per|you_1,$0),$0))
example_end

Sent: oh you 're sleeping in the bunkhouse ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|sleep-presp_4(pro:per|you_2,$0),prep|in_5(det:art|the_6($1,n|bunkhouse_7($1)),$0)),$0),co|oh_1($0)))
example_end

Sent: sleeping on the floor ?
Sem: lambda $0_{r}.Q(and(part|sleep-presp_1(you,$0),prep|on_2(det:art|the_3($1,n|floor_4($1)),$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's an eagle .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|eagle_4(pro:dem|that_1,$0))
example_end

Sent: yes eagles that are alive do fly .
Sem: lambda $0_{r}.and(mod|do_6(v|fly_7(BARE($1,n|eagle-pl_2($1)),$0),$0),co|yes_1($0))
example_end

Sent: wait you can 't fly either .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|fly_5(pro:per|you_2,$0),adv|either_6($0)),$0),$0),v|wait_1(you,$0))
example_end

Sent: who did what ?
Sem: lambda $2_{e}.lambda $1_{e}.lambda $0_{r}.v|do-past_2($1,$2,$0)
example_end

Sent: Mommy did what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(n:prop|mommy_1,$1,$0)
example_end

Sent: you 're what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_1,$0)
example_end

Sent: dog missed it .
Sem: lambda $0_{r}.v|miss-past_2(BARE($1,n|dog_1($1)),pro:per|it_3,$0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: that 's no tunnel that 's a microphone .
Sem: lambda $0_{r}.and(not(n|tunnel_4(pro:dem|that_1,$0),$0),det:art|a_7(pro:rel|that_5,n|microphone_8(pro:rel|that_5,$0)))
example_end

Sent: where are you sitting ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|sit-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: he 's saying part of his grace .
Sem: lambda $0_{r}.aux|~be_2(part|say-presp_3(pro:sub|he_1,BARE($1,att(n|part_4($1),prep|of_5(det:poss|his_6($2,n|grace_7($2))))),$0),$0)
example_end

Sent: yes don 't you have fingers ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|have_5(pro:per|you_4,BARE($1,n|finger-pl_6($1)),$0),$0),$0),co|yes_1($0)))
example_end

Sent: it 's Rusty who has fingers .
Sem: lambda $0_{r}.n:prop|rusty_3(pro:per|it_1,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: flower it 's a mouse .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|mouse_5(pro:per|it_2,$0)),BARE($1,n|flower_1($1)))
example_end

Sent: Rusty 's hat ?
Sem: BARE($0,Q(n:prop|rusty_1's($1,n|hat_3($1),$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: cowboy hat ?
Sem: BARE($0,and_comp(n|cow+boy_1($0),n|hat_2($0)))
example_end

Sent: you almost ran into Mr Cromer 's feet .
Sem: lambda $0_{r}.and(and(v|run-past_3(pro:per|you_1,$0),adv|almost_2($0)),prep|into_4(n:prop|mr_5_cromer_6's($1,n|foot-pl_8($1)),$0))
example_end

Sent: oh that 's okay .
Sem: lambda $0_{r}.and(adj|okay_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: kiss your knee !
Sem: lambda $0_{r}.v|kiss_1(you,det:poss|your_2($1,n|knee_3($1)),$0)
example_end

Sent: you kiss it .
Sem: lambda $0_{r}.v|kiss_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: feel better ?
Sem: lambda $0_{r}.Q(and(v|feel_1(you,$0),adj|good-cp_2($0)))
example_end

Sent: can you take it off ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|take_3(pro:per|you_2,pro:per|it_4,$0),adv|off_5($0)),$0))
example_end

Sent: don 't fight you ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|fight_3(you,pro:per|you_4,$0),$0),$0))
example_end

Sent: who 's been fighting you ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pastp_3(aux|~be_2(part|fight-presp_4($1,pro:per|you_5,$0),$0),$0)
example_end

Sent: no he needs his paper .
Sem: lambda $0_{r}.and(v|need-3s_3(pro:sub|he_2,det:poss|his_4($1,n|paper_5($1)),$0),co|no_1($0))
example_end

Sent: let him give you some paper okay ?
Sem: lambda $0_{r}.Q(and(v|let-zero_1(you,lambda $1_{r}.v|give_3(pro:obj|him_2,qn|some_5($2,n|paper_6($2)),pro:per|you_4,$1),$0),adj|okay_7($0)))
example_end

Sent: who wrote on that ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|write-past_2($1,$0),prep|on_3(pro:dem|that_4,$0))
example_end

Sent: Cromer did ?
Sem: lambda $0_{r}.Q(v|do-past_2(n:prop|cromer_1,$0))
example_end

Sent: do you know what it says ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.v|say-3s_6(pro:per|it_5,pro:int|what_4,$1),$0),$0))
example_end

Sent: what does that say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: well what does that say ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do-3s_3(v|say_5(pro:dem|that_4,$1,$0),$0),co|well_1($0))
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: bring your scissors over to the table .
Sem: lambda $0_{r}.and(and(v|bring_1(you,det:poss|your_2($1,n|scissors_3($1)),$0),adv|over_4($0)),prep|to_5(det:art|the_6($2,n|table_7($2)),$0))
example_end

Sent: oh this is a house ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:dem|this_2,n|house_5(pro:dem|this_2,$0)),co|oh_1($0)))
example_end

Sent: what a nice house .
Sem: lambda $1_{<<e,e>,e>}.det:art|a_2($0,$1($2,and(adj|nice_3($2),n|house_4($2)),$0))
example_end

Sent: love a what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|love_1(you,$1,$0)
example_end

Sent: for moose ?
Sem: Q(prep|for_1(BARE($0,n|moose_2($0))))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 've got what on ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~have_2(and(v|get-past_3(pro:per|you_1,$1,$0),adv|on_5($0)),$0)
example_end

Sent: Cromer 's face ?
Sem: BARE($0,Q(n:prop|cromer_1's($1,n|face_3($1),$0)))
example_end

Sent: how man eyes ?
Sem: lambda $1_{e}.BARE($0,and($1(n|man_2($0)),n|eye-pl_3($0)))
example_end

Sent: four eyes .
Sem: BARE($0,det:num|four_1(n|eye-pl_2($0)))
example_end

Sent: how many ears ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|ear-pl_3($0)))
example_end

Sent: four ears .
Sem: BARE($0,det:num|four_1(n|ear-pl_2($0)))
example_end

Sent: how many mouths ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|mouth-pl_3($0)))
example_end

Sent: why does Mommy get spanked ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|get_4(mod|do-3s_2(and(part|spank-pastp_5(n:prop|mommy_3,$0),$1($0)),$0),$0)
example_end

Sent: why are you spanking Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|spank-presp_4(pro:per|you_3,n:prop|adam_5,$0),$1($0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: Shadow did ?
Sem: lambda $0_{r}.Q(v|do-past_2(n:prop|shadow_1,$0))
example_end

Sent: Daddy says to have two minutes ?
Sem: lambda $0_{r}.Q(v|say-3s_2(n:prop|daddy_1,lambda $1_{r}.v|have_4(n:prop|daddy_1,BARE($2,det:num|two_5(n|minute-pl_6($2))),$1),$0))
example_end

Sent: squeaking not squealing .
Sem: lambda $0_{r}.and(part|squeak-presp_1(you,$0),not(part|squeal-presp_3(you,$0),$0))
example_end

Sent: the drawer I guess .
Sem: lambda $0_{r}.and(det:art|the_1($1,n|drawer_2($1)),v|guess_4(pro:sub|i_3,$0))
example_end

Sent: put the other box down .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:art|the_2($1,and(qn|other_3($1),n|box_4($1))),$0),adv|down_5($0))
example_end

Sent: that pan yes put it down .
Sem: lambda $0_{r}.and(and(v|put-zero_4(you,pro:per|it_5,$0),adv|down_6($0)),co|yes_3($0))
example_end

Sent: put that down .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:dem|that_2,$0),adv|down_3($0))
example_end

Sent: what about two minutes ?
Sem: att(pro:int|what_1,adv|about_2(BARE($0,det:num|two_3(n|minute-pl_4($0)))))
example_end

Sent: yes I thought you said this was a house .
Sem: lambda $0_{r}.and(v|think-past_3(pro:sub|i_2,lambda $1_{r}.v|say-past_5(pro:per|you_4,lambda $2_{r}.det:art|a_8(pro:dem|this_6,n|house_9(pro:dem|this_6,$2)),$1),$0),co|yes_1($0))
example_end

Sent: why did you change your mind ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|change_4_mind_6(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: two minutes what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,det:num|two_1(n|minute-pl_2($2))),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: yes what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0),co|yes_1($0))
example_end

Sent: you 're cutting in the trash can ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|cut-presp_3(pro:per|you_1,$0),prep|in_4(det:art|the_5($1,and_comp(n|trash_6($1),mod|can_7($1))),$0)),$0))
example_end

Sent: oh I didn 't bring it today Adam .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|bring_5(pro:sub|i_2,pro:per|it_6,$0),adv:tem|today_7($0)),$0),$0),co|oh_1($0))
example_end

Sent: yes the harpsichord record is in the living room .
Sem: lambda $0_{r}.and(prep|in_6(det:art|the_7($1,and_comp(part|live-presp_8($1),n|room_9($1))),det:art|the_2($2,and_comp(n|harpsichord_3($2),n|record_4($2))),$0),co|yes_1($0))
example_end

Sent: you know where it went .
Sem: lambda $0_{r}.v|know_2(pro:per|you_1,lambda $1_{r}.and(v|go-past_5(pro:per|it_4,$1),adv:int|where_3($1)),$0)
example_end

Sent: read that ?
Sem: lambda $0_{r}.Q(v|read-zero_1(you,pro:dem|that_2,$0))
example_end

Sent: what does it say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: oh it says harpsichord ?
Sem: lambda $0_{r}.Q(and(v|say-3s_3(pro:per|it_2,BARE($1,n|harpsichord_4($1)),$0),co|oh_1($0)))
example_end

Sent: how do you spell harpsichord ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(n|spell_4(pro:per|you_3,BARE($1,n|harpsichord_5($1)),$0),$2($0)),$0)
example_end

Sent: oh Daddy 's harpsichord .
Sem: lambda $0_{r}.and(n:prop|daddy_2's($1,n|harpsichord_4($1),$0),co|oh_1($0))
example_end

Sent: yes you are a big boy .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|you_2,and(n|boy_6(pro:per|you_2,$0),adj|big_5(pro:per|you_2,$0))),co|yes_1($0))
example_end

Sent: for Daddy ?
Sem: Q(conj|for_1(n:prop|daddy_2))
example_end

Sent: whose house is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|house_2(pro:dem|that_4,$0))
example_end

Sent: you dropped it ?
Sem: lambda $0_{r}.Q(v|drop-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: behind you .
Sem: prep|behind_1(pro:per|you_2)
example_end

Sent: two minutes ?
Sem: BARE($0,Q(det:num|two_1(n|minute-pl_2($0))))
example_end

Sent: what about two minutes ?
Sem: att(pro:int|what_1,adv|about_2(BARE($0,det:num|two_3(n|minute-pl_4($0)))))
example_end

Sent: for two minutes ?
Sem: Q(prep|for_1(BARE($0,det:num|two_2(n|minute-pl_3($0)))))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: those are Daddy 's things .
Sem: lambda $0_{r}.n:prop|daddy_3's'(pro:dem|those_1,n|thing-pl_5(pro:dem|those_1,$0))
example_end

Sent: don 't take them out .
Sem: lambda $0_{r}.not(mod|do_1(and(v|take_3(you,pro:obj|them_4,$0),adv|out_5($0)),$0),$0)
example_end

Sent: what was that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh what does it do ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do-3s_3(v|do_5(pro:per|it_4,$1,$0),$0),co|oh_1($0))
example_end

Sent: oh it goes right there ?
Sem: lambda $0_{r}.Q(and(and(v|go-3s_3(pro:per|it_2,$0),adv|right_4(adv|there_5($0))),co|oh_1($0)))
example_end

Sent: you don 't care ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|care_4(pro:per|you_1,$0),$0),$0))
example_end

Sent: why are you putting it there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|put-presp_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),adv|there_6($0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh it helps to pull it ?
Sem: lambda $0_{r}.Q(and(v|help-3s_3(pro:per|it_2,lambda $1_{r}.v|pull_5(pro:per|it_2,pro:per|it_6,$1),$0),co|oh_1($0)))
example_end

Sent: yes what does it do ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do-3s_3(v|do_5(pro:per|it_4,$1,$0),$0),co|yes_1($0))
example_end

Sent: didn 't you drop some on the floor ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|drop_4(pro:per|you_3,qn|some_5,$0),prep|on_6(det:art|the_7($1,n|floor_8($1)),$0)),$0),$0))
example_end

Sent: I understood fire truck .
Sem: lambda $0_{r}.and(v|understand-past_2(pro:sub|i_1,$0),BARE($1,and_comp(n|fire_3($1),n|truck_4($1))))
example_end

Sent: no he 's not taking them out .
Sem: lambda $0_{r}.and(not(aux|~be_3(and(part|take-presp_5(pro:sub|he_2,pro:obj|them_6,$0),adv|out_7($0)),$0),$0),co|no_1($0))
example_end

Sent: I don 't see how they can help you because they won 't stay on the wheels .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,lambda $1_{r}.conj|because_10(not(mod|will_12(and(cop|stay_14(pro:sub|they_11,$1),prep|on_15(det:art|the_16($2,n|wheel-pl_17($2)),$1)),$1),$1),mod|can_7(and(v|help_8(pro:sub|they_6,pro:per|you_9,$1),adv:int|how_5($1)),$1)),$0),$0),$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: now no more .
Sem: qn|no_2($0,adv|now_1(BARE($1,pro:indef|more_3($1)),$0))
example_end

Sent: close the drawer .
Sem: lambda $0_{r}.v|close_1(you,det:art|the_2($1,n|drawer_3($1)),$0)
example_end

Sent: you missed it .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: what are you putting on ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|put-presp_4_on_5(pro:per|you_3,$1,$0),$0)
example_end

Sent: no more .
Sem: qn|no_1($0,pro:indef|more_2($0))
example_end

Sent: look on the floor .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|on_2(det:art|the_3($1,n|floor_4($1)),$0))
example_end

Sent: I don 't know who did .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|do-past_6(pro:int|who_5,$1),$0),$0),$0)
example_end

Sent: it must have been Adam .
Sem: lambda $0_{r}.aux|have_3(mod|must_2(n:prop|adam_5(pro:per|it_1,$0),$0),$0)
example_end

Sent: well what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|well_1($0))
example_end

Sent: look under your other wheel .
Sem: lambda $0_{r}.and(co|look_1(you,$0),adv|under_2(det:poss|your_3($1,and(qn|other_4($1),n|wheel_5($1))),$0))
example_end

Sent: the other one .
Sem: det:art|the_1($0,att(pro:indef|one_3,BARE($1,qn|other_2($1)),$0))
example_end

Sent: look under the one .
Sem: lambda $0_{r}.and(co|look_1(you,$0),prep|under_2(det:art|the_3($1,pro:indef|one_4($1)),$0))
example_end

Sent: thank_you very much .
Sem: lambda $0_{r}.and(co|thank_you_1(you,$0),qn|much_4($0))
example_end

Sent: they don 't really belong over there .
Sem: lambda $0_{r}.not(mod|do_2(and(and(v|belong_5(pro:sub|they_1,$0),adv|real-dadj_4($0)),adv|there_7($0)),$0),$0)
example_end

Sent: yes you still have some on there .
Sem: lambda $0_{r}.and(and(and(v|have_4(pro:per|you_2,qn|some_5,$0),adv|still_3($0)),adv|there_7($0)),co|yes_1($0))
example_end

Sent: I thought he said you two fighting .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:sub|he_3,lambda $2_{r}.part|fight-presp_7(BARE($3,det:num|two_6(pro:per|you_5($3))),$2),$1),$0)
example_end

Sent: belongs on the pedal ?
Sem: lambda $0_{r}.Q(and(v|belong-3s_1(you,$0),prep|on_2(det:art|the_3($1,n|pedal_4($1)),$0)))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: he doesn 't want his fingers popped either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|want_4(pro:sub|he_1,lambda $1_{r}.v|pop-past_7(det:poss|his_5($2,n|finger-pl_6($2)),$1),$0),adv|either_8($0)),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where does that go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|go_4(det:dem|that_3,$0),$1($0)),$0)
example_end

Sent: oh you put it together again .
Sem: lambda $0_{r}.and(and(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),adv|together_5($0)),adv|again_6($0)),co|oh_1($0))
example_end

Sent: they don 't really belong in there .
Sem: lambda $0_{r}.not(mod|do_2(and(and(v|belong_5(pro:sub|they_1,$0),adv|real-dadj_4($0)),adv|there_7($0)),$0),$0)
example_end

Sent: Mommy can 't do it if you can 't do it .
Sem: lambda $0_{r}.not(conj|if_6(not(mod|can_8(v|do_10(pro:per|you_7,pro:per|it_11,$0),$0),$0),mod|can_2(v|do_4(n:prop|mommy_1,pro:per|it_5,$0),$0)),$0)
example_end

Sent: why are you looking at Ursula ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|look-presp_4(pro:per|you_3,$0),$1($0)),prep|at_5(n:prop|ursula_6,$0)),$0)
example_end

Sent: aren 't you ashamed .
Sem: lambda $0_{r}.not(adj|ashamed_4(pro:per|you_3,$0),$0)
example_end

Sent: yes leave the doggie up .
Sem: lambda $0_{r}.and(and(v|leave_2(you,det:art|the_3($1,n|dog-dim_4($1)),$0),adv|up_5($0)),co|yes_1($0))
example_end

Sent: does he have boots on ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|have_3(pro:sub|he_2,BARE($1,n|boot-pl_4($1)),$0),adv|on_5($0)),$0))
example_end

Sent: are you coming ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|come-presp_3(pro:per|you_2,$0),$0))
example_end

Sent: what are you going to do ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|do_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: good night .
Sem: BARE($0,and(adj|good_1($0),n|night_2($0)))
example_end

Sent: cross the bridge .
Sem: lambda $0_{r}.n|cross_1(you,det:art|the_2($1,n|bridge_3($1)),$0)
example_end

Sent: Soakie 's under there ?
Sem: lambda $0_{r}.Q(adv|under_3(adv|there_4,n:prop|soakie_1,$0))
example_end

Sent: Adam what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_3(part|do-presp_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: and get my pencil out first .
Sem: lambda $0_{r}.and(and(v|get_2(you,det:poss|my_3($1,n|pencil_4($1)),$0),adv|out_5($0)),adv|first_6($0))
example_end

Sent: how d you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: I show you ?
Sem: lambda $0_{r}.v|show_2(pro:sub|i_1,pro:per|you_3,$0)
example_end

Sent: you like one ?
Sem: lambda $0_{r}.Q(v|like_2(pro:per|you_1,pro:indef|one_3,$0))
example_end

Sent: who is driving ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-3s_2(part|drive-presp_3($1,$0),$0)
example_end

Sent: oh did you used to have one ?
Sem: lambda $0_{r}.Q(and(mod|do-past_2(v|use-past_4(pro:per|you_3,lambda $1_{r}.v|have_6(pro:per|you_3,pro:indef|one_7,$1),$0),$0),co|oh_1($0)))
example_end

Sent: what part broke ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.adj|broke_3($1($2,n|part_2($2)),$0)
example_end

Sent: can you fix it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|fix_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: you 're not finished with that yet .
Sem: lambda $0_{r}.not(aux|~be_2(and(and(part|finish-pastp_4(pro:per|you_1,$0),prep|with_5(pro:dem|that_6,$0)),adv|yet_7($0)),$0),$0)
example_end

Sent: I 'll pull something out .
Sem: lambda $0_{r}.mod|~will_2(and(v|pull_3(pro:sub|i_1,pro:indef|something_4,$0),adv|out_5($0)),$0)
example_end

Sent: d you want to put your hand in it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_5(pro:per|you_2,det:poss|your_6($2,n|hand_7($2)),$1),prep|in_8(pro:per|it_9,$1)),$0),$0))
example_end

Sent: you put your hand in .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,det:poss|your_3($1,n|hand_4($1)),$0),adv|in_5($0))
example_end

Sent: can 't you close your mouth ?
Sem: lambda $0_{r}.Q(not(mod|can_1(v|close_4(pro:per|you_3,det:poss|your_5($1,n|mouth_6($1)),$0),$0),$0))
example_end

Sent: can you put some of your fingers in this part ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,qn|some_4(det:poss|your_6($1,n|finger-pl_7($1))),$0),prep|in_8(pro:dem|this_9($2,n|part_10($2)),$0)),$0))
example_end

Sent: now he can close his mouth .
Sem: lambda $0_{r}.mod|can_3(and(v|close_4(pro:sub|he_2,det:poss|his_5($1,n|mouth_6($1)),$0),adv|now_1($0)),$0)
example_end

Sent: what is he saying ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|say-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: he 's singing .
Sem: lambda $0_{r}.aux|~be_2(part|sing-presp_3(pro:sub|he_1,$0),$0)
example_end

Sent: I make a birdie ?
Sem: lambda $0_{r}.Q(v|make_2(pro:sub|i_1,det:art|a_3($1,n|bird-dim_4($1)),$0))
example_end

Sent: is that a birdie ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|bird-dim_4(pro:rel|that_2,$0)))
example_end

Sent: that doesn 't look like a birdie .
Sem: lambda $0_{r}.not(mod|do_2(and(cop|look_4(pro:dem|that_1,$0),conj|like_5(det:art|a_6($1,n|bird-dim_7($1)),$0)),$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: good morning Mr Alligator .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: good morning to you .
Sem: BARE($0,att(and(adj|good_1($0),n|morning_2($0)),prep|to_3(pro:per|you_4)))
example_end

Sent: what can I have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_2(v|have_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: yes I do .
Sem: lambda $0_{r}.and(v|do_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: d you have anything in your pocket Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,pro:indef|anything_4,$0),prep|in_5(det:poss|your_6($1,n|pocket_7($1)),$0)),$0))
example_end

Sent: I can 't have breakfast in bed .
Sem: lambda $0_{r}.not(mod|can_2(and(v|have_4(pro:sub|i_1,BARE($1,n|breakfast_5($1)),$0),prep|in_6(BARE($2,n|bed_7($2)),$0)),$0),$0)
example_end

Sent: because I would get crumbs in the bed .
Sem: lambda $0_{r}.mod|will-cond_3(and(aux|get_4(pro:sub|i_2,BARE($1,n|crumb-pl_5($1)),$0),prep|in_6(det:art|the_7($2,n|bed_8($2)),$0)),$0)
example_end

Sent: where 's my breakfast ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|my_3($1,n|breakfast_4($1)),$0),$2($0))
example_end

Sent: because chickens like to eat seeds .
Sem: lambda $0_{r}.co|like_3(BARE($1,n|chicken-pl_2($1)),lambda $2_{r}.v|eat_5(BARE($3,n|chicken-pl_2($3)),BARE($4,n|seed-pl_6($4)),$2),$0)
example_end

Sent: what are you going to have ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|have_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: morning supper ?
Sem: BARE($0,Q(and_comp(n|morning_1($0),n|supper_2($0))))
example_end

Sent: what did you eat for morning supper ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|eat_4(pro:per|you_3,$1,$0),prep|for_5(BARE($2,and_comp(n|morning_6($2),n|supper_7($2))),$0)),$0)
example_end

Sent: the what went off ?
Sem: lambda $1_{e}.lambda $0_{r}.v|go-past_3_off_4($1,$0)
example_end

Sent: a Rambler ?
Sem: BARE($0,Q(det:art|a_1($1,n:prop|rambler_2($1),$0)))
example_end

Sent: is that the kind you have ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,n|kind_4(pro:rel|that_2,$0)))
example_end

Sent: can 't get through .
Sem: lambda $0_{r}.not(mod|can_1(and(v|get_3(you,$0),adj|through_4($0)),$0),$0)
example_end

Sent: where is it going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-3s_2(and(part|go-presp_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: this car doesn 't have any lights .
Sem: lambda $0_{r}.not(mod|do_3(v|have_5(pro:dem|this_1($1,n|car_2($1)),qn|any_6($2,n|light-pl_7($2)),$0),$0),$0)
example_end

Sent: maybe the lights go on when you push the button .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.and(and(and(v|go_4(det:art|the_2($1,n|light-pl_3($1)),$0),adv|maybe_1($0)),adv|on_5($0)),and(v|push_8(pro:per|you_7,det:art|the_9($2,n|button_10($2)),$0),$3($0)))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: it 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:per|it_1,$1(pro:per|it_1,$0))
example_end

Sent: that says Mobilgas .
Sem: lambda $0_{r}.v|say-3s_2(pro:rel|that_1,n:prop|mobilgas_3,$0)
example_end

Sent: it 's working .
Sem: lambda $0_{r}.aux|~be_2(part|work-presp_3(pro:per|it_1,$0),$0)
example_end

Sent: what isn 't working ?
Sem: lambda $1_{e}.lambda $0_{r}.not(cop|be_2(part|work-presp_4($1,$0),$0),$0)
example_end

Sent: is that a new one ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,and(pro:indef|one_5(pro:rel|that_2,$0),adj|new_4(pro:rel|that_2,$0))))
example_end

Sent: let 's see it .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|see_3(pro:obj|~us_2,pro:per|it_4,$1),$0)
example_end

Sent: it has beads on the back .
Sem: lambda $0_{r}.and(aux|have-3s_2(pro:per|it_1,BARE($1,n|bead-pl_3($1)),$0),prep|on_4(det:art|the_5($2,n|back_6($2)),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I see them .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:obj|them_3,$0)
example_end

Sent: did you run over the bridge ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(n|run_3(pro:per|you_2,$0),prep|over_4(det:art|the_5($1,n|bridge_6($1)),$0)),$0))
example_end

Sent: hit my knee .
Sem: lambda $0_{r}.v|hit-zero_1(you,det:poss|my_2($1,n|knee_3($1)),$0)
example_end

Sent: it 's inside the what ?
Sem: lambda $0_{r}.adj|inside_3(det:art|the_4($1,pro:int|what_5($1)),pro:per|it_1,$0)
example_end

Sent: oh I can 't reach it .
Sem: lambda $0_{r}.and(not(mod|can_3(v|reach_5(pro:sub|i_2,pro:per|it_6,$0),$0),$0),co|oh_1($0))
example_end

Sent: you have_to go around in back of the couch .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|go_4(pro:per|you_1,$1),$0)
example_end

Sent: did you get it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|get_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: are you tired ?
Sem: lambda $0_{r}.Q(v|tire-past_3(pro:per|you_2,$0))
example_end

Sent: hi Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|hi_1($0))
example_end

Sent: he 's a sugar .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|he_1,n|sugar_4(pro:sub|he_1,$0))
example_end

Sent: did you show Urs your Humpty_Dumpty ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:poss|your_5($1,n:prop|humpty_dumpty_6($1)),n:prop|ursula_4,$0),$0)
example_end

Sent: Mommy forgot what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|forget-past_2(n:prop|mommy_1,$1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: dust in your hair .
Sem: BARE($0,att(n|dust_1($0),prep|in_2(det:poss|your_3($1,n|hair_4($1)))))
example_end

Sent: there where your hand is .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(cop|be-3s_5(det:poss|your_3($1,n|hand_4($1)),$0),adv|there_1($0)),$2($0))
example_end

Sent: who is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I would like to .
Sem: lambda $0_{r}.mod|will-cond_2(v|like_3(pro:sub|i_1,$0),$0)
example_end

Sent: well keep it on the floor .
Sem: lambda $0_{r}.and(and(v|keep_2(you,pro:per|it_3,$0),prep|on_4(det:art|the_5($1,n|floor_6($1)),$0)),co|well_1($0))
example_end

Sent: a motor ?
Sem: BARE($0,Q(det:art|a_1($1,n|motor_2($1),$0)))
example_end

Sent: where 's the motor ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|motor_4($1)),$0),$2($0))
example_end

Sent: where would the motor be ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(cop|be_5(det:art|the_3($1,n|motor_4($1)),$0),$2($0)),$0)
example_end

Sent: may be it 's in the back .
Sem: lambda $0_{r}.cop|be_2_may_1(prep|in_5(det:art|the_6($1,n|back_7($1)),pro:per|it_3,$0))
example_end

Sent: what kind of a Rambler is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_7,att(n|kind_2(pro:dem|that_7,$0),prep|of_3(det:art|a_4($2,n:prop|rambler_5($2)))))
example_end

Sent: excuse me .
Sem: lambda $0_{r}.v|excuse_1(you,pro:obj|me_2,$0)
example_end

Sent: you hit your knee ?
Sem: lambda $0_{r}.Q(v|hit-zero_2(pro:per|you_1,det:poss|your_3($1,n|knee_4($1)),$0))
example_end

Sent: don 't hit my toe .
Sem: lambda $0_{r}.not(mod|do_1(v|hit-zero_3(you,det:poss|my_4($1,n|toe_5($1)),$0),$0),$0)
example_end

Sent: I think we should leave that bridge down Adam .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|should_4(and(v|leave_5(pro:sub|we_3,pro:dem|that_6($2,n|bridge_7($2)),$1),adv|down_8($1)),$1),$0)
example_end

Sent: that bridge .
Sem: pro:dem|that_1($0,n|bridge_2($0))
example_end

Sent: leave it on the floor Adam .
Sem: lambda $0_{r}.and(v|leave_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|floor_5($1)),$0))
example_end

Sent: tiny cars for a race .
Sem: BARE($0,att(and(adj|tiny_1($0),n|car-pl_2($0)),prep|for_3(det:art|a_4($1,n|race_5($1)))))
example_end

Sent: is that broken ?
Sem: lambda $0_{r}.Q(part|break-pastp_3(pro:dem|that_2,$0))
example_end

Sent: that one 's broken .
Sem: lambda $0_{r}.part|break-pastp_4(pro:dem|that_1($1,pro:indef|one_2($1)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: fix the flat tires .
Sem: lambda $0_{r}.v|fix_1(you,det:art|the_2($1,and(n|flat_3($1),n|tire-pl_4($1))),$0)
example_end

Sent: is that better ?
Sem: lambda $0_{r}.Q(adj|good-cp_3(pro:dem|that_2,$0))
example_end

Sent: oh that 's the steering wheel .
Sem: lambda $0_{r}.and(det:art|the_4(pro:dem|that_2,and_comp(part|steer-presp_5(pro:dem|that_2,$0),n|wheel_6(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: that 's the driver 's wheel .
Sem: lambda $0_{r}.n|drive_4's'(pro:dem|that_1,n|wheel_6(pro:dem|that_1,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: that 's a train part isn 't it ?
Sem: lambda $0_{r}.Q(and(det:art|a_3(pro:dem|that_1,and_comp(n|train_4(pro:dem|that_1,$0),n|part_5(pro:dem|that_1,$0))),not(cop|be_6(pro:per|it_8,$0),$0)))
example_end

Sent: it looks like a tank car .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,and_comp(n|tank_5($1),n|car_6($1))),$0))
example_end

Sent: when the snow is high you can clear the street .
Sem: lambda $0_{r}.mod|can_7(and(adv|clear_8(pro:per|you_6,det:art|the_9($1,n|street_10($1)),$0),conj|when_1(adj|high_5(det:art|the_2($2,n|snow_3($2)),$0))),$0)
example_end

Sent: cowboy hat what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,and_comp(n|cow+boy_1($2),n|hat_2($2))),$0)
example_end

Sent: that 's a marble bag .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|marble_4(pro:dem|that_1,$0),n|bag_5(pro:dem|that_1,$0)))
example_end

Sent: for marbles .
Sem: prep|for_1(BARE($0,n|marble-pl_2($0)))
example_end

Sent: that 's not a bag car .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,and_comp(n|bag_5(pro:dem|that_1,$0),n|car_6(pro:dem|that_1,$0))),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you could put it on your arm .
Sem: lambda $0_{r}.mod|could_2(and(v|put-zero_3(pro:per|you_1,pro:per|it_4,$0),prep|on_5(det:poss|your_6($1,n|arm_7($1)),$0)),$0)
example_end

Sent: what 's happened to it ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(v|happen-past_3($1,$0),prep|to_4(pro:per|it_5,$0)),$0)
example_end

Sent: that 's to hold it .
Sem: lambda $0_{r}.cop|~be_2(pro:dem|that_1,lambda $1_{r}.v|hold_4(_,pro:per|it_5,$1),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you see how it 's tied together ?
Sem: lambda $0_{r}.Q(v|see_2(pro:per|you_1,lambda $1_{r}.aux|~be_5(and(and(part|tie-pastp_6(pro:per|it_4,$1),adv:int|how_3($1)),adv|together_7($1)),$1),$0))
example_end

Sent: it 's made by Indians .
Sem: lambda $0_{r}.aux|~be_2(and(part|make-pastp_3(pro:per|it_1,$0),prep|by_4(n:prop|indians_5,$0)),$0)
example_end

Sent: I don 't know which one .
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$1($2,pro:indef|one_6($2)),$0),$0),$0)
example_end

Sent: Indians in New Hampshire .
Sem: att(n:prop|indians_1,prep|in_2(n:prop|hampshire_4_new_3))
example_end

Sent: who is there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|be-3s_2($1,$0),adv|there_3($0))
example_end

Sent: Indian drum who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,and(n:prop|indian_1($2),n|drum_2($2))),$0)
example_end

Sent: Adam are you an Indian ?
Sem: lambda $0_{r}.Q(det:art|a_4(pro:per|you_3,n:prop|indian_5(pro:per|you_3,$0)))
example_end

Sent: that 's a pen .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|pen_4(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that makes it longer so you can see better .
Sem: lambda $0_{r}.conj|so_5(mod|can_7(v|see_8(pro:per|you_6,lambda $1_{r}.adj|good-cp_9(pro:per|you_6,$1),$0),$0),v|make-3s_2(pro:rel|that_1,lambda $2_{r}.adj|long-cp_4(pro:per|it_3,$2),$0))
example_end

Sent: what d you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: across the room .
Sem: prep|across_1(det:art|the_2($0,n|room_3($0)))
example_end

Sent: across the room I see a tiny Adam .
Sem: lambda $0_{r}.and(v|see_5(pro:sub|i_4,det:art|a_6($1,att(BARE($2,n:prop|adam_8($2)),BARE($3,adj|tiny_7($3)),$1)),$0),prep|across_1(det:art|the_2($4,n|room_3($4)),$0))
example_end

Sent: a n t down .
Sem: BARE($0,adv|down_4($0))
example_end

Sent: can you see me ?
Sem: lambda $0_{r}.Q(mod|can_1(v|see_3(pro:per|you_2,pro:obj|me_4,$0),$0))
example_end

Sent: d you want to try them on ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|try_5(pro:per|you_2,pro:obj|them_6,$1),adv|on_7($1)),$0),$0))
example_end

Sent: those are sunglasses .
Sem: lambda $0_{r}.n|sunglass-pl_3(pro:dem|those_1,$0)
example_end

Sent: you can put them on .
Sem: lambda $0_{r}.mod|can_2(and(v|put-zero_3(pro:per|you_1,pro:obj|them_4,$0),adv|on_5($0)),$0)
example_end

Sent: no I 'm not going yet .
Sem: lambda $0_{r}.and(not(cop|~be_3(and(part|go-presp_5(pro:sub|i_2,$0),adv|yet_6($0)),$0),$0),co|no_1($0))
example_end

Sent: you try those .
Sem: lambda $0_{r}.v|try_2(pro:per|you_1,pro:dem|those_3,$0)
example_end

Sent: do they fit you ?
Sem: lambda $0_{r}.Q(mod|do_1(v|fit-zero_3(pro:sub|they_2,pro:per|you_4,$0),$0))
example_end

Sent: nothing is right !
Sem: lambda $0_{r}.n|right_3(pro:indef|nothing_1,$0)
example_end

Sent: alright Adam .
Sem: lambda $0_{r}.co|alright_1($0)
example_end

Sent: did you ever use a pencil sharpener ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|use_4(pro:per|you_2,det:art|a_5($1,and_comp(n|pencil_6($1),n|sharpen-dv_7($1))),$0),adv|ever_3($0)),$0))
example_end

Sent: will you sharpen my pencils ?
Sem: lambda $0_{r}.Q(mod|will_1(v|sharpen_3(pro:per|you_2,det:poss|my_4($1,n|pencil-pl_5($1)),$0),$0))
example_end

Sent: fixing my beads .
Sem: lambda $0_{r}.part|fix-presp_1(you,det:poss|my_2($1,n|bead-pl_3($1)),$0)
example_end

Sent: I just fixed my beads .
Sem: lambda $0_{r}.and(v|fix-past_3(pro:sub|i_1,det:poss|my_4($1,n|bead-pl_5($1)),$0),adv|just_2($0))
example_end

Sent: oh you sharpen it .
Sem: lambda $0_{r}.and(v|sharpen_3(pro:per|you_2,pro:per|it_4,$0),co|oh_1($0))
example_end

Sent: with the pencil sharpener .
Sem: prep|with_1(det:art|the_2($0,and_comp(n|pencil_3($0),n|sharpen-dv_4($0))))
example_end

Sent: I 'll show you how .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|~will_2(and(v|show_3(pro:sub|i_1,pro:per|you_4,$0),$1($0)),$0)
example_end

Sent: you can 't take it apart no .
Sem: lambda $0_{r}.and(not(mod|can_2(and(v|take_4(pro:per|you_1,pro:per|it_5,$0),adv|apart_6($0)),$0),$0),co|no_7($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: they are why ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-pres_2(pro:sub|they_1,$0),$1($0))
example_end

Sent: they fit you .
Sem: lambda $0_{r}.v|fit-zero_2(pro:sub|they_1,pro:per|you_3,$0)
example_end

Sent: please do .
Sem: lambda $0_{r}.and(v|do_2(you,$0),co|please_1($0))
example_end

Sent: oh I can 't wear those .
Sem: lambda $0_{r}.and(not(mod|can_3(v|wear_5(pro:sub|i_2,pro:dem|those_6,$0),$0),$0),co|oh_1($0))
example_end

Sent: they 're too small .
Sem: lambda $0_{r}.adv|too_3(adj|small_4(pro:sub|they_1,$0))
example_end

Sent: no the glasses are too small .
Sem: lambda $0_{r}.and(adv|too_5(adj|small_6(det:art|the_2($1,n|glass-pl_3($1)),$0)),qn|no_1($0))
example_end

Sent: he 's not going to sleep .
Sem: lambda $0_{r}.not(aux|~be_2(part|go-presp_4(pro:sub|he_1,lambda $1_{r}.v|sleep_6(pro:sub|he_1,$1),$0),$0),$0)
example_end

Sent: yes if Urs says it 's alright .
Sem: lambda $0_{r}.and(v|say-3s_4(n:prop|ursula_3,lambda $1_{r}.co|alright_7(pro:per|it_5,$1),$0),co|yes_1($0))
example_end

Sent: don 't put them there .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:obj|them_4,$0),adv|there_5($0)),$0),$0)
example_end

Sent: someone might sit on them .
Sem: lambda $0_{r}.mod|might_2(and(v|sit_3(pro:indef|someone_1,$0),prep|on_4(pro:obj|them_5,$0)),$0)
example_end

Sent: maybe I might sit on them .
Sem: lambda $0_{r}.mod|might_3(and(and(v|sit_4(pro:sub|i_2,$0),adv|maybe_1($0)),prep|on_5(pro:obj|them_6,$0)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: oh what 's driving on me ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_3(and(part|drive-presp_4($1,$0),prep|on_5(pro:obj|me_6,$0)),$0),co|oh_1($0))
example_end

Sent: don 't tear her stockings .
Sem: lambda $0_{r}.not(mod|do_1(v|tear_3(you,det:poss|her_4($1,n:gerund|stock-presp_5($1)),$0),$0),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: yes but you 'll hurt her .
Sem: lambda $0_{r}.and(mod|~will_4(v|hurt-zero_5(pro:per|you_3,pro:obj|her_6,$0),$0),co|yes_1($0))
example_end

Sent: a sixty Rambler .
Sem: det:art|a_1($0,det:num|sixty_2(n:prop|rambler_3($0)))
example_end

Sent: a car hit what ?
Sem: lambda $2_{e}.lambda $0_{r}.part|hit-pastp_3(det:art|a_1($1,n|car_2($1)),$2,$0)
example_end

Sent: what happened to Wednesday ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(n:prop|wednesday_4,$0))
example_end

Sent: one talking at the microphone .
Sem: lambda $0_{r}.and(part|talk-presp_2(pro:indef|one_1,$0),prep|at_3(det:art|the_4($1,n|microphone_5($1)),$0))
example_end

Sent: don 't step on Paul 's toesies .
Sem: lambda $0_{r}.not(mod|do_1(and(v|step_3(you,$0),prep|on_4(n:prop|paul_5's($1,n|toe-pl_7($1)),$0)),$0),$0)
example_end

Sent: if you wish to .
Sem: lambda $0_{r}.v|wish_3(pro:per|you_2,$0)
example_end

Sent: did you put them on ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|put-zero_3(pro:per|you_2,pro:obj|them_4,$0),adv|on_5($0)),$0))
example_end

Sent: that 's the tuner remember ?
Sem: lambda $0_{r}.Q(and(det:art|the_3(pro:dem|that_1,n|tune-dv_4(pro:dem|that_1,$0)),co|remember_5(you,$0)))
example_end

Sent: tuner for a violin .
Sem: BARE($0,att(n|tune-dv_1($0),prep|for_2(det:art|a_3($1,n|violin_4($1)))))
example_end

Sent: I didn 't bring one .
Sem: lambda $0_{r}.not(mod|do_2(v|bring_4(pro:sub|i_1,pro:indef|one_5,$0),$0),$0)
example_end

Sent: who is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: how are you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-pres_2(pro:per|you_3,$0),$1($0))
example_end

Sent: oh what 's the chicken 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(n|chicken_5's($2,n|name_7($2)),$0),co|oh_1($0))
example_end

Sent: ask you .
Sem: lambda $0_{r}.v|ask_1(you,pro:per|you_2,$0)
example_end

Sent: what is your name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_3($2,n|name_4($2)),$0)
example_end

Sent: Kewie who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(chi|kewie_1,$0)
example_end

Sent: quacky duck .
Sem: BARE($0,and(chi|quacky_1($0),n|duck_2($0)))
example_end

Sent: what is your name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_3($2,n|name_4($2)),$0)
example_end

Sent: cow who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,n|cow_1($2)),$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: Shadow_Gay who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|shadow_gay_1,$0)
example_end

Sent: Shadow_Gay riding a pony .
Sem: lambda $0_{r}.part|ride-presp_2(n:prop|shadow_gay_1,det:art|a_3($1,n|pony_4($1)),$0)
example_end

Sent: I sneezed .
Sem: lambda $0_{r}.v|sneeze-past_2(pro:sub|i_1,$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: yes you may keep them right there .
Sem: lambda $0_{r}.and(mod|may_3(and(v|keep_4(pro:per|you_2,pro:obj|them_5,$0),adv|right_6(adv|there_7($0))),$0),co|yes_1($0))
example_end

Sent: when it gets dark ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(v|get-3s_3(pro:per|it_2,lambda $1_{r}.n|dark_4(pro:per|it_2,$1),$0),$2($0))
example_end

Sent: what will you do with that when it gets dark ?
Sem: lambda $3_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(mod|will_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(pro:dem|that_6,$0)),$0),and(v|get-3s_9(pro:per|it_8,lambda $2_{r}.n|dark_10(pro:per|it_8,$2),$0),$3($0)))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: you might break it .
Sem: lambda $0_{r}.mod|might_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: but it 's not a pipe .
Sem: lambda $0_{r}.not(det:art|a_5(pro:per|it_2,n|pipe_6(pro:per|it_2,$0)),$0)
example_end

Sent: what is that on the drum ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(att(pro:dem|that_3,prep|on_4(det:art|the_5($2,n|drum_6($2)))),$0)
example_end

Sent: the drum is out there .
Sem: lambda $0_{r}.and(cop|be-3s_3(det:art|the_1($1,n|drum_2($1)),$0),adv|out_4(adv|there_5($0)))
example_end

Sent: you get it .
Sem: lambda $0_{r}.v|get_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: you rolled it over there .
Sem: lambda $0_{r}.and(v|roll-past_2(pro:per|you_1,pro:per|it_3,$0),adv|over_4(adv|there_5($0)))
example_end

Sent: I 'm mad because I had to get the drum ?
Sem: lambda $0_{r}.Q(conj|because_4(v|have-past_6(pro:sub|i_5,lambda $1_{r}.v|get_8(pro:sub|i_5,det:art|the_9($2,n|drum_10($2)),$1),$0),adj|mad_3(pro:sub|i_1,$0)))
example_end

Sent: why don 't you play a little song on the drum Adam ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|play_5(pro:per|you_4,det:art|a_6($1,and(adj|little_7($1),n|song_8($1))),$0),$2($0)),prep|on_9(det:art|the_10($3,n|drum_11($3)),$0)),$0),$0)
example_end

Sent: what shall we sing ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|sing_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: did you show your Mother what 's on the side of the drum Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,$1,det:poss|your_4($2,n:prop|mother_5($2)),$0),$0)
example_end

Sent: that 's a light .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|light_4(pro:dem|that_1,$0))
example_end

Sent: maybe Ursula uses that .
Sem: lambda $0_{r}.and(v|use-3s_3(n:prop|ursula_2,pro:dem|that_4,$0),adv|maybe_1($0))
example_end

Sent: to write letters .
Sem: lambda $0_{r}.v|write_2(you,BARE($1,n|letter-pl_3($1)),$0)
example_end

Sent: you could use it .
Sem: lambda $0_{r}.mod|could_2(v|use_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: she said you may use it .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|she_1,lambda $1_{r}.mod|may_4(v|use_5(pro:per|you_3,pro:per|it_6,$1),$1),$0)
example_end

Sent: where 's your paper ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|paper_4($1)),$0),$2($0))
example_end

Sent: that 's alright Adam .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: you need a pencil .
Sem: lambda $0_{r}.v|need_2(pro:per|you_1,det:art|a_3($1,n|pencil_4($1)),$0)
example_end

Sent: you have_to sharpen it first .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|sharpen_3(pro:per|you_1,pro:per|it_4,$0),adv|first_5($0)),$0)
example_end

Sent: does your pencil have a point ?
Sem: lambda $0_{r}.Q(v|do-3s_1(v|have_4(det:poss|your_2($1,n|pencil_3($1)),det:art|a_5($2,n|point_6($2)),$0),$0))
example_end

Sent: on the pencil .
Sem: prep|on_1(det:art|the_2($0,n|pencil_3($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: fill it all up .
Sem: lambda $0_{r}.and(v|fill_1(you,pro:per|it_2,$0),adv|all_3(adv|up_4($0)))
example_end

Sent: now fill up this part too .
Sem: lambda $0_{r}.and(and(and(v|fill_2(you,pro:dem|this_4($1,n|part_5($1)),$0),adv|now_1($0)),prep|up_3($0)),post|too_6($0))
example_end

Sent: now do the edge .
Sem: lambda $0_{r}.and(v|do_2(you,det:art|the_3($1,n|edge_4($1)),$0),adv|now_1($0))
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: which letter d you want to do ?
Sem: lambda $2_{<<e,e>,e>}.lambda $0_{r}.v|do_3(v|want_5(pro:per|you_4,lambda $1_{r}.v|do_7(pro:per|you_4,$2($3,n|letter_2($3)),$1),$0),$0)
example_end

Sent: that 's a number two .
Sem: det:art|a_3($0,and_comp(n|number_4($0),det:num|two_5($0)))
example_end

Sent: all of them .
Sem: prep|of_2(qn|all_1($0,pro:obj|them_3($0)))
example_end

Sent: fill it in .
Sem: lambda $0_{r}.and(v|fill_1(you,pro:per|it_2,$0),adv|in_3($0))
example_end

Sent: fill it in .
Sem: lambda $0_{r}.and(v|fill_1(you,pro:per|it_2,$0),adv|in_3($0))
example_end

Sent: with your pencil .
Sem: prep|with_1(det:poss|your_2($0,n|pencil_3($0)))
example_end

Sent: that 's a funny one .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(pro:indef|one_5(pro:dem|that_1,$0),adj|fun-dn_4(pro:dem|that_1,$0)))
example_end

Sent: do you dream sometimes ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|dream_3(pro:per|you_2,$0),adv|sometimes_4($0)),$0))
example_end

Sent: about a n t ?
Sem: Q(adv|about_1(BARE($0,and_comp(and_comp(n:let|a_2($0),n:let|n_3($0)),n:let|t_4($0)))))
example_end

Sent: maybe we need a new page .
Sem: lambda $0_{r}.and(v|need_3(pro:sub|we_2,det:art|a_4($1,and(adj|new_5($1),n|page_6($1))),$0),adv|maybe_1($0))
example_end

Sent: you 're going to mail that ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|mail_5(pro:per|you_1,pro:dem|that_6,$1),$0),$0))
example_end

Sent: there 's h .
Sem: lambda $0_{r}.and(aux|~be_2(BARE($1,n:let|h_3($1)),$0),pro:exist|there_1($0))
example_end

Sent: do you have a sharp point ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,and(adj|sharp_5($1),n|point_6($1))),$0),$0))
example_end

Sent: it looks the same .
Sem: lambda $0_{r}.cop|look-3s_2(pro:per|it_1,BARE($1,adj|same_4($1)),$0)
example_end

Sent: let 's do number nine .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|do_3(pro:obj|~us_2,BARE($2,and_comp(n|number_4($2),det:num|nine_5($2))),$1),$0)
example_end

Sent: for the teacher ?
Sem: Q(conj|for_1(det:art|the_2($0,n|teach-dv_3($0))))
example_end

Sent: this way it 's not .
Sem: lambda $0_{r}.not(pro:dem|this_1(pro:per|it_3,n|way_2(pro:per|it_3,$0)),$0)
example_end

Sent: m is here .
Sem: lambda $0_{r}.and(cop|be-3s_2(BARE($1,n:let|m_1($1)),$0),adv|here_3($0))
example_end

Sent: you fill that in .
Sem: lambda $0_{r}.and(v|fill_2(pro:per|you_1,det:dem|that_3,$0),adv|in_4($0))
example_end

Sent: let 's have a t .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|have_3(pro:obj|~us_2,det:art|a_4($2,n:let|t_5($2)),$1),$0)
example_end

Sent: why 're you going to mail them ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|mail_6(pro:per|you_3,pro:obj|them_7,$1),$0),$2($0)),$0)
example_end

Sent: d you have a stump ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|stump_5($1)),$0),$0))
example_end

Sent: that 's so you can put it in your pocket .
Sem: lambda $0_{r}.conj|so_3(mod|can_5(and(v|put-zero_6(pro:per|you_4,pro:per|it_7,$0),prep|in_8(det:poss|your_9($1,n|pocket_10($1)),$0)),$0),cop|~be_2(pro:dem|that_1,$0))
example_end

Sent: I need that though .
Sem: lambda $0_{r}.and(v|need_2(pro:sub|i_1,pro:dem|that_3,$0),adv|though_4($0))
example_end

Sent: I need to write .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,lambda $1_{r}.v|write_4(pro:sub|i_1,$1),$0)
example_end

Sent: how d you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: Shadow_Gay told you ?
Sem: lambda $0_{r}.Q(v|tell-past_2(n:prop|shadow_gay_1,pro:per|you_3,$0))
example_end

Sent: they are for you .
Sem: lambda $0_{r}.prep|for_3(pro:per|you_4,pro:sub|they_1,$0)
example_end

Sent: for you ?
Sem: Q(conj|for_1(pro:per|you_2))
example_end

Sent: it can 't be !
Sem: lambda $0_{r}.not(mod|can_2(cop|be_4(pro:per|it_1,$0),$0),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: you might break something .
Sem: lambda $0_{r}.mod|might_2(v|break_3(pro:per|you_1,pro:indef|something_4,$0),$0)
example_end

Sent: yes I waited for you .
Sem: lambda $0_{r}.and(and(v|wait-past_3(pro:sub|i_2,$0),prep|for_4(pro:per|you_5,$0)),co|yes_1($0))
example_end

Sent: yes bless you .
Sem: lambda $0_{r}.and(v|bless_2(you,pro:per|you_3,$0),co|yes_1($0))
example_end

Sent: don 't catch cold .
Sem: lambda $0_{r}.not(mod|do_1(v|catch_3(you,BARE($1,adv|cold_4($1)),$0),$0),$0)
example_end

Sent: what 's a n t Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,and_comp(and_comp(n:let|t_5($2),n:let|n_4($2)),n:let|a_3($2))),$0)
example_end

Sent: tape recorder wants glasses on ?
Sem: lambda $0_{r}.Q(and(v|want-3s_3(BARE($1,and_comp(n|tape_1($1),n|record-dv_2($1))),BARE($2,n|glass-pl_4($2)),$0),adv|on_5($0)))
example_end

Sent: another one .
Sem: qn|another_1($0,pro:indef|one_2($0))
example_end

Sent: I thought that was a tuner .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:rel|that_3,n|tune-dv_6(pro:rel|that_3,$1)),$0)
example_end

Sent: that you 're playing .
Sem: lambda $0_{r}.aux|~be_3(part|play-presp_4(pro:per|you_2,$0),$0)
example_end

Sent: sing a song .
Sem: lambda $0_{r}.v|sing_1(you,det:art|a_2($1,n|song_3($1)),$0)
example_end

Sent: sing a song about a tuner .
Sem: lambda $0_{r}.v|sing_1(you,det:art|a_2($1,att(n|song_3($1),prep|about_4(det:art|a_5($2,n|tune-dv_6($2))))),$0)
example_end

Sent: the accordion .
Sem: det:art|the_1($0,n|accordion_2($0))
example_end

Sent: that 's not an accordion but it does sound like one .
Sem: lambda $0_{r}.not(conj|but_6(mod|do-3s_8(and(v|sound_9(pro:per|it_7,$0),prep|like_10(pro:indef|one_11,$0)),$0),det:art|a_4(pro:dem|that_1,n|accordion_5(pro:dem|that_1,$0))),$0)
example_end

Sent: that 's a tuner for a violin .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(n|tune-dv_4(pro:dem|that_1,$0),prep|for_5(det:art|a_6($1,n|violin_7($1)))))
example_end

Sent: don 't put it so far in your mouth .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|put-zero_3(you,pro:per|it_4,$0),adv|so_5(adv|far_6($0))),prep|in_7(det:poss|your_8($1,n|mouth_9($1)),$0)),$0),$0)
example_end

Sent: can you blow them one at a time ?
Sem: lambda $0_{r}.Q(mod|can_1(v|blow_3(pro:per|you_2,BARE($1,pro:indef|one_5($1)),pro:obj|them_4,$0),$0))
example_end

Sent: this morning ?
Sem: BARE($0,Q(pro:dem|this_1($1,n|morning_2($1),$0)))
example_end

Sent: yes but don 't run with it like that .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(v|run_5(you,$0),prep|with_6(pro:per|it_7,$0)),co|like_8(pro:dem|that_9,$0)),$0),$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where 's your pad ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|pad_4($1)),$0),$2($0))
example_end

Sent: I thought you were going to make some letters .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.aux|be-past_4(part|go-presp_5(pro:per|you_3,lambda $2_{r}.v|make_7(pro:per|you_3,qn|some_8($3,n|letter-pl_9($3)),$2),$1),$1),$0)
example_end

Sent: oh were you telling her that ?
Sem: lambda $0_{r}.Q(and(aux|be-past_2(part|tell-presp_4(pro:per|you_3,pro:dem|that_6,pro:obj|her_5,$0),$0),co|oh_1($0)))
example_end

Sent: took the telephone away ?
Sem: lambda $0_{r}.Q(and(v|take-past_1(you,det:art|the_2($1,n|telephone_3($1)),$0),adv|away_4($0)))
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I guess .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,$0)
example_end

Sent: where is the puzzle ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|puzzle_4($1)),$0),$2($0))
example_end

Sent: somebody named Linda .
Sem: lambda $0_{r}.v|name-past_2(pro:indef|somebody_1,n:prop|linda_3,$0)
example_end

Sent: somebody named Linda .
Sem: lambda $0_{r}.v|name-past_2(pro:indef|somebody_1,n:prop|linda_3,$0)
example_end

Sent: would you like to put these g on ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_5(pro:per|you_2,pro:dem|these_6($2,n|glove-pl_7($2)),$1),prep|on_8($1)),$0),$0))
example_end

Sent: I saw something through here .
Sem: lambda $0_{r}.and(v|see-past_2(pro:sub|i_1,pro:indef|something_3,$0),adv|through_4(adv|here_5($0)))
example_end

Sent: I looked in there .
Sem: lambda $0_{r}.and(cop|look-past_2(pro:sub|i_1,$0),prep|in_3(adv|there_4($0)))
example_end

Sent: what d you see Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: look Adam these puppets are waiting for something to eat .
Sem: lambda $0_{r}.and(aux|be-pres_5(and(part|wait-presp_6(pro:dem|these_3($1,n|puppet-pl_4($1)),$0),prep|for_7(BARE($2,rel(pro:indef|something_8($2),lambda $3_{r}.v|eat_10(you,$3))),$0)),$0),co|look_1(you,$0))
example_end

Sent: they 're waiting for something for lunch .
Sem: lambda $0_{r}.aux|~be_2(and(part|wait-presp_3(pro:sub|they_1,$0),prep|for_4(att(pro:indef|something_5,prep|for_6(BARE($1,n|lunch_7($1)))),$0)),$0)
example_end

Sent: they say what 're you going to give me ?
Sem: lambda $0_{r}.Q(v|say_2(pro:sub|they_1,lambda $1_{r}.aux|~be_4(part|go-presp_6(pro:per|you_5,lambda $2_{r}.v|give_8(pro:per|you_5,pro:int|what_3,pro:obj|me_9,$2),$1),$1),$0))
example_end

Sent: what about some dog food .
Sem: att(pro:int|what_1,prep|about_2(qn|some_3($0,and_comp(n|dog_4($0),n|food_5($0)))))
example_end

Sent: no I don 't want to fight .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|i_2,lambda $1_{r}.n|fight_7(pro:sub|i_2,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: I 'm very sleepy .
Sem: lambda $0_{r}.adv|very_3(adj|sleep-dn_4(pro:sub|i_1,$0))
example_end

Sent: I just want to sit by the fire .
Sem: lambda $0_{r}.and(v|want_3(pro:sub|i_1,lambda $1_{r}.and(v|sit_5(pro:sub|i_1,$1),prep|by_6(det:art|the_7($2,n|fire_8($2)),$1)),$0),adv|just_2($0))
example_end

Sent: shall comb your hair ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|comb_2(you,det:poss|your_3($1,n|hair_4($1)),$0),$0))
example_end

Sent: there that looks nice .
Sem: lambda $0_{r}.and(cop|look-3s_3(pro:rel|that_2,lambda $1_{r}.adj|nice_4(pro:rel|that_2,$1),$0),adv|there_1($0))
example_end

Sent: you know what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|know_2(pro:per|you_1,$1,$0)
example_end

Sent: I 'd like some sunglasses on .
Sem: lambda $0_{r}.mod|~genmod_2(and(v|like_3(pro:sub|i_1,qn|some_4($1,n|sunglass-pl_5($1)),$0),adv|on_6($0)),$0)
example_end

Sent: this sun is too bright .
Sem: lambda $0_{r}.adv|too_4(adj|bright_5(pro:dem|this_1($1,n|sun_2($1)),$0))
example_end

Sent: that 's better .
Sem: lambda $0_{r}.adj|good-cp_3(pro:dem|that_1,$0)
example_end

Sent: you have_to keep your nose up in the air .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(and(v|keep_3(pro:per|you_1,det:poss|your_4($1,n|nose_5($1)),$0),adv|up_6($0)),prep|in_7(det:art|the_8($2,n|air_9($2)),$0)),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: does it ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(you,pro:per|it_2,$0))
example_end

Sent: oh isn 't that nice Adam .
Sem: lambda $0_{r}.and(not(adj|nice_5(pro:dem|that_4,$0),$0),co|oh_1($0))
example_end

Sent: no you have cranberry juice .
Sem: lambda $0_{r}.and(v|have_3(pro:per|you_2,BARE($1,and_comp(n|cranberry_4($1),n|juice_5($1))),$0),co|no_1($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: is that right Adam .
Sem: lambda $0_{r}.n|right_3(pro:dem|that_2,$0)
example_end

Sent: you 're busy drinking your juice ?
Sem: lambda $0_{r}.Q(adj|busy_3(pro:per|you_1,lambda $1_{r}.part|drink-presp_4(pro:per|you_1,det:poss|your_5($2,n|juice_6($2)),$1),$0))
example_end

Sent: yes I want Mommy to have one .
Sem: lambda $0_{r}.and(v|want_3(pro:sub|i_2,lambda $1_{r}.v|have_6(n:prop|mommy_4,pro:indef|one_7,$1),$0),co|yes_1($0))
example_end

Sent: save one for her .
Sem: lambda $0_{r}.and(v|save_1(you,det:num|one_2,$0),prep|for_3(pro:obj|her_4,$0))
example_end

Sent: oh what did Mommy say ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do-past_3(v|say_5(n:prop|mommy_4,$1,$0),$0),co|oh_1($0))
example_end

Sent: are you going to drink your juice ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.v|drink_5(pro:per|you_2,det:poss|your_6($2,n|juice_7($2)),$1),$0),$0))
example_end

Sent: I 'm going to drink my coffee .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|i_1,lambda $1_{r}.v|drink_5(pro:sub|i_1,det:poss|my_6($2,n|coffee_7($2)),$1),$0),$0)
example_end

Sent: no that 's enough Adam .
Sem: lambda $0_{r}.and(adj|enough_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: is he singing about a puppet ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(and(part|sing-presp_3(pro:sub|he_2,$0),prep|about_4(det:art|a_5($1,n|puppet_6($1)),$0)),$0))
example_end

Sent: Adam you can 't play that while you 're eating .
Sem: lambda $0_{r}.not(n|while_7(aux|~be_9(part|eat-presp_10(pro:per|you_8,$0),$0),mod|can_3(v|play_5(pro:per|you_2,pro:dem|that_6,$0),$0)),$0)
example_end

Sent: Adam what d you have on your sandwich ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_3(and(v|have_5(pro:per|you_4,$1,$0),prep|on_6(det:poss|your_7($2,n|sandwich_8($2)),$0)),$0)
example_end

Sent: oh these are nice Adam .
Sem: lambda $0_{r}.and(adj|nice_4(pro:dem|these_2,$0),co|oh_1($0))
example_end

Sent: I see you did .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,lambda $1_{r}.v|do-past_4(pro:per|you_3,$1),$0)
example_end

Sent: you put the sugar spoon in yours too didn 't you ?
Sem: lambda $0_{r}.Q(and(and(and(v|put-zero_2(pro:per|you_1,det:art|the_3($1,and_comp(n|sugar_4($1),n|spoon_5($1))),$0),prep|in_6(pro:poss|yours_7,$0)),post|too_8($0)),not(mod|do_9(pro:per|you_11,$0),$0)))
example_end

Sent: I guess so .
Sem: lambda $0_{r}.and(n|guess_2(pro:sub|i_1,$0),adv|so_3($0))
example_end

Sent: no it 's dirty .
Sem: lambda $0_{r}.and(adj|dirt-dn_4(pro:per|it_2,$0),co|no_1($0))
example_end

Sent: we 'll eat it all up ?
Sem: lambda $0_{r}.Q(mod|~will_2(and(v|eat_3(pro:sub|we_1,pro:per|it_4,$0),adv|all_5(adv|up_6($0))),$0))
example_end

Sent: about the water of the loom ?
Sem: Q(prep|about_1(det:art|the_2($0,att(n|water_3($0),prep|of_4(det:art|the_5($1,n|loom_6($1)))))))
example_end

Sent: what is a n t ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,and_comp(and_comp(n:let|t_5($2),n:let|n_4($2)),n:let|a_3($2))),$0)
example_end

Sent: Agricultural and Technical College .
Sem: BARE($0,and_comp(n:prop|technical_3($0),n:prop|college_4($0)))
example_end

Sent: your finger what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_1($2,n|finger_2($2)),$0)
example_end

Sent: where did you lost it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|lose-past_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: at the apartment .
Sem: prep|at_1(det:art|the_2($0,n|apartment_3($0)))
example_end

Sent: well don 't you think you should eat your sandwich ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|think_5(pro:per|you_4,lambda $1_{r}.mod|should_7(v|eat_8(pro:per|you_6,det:poss|your_9($2,n|sandwich_10($2)),$1),$1),$0),$0),$0),co|well_1($0)))
example_end

Sent: you 're turning around like a propeller ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(and(part|turn-presp_3(pro:per|you_1,$0),adv|around_4($0)),prep|like_5(det:art|a_6($1,n|propel-dv_7($1)),$0)),$0))
example_end

Sent: yes thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|yes_1($0))
example_end

Sent: while you eat .
Sem: lambda $0_{r}.v|eat_3(pro:per|you_2,$0)
example_end

Sent: if I close one eye .
Sem: lambda $0_{r}.v|close_3(pro:sub|i_2,BARE($1,det:num|one_4(n|eye_5($1))),$0)
example_end

Sent: oh I have two eyes open .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|i_2,lambda $1_{r}.adj|open_6(BARE($2,det:num|two_4(n|eye-pl_5($2))),$1),$0),co|oh_1($0))
example_end

Sent: you 're looking at me ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|look-presp_3(pro:per|you_1,$0),prep|at_4(pro:obj|me_5,$0)),$0))
example_end

Sent: why are you looking at me ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|look-presp_4(pro:per|you_3,$0),$1($0)),prep|at_5(pro:obj|me_6,$0)),$0)
example_end

Sent: yes now I 'm finished .
Sem: lambda $0_{r}.and(aux|~be_4(and(part|finish-pastp_5(pro:sub|i_3,$0),adv|now_2($0)),$0),co|yes_1($0))
example_end

Sent: because you like it .
Sem: lambda $0_{r}.v|like_3(pro:per|you_2,pro:per|it_4,$0)
example_end

Sent: I don 't know the name of it .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,det:art|the_5($1,att(n|name_6($1),prep|of_7(pro:per|it_8))),$0),$0),$0)
example_end

Sent: it tasted like spice cake .
Sem: lambda $0_{r}.and(v|taste-past_2(pro:per|it_1,$0),co|like_3(BARE($1,and_comp(n|spice_4($1),n|cake_5($1))),$0))
example_end

Sent: carry the baker ?
Sem: lambda $0_{r}.Q(v|carry_1(you,det:art|the_2($1,n|bake-dv_3($1)),$0))
example_end

Sent: I can see what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_2(v|see_3(pro:sub|i_1,$1,$0),$0)
example_end

Sent: you 're finishing all of that aren 't you Adam ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(part|finish-presp_3(pro:per|you_1,att(qn|all_4,prep|of_5(pro:dem|that_6)),$0),$0),not(aux|be_7(pro:per|you_9,$0),$0)))
example_end

Sent: how d you put a glove on ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(and(v|put-zero_4(pro:per|you_3,det:art|a_5($1,n|glove_6($1)),$0),$2($0)),adv|on_7($0)),$0)
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: Adam Smith come back here .
Sem: lambda $0_{r}.and(v|come_3(you,$0),adv|back_4(adv|here_5($0)))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I have one .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,pro:indef|one_3,$0)
example_end

Sent: yes I think so .
Sem: lambda $0_{r}.and(and(v|think_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: a little bit .
Sem: det:art|a_1($0,and(adj|little_2($0),n|bit_3($0)))
example_end

Sent: why did you give her such a little little bit ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|give_4(pro:per|you_3,qn|such_6(det:art|a_7($1,and(adj|little_9($1),and(adj|little_8($1),n|bit_10($1))))),pro:obj|her_5,$0),$2($0)),$0)
example_end

Sent: the tape recorder is behind you ?
Sem: lambda $0_{r}.Q(adv|behind_5(pro:per|you_6,det:art|the_1($1,and_comp(n|tape_2($1),n|record-dv_3($1))),$0))
example_end

Sent: it 's not a tape recorder .
Sem: lambda $0_{r}.not(det:art|a_4(pro:per|it_1,and_comp(n|tape_5(pro:per|it_1,$0),n|record-dv_6(pro:per|it_1,$0))),$0)
example_end

Sent: it 's tape .
Sem: lambda $0_{r}.n|tape_3(pro:per|it_1,$0)
example_end

Sent: good shot .
Sem: BARE($0,and(adj|good_1($0),n|shot_2($0)))
example_end

Sent: knock what down ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|knock_1(you,$1,$0),adv|down_3($0))
example_end

Sent: you come finish eating your cake .
Sem: lambda $0_{r}.v|finish_3(pro:per|you_1,$0)
example_end

Sent: careful careful careful .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: it 's my coat .
Sem: lambda $0_{r}.det:poss|my_3(pro:per|it_1,n|coat_4(pro:per|it_1,$0))
example_end

Sent: what 's her name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|her_3($2,n|name_4($2)),$0)
example_end

Sent: you can 't tell the truth .
Sem: lambda $0_{r}.not(mod|can_2(v|tell_4(pro:per|you_1,det:art|the_5($1,n|truth_6($1)),$0),$0),$0)
example_end

Sent: you 're jumping rope .
Sem: lambda $0_{r}.aux|~be_2(part|jump-presp_3(pro:per|you_1,BARE($1,n|rope_4($1)),$0),$0)
example_end

Sent: did you finish moving your furniture ?
Sem: lambda $0_{r}.Q(v|do-past_1(part|move-presp_4(pro:per|you_2,det:poss|your_5($1,n|furniture_6($1)),$0),$0))
example_end

Sent: you have a cough don 't you Adam ?
Sem: lambda $0_{r}.Q(and(v|have_2(pro:per|you_1,det:art|a_3($1,n|cough_4($1)),$0),not(mod|do_5(pro:per|you_7,$0),$0)))
example_end

Sent: what d you think the Doctor does when he 's sick ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(mod|do-3s_7(det:art|the_5($2,n:prop|doctor_6($2)),pro:int|what_1,$1),conj|when_8(adj|sick_11(pro:sub|he_9,$1))),$0),$0))
example_end

Sent: did you check yourself ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|check_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: are you making a train ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|make-presp_3(pro:per|you_2,det:art|a_4($1,n|train_5($1)),$0),$0))
example_end

Sent: no you can 't write on those .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|write_5(pro:per|you_2,$0),prep|on_6(pro:dem|those_7,$0)),$0),$0),co|no_1($0))
example_end

Sent: I 'll give you some paper .
Sem: lambda $0_{r}.mod|~will_2(v|give_3(pro:sub|i_1,qn|some_5($1,n|paper_6($1)),pro:per|you_4,$0),$0)
example_end

Sent: oh can you do that ?
Sem: lambda $0_{r}.Q(and(mod|can_2(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$0),co|oh_1($0)))
example_end

Sent: no she doesn 't want to listen to a record .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|she_2,lambda $1_{r}.and(v|listen_7(pro:sub|she_2,$1),prep|to_8(det:art|a_9($2,n|record_10($2)),$1)),$0),$0),$0),co|no_1($0))
example_end

Sent: here 's some paper .
Sem: lambda $0_{r}.pro:exist|here_1(qn|some_3($1,n|paper_4($1)),$0)
example_end

Sent: what does it say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: Adam will you have swordfish tonight ?
Sem: lambda $0_{r}.Q(mod|will_2(and(v|have_4(pro:per|you_3,BARE($1,n|sword+fish_5($1)),$0),adv:tem|tonight_6($0)),$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: what shall I write ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|write_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: where did you put your pen ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,det:poss|your_5($1,n|pen_6($1)),$0),$2($0)),$0)
example_end

Sent: he said it 's not .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|he_1,$0)
example_end

Sent: do that again .
Sem: lambda $0_{r}.and(v|do_1(you,pro:rel|that_2,$0),adv|again_3($0))
example_end

Sent: he has a long head like a string ?
Sem: lambda $0_{r}.Q(v|have-3s_2(pro:sub|he_1,det:art|a_3($1,att(and(adj|long_4($1),n|head_5($1)),prep|like_6(det:art|a_7($2,n|string_8($2))))),$0))
example_end

Sent: that looks just like a wiggleworm .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:dem|that_1,$0),adv|just_3(prep|like_4(det:art|a_5($1,n|wiggle+worm_6($1)),$0)))
example_end

Sent: how many eyes ?
Sem: lambda $1_{e}.BARE($0,and($1(qn|many_2($0)),n|eye-pl_3($0)))
example_end

Sent: four eyes and what ?
Sem: BARE($0,Q(det:num|four_1(pro:int|what_4($0))))
example_end

Sent: and one half ?
Sem: BARE($0,Q(det:num|one_2(n|half_3($0))))
example_end

Sent: with a big wiggle ?
Sem: Q(prep|with_1(det:art|a_2($0,and(adj|big_3($0),n|wiggle_4($0)))))
example_end

Sent: that 's nice .
Sem: lambda $0_{r}.adj|nice_3(pro:dem|that_1,$0)
example_end

Sent: a broom ?
Sem: BARE($0,Q(det:art|a_1($1,n|broom_2($1),$0)))
example_end

Sent: d you sweep ?
Sem: lambda $0_{r}.Q(mod|do_1(v|sweep_3(pro:per|you_2,$0),$0))
example_end

Sent: a wolf ?
Sem: BARE($0,Q(det:art|a_1($1,n|wolf_2($1),$0)))
example_end

Sent: yes I guess that looks like a wolf .
Sem: lambda $0_{r}.and(v|guess_3(pro:sub|i_2,lambda $1_{r}.and(cop|look-3s_5(pro:dem|that_4,$1),prep|like_6(det:art|a_7($2,n|wolf_8($2)),$1)),$0),co|yes_1($0))
example_end

Sent: it looks like a wolf .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,n|wolf_5($1)),$0))
example_end

Sent: a swordfish .
Sem: det:art|a_1($0,n|sword+fish_2($0))
example_end

Sent: a whale ?
Sem: BARE($0,Q(det:art|a_1($1,n|whale_2($1),$0)))
example_end

Sent: what kind of a whale is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_7,att(n|kind_2(pro:dem|that_7,$0),prep|of_3(det:art|a_4($2,n|whale_5($2)))))
example_end

Sent: oh it 's a baby whale .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,and(n|whale_6(pro:per|it_2,$0),n|baby_5(pro:per|it_2,$0))),co|oh_1($0))
example_end

Sent: yes Cinderella .
Sem: lambda $0_{r}.and(n:prop|cinderella_2($0),co|yes_1($0))
example_end

Sent: that 's part of that one .
Sem: lambda $0_{r}.att(n|part_3(pro:dem|that_1,$0),prep|of_4(pro:dem|that_5($1,pro:indef|one_6($1))))
example_end

Sent: they 're both in the same block .
Sem: lambda $0_{r}.qn|both_3(prep|in_4(det:art|the_5($1,and(adj|same_6($1),n|block_7($1))),pro:sub|they_1,$0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no that 's the ugly duckling who turned out to be what ?
Sem: lambda $0_{r}.Q(and(det:art|the_4(pro:dem|that_2,and(n|duckling_6(pro:dem|that_2,$0),adj|ugly_5(pro:dem|that_2,$0))),co|no_1($0)))
example_end

Sent: not an ugly duckling at all .
Sem: not(det:art|a_2($0,att(and(adj|ugly_3($0),n|duckling_4($0)),prep|at_5(BARE($1,pro:indef|all_6($1))))))
example_end

Sent: don 't you remember ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|remember_4(pro:per|you_3,$0),$0),$0))
example_end

Sent: what did he find on his head ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|find_4(pro:sub|he_3,$1,$0),prep|on_5(det:poss|his_6($2,n|head_7($2)),$0)),$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I don 't know that story .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,pro:dem|that_5($1,n|story_6($1)),$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: but who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,$0)
example_end

Sent: oh Pinocchio .
Sem: lambda $0_{r}.and(n:prop|pinocchio_2($0),co|oh_1($0))
example_end

Sent: you didn 't guess .
Sem: lambda $0_{r}.not(mod|do_2(v|guess_4(pro:per|you_1,$0),$0),$0)
example_end

Sent: you guess .
Sem: lambda $0_{r}.v|guess_2(pro:per|you_1,$0)
example_end

Sent: you want another guess ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,qn|another_3($1,n|guess_4($1)),$0))
example_end

Sent: no draw on the paper .
Sem: lambda $0_{r}.and(and(v|draw_2(you,$0),prep|on_3(det:art|the_4($1,n|paper_5($1)),$0)),co|no_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh a mail bag .
Sem: lambda $0_{r}.and(det:art|a_2($1,and_comp(n|mail_3($1),n|bag_4($1)),$0),co|oh_1($0))
example_end

Sent: for the postman ?
Sem: Q(conj|for_1(det:art|the_2($0,n|post+man_3($0))))
example_end

Sent: no what did you make ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do-past_3(v|make_5(pro:per|you_4,$1,$0),$0),co|no_1($0))
example_end

Sent: a train ?
Sem: BARE($0,Q(det:art|a_1($1,n|train_2($1),$0)))
example_end

Sent: oh that 's a nice train .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and(n|train_6(pro:dem|that_2,$0),adj|nice_5(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: the conductor is on the other train ?
Sem: lambda $0_{r}.Q(prep|on_4(det:art|the_5($1,and(qn|other_6($1),n|train_7($1))),det:art|the_1($2,n|conductor_2($2)),$0))
example_end

Sent: well what is that on the back of the train ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(att(pro:dem|that_4,prep|on_5(det:art|the_6($2,att(n|back_7($2),prep|of_8(det:art|the_9($3,n|train_10($3))))))),$0),co|well_1($0))
example_end

Sent: a log truck ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|log_2($1),n|truck_3($1)),$0)))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I wrote it down there .
Sem: lambda $0_{r}.and(and(v|write-past_2(pro:sub|i_1,pro:per|it_3,$0),adv|down_4($0)),adv|there_5($0))
example_end

Sent: can you read it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|read-zero_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: yes you wrote it too .
Sem: lambda $0_{r}.and(and(v|write-past_3(pro:per|you_2,pro:per|it_4,$0),post|too_5($0)),co|yes_1($0))
example_end

Sent: so you should be able to read it .
Sem: lambda $0_{r}.and(mod|should_3(adj|able_5(pro:per|you_2,lambda $1_{r}.v|read-zero_7(pro:per|you_2,pro:per|it_8,$1),$0),$0),co|so_1($0))
example_end

Sent: two fish ?
Sem: BARE($0,Q(det:num|two_1(n|fish_2($0))))
example_end

Sent: why do we need two fish ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:sub|we_3,BARE($1,det:num|two_5(n|fish_6($1))),$0),$2($0)),$0)
example_end

Sent: got sick ?
Sem: lambda $0_{r}.Q(adj|sick_2(you,$0))
example_end

Sent: some flowers .
Sem: qn|some_1($0,n|flower-pl_2($0))
example_end

Sent: don 't tear it .
Sem: lambda $0_{r}.not(mod|do_1(v|tear_3(you,pro:per|it_4,$0),$0),$0)
example_end

Sent: ask your Mother Adam .
Sem: lambda $0_{r}.v|ask_1(you,det:poss|your_2($1,n:prop|mother_3($1)),$0)
example_end

Sent: well I guess you can just pull the paper .
Sem: lambda $0_{r}.and(v|guess_3(pro:sub|i_2,lambda $1_{r}.mod|can_5(and(v|pull_7(pro:per|you_4,det:art|the_8($2,n|paper_9($2)),$1),adv|just_6($1)),$1),$0),co|well_1($0))
example_end

Sent: that was a big pop .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|pop_5(pro:dem|that_1,$0),adj|big_4(pro:dem|that_1,$0)))
example_end

Sent: Adam I think you do it on the other side .
Sem: lambda $0_{r}.v|think_3(pro:sub|i_2,lambda $1_{r}.and(v|do_5(pro:per|you_4,pro:per|it_6,$1),prep|on_7(det:art|the_8($2,and(qn|other_9($2),n|side_10($2))),$1)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh that 's nice .
Sem: lambda $0_{r}.and(adj|nice_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: the other what ?
Sem: det:art|the_1($0,att(pro:int|what_3,BARE($1,qn|other_2($1)),$0))
example_end

Sent: at the other end .
Sem: prep|at_1(det:art|the_2($0,and(qn|other_3($0),n|end_4($0))))
example_end

Sent: turn it over .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: use that on the other side .
Sem: lambda $0_{r}.and(v|use_1(you,pro:dem|that_2,$0),prep|on_3(det:art|the_4($1,and(qn|other_5($1),n|side_6($1))),$0))
example_end

Sent: no not for putting in the mouth .
Sem: lambda $0_{r}.and(not(and(n:gerund|put-presp_4(you,$0),prep|in_5(det:art|the_6($1,n|mouth_7($1)),$0)),$0),co|no_1($0))
example_end

Sent: no you use the crayon on that side .
Sem: lambda $0_{r}.and(and(v|use_3(pro:per|you_2,det:art|the_4($1,n|crayon_5($1)),$0),prep|on_6(pro:dem|that_7($2,n|side_8($2)),$0)),co|no_1($0))
example_end

Sent: where 's the box ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|box_4($1)),$0))
example_end

Sent: but you don 't use that on that side .
Sem: lambda $0_{r}.not(mod|do_3(and(v|use_5(pro:per|you_2,pro:dem|that_6,$0),prep|on_7(pro:dem|that_8($1,n|side_9($1)),$0)),$0),$0)
example_end

Sent: you use that on the green side .
Sem: lambda $0_{r}.and(v|use_2(pro:per|you_1,pro:dem|that_3,$0),prep|on_4(det:art|the_5($1,and(adj|green_6($1),n|side_7($1))),$0))
example_end

Sent: on the other side .
Sem: prep|on_1(det:art|the_2($0,and(qn|other_3($0),n|side_4($0))))
example_end

Sent: where 's the eraser ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|erase-dv_4($1)),$0))
example_end

Sent: are you sittin on the eraser ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|sit-presp_3(pro:per|you_2,$0),prep|on_4(det:art|the_5($1,n|erase-dv_6($1)),$0)),$0))
example_end

Sent: now do you want to wipe that off ?
Sem: lambda $0_{r}.Q(v|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.and(v|wipe_6(pro:per|you_3,pro:dem|that_7,$1),adv|off_8($1)),$0),adv|now_1($0)),$0))
example_end

Sent: all of it .
Sem: BARE($0,att(pro:indef|all_1($0),prep|of_2(pro:per|it_3)))
example_end

Sent: no that doesn 't go in with the crayons .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(v|go_5(pro:dem|that_2,$0),adv|in_6($0)),prep|with_7(det:art|the_8($1,n|crayon-pl_9($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: oh if you wish .
Sem: lambda $0_{r}.and(v|wish_4(pro:per|you_3,$0),co|oh_1($0))
example_end

Sent: like that one ?
Sem: Q(prep|like_1(pro:dem|that_2($0,pro:indef|one_3($0))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: but you can draw a sailboat .
Sem: lambda $0_{r}.mod|can_3(v|draw_4(pro:per|you_2,det:art|a_5($1,n|sail+boat_6($1)),$0),$0)
example_end

Sent: what 're you looking for Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|look-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you were just joking ?
Sem: lambda $0_{r}.Q(aux|be-past_2(and(part|joke-presp_4(pro:per|you_1,$0),adv|just_3($0)),$0))
example_end

Sent: you can hang it up on your wall ?
Sem: lambda $0_{r}.Q(mod|can_2(and(and(v|hang_3(pro:per|you_1,pro:per|it_4,$0),adv|up_5($0)),prep|on_6(det:poss|your_7($1,n|wall_8($1)),$0)),$0))
example_end

Sent: you can keep it .
Sem: lambda $0_{r}.mod|can_2(v|keep_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: that 's for you .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),conj|for_3(pro:per|you_4,$0))
example_end

Sent: yes that 's part of it .
Sem: lambda $0_{r}.and(att(n|part_4(pro:dem|that_2,$0),prep|of_5(pro:per|it_6)),co|yes_1($0))
example_end

Sent: oh what do they go on ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do_3(v|go_5(pro:sub|they_4,$1,$0),$0),co|oh_1($0))
example_end

Sent: so you can tick it ?
Sem: lambda $0_{r}.Q(and(mod|can_3(v|tick_4(pro:per|you_2,pro:per|it_5,$0),$0),co|so_1($0)))
example_end

Sent: I don 't hear it ticking .
Sem: lambda $0_{r}.not(mod|do_2(v|hear_4(pro:sub|i_1,lambda $1_{r}.part|tick-presp_6(pro:per|it_5,$1),$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you 'll have_to figure it all out by yourself .
Sem: lambda $0_{r}.mod|~will_2(mod:aux|have_to_3(pro:per|you_1,lambda $1_{r}.v|figure_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: isn 't that fun ?
Sem: lambda $0_{r}.Q(not(adj|fun_4(pro:dem|that_3,$0),$0))
example_end

Sent: well why don 't you see what you need for it first .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(not(mod|do_3(and(and(v|see_6(pro:per|you_5,lambda $1_{r}.and(v|need_9(pro:per|you_8,pro:int|what_7,$1),prep|for_10(pro:per|it_11,$1)),$0),$2($0)),adv|first_12($0)),$0),$0),co|well_1($0))
example_end

Sent: that 's a dairy .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|dairy_4(pro:dem|that_1,$0))
example_end

Sent: that 's the dairy .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|dairy_4(pro:dem|that_1,$0))
example_end

Sent: no that .
Sem: lambda $0_{r}.and(pro:dem|that_2($0),qn|no_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I can 't read them right now .
Sem: lambda $0_{r}.not(mod|can_2(and(v|read-zero_4(pro:sub|i_1,pro:obj|them_5,$0),adv|right_6(adv|now_7($0))),$0),$0)
example_end

Sent: could I see it ?
Sem: lambda $0_{r}.Q(mod|could_1(v|see_3(pro:sub|i_2,pro:per|it_4,$0),$0))
example_end

Sent: you need to put the wheels under both holes .
Sem: lambda $0_{r}.v|need_2(pro:per|you_1,lambda $1_{r}.and(v|put-zero_4(pro:per|you_1,det:art|the_5($2,n|wheel-pl_6($2)),$1),adv|under_7(qn|both_8($3,n|hole-pl_9($3)),$1)),$0)
example_end

Sent: the other side now .
Sem: adv|now_4(det:art|the_1($0,and(qn|other_2($0),adj|side_3($0))))
example_end

Sent: put it in the hole .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|in_3(det:art|the_4($1,n|hole_5($1)),$0))
example_end

Sent: this isn 't a doggie .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|this_1,n|dog-dim_5(pro:dem|this_1,$0)),$0)
example_end

Sent: yes you missed it .
Sem: lambda $0_{r}.and(v|miss-past_3(pro:per|you_2,pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: now you have_to lead the trucks .
Sem: lambda $0_{r}.and(mod:aux|have_to_3(pro:per|you_2,lambda $1_{r}.v|lead_5(pro:per|you_2,$1),$0),adv|now_1($0))
example_end

Sent: all those little things there .
Sem: qn|all_1(adv|there_5(pro:dem|those_2($0,and(adj|little_3($0),n|thing-pl_4($0)))))
example_end

Sent: well I don 't know .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,$0),$0),$0),co|well_1($0))
example_end

Sent: they seem to don 't they ?
Sem: lambda $0_{r}.Q(and(cop|seem_2(pro:sub|they_1,$0),not(mod|do_4(pro:sub|they_6,$0),$0)))
example_end

Sent: see the eggs the milk the butter .
Sem: lambda $0_{r}.v|see_1(you,det:art|the_2($1,n|egg-pl_3($1)),$0)
example_end

Sent: he said I want that .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|he_1,lambda $1_{r}.v|want_4(pro:sub|i_3,pro:dem|that_5,$1),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you don 't have any milk on that truck .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:per|you_1,qn|any_5($1,n|milk_6($1)),$0),prep|on_7(pro:dem|that_8($2,n|truck_9($2)),$0)),$0),$0)
example_end

Sent: the truck you 're driving .
Sem: det:art|the_1($0,n|truck_2($0))
example_end

Sent: yes they seem to don 't they ?
Sem: lambda $0_{r}.Q(and(and(cop|seem_3(pro:sub|they_2,$0),not(mod|do_5(pro:sub|they_7,$0),$0)),co|yes_1($0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you find out .
Sem: lambda $0_{r}.v|find_2_out_3(pro:per|you_1,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what about some milk ?
Sem: att(pro:int|what_1,prep|about_2(qn|some_3($0,n|milk_4($0))))
example_end

Sent: yes that 's milk .
Sem: lambda $0_{r}.and(n|milk_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: I 'd like four quarts of milk .
Sem: lambda $0_{r}.mod|~genmod_2(co|like_3(pro:sub|i_1,BARE($1,att(det:num|four_4(n|quart-pl_5($1)),prep|of_6(BARE($2,n|milk_7($2))))),$0),$0)
example_end

Sent: four quarts of milk and two pounds of butter .
Sem: BARE($0,att(att(det:num|two_6(det:num|four_1(n|pound-pl_7($0))),prep|of_3(BARE($1,n|milk_4($1)))),prep|of_8(BARE($2,n|butter_9($2)))))
example_end

Sent: okay Mr Milkman .
Sem: lambda $0_{r}.and(n:prop|milkman_3_mr_2($0),co|okay_1($0))
example_end

Sent: no you don 't have what I ordered .
Sem: lambda $1_{e}.lambda $0_{r}.and(not(mod|do_3(v|have_5(pro:per|you_2,$1,$0),$0),$0),co|no_1($0))
example_end

Sent: I said four quarts of milk .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|i_1,BARE($1,att(det:num|four_3(n|quart-pl_4($1)),prep|of_5(BARE($2,n|milk_6($2))))),$0)
example_end

Sent: where 's the milk ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|milk_4($1)),$0))
example_end

Sent: do you have four of those ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,BARE($1,det:num|four_4($1)),$0),$0))
example_end

Sent: how d you think they go on the truck so they won 't tip over .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.co|so_10(not(mod|will_12(and(v|tip_14(pro:sub|they_11,$1),adv|over_15($1)),$1),$1),and(v|go_6(pro:sub|they_5,$1),prep|on_7(det:art|the_8($2,n|truck_9($2)),$1))),$0),$3($0)),$0)
example_end

Sent: they might spill like that .
Sem: lambda $0_{r}.mod|might_2(and(v|spill_3(pro:sub|they_1,$0),prep|like_4(pro:dem|that_5,$0)),$0)
example_end

Sent: I don 't want any butter that might fall off the truck .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|i_1,qn|any_5($1,n|butter_6($1)),$0),$0),$0)
example_end

Sent: you 've got the two dozen eggs on properly .
Sem: lambda $0_{r}.aux|~have_2(and(and(part|get-pastp_3(pro:per|you_1,det:art|the_4($1,and_comp(det:num|two_5(n|egg-pl_7($1)),n|dozen_6(n|egg-pl_7($1)))),$0),adv|on_8($0)),adv|proper-dadj_9($0)),$0)
example_end

Sent: no those are eggs .
Sem: lambda $0_{r}.and(n|egg-pl_4(pro:dem|those_2,$0),qn|no_1($0))
example_end

Sent: they won 't fall off and break .
Sem: lambda $0_{r}.not(mod|will_2(and(v|break_7(pro:sub|they_1,$0),adv|off_5($0)),$0),$0)
example_end

Sent: well you don 't need to bring me any toast Mr Milkman .
Sem: lambda $0_{r}.and(not(mod|do_3(v|need_5(pro:per|you_2,lambda $1_{r}.v|bring_7(pro:per|you_2,qn|any_9($2,n|toast_10($2)),pro:obj|me_8,$1),$0),$0),$0),co|well_1($0))
example_end

Sent: just my two pounds of butter .
Sem: adv|just_1(det:poss|my_2($0,att(det:num|two_3(n|pound-pl_4($0)),prep|of_5(BARE($1,n|butter_6($1))))))
example_end

Sent: I don 't know Mr Milkman .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,BARE($1,and_comp(n:prop|mr_5($1),n:prop|milkman_6($1))),$0),$0),$0)
example_end

Sent: yes see .
Sem: lambda $0_{r}.and(co|see_2($0),co|yes_1($0))
example_end

Sent: you lost my butter on the street .
Sem: lambda $0_{r}.and(v|lose-past_2(pro:per|you_1,det:poss|my_3($1,n|butter_4($1)),$0),prep|on_5(det:art|the_6($2,n|street_7($2)),$0))
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: where 're you going to put my butter ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|put-zero_6(pro:per|you_3,det:poss|my_7($2,n|butter_8($2)),$1),$0),$3($0)),$0)
example_end

Sent: perhaps it would stand up too .
Sem: lambda $0_{r}.mod|will-cond_3(and(and(and(v|stand_4(pro:per|it_2,$0),adv|perhaps_1($0)),adv|up_5($0)),post|too_6($0)),$0)
example_end

Sent: the other way .
Sem: det:art|the_1($0,and(qn|other_2($0),n|way_3($0)))
example_end

Sent: I think over .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),adv|over_3($0))
example_end

Sent: oh that 's not nice .
Sem: lambda $0_{r}.and(not(adj|nice_5(pro:dem|that_2,$0),$0),co|oh_1($0))
example_end

Sent: no I think that milkman might be alright now .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.mod|might_6(adv|now_9(adj|alright_8(pro:dem|that_4($2,n|milk+man_5($2)),$1)),$1),$0),co|no_1($0))
example_end

Sent: would you close the door please ?
Sem: lambda $0_{r}.Q(and(mod|will-cond_1(v|close_3(pro:per|you_2,det:art|the_4($1,n|door_5($1)),$0),$0),co|please_6($0)))
example_end

Sent: does this go here ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|go_3(pro:dem|this_2,$0),adv|here_4($0)),$0))
example_end

Sent: oh why would you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|will-cond_3(and(v|do_5(pro:per|you_4,pro:dem|that_6,$0),$1($0)),$0),co|oh_1($0))
example_end

Sent: why don 't you put the extra butter and eggs on here .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|put-zero_5(pro:per|you_4,det:art|the_6($1,and(n|extra_7($1),n|egg-pl_10($1))),$0),$2($0)),prep|on_11(adv|here_12($0))),$0),$0)
example_end

Sent: you 're sitting on a quart of milk .
Sem: lambda $0_{r}.aux|~be_2(and(part|sit-presp_3(pro:per|you_1,$0),prep|on_4(det:art|a_5($1,att(n|quart_6($1),prep|of_7(BARE($2,n|milk_8($2))))),$0)),$0)
example_end

Sent: oh I don 't think you meant to .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|mean-past_7(pro:per|you_6,$1),$0),$0),$0),co|oh_1($0))
example_end

Sent: these are houses .
Sem: lambda $0_{r}.n|house-pl_3(pro:dem|these_1,$0)
example_end

Sent: people who want milk and butter and eggs .
Sem: BARE($0,n|person-pl_1($0))
example_end

Sent: I 'd like one quart of milk .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:sub|i_1,BARE($1,att(det:num|one_4(n|quart_5($1)),prep|of_6(BARE($2,n|milk_7($2))))),$0),$0)
example_end

Sent: and a dozen eggs .
Sem: det:art|a_2($0,n|dozen_3(n|egg-pl_4($0)))
example_end

Sent: one dozen eggs .
Sem: BARE($0,and_comp(det:num|one_1(n|dozen_2($0)),n|egg-pl_3($0)))
example_end

Sent: alright thank_you Mr Milkman .
Sem: lambda $0_{r}.and(n|thank_you_2(you,$0),co|alright_1($0))
example_end

Sent: I 'd like three quarts of milk please .
Sem: lambda $0_{r}.and(mod|~genmod_2(co|like_3(pro:sub|i_1,BARE($1,att(det:num|three_4(n|quart-pl_5($1)),prep|of_6(BARE($2,n|milk_7($2))))),$0),$0),co|please_8($0))
example_end

Sent: two pounds of butter .
Sem: BARE($0,att(det:num|two_1(n|pound-pl_2($0)),prep|of_3(BARE($1,n|butter_4($1)))))
example_end

Sent: I 'd like two quarts of milk please .
Sem: lambda $0_{r}.and(mod|~genmod_2(co|like_3(pro:sub|i_1,BARE($1,att(det:num|two_4(n|quart-pl_5($1)),prep|of_6(BARE($2,n|milk_7($2))))),$0),$0),co|please_8($0))
example_end

Sent: two quarts of milk .
Sem: BARE($0,att(det:num|two_1(n|quart-pl_2($0)),prep|of_3(BARE($1,n|milk_4($1)))))
example_end

Sent: two quarts of milk .
Sem: BARE($0,att(det:num|two_1(n|quart-pl_2($0)),prep|of_3(BARE($1,n|milk_4($1)))))
example_end

Sent: no I don 't think that 's a sailboat .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.det:art|a_8(pro:dem|that_6,n|sail+boat_9(pro:dem|that_6,$1)),$0),$0),$0),co|no_1($0))
example_end

Sent: does it ship ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|ship_3(pro:per|it_2,$0),$0))
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: don 't put your tongue out like a snake .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|put-zero_3(you,det:poss|your_4($1,n|tongue_5($1)),$0),adv|out_6($0)),prep|like_7(det:art|a_8($2,n|snake_9($2)),$0)),$0),$0)
example_end

Sent: yes that 's what Paul did .
Sem: lambda $0_{r}.and(pro:int|what_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: d you remember what Paul calls you ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,lambda $1_{r}.v|call-3s_6(n:prop|paul_5,pro:int|what_4,pro:per|you_7,$1),$0),$0))
example_end

Sent: what does he call you ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(v|call_4(pro:sub|he_3,$1,pro:per|you_5,$0),$0)
example_end

Sent: no what does he call you ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|do-3s_3(v|call_5(pro:sub|he_4,$1,pro:per|you_6,$0),$0),co|no_1($0))
example_end

Sent: no what does he call you ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|do-3s_3(v|call_5(pro:sub|he_4,$1,pro:per|you_6,$0),$0),co|no_1($0))
example_end

Sent: doesn 't he call you his brother ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|call_4(pro:sub|he_3,det:poss|his_6($1,n|brother_7($1)),pro:per|you_5,$0),$0),$0))
example_end

Sent: oh milk truck .
Sem: lambda $0_{r}.and(and_comp(n|milk_2($0),n|truck_3($0)),co|oh_1($0))
example_end

Sent: you almost did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_1,$0),adv|almost_2($0))
example_end

Sent: your nose what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_1($2,n|nose_2($2)),$0)
example_end

Sent: alright go get a Kleenex .
Sem: lambda $0_{r}.and(v|get_3(you,det:art|a_4($1,n:prop|kleenex_5($1)),$0),co|alright_1($0))
example_end

Sent: your Mother did .
Sem: lambda $0_{r}.v|do-past_3(det:poss|your_1($1,n:prop|mother_2($1)),$0)
example_end

Sent: Adam can I order some milk ?
Sem: lambda $0_{r}.Q(mod|can_2(v|order_4(pro:sub|i_3,qn|some_5($1,n|milk_6($1)),$0),$0))
example_end

Sent: I need three quarts .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,BARE($1,det:num|three_3(n|quart-pl_4($1))),$0)
example_end

Sent: that 's not three .
Sem: BARE($0,det:num|three_4($0))
example_end

Sent: I need another milk thank_you .
Sem: lambda $0_{r}.and(v|need_2(pro:sub|i_1,qn|another_3($1,n|milk_4($1)),$0),n|thank_you_5(you,$0))
example_end

Sent: I 'm finished with this one .
Sem: lambda $0_{r}.aux|~be_2(and(part|finish-pastp_3(pro:sub|i_1,$0),prep|with_4(pro:dem|this_5($1,pro:indef|one_6($1)),$0)),$0)
example_end

Sent: they all what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(post|all_2($2,pro:sub|they_1($2)),$0)
example_end

Sent: heard something .
Sem: lambda $0_{r}.v|hear-past_1(you,pro:indef|something_2,$0)
example_end

Sent: oh those poor eggs .
Sem: lambda $0_{r}.and(pro:dem|those_2($1,and(adj|poor_3($1),n|egg-pl_4($1)),$0),co|oh_1($0))
example_end

Sent: yes I guess so .
Sem: lambda $0_{r}.and(and(n|guess_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: no no don 't write on the floor .
Sem: lambda $0_{r}.and(and(not(mod|do_3(and(v|write_5(you,$0),prep|on_6(det:art|the_7($1,n|floor_8($1)),$0)),$0),$0),co|no_1($0)),co|no_2($0))
example_end

Sent: no those are not broken .
Sem: lambda $0_{r}.and(not(part|break-pastp_5(pro:dem|those_2,$0),$0),qn|no_1($0))
example_end

Sent: where 're you going to put those ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|put-zero_6(pro:per|you_3,pro:dem|those_7,$1),$0),$2($0)),$0)
example_end

Sent: where does what go ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(and(v|go_4($1,$0),$2($0)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: a dozen eggs ?
Sem: BARE($0,Q(det:art|a_1($1,n|dozen_2(n|egg-pl_3($1)),$0)))
example_end

Sent: put them in the dairy .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:obj|them_2,$0),prep|in_3(det:art|the_4($1,n|dairy_5($1)),$0))
example_end

Sent: said no he said that he 's Paul .
Sem: lambda $0_{r}.and(and(v|say-past_4(pro:sub|he_3,lambda $1_{r}.n:prop|paul_8(pro:sub|he_6,$1),$0),v|say-past_1(you,$0)),co|no_2($0))
example_end

Sent: do they sell scrambled eggs ?
Sem: lambda $0_{r}.Q(mod|do_1(v|sell_3(pro:sub|they_2,BARE($1,and(part|scramble-pastp_4($1),n|egg-pl_5($1))),$0),$0))
example_end

Sent: oh they sell ham .
Sem: lambda $0_{r}.and(v|sell_3(pro:sub|they_2,BARE($1,n|ham_4($1)),$0),co|oh_1($0))
example_end

Sent: what kind of ham ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|ham_4($2)))))
example_end

Sent: why don 't you put all of those from one truck into the dairy farm ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|put-zero_5(pro:per|you_4,BARE($1,att(qn|all_6($1),prep|of_7(att(pro:dem|those_8,prep|from_9(BARE($2,det:num|one_10(n|truck_11($2)))))))),$0),$3($0)),prep|into_12(det:art|the_13($4,and_comp(n|dairy_14($4),n|farm_15($4))),$0)),$0),$0)
example_end

Sent: you have a street light .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,det:art|a_3($1,and_comp(n|street_4($1),n|light_5($1))),$0)
example_end

Sent: you have_to stop Mr truck driver .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|stop_4(pro:per|you_1,$1),$0)
example_end

Sent: okay green light .
Sem: lambda $0_{r}.and(and(adj|green_2($0),n|light_3($0)),co|okay_1($0))
example_end

Sent: a red light .
Sem: det:art|a_1($0,and(adj|red_2($0),n|light_3($0)))
example_end

Sent: green light .
Sem: BARE($0,and(adj|green_1($0),n|light_2($0)))
example_end

Sent: you may go .
Sem: lambda $0_{r}.mod|may_2(v|go_3(pro:per|you_1,$0),$0)
example_end

Sent: oh Mr Milkman .
Sem: lambda $0_{r}.and(n:prop|milkman_3_mr_2($0),co|oh_1($0))
example_end

Sent: would you please give me one quart of milk and one pound of butter ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(and(v|give_4(pro:per|you_2,BARE($1,att(att(det:num|one_11(pro:indef|one_6(n|pound_12($1))),prep|of_8(BARE($2,n|milk_9($2)))),prep|of_13(BARE($3,n|butter_14($3))))),pro:obj|me_5,$0),co|please_3($0)),$0))
example_end

Sent: no I said one quart of milk and one pound of butter ?
Sem: lambda $0_{r}.Q(and(v|say-past_3(pro:sub|i_2,BARE($1,att(att(det:num|one_9(det:num|one_4(n|pound_10($1))),prep|of_6(BARE($2,n|milk_7($2)))),prep|of_11(BARE($3,n|butter_12($3))))),$0),co|no_1($0)))
example_end

Sent: I 'm waiting Mr Milkman .
Sem: lambda $0_{r}.aux|~be_2(part|wait-presp_3(pro:sub|i_1,$0),$0)
example_end

Sent: two dozen yes .
Sem: lambda $0_{r}.and(det:num|two_1(n|dozen_2($0)),co|yes_3($0))
example_end

Sent: what 's that attached to your belt Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,and(pro:rel|that_3($2),lambda $3_{r}.and(v|attach-past_4(_,$2,$3),prep|to_5(det:poss|your_6($4,n|belt_7($4)),$3)))),$0)
example_end

Sent: does it have a snap on it ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(pro:per|it_2,det:art|a_4($1,att(n|snap_5($1),prep|on_6(pro:per|it_7))),$0),$0))
example_end

Sent: yes that 's a snap .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|snap_5(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: no he can 't play with it .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|play_5(pro:sub|he_2,$0),prep|with_6(pro:per|it_7,$0)),$0),$0),co|no_1($0))
example_end

Sent: the milk broke too .
Sem: lambda $0_{r}.and(adj|broke_3(det:art|the_1($1,n|milk_2($1)),$0),post|too_4($0))
example_end

Sent: it 's not broken now ?
Sem: lambda $0_{r}.Q(not(adv|now_5(part|break-pastp_4(pro:per|it_1,$0)),$0))
example_end

Sent: just an accident .
Sem: adv|just_1(det:art|a_2($0,n|accident_3($0)))
example_end

Sent: no it 's alright now .
Sem: lambda $0_{r}.and(adv|now_5(adj|alright_4(pro:per|it_2,$0)),co|no_1($0))
example_end

Sent: yes he has his foot sticking out .
Sem: lambda $0_{r}.and(v|have-3s_3(pro:sub|he_2,lambda $1_{r}.and(part|stick-presp_6(det:poss|his_4($2,n|foot_5($2)),$1),adv|out_7($1)),$0),co|yes_1($0))
example_end

Sent: he kicked his sock off .
Sem: lambda $0_{r}.and(v|kick-past_2(pro:sub|he_1,det:poss|his_3($1,n|sock_4($1)),$0),adv|off_5($0))
example_end

Sent: yes he needs it .
Sem: lambda $0_{r}.and(v|need-3s_3(pro:sub|he_2,pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: he just doesn 't like socks .
Sem: lambda $0_{r}.not(mod|do_3(and(v|like_5(pro:sub|he_1,BARE($1,n|sock-pl_6($1)),$0),adv|just_2($0)),$0),$0)
example_end

Sent: do you like yourself ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: do you like yourself ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,pro:refl|yourself_4,$0),$0))
example_end

Sent: no I don 't know what delf means .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,lambda $1_{r}.v|mean-3s_8(BARE($2,chi|delf_7($2)),pro:int|what_6,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: what does it mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|mean_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a milk truck .
Sem: det:art|a_1($0,and_comp(n|milk_2($0),n|truck_3($0)))
example_end

Sent: you parked it in the garage ?
Sem: lambda $0_{r}.Q(and(v|park-past_2(pro:per|you_1,pro:per|it_3,$0),prep|in_4(det:art|the_5($1,n|garage_6($1)),$0)))
example_end

Sent: three dozen milk ?
Sem: BARE($0,Q(and_comp(det:num|three_1(n|dozen_2($0)),n|milk_3($0))))
example_end

Sent: what is one half milk ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,and_comp(det:num|one_3(n|half_4($2)),n|milk_5($2))),$0)
example_end

Sent: how d you get one half milk ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|get_4(pro:per|you_3,BARE($1,and_comp(det:num|one_5(n|half_6($1)),n|milk_7($1))),$0),$2($0)),$0)
example_end

Sent: how can I have half a quart of milk ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|have_4(pro:sub|i_3,n|half_5(det:art|a_6($1,att(n|quart_7($1),prep|of_8(BARE($2,n|milk_9($2)))))),$0),$3($0)),$0)
example_end

Sent: would you give me one half quart of milk ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|give_3(pro:per|you_2,BARE($1,att(and_comp(qn|half_6($1),pro:indef|one_5(n|quart_7($1))),prep|of_8(BARE($2,n|milk_9($2))))),pro:obj|me_4,$0),$0))
example_end

Sent: are you giving me one half ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|give-presp_3(pro:per|you_2,BARE($1,pro:indef|one_5(n|half_6($1))),pro:obj|me_4,$0),$0))
example_end

Sent: please I 'd like one half quart of milk .
Sem: lambda $0_{r}.and(mod|~genmod_3(v|like_4(pro:sub|i_2,BARE($1,att(and(qn|half_6($1),pro:indef|one_5(n|quart_7($1))),prep|of_8(BARE($2,n|milk_9($2))))),$0),$0),co|please_1($0))
example_end

Sent: I don 't think you want to serve me .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|want_6(pro:per|you_5,lambda $2_{r}.v|serve_8(pro:per|you_5,pro:obj|me_9,$2),$1),$0),$0),$0)
example_end

Sent: can I have one half quart of milk please ?
Sem: lambda $0_{r}.Q(and(mod|can_1(v|have_3(pro:sub|i_2,BARE($1,att(and(qn|half_5($1),pro:indef|one_4(n|quart_6($1))),prep|of_7(BARE($2,n|milk_8($2))))),$0),$0),co|please_9($0)))
example_end

Sent: one one half quart .
Sem: BARE($0,and(qn|half_3($0),pro:indef|one_2(n|quart_4($0))))
example_end

Sent: one half .
Sem: BARE($0,det:num|one_1(n|half_2($0)))
example_end

Sent: you said that was one .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.pro:indef|one_5(pro:dem|that_3,$1),$0)
example_end

Sent: now how can you give me one half ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|can_3(and(and(v|give_5(pro:per|you_4,BARE($1,pro:indef|one_7(n|half_8($1))),pro:obj|me_6,$0),adv|now_1($0)),$2($0)),$0)
example_end

Sent: yes and one dozen eggs .
Sem: lambda $0_{r}.and(and_comp(det:num|one_3(n|dozen_4($0)),n|egg-pl_5($0)),co|yes_1($0))
example_end

Sent: look at Paul he has gone to sleep .
Sem: lambda $0_{r}.and(and(cop|look_1(you,$0),prep|at_2(n:prop|paul_3,$0)),aux|have-3s_5(part|go-pastp_6(pro:sub|he_4,lambda $1_{r}.v|sleep_8(pro:sub|he_4,$1),$0),$0))
example_end

Sent: he 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:sub|he_1,$0)
example_end

Sent: oh Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|oh_1($0))
example_end

Sent: can you tell Urs some of the things that you did in nursery school ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tell_3(pro:per|you_2,qn|some_5(det:art|the_7($1,n|thing-pl_8($1))),n:prop|ursula_4,$0),$0))
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: I guess so .
Sem: lambda $0_{r}.and(n|guess_2(pro:sub|i_1,$0),adv|so_3($0))
example_end

Sent: what kind of things ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|thing-pl_4($2)))))
example_end

Sent: you go to nursery school .
Sem: lambda $0_{r}.and(v|go_2(pro:per|you_1,$0),prep|to_3(BARE($1,and_comp(n|nursery_4($1),n|school_5($1))),$0))
example_end

Sent: your dozen what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_1($2,n|dozen_2($2)),$0)
example_end

Sent: do you paint at school ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|paint_3(pro:per|you_2,$0),prep|at_4(BARE($1,n|school_5($1)),$0)),$0))
example_end

Sent: do you paint ?
Sem: lambda $0_{r}.Q(mod|do_1(v|paint_3(pro:per|you_2,$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't go to nursery school .
Sem: lambda $0_{r}.not(mod|do_2(and(v|go_4(pro:sub|i_1,$0),prep|to_5(BARE($1,and_comp(n|nursery_6($1),n|school_7($1))),$0)),$0),$0)
example_end

Sent: you go to nursery school .
Sem: lambda $0_{r}.and(v|go_2(pro:per|you_1,$0),prep|to_3(BARE($1,and_comp(n|nursery_4($1),n|school_5($1))),$0))
example_end

Sent: didn 't you paint those things that you made in clay ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|paint_4(pro:per|you_3,pro:dem|those_5($1,n|thing-pl_6($1)),$0),$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I wasn 't there .
Sem: lambda $0_{r}.not(adv|there_4(pro:sub|i_1,$0),$0)
example_end

Sent: yes I take you there but I don 't stay .
Sem: lambda $0_{r}.and(conj|but_6(not(mod|do_8(cop|stay_10(pro:sub|i_7,$0),$0),$0),and(v|take_3(pro:sub|i_2,pro:per|you_4,$0),adv|there_5($0))),co|yes_1($0))
example_end

Sent: just a little while .
Sem: adv|just_1(det:art|a_2($0,and(adj|little_3($0),n|while_4($0))))
example_end

Sent: d you sing songs Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|sing_3(pro:per|you_2,BARE($1,n|song-pl_4($1)),$0),$0))
example_end

Sent: you mean when you 're having your lunch ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,lambda $1_{r}.aux|~be_5(and(n:gerund|have-presp_6(pro:per|you_4,det:poss|your_7($2,n|lunch_8($2)),$1),conj|when_3($1)),$1),$0))
example_end

Sent: what else d you sing ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|sing_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: I need some milk for the little children at my school .
Sem: lambda $0_{r}.and(v|need_2(pro:sub|i_1,qn|some_3($1,n|milk_4($1)),$0),prep|for_5(det:art|the_6($2,att(and(adj|little_7($2),n|child-pl_8($2)),prep|at_9(det:poss|my_10($3,n|school_11($3))))),$0))
example_end

Sent: can I have five quarts of milk for the school children ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|have_3(pro:sub|i_2,BARE($1,att(det:num|five_4(n|quart-pl_5($1)),prep|of_6(BARE($2,n|milk_7($2))))),$0),prep|for_8(det:art|the_9($3,and_comp(n|school_10($3),n|child-pl_11($3))),$0)),$0))
example_end

Sent: oh she 's a nursery school teacher .
Sem: lambda $0_{r}.and(det:art|a_4(pro:sub|she_2,and_comp(and_comp(n|nursery_5(pro:sub|she_2,$0),n|school_6(pro:sub|she_2,$0)),n|teach-dv_7(pro:sub|she_2,$0))),co|oh_1($0))
example_end

Sent: is the road blocked ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(v|block-past_4(det:art|the_2($1,n|road_3($1)),$0),$0))
example_end

Sent: is the road blocked ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(v|block-past_4(det:art|the_2($1,n|road_3($1)),$0),$0))
example_end

Sent: you can 't have that .
Sem: lambda $0_{r}.not(mod|can_2(v|have_4(pro:per|you_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: the cord .
Sem: det:art|the_1($0,n|cord_2($0))
example_end

Sent: because he doesn 't need it .
Sem: lambda $0_{r}.not(mod|do_3(v|need_5(pro:sub|he_2,pro:per|it_6,$0),$0),$0)
example_end

Sent: oh he just took a little nap .
Sem: lambda $0_{r}.and(and(v|take-past_4(pro:sub|he_2,det:art|a_5($1,and(adj|little_6($1),n|nap_7($1))),$0),adv|just_3($0)),co|oh_1($0))
example_end

Sent: only one butter .
Sem: adv|only_1(BARE($0,det:num|one_2(n|butter_3($0))))
example_end

Sent: that won 't be enough .
Sem: lambda $0_{r}.not(mod|will_2(adv|enough_5(pro:rel|that_1,$0),$0),$0)
example_end

Sent: I think I still need more milk .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|need_5(pro:sub|i_3,BARE($2,and(qn|more_6($2),n|milk_7($2))),$1),adv|still_4($1)),$0)
example_end

Sent: don 't you have another truck ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_4(pro:per|you_3,qn|another_5($1,n|truck_6($1)),$0),$0),$0))
example_end

Sent: that 's still not enough .
Sem: lambda $0_{r}.not(adv|still_3(adv|enough_5(pro:dem|that_1,$0)),$0)
example_end

Sent: are you coming in ?
Sem: lambda $0_{r}.Q(aux|be-pres_1(and(part|come-presp_3(pro:per|you_2,$0),adv|in_4($0)),$0))
example_end

Sent: you 're going to come in in fourteen minutes ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(and(v|come_5(pro:per|you_1,$1),adv|in_6($1)),prep|in_7(BARE($2,det:num|fourteen_8(n|minute-pl_9($2))),$1)),$0),$0))
example_end

Sent: come in Adam .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|in_2($0))
example_end

Sent: Adam can you go down the steps ?
Sem: lambda $0_{r}.Q(n|can_2(and(v|go_4(pro:per|you_3,$0),adv|down_5(det:art|the_6($1,n|step-pl_7($1)),$0)),$0))
example_end

Sent: d you have more parts ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,BARE($1,and(qn|more_4($1),n|part-pl_5($1))),$0),$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh here you are .
Sem: lambda $0_{r}.and(and(cop|be-pres_4(pro:per|you_3,$0),adv|here_2($0)),co|oh_1($0))
example_end

Sent: what 're you going to make ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|make_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: what did you make ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|make_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: a road .
Sem: det:art|a_1($0,n|road_2($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: thank_you yes .
Sem: lambda $0_{r}.and(co|thank_you_1($0),co|yes_2($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: he doesn 't have a ball .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|he_1,det:art|a_5($1,n|ball_6($1)),$0),$0),$0)
example_end

Sent: I think it came off .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|come-past_4(pro:per|it_3,$1),adv|off_5($1)),$0)
example_end

Sent: maybe it broke Adam .
Sem: lambda $0_{r}.and(v|break-past_3(pro:per|it_2,$0),adv|maybe_1($0))
example_end

Sent: d you think that 's why ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,$0),$0))
example_end

Sent: now you play the game with me .
Sem: lambda $0_{r}.and(and(v|play_3(pro:per|you_2,det:art|the_4($1,n|game_5($1)),$0),adv|now_1($0)),prep|with_6(pro:obj|me_7,$0))
example_end

Sent: you ask me .
Sem: lambda $0_{r}.v|ask_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: oh I didn 't bring raisins .
Sem: lambda $0_{r}.and(not(mod|do_3(v|bring_5(pro:sub|i_2,BARE($1,n|raisin-pl_6($1)),$0),$0),$0),co|oh_1($0))
example_end

Sent: alright now you ask me .
Sem: lambda $0_{r}.and(and(v|ask_4(pro:per|you_3,pro:obj|me_5,$0),adv|now_2($0)),co|alright_1($0))
example_end

Sent: what shall I give you ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|give_4(pro:sub|i_3,$1,pro:per|you_5,$0),$0)
example_end

Sent: what did you ask me ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|ask_4(pro:per|you_3,$1,pro:obj|me_5,$0),$0)
example_end

Sent: he throws it up in the air .
Sem: lambda $0_{r}.and(and(v|throw-3s_2(pro:sub|he_1,pro:per|it_3,$0),adv|up_4($0)),prep|in_5(det:art|the_6($1,n|air_7($1)),$0))
example_end

Sent: your house ?
Sem: BARE($0,Q(det:poss|your_1($1,n|house_2($1),$0)))
example_end

Sent: what do I have in my hand ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:sub|i_3,$1,$0),prep|in_5(det:poss|my_6($2,n|hand_7($2)),$0)),$0)
example_end

Sent: two raisins !
Sem: BARE($0,det:num|two_1(n|raisin-pl_2($0)))
example_end

Sent: she has two raisins .
Sem: lambda $0_{r}.v|have-3s_2(pro:sub|she_1,BARE($1,det:num|two_3(n|raisin-pl_4($1))),$0)
example_end

Sent: would you like some juice ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,qn|some_4($1,n|juice_5($1)),$0),$0))
example_end

Sent: it 's not broken .
Sem: lambda $0_{r}.not(part|break-pastp_4(pro:per|it_1,$0),$0)
example_end

Sent: give it to Ursula .
Sem: lambda $0_{r}.and(v|give_1(you,pro:per|it_2,$0),prep|to_3(n:prop|ursula_4,$0))
example_end

Sent: what d you have Adam .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: d you have a saucer ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|saucer_5($1)),$0),$0))
example_end

Sent: because then you wouldn 't have any to drink .
Sem: lambda $0_{r}.not(mod|will_4(and(v|have_6(pro:per|you_3,lambda $1_{r}.v|drink_9(pro:per|you_3,$1),$0),adv:tem|then_2($0)),$0),$0)
example_end

Sent: what d you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: this is a cucumber honey .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n|cucumber_4(pro:dem|this_1,$0))
example_end

Sent: what 's that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: your Jiminy_Cricket ?
Sem: BARE($0,Q(det:poss|your_1($1,n:prop|jiminy_cricket_2($1),$0)))
example_end

Sent: you come show her .
Sem: lambda $0_{r}.v|show_3(pro:per|you_1,pro:obj|her_4,$0)
example_end

Sent: come and catch him .
Sem: lambda $0_{r}.v|catch_3(you,pro:obj|him_4,$0)
example_end

Sent: your blanket ?
Sem: BARE($0,Q(det:poss|your_1($1,n|blanket_2($1),$0)))
example_end

Sent: may I see how he walks Adam ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,lambda $1_{r}.and(v|walk-3s_6(pro:sub|he_5,$1),adv:int|how_4($1)),$0),$0))
example_end

Sent: he fell over .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:sub|he_1,$0),adv|over_3($0))
example_end

Sent: stop kicking me .
Sem: lambda $0_{r}.part|kick-presp_2(you,pro:obj|me_3,$0)
example_end

Sent: what does Jiminy_Cricket have on his back ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(and(v|have_4(n:prop|jiminy_cricket_3,$1,$0),prep|on_5(det:poss|his_6($2,n|back_7($2)),$0)),$0)
example_end

Sent: it won 't come out .
Sem: lambda $0_{r}.not(mod|will_2(and(v|come_4(pro:per|it_1,$0),adv|out_5($0)),$0),$0)
example_end

Sent: you 'll break it .
Sem: lambda $0_{r}.mod|~will_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: oh is that like a wheelbarrow ?
Sem: lambda $0_{r}.Q(and(and(cop|be-3s_2(pro:dem|that_3,$0),prep|like_4(det:art|a_5($1,n|wheel+barrow_6($1)),$0)),co|oh_1($0)))
example_end

Sent: he fell .
Sem: lambda $0_{r}.v|fall-past_2(pro:sub|he_1,$0)
example_end

Sent: you scoot and get him .
Sem: lambda $0_{r}.v|get_4(pro:per|you_1,pro:obj|him_5,$0)
example_end

Sent: that 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: that 's fresh .
Sem: lambda $0_{r}.adj|fresh_3(pro:dem|that_1,$0)
example_end

Sent: yes catch him please .
Sem: lambda $0_{r}.and(and(v|catch_2(you,pro:obj|him_3,$0),co|yes_1($0)),co|please_4($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it must be in Daddy 's car isn 't it ?
Sem: lambda $0_{r}.Q(and(mod|must_2(and(cop|be_3(pro:per|it_1,$0),prep|in_4(n:prop|daddy_5's($1,n|car_7($1)),$0)),$0),not(cop|be_8(pro:per|it_10,$0),$0)))
example_end

Sent: your pail .
Sem: det:poss|your_1($0,n|pail_2($0))
example_end

Sent: well Daddy has the car .
Sem: lambda $0_{r}.and(v|have-3s_3(n:prop|daddy_2,det:art|the_4($1,n|car_5($1)),$0),co|well_1($0))
example_end

Sent: he took the car to work .
Sem: lambda $0_{r}.and(v|take-past_2(pro:sub|he_1,det:art|the_3($1,n|car_4($1)),$0),prep|to_5(BARE($2,n|work_6($2)),$0))
example_end

Sent: we 'll look at it tonight .
Sem: lambda $0_{r}.mod|~will_2(and(and(cop|look_3(pro:sub|we_1,$0),prep|at_4(pro:per|it_5,$0)),adv:tem|tonight_6($0)),$0)
example_end

Sent: you may be excused .
Sem: lambda $0_{r}.cop|be_3(mod|may_2(part|excuse-pastp_4(pro:per|you_1,$0),$0),$0)
example_end

Sent: didn 't you burp ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|burp_4(pro:per|you_3,$0),$0),$0))
example_end

Sent: did you show Urs your name embroidered on your sunsuit ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:poss|your_5($1,n|name_6($1)),n:prop|ursula_4,$0),$0)
example_end

Sent: who wrote that ?
Sem: lambda $1_{e}.lambda $0_{r}.v|write-past_2($1,pro:dem|that_3,$0)
example_end

Sent: he 's going to wear that to the wedding .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|he_1,lambda $1_{r}.and(v|wear_5(pro:sub|he_1,pro:dem|that_6,$1),prep|to_7(det:art|the_8($2,n|wedding_9($2)),$1)),$0),$0)
example_end

Sent: he 's going to a wedding .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-presp_3(pro:sub|he_1,$0),prep|to_4(det:art|a_5($1,n|wedding_6($1)),$0)),$0)
example_end

Sent: what 's a wedding Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|wedding_4($2)),$0)
example_end

Sent: Catherine 's wedding .
Sem: n:prop|catherine_1's($0,n|wedding_3($0))
example_end

Sent: well because she wanted to .
Sem: lambda $0_{r}.and(v|want-past_4(pro:sub|she_3,$0),co|well_1($0))
example_end

Sent: yes I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: but don 't write on the chair .
Sem: lambda $0_{r}.not(mod|do_2(and(v|write_4(you,$0),prep|on_5(det:art|the_6($1,n|chair_7($1)),$0)),$0),$0)
example_end

Sent: poor Urs what will she do for a pencil if you break it ?
Sem: lambda $1_{e}.lambda $0_{r}.and(conj|if_10(v|break_12(pro:per|you_11,pro:per|it_13,$0),mod|will_4(and(v|do_6(pro:sub|she_5,$1,$0),prep|for_7(det:art|a_8($2,n|pencil_9($2)),$0)),$0)),att(n:prop|ursula_2,BARE($3,adj|poor_1($3))))
example_end

Sent: yes but suppose something happens to that one .
Sem: lambda $0_{r}.and(v|suppose_3(you,lambda $1_{r}.and(v|happen-3s_5(pro:indef|something_4,$1),prep|to_6(pro:dem|that_7($2,pro:indef|one_8($2)),$1)),$0),co|yes_1($0))
example_end

Sent: she 'll need another one .
Sem: lambda $0_{r}.mod|~will_2(v|need_3(pro:sub|she_1,qn|another_4($1,pro:indef|one_5($1)),$0),$0)
example_end

Sent: yes you can look in there .
Sem: lambda $0_{r}.and(mod|can_3(and(cop|look_4(pro:per|you_2,$0),prep|in_5(adv|there_6($0))),$0),co|yes_1($0))
example_end

Sent: no not another pencil Adam .
Sem: lambda $0_{r}.and(not(qn|another_3($1,n|pencil_4($1)),$0),co|no_1($0))
example_end

Sent: yes write your name .
Sem: lambda $0_{r}.and(v|write_2(you,det:poss|your_3($1,n|name_4($1)),$0),co|yes_1($0))
example_end

Sent: on the paper .
Sem: prep|on_1(det:art|the_2($0,n|paper_3($0)))
example_end

Sent: no you 're already broken one .
Sem: lambda $0_{r}.and(aux|~be_3(and(part|break-pastp_5(pro:per|you_2,pro:indef|one_6,$0),adv|already_4($0)),$0),co|no_1($0))
example_end

Sent: why d you break one ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|break_4(pro:per|you_3,pro:indef|one_5,$0),$1($0)),$0)
example_end

Sent: can you write on the box ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|write_3(pro:per|you_2,$0),prep|on_4(det:art|the_5($1,n|box_6($1)),$0)),$0))
example_end

Sent: we didn 't show what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_2(v|show_4(pro:sub|we_1,$1,$0),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what did happen Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|happen_3($1,$0),$0)
example_end

Sent: you spilled it yes .
Sem: lambda $0_{r}.and(v|spill-past_2(pro:per|you_1,pro:per|it_3,$0),co|yes_4($0))
example_end

Sent: we don 't sit on books dear .
Sem: lambda $0_{r}.not(mod|do_2(and(v|sit_4(pro:sub|we_1,$0),prep|on_5(BARE($1,n|book-pl_6($1)),$0)),$0),$0)
example_end

Sent: because books are for reading .
Sem: lambda $0_{r}.and(cop|be-pres_3(BARE($1,n|book-pl_2($1)),$0),prep|for_4(BARE($2,n:gerund|read-presp_5($2)),$0))
example_end

Sent: no I don 't want you to Adam .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|i_2,pro:per|you_6,$0),$0),$0),co|no_1($0))
example_end

Sent: what d you see Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: where did your what go ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.v|do-past_2(and(v|go_5($1,$0),$2($0)),$0)
example_end

Sent: tonight we 'll get it out_of the car .
Sem: lambda $0_{r}.mod|~will_3(and(and(aux|get_4(pro:sub|we_2,pro:per|it_5,$0),adv:tem|tonight_1($0)),prep|out_of_6(det:art|the_7($1,n|car_8($1)),$0)),$0)
example_end

Sent: Adam I 'll have_to take the pencil from you if you don 't be more careful .
Sem: lambda $0_{r}.conj|if_10(mod|do_12(adv|more_15(co|careful_16(pro:per|you_11,$0)),$0),mod:aux|have_to_4(mod|~will_3(and(v|take_5(pro:sub|i_2,det:art|the_6($1,n|pencil_7($1)),$0),prep|from_8(pro:per|you_9,$0)),$0),$0))
example_end

Sent: little soda water ?
Sem: BARE($0,Q(and_comp(n|soda_2($0),and(adj|little_1($0),n|water_3($0)))))
example_end

Sent: m e spells me .
Sem: lambda $0_{r}.v|spell-3s_3(BARE($1,n:let|e_2($1)),pro:obj|me_4,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: did you go fishing with it ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(part|fish-presp_4(pro:per|you_2,$0),prep|with_5(pro:per|it_6,$0)),$0))
example_end

Sent: you 're going to turn the water off tomorrow .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|turn_5(pro:per|you_1,det:art|the_6($2,n|water_7($2)),$1),adv|off_8($1)),$0),adv:tem|tomorrow_9($0)),$0)
example_end

Sent: did you learn to swim ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|learn_3(pro:per|you_2,lambda $1_{r}.v|swim_5(pro:per|you_2,$1),$0),$0))
example_end

Sent: Adam don 't do that dear .
Sem: lambda $0_{r}.not(mod|do_2(v|do_4(you,pro:dem|that_5,$0),$0),$0)
example_end

Sent: no I don 't think you know how to put a hole back together .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|know_7(pro:per|you_6,lambda $2_{r}.and(and(v|put-zero_10(pro:per|you_6,det:art|a_11($3,n|hole_12($3)),$2),adv:int|how_8($2)),adv|back_13(adv|together_14($2))),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: it 's a card holder .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|card_4(pro:per|it_1,$0),n|hold-dv_5(pro:per|it_1,$0)))
example_end

Sent: David made it .
Sem: lambda $0_{r}.v|make-past_2(n:prop|david_1,pro:per|it_3,$0)
example_end

Sent: he didn 't make it for you .
Sem: lambda $0_{r}.not(mod|do_2(and(v|make_4(pro:sub|he_1,pro:per|it_5,$0),prep|for_6(pro:per|you_7,$0)),$0),$0)
example_end

Sent: he made it for his Mother .
Sem: lambda $0_{r}.and(v|make-past_2(pro:sub|he_1,pro:per|it_3,$0),prep|for_4(det:poss|his_5($1,n:prop|mother_6($1)),$0))
example_end

Sent: are you his Mother ?
Sem: lambda $0_{r}.Q(det:poss|his_3(pro:per|you_2,n:prop|mother_4(pro:per|you_2,$0)))
example_end

Sent: no she didn 't say Robin she said David didn 't she ?
Sem: lambda $0_{r}.Q(and(not(and(mod|do_3(v|say_5(pro:sub|she_2,n:prop|robin_6,$0),$0),and(v|say-past_8(pro:sub|she_7,n:prop|david_9,$0),not(mod|do_10(pro:sub|she_12,$0),$0))),$0),co|no_1($0)))
example_end

Sent: is there something else in there ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_1(post|else_4(pro:indef|something_3),$0),adv|in_5(adv|there_6($0))))
example_end

Sent: oh one piece broke .
Sem: lambda $0_{r}.and(adj|broke_4(BARE($1,det:num|one_2(n|piece_3($1))),$0),co|oh_1($0))
example_end

Sent: maybe something bumped it .
Sem: lambda $0_{r}.and(v|bump-past_3(pro:indef|something_2,pro:per|it_4,$0),adv|maybe_1($0))
example_end

Sent: I don 't know what bumped it Adam .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|bump-past_6(pro:int|what_5,pro:per|it_7,$1),$0),$0),$0)
example_end

Sent: I don 't know either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),adv|either_5($0)),$0),$0)
example_end

Sent: it was an accident .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|accident_4(pro:per|it_1,$0))
example_end

Sent: no you can 't put crayon back together once it 's broken .
Sem: lambda $0_{r}.and(not(conj|once_9(part|break-pastp_12(pro:per|it_10,$0),mod|can_3(and(v|put-zero_5(pro:per|you_2,BARE($1,n|crayon_6($1)),$0),adv|back_7(adv|together_8($0))),$0)),$0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: maybe Robin broke that one .
Sem: lambda $0_{r}.and(v|break-past_3(n:prop|robin_2,pro:dem|that_4($1,pro:indef|one_5($1)),$0),adv|maybe_1($0))
example_end

Sent: maybe a fire truck .
Sem: adv|maybe_1(det:art|a_2($0,and_comp(n|fire_3($0),n|truck_4($0))))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: from our fire station up the street .
Sem: prep|from_1(det:poss|our_2($0,att(and_comp(n|fire_3($0),v|station_4($0)),adv|up_5(det:art|the_6($1,n|street_7($1))))))
example_end

Sent: I think it 's resting now .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.cop|~be_4(and(part|rest-presp_5(pro:per|it_3,$1),adv|now_6($1)),$1),$0)
example_end

Sent: so when the fire alarm rings it will be ready to go to the fire .
Sem: lambda $0_{r}.and(mod|will_8(conj|when_2(v|ring-3s_6(det:art|the_3($1,and_comp(n|fire_4($1),n|alarm_5($1))),$0),adj|ready_10(pro:per|it_7,lambda $2_{r}.and(v|go_12(pro:per|it_7,$2),prep|to_13(det:art|the_14($3,n|fire_15($3)),$2)),$0)),$0),co|so_1($0))
example_end

Sent: no that 's not the one ?
Sem: lambda $0_{r}.Q(and(not(det:art|the_5(pro:dem|that_2,pro:indef|one_6(pro:dem|that_2,$0)),$0),co|no_1($0)))
example_end

Sent: look in the bag Adam .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|in_2(det:art|the_3($1,n|bag_4($1)),$0))
example_end

Sent: it 's an indian .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|indian_4(pro:per|it_1,$0))
example_end

Sent: well he doesn 't have anything .
Sem: lambda $0_{r}.and(not(mod|do_3(v|have_5(pro:sub|he_2,pro:indef|anything_6,$0),$0),$0),co|well_1($0))
example_end

Sent: looks as_if he had a spear in his hand .
Sem: lambda $0_{r}.cop|look-3s_1(you,lambda $1_{r}.and(v|have-past_4(pro:sub|he_3,det:art|a_5($2,n|spear_6($2)),$1),prep|in_7(det:poss|his_8($3,n|hand_9($3)),$1)),$0)
example_end

Sent: is that the one ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,pro:indef|one_4(pro:rel|that_2,$0)))
example_end

Sent: that 's cake ?
Sem: lambda $0_{r}.Q(n|cake_3(pro:dem|that_1,$0))
example_end

Sent: what kind of cake ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|cake_4($2)))))
example_end

Sent: yes he 's keeping that one .
Sem: lambda $0_{r}.and(aux|~be_3(part|keep-presp_4(pro:sub|he_2,pro:dem|that_5($1,pro:indef|one_6($1)),$0),$0),co|yes_1($0))
example_end

Sent: it was very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:per|it_1,$0))
example_end

Sent: I did .
Sem: lambda $0_{r}.v|do-past_2(pro:sub|i_1,$0)
example_end

Sent: I don 't want to eat his head .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|i_1,lambda $1_{r}.v|eat_6(pro:sub|i_1,det:poss|his_7($2,n|head_8($2)),$1),$0),$0),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: that 's band around his head .
Sem: lambda $0_{r}.att(n|band_3(pro:dem|that_1,$0),prep|around_4(det:poss|his_5($1,n|head_6($1))))
example_end

Sent: and let the birds eat it ?
Sem: lambda $0_{r}.Q(v|let-zero_2(you,lambda $1_{r}.v|eat_5(det:art|the_3($2,n|bird-pl_4($2)),pro:per|it_6,$1),$0))
example_end

Sent: remember when you fed the pigeons you didn 't have_to put it in a dish .
Sem: lambda $0_{r}.and(not(mod:aux|have_to_10(mod|do_8(conj|when_2(v|feed-past_4(pro:per|you_3,det:art|the_5($1,n|pigeon-pl_6($1)),$0),and(v|put-zero_11(pro:per|you_7,pro:per|it_12,$0),prep|in_13(det:art|a_14($2,n|dish_15($2)),$0))),$0),$0),$0),v|remember_1(you,$0))
example_end

Sent: to the fish ?
Sem: Q(prep|to_1(det:art|the_2($0,n|fish_3($0))))
example_end

Sent: where can you find some fish ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|find_4(pro:per|you_3,qn|some_5($1,n|fish_6($1)),$0),$2($0)),$0)
example_end

Sent: okay Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|okay_1($0))
example_end

Sent: now pick the things up .
Sem: lambda $0_{r}.and(and(v|pick_2(you,det:art|the_3($1,n|thing-pl_4($1)),$0),adv|now_1($0)),adv|up_5($0))
example_end

Sent: don 't throw Adam .
Sem: lambda $0_{r}.not(mod|do_1(v|throw_3(you,$0),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: it is red .
Sem: lambda $0_{r}.adj|red_3(pro:per|it_1,$0)
example_end

Sent: there 's a grey crayon .
Sem: lambda $0_{r}.cop|~be_2(det:art|a_3($1,and(adj|grey_4($1),n|crayon_5($1))),$0)
example_end

Sent: don 't take them out Adam .
Sem: lambda $0_{r}.not(mod|do_1(and(v|take_3(you,pro:obj|them_4,$0),adv|out_5($0)),$0),$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: because little boys don 't smoke cigarettes .
Sem: lambda $0_{r}.not(mod|do_4(v|smoke_6(BARE($1,and(adj|little_2($1),n|boy-pl_3($1))),BARE($2,n|cigarette-pl_7($2)),$0),$0),$0)
example_end

Sent: I have a good black pen .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,det:art|a_3($1,and(adj|black_5($1),and(adj|good_4($1),n|pen_6($1)))),$0)
example_end

Sent: you 're making what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|make-presp_3(pro:per|you_1,$1,$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: yes it does look like spaghetti .
Sem: lambda $0_{r}.and(mod|do-3s_3(and(co|look_4(pro:per|it_2,$0),co|like_5(BARE($1,n|spaghetti_6($1)),$0)),$0),co|yes_1($0))
example_end

Sent: what kind of spaghetti is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_6,att(n|kind_2(pro:per|it_6,$0),prep|of_3(BARE($2,n|spaghetti_4($2)))))
example_end

Sent: Perro 's spaghetti ?
Sem: BARE($0,Q(n:prop|perro_1's($1,n|spaghetti_3($1),$0)))
example_end

Sent: he talking ?
Sem: lambda $0_{r}.Q(part|talk-presp_2(pro:sub|he_1,$0))
example_end

Sent: he is a pony ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:sub|he_1,n|pony_4(pro:sub|he_1,$0)))
example_end

Sent: he 's a little boy .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|he_1,and(n|boy_5(pro:sub|he_1,$0),adj|little_4(pro:sub|he_1,$0)))
example_end

Sent: you open it .
Sem: lambda $0_{r}.v|open_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: no you don 't open it by pulling it .
Sem: lambda $0_{r}.and(not(adv|by_7(part|pull-presp_8(you,pro:per|it_9,$0),mod|do_3(v|open_5(pro:per|you_2,pro:per|it_6,$0),$0)),$0),co|no_1($0))
example_end

Sent: you turn the knob .
Sem: lambda $0_{r}.v|turn_2(pro:per|you_1,det:art|the_3($1,n|knob_4($1)),$0)
example_end

Sent: turn the knob .
Sem: lambda $0_{r}.v|turn_1(you,det:art|the_2($1,n|knob_3($1)),$0)
example_end

Sent: looks like a gun ?
Sem: lambda $0_{r}.Q(and(cop|look-3s_1(you,$0),prep|like_2(det:art|a_3($1,n|gun_4($1)),$0)))
example_end

Sent: you threw them away .
Sem: lambda $0_{r}.and(v|throw-past_2(pro:per|you_1,pro:obj|them_3,$0),adv|away_4($0))
example_end

Sent: poor cowboys .
Sem: BARE($0,and(adj|poor_1($0),n|cow+boy_2($0)))
example_end

Sent: yes why did you throw the cowboys away ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(and(v|throw_5(pro:per|you_4,det:art|the_6($1,n|cow+boy_7($1)),$0),$2($0)),adv|away_8($0)),$0),co|yes_1($0))
example_end

Sent: bring them back tomorrow ?
Sem: lambda $0_{r}.Q(and(and(v|bring_1(you,pro:obj|them_2,$0),adv|back_3($0)),adv:tem|tomorrow_4($0)))
example_end

Sent: why don 't you use a pencil too ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|use_5(pro:per|you_4,det:art|a_6($1,n|pencil_7($1)),$0),$2($0)),post|too_8($0)),$0),$0)
example_end

Sent: you 've broken that one ?
Sem: lambda $0_{r}.Q(aux|~have_2(part|break-pastp_3(pro:per|you_1,pro:dem|that_4($1,pro:indef|one_5($1)),$0),$0))
example_end

Sent: you see what happens ?
Sem: lambda $0_{r}.Q(v|see_2(pro:per|you_1,lambda $1_{r}.v|happen-3s_4(pro:int|what_3,$1),$0))
example_end

Sent: there 's your pen .
Sem: lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|pen_4($1)),$0),pro:exist|there_1($0))
example_end

Sent: I don 't need one .
Sem: lambda $0_{r}.not(mod|do_2(v|need_4(pro:sub|i_1,pro:indef|one_5,$0),$0),$0)
example_end

Sent: you must be need one ?
Sem: lambda $0_{r}.cop|be_3(you,$0)
example_end

Sent: Adam use them only on the pad .
Sem: lambda $0_{r}.and(v|use_2(you,pro:obj|them_3,$0),adv|only_4(prep|on_5(det:art|the_6($1,n|pad_7($1)),$0)))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: because it would hurt Paul .
Sem: lambda $0_{r}.mod|will-cond_3(part|hurt-pastp_4(pro:per|it_2,n:prop|paul_5,$0),$0)
example_end

Sent: because he 's one of your toys .
Sem: lambda $0_{r}.att(pro:indef|one_4(pro:sub|he_2,$0),prep|of_5(det:poss|your_6($1,n|toy-pl_7($1))))
example_end

Sent: that 's not Perro who ?
Sem: lambda $0_{r}.not(n:prop|perro_4(pro:dem|that_1,$0),$0)
example_end

Sent: what 's in here ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|~be_2($1,$0),prep|in_3(adv|here_4($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what are you looking for ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|look-presp_4_for_5(pro:per|you_3,$1,$0),$0)
example_end

Sent: Perro 's what ?
Sem: n:prop|perro_1's($0,pro:int|what_3($0))
example_end

Sent: he said with those horse .
Sem: lambda $0_{r}.and(v|say-past_2(pro:sub|he_1,$0),prep|with_3(pro:dem|those_4($1,n|horse_5($1)),$0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: there are some on the floor Adam .
Sem: lambda $0_{r}.cop|be-pres_2(you,$0)
example_end

Sent: your skin hurts ?
Sem: lambda $0_{r}.Q(v|hurt-3s_3(det:poss|your_1($1,n|skin_2($1)),$0))
example_end

Sent: where is your skin ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:poss|your_3($1,n|skin_4($1)),$0),$2($0))
example_end

Sent: why don 't you pick the other things up too ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(v|pick_5(pro:per|you_4,det:art|the_6($1,and(qn|other_7($1),n|thing-pl_8($1))),$0),$2($0)),adv|up_9($0)),post|too_10($0)),$0),$0)
example_end

Sent: save them .
Sem: lambda $0_{r}.v|save_1(you,pro:obj|them_2,$0)
example_end

Sent: I see a seal .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,det:art|a_3($1,n|seal_4($1)),$0)
example_end

Sent: you have broken that ?
Sem: lambda $0_{r}.Q(v|have_2(part|break-pastp_3(pro:per|you_1,pro:dem|that_4,$0),$0))
example_end

Sent: where is the top to that ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,att(adj|top_4($1),prep|to_5(pro:dem|that_6))),$0),$2($0))
example_end

Sent: yes I 'll be the baker .
Sem: lambda $0_{r}.and(mod|~will_3(det:art|the_5(pro:sub|i_2,n|bake-dv_6(pro:sub|i_2,$0)),$0),co|yes_1($0))
example_end

Sent: yes I 'll be a baker .
Sem: lambda $0_{r}.and(mod|~will_3(det:art|a_5(pro:sub|i_2,n|bake-dv_6(pro:sub|i_2,$0)),$0),co|yes_1($0))
example_end

Sent: no I 'm no meat .
Sem: lambda $0_{r}.and(not(n|meat_5(pro:sub|i_2,$0),$0),co|no_1($0))
example_end

Sent: because I 'm Cecile .
Sem: lambda $0_{r}.n:prop|cecile_4(pro:sub|i_2,$0)
example_end

Sent: are those strong men ?
Sem: lambda $0_{r}.Q(and(n|man-pl_4(pro:dem|those_2,$0),adj|strong_3(pro:dem|those_2,$0)))
example_end

Sent: one pitch .
Sem: BARE($0,det:num|one_1(n|pitch_2($0)))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: why don 't you go over there by yourself with that stick ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(and(v|go_5(pro:per|you_4,$0),$1($0)),adv|over_6(adv|there_7($0))),prep|by_8(pro:refl|yourself_9,$0)),prep|with_10(pro:dem|that_11($2,n|stick_12($2)),$0)),$0),$0)
example_end

Sent: don 't hit the baby .
Sem: lambda $0_{r}.not(mod|do_1(v|hit-zero_3(you,det:art|the_4($1,n|baby_5($1)),$0),$0),$0)
example_end

Sent: you 'll hurt the little baby .
Sem: lambda $0_{r}.mod|~will_2(v|hurt-zero_3(pro:per|you_1,det:art|the_4($1,and(adj|little_5($1),n|baby_6($1))),$0),$0)
example_end

Sent: he 'll cry .
Sem: lambda $0_{r}.mod|~will_2(v|cry_3(pro:sub|he_1,$0),$0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: no don 't hit anybody with the stick .
Sem: lambda $0_{r}.and(not(mod|do_2(and(n|hit_4(you,pro:indef|anybody_5,$0),prep|with_6(det:art|the_7($1,n|stick_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: no I wouldn 't hit the babies .
Sem: lambda $0_{r}.and(not(mod|will_3(v|hit-zero_5(pro:sub|i_2,det:art|the_6($1,n|baby-pl_7($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: give me the strong man .
Sem: lambda $0_{r}.v|give_1(you,det:art|the_3($1,and(adj|strong_4($1),n|man_5($1))),pro:obj|me_2,$0)
example_end

Sent: they 're very heavy .
Sem: lambda $0_{r}.adv|very_3(adj|heavy_4(pro:sub|they_1,$0))
example_end

Sent: he could probably lift you up with one hand .
Sem: lambda $0_{r}.mod|could_2(and(and(and(v|lift_4(pro:sub|he_1,pro:per|you_5,$0),adv|probable-dadj_3($0)),adv|up_6($0)),prep|with_7(BARE($1,det:num|one_8(n|hand_9($1))),$0)),$0)
example_end

Sent: you can 't lift him up .
Sem: lambda $0_{r}.not(mod|can_2(and(v|lift_4(pro:per|you_1,pro:obj|him_5,$0),adv|up_6($0)),$0),$0)
example_end

Sent: I 'll have_to take the stick away .
Sem: lambda $0_{r}.mod:aux|have_to_3(mod|~will_2(and(v|take_4(pro:sub|i_1,det:art|the_5($1,n|stick_6($1)),$0),adv|away_7($0)),$0),$0)
example_end

Sent: no give me the lion .
Sem: lambda $0_{r}.and(v|give_2(you,det:art|the_4($1,n|lion_5($1)),pro:obj|me_3,$0),co|no_1($0))
example_end

Sent: what d you think the lion is doing ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.aux|be-3s_7(part|do-presp_8(det:art|the_5($2,n|lion_6($2)),pro:int|what_1,$1),$1),$0),$0))
example_end

Sent: well that 's a special kind of block they have for animals that perform .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,att(and(n|kind_6(pro:dem|that_2,$0),n|special_5(pro:dem|that_2,$0)),prep|of_7(BARE($1,n|block_8($1))))),co|well_1($0))
example_end

Sent: what do you think is happening there ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.aux|be-3s_5(and(part|happen-presp_6(pro:int|what_1,$1),adv|there_7($1)),$1),$0),$0))
example_end

Sent: no more .
Sem: qn|no_1($0,pro:indef|more_2($0))
example_end

Sent: I think you 've had enough tea .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~have_4(and(part|have-pastp_5(pro:per|you_3,BARE($2,n|tea_7($2)),$1),adj|enough_6($1)),$1),$0)
example_end

Sent: what d you think the lion is doing ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.aux|be-3s_7(part|do-presp_8(det:art|the_5($2,n|lion_6($2)),pro:int|what_1,$1),$1),$0),$0))
example_end

Sent: I think he 's growling .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.aux|~be_4(part|growl-presp_5(pro:sub|he_3,$1),$1),$0)
example_end

Sent: Adam did you hear a lion roar ?
Sem: lambda $0_{r}.Q(mod|do-past_2(v|hear_4(pro:per|you_3,lambda $1_{r}.n|roar_7(det:art|a_5($2,n|lion_6($2)),$1),$0),$0))
example_end

Sent: when you were at the zoo ?
Sem: lambda $0_{r}.Q(and(cop|be-past_3(pro:per|you_2,$0),prep|at_4(det:art|the_5($1,n|zoo_6($1)),$0)))
example_end

Sent: we are ?
Sem: lambda $0_{r}.Q(cop|be-pres_2(pro:sub|we_1,$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: alright I think I have one .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.v|have_5(pro:sub|i_4,pro:indef|one_6,$1),$0),adj|alright_1($0))
example_end

Sent: Adam you let her look .
Sem: lambda $0_{r}.v|let-zero_3(pro:per|you_2,lambda $1_{r}.co|look_5(pro:obj|her_4,$1),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: no I won 't let you smoke .
Sem: lambda $0_{r}.and(not(mod|will_3(v|let-zero_5(pro:sub|i_2,lambda $1_{r}.v|smoke_7(pro:per|you_6,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: here 's a pen for you .
Sem: lambda $0_{r}.and(and(cop|~be_2(det:art|a_3($1,n|pen_4($1)),$0),pro:exist|here_1($0)),prep|for_5(pro:per|you_6,$0))
example_end

Sent: that 's my pen .
Sem: lambda $0_{r}.det:poss|my_3(pro:dem|that_1,n|pen_4(pro:dem|that_1,$0))
example_end

Sent: it came from my purse .
Sem: lambda $0_{r}.and(v|come-past_2(pro:per|it_1,$0),prep|from_3(det:poss|my_4($1,n|purse_5($1)),$0))
example_end

Sent: I did .
Sem: lambda $0_{r}.v|do-past_2(pro:sub|i_1,$0)
example_end

Sent: whose would it be ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will-cond_2($1(pro:per|it_3,$0),$0)
example_end

Sent: that 's my comb .
Sem: lambda $0_{r}.det:poss|my_3(pro:dem|that_1,n|comb_4(pro:dem|that_1,$0))
example_end

Sent: it 's black .
Sem: lambda $0_{r}.adj|black_3(pro:per|it_1,$0)
example_end

Sent: is my hair blue ?
Sem: lambda $0_{r}.Q(n|blue_4(det:poss|my_2($1,n|hair_3($1)),$0))
example_end

Sent: fifty dollars .
Sem: BARE($0,det:num|fifty_1(n|dollar-pl_2($0)))
example_end

Sent: you going give me fifty dollars ?
Sem: lambda $0_{r}.Q(v|give_3(pro:per|you_1,BARE($1,det:num|fifty_5(n|dollar-pl_6($1))),pro:obj|me_4,$0))
example_end

Sent: you 're very kind .
Sem: lambda $0_{r}.adv|very_3(adj|kind_4(pro:per|you_1,$0))
example_end

Sent: he doesn 't want any money ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|want_4(pro:sub|he_1,qn|any_5($1,n|money_6($1)),$0),$0),$0))
example_end

Sent: I have a constant battle to keep him out_of a sweater .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,det:art|a_3($1,rel(and(n|constant_4($1),n|battle_5($1)),lambda $2_{r}.and(v|keep_7(_,pro:obj|him_8,$2),prep|out_of_9(det:art|a_10($3,n|sweater_11($3)),$2)))),$0)
example_end

Sent: to the bank ?
Sem: Q(prep|to_1(det:art|the_2($0,n|bank_3($0))))
example_end

Sent: let you do what on the sidewalk ?
Sem: lambda $2_{e}.lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.and(v|do_3(pro:per|you_2,$2,$1),adv|on_5(det:art|the_6($3,n|sidewalk_7($3)),$1)),$0)
example_end

Sent: this afternoon yes .
Sem: lambda $0_{r}.and(pro:dem|this_1($1,n|afternoon_2($1),$0),co|yes_3($0))
example_end

Sent: this afternoon .
Sem: pro:dem|this_1($0,n|afternoon_2($0))
example_end

Sent: that 's a doggie .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|dog-dim_4(pro:dem|that_1,$0))
example_end

Sent: well let me see that doggie .
Sem: lambda $0_{r}.and(v|let-zero_2(you,lambda $1_{r}.v|see_4(pro:obj|me_3,pro:rel|that_5($2,n|dog-dim_6($2)),$1),$0),co|well_1($0))
example_end

Sent: what kind of dog is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|dog_4($2)))))
example_end

Sent: he 'll come down backwards .
Sem: lambda $0_{r}.mod|~will_2(and(and(v|come_3(pro:sub|he_1,$0),adv|down_4($0)),adv|backwards_5($0)),$0)
example_end

Sent: looks like Twinkles doesn 't it ?
Sem: lambda $0_{r}.Q(and(and(cop|look-3s_1(you,$0),conj|like_2(n:prop|twinkles_3,$0)),not(mod|do_4(pro:per|it_6,$0),$0)))
example_end

Sent: he can 't go ?
Sem: lambda $0_{r}.Q(not(mod|can_2(v|go_4(pro:sub|he_1,$0),$0),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I don 't think you can open it .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(v|open_7(pro:per|you_5,pro:per|it_8,$1),$1),$0),$0),$0)
example_end

Sent: oh no it doesn 't open .
Sem: lambda $0_{r}.and(not(mod|do_4(v|open_6(pro:per|it_3,$0),$0),$0),and(co|no_2($0),co|oh_1($0)))
example_end

Sent: what kind of bag is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_6,att(n|kind_2(pro:per|it_6,$0),prep|of_3(BARE($2,n|bag_4($2)))))
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: those are palm trees from Hawaii .
Sem: lambda $0_{r}.att(and_comp(n|palm_3(pro:dem|those_1,$0),n|tree-pl_4(pro:dem|those_1,$0)),prep|from_5(n:prop|hawaii_6))
example_end

Sent: two men ?
Sem: BARE($0,Q(det:num|two_1(n|man-pl_2($0))))
example_end

Sent: what kind of men ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|man-pl_4($2)))))
example_end

Sent: these are all things that you find in the circus aren 't they ?
Sem: lambda $0_{r}.Q(and(qn|all_3(pro:dem|these_1,n|thing-pl_4(pro:dem|these_1,$0)),not(aux|be_11(pro:sub|they_13,$0),$0)))
example_end

Sent: what did Bengy see the seals doing when he went to the zoo ?
Sem: lambda $4_{e}.lambda $0_{r}.conj|when_8(and(v|go-past_10(pro:sub|he_9,$0),prep|to_11(det:art|the_12($1,n|zoo_13($1)),$0)),mod|do-past_2(v|see_4(n:prop|bengy_3,lambda $2_{r}.part|do-presp_7(det:art|the_5($3,n|seal-pl_6($3)),$4,$2),$0),$0))
example_end

Sent: what were they doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-past_2(part|do-presp_4(pro:sub|they_3,$1,$0),$0)
example_end

Sent: yes they went to sleep didn 't they ?
Sem: lambda $0_{r}.Q(and(and(v|go-past_3(pro:sub|they_2,lambda $1_{r}.n|sleep_5(pro:sub|they_2,$1),$0),not(mod|do_6(pro:sub|they_8,$0),$0)),co|yes_1($0)))
example_end

Sent: had a horn yes .
Sem: lambda $0_{r}.and(v|have-past_1(you,det:art|a_2($1,n|horn_3($1)),$0),co|yes_4($0))
example_end

Sent: he was playing a little tune .
Sem: lambda $0_{r}.aux|be-past_2(part|play-presp_3(pro:sub|he_1,det:art|a_4($1,and(adj|little_5($1),n|tune_6($1))),$0),$0)
example_end

Sent: these are holding balls on their noses .
Sem: lambda $0_{r}.aux|be-pres_2(and(part|hold-presp_3(det:dem|these_1,BARE($1,n|ball-pl_4($1)),$0),prep|on_5(det:poss|their_6($2,n|nose-pl_7($2)),$0)),$0)
example_end

Sent: that 's the one that had an accident .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,pro:indef|one_4(pro:dem|that_1,$0))
example_end

Sent: he lost his ball .
Sem: lambda $0_{r}.v|lose-past_2(pro:sub|he_1,det:poss|his_3($1,n|ball_4($1)),$0)
example_end

Sent: look at the clown .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|at_2(det:art|the_3($1,n|clown_4($1)),$0))
example_end

Sent: he 's being funny isn 't he ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(part|be-presp_3(pro:sub|he_1,lambda $1_{r}.adj|fun-dn_4(pro:sub|he_1,$1),$0),$0),not(cop|be_5(pro:sub|he_7,$0),$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's his head .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|head_4(pro:dem|that_1,$0))
example_end

Sent: he doesn 't have much hair does he ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|have_4(pro:sub|he_1,adv|much_5($1,n|hair_6($1)),$0),$0),$0),mod|do-3s_7(pro:sub|he_8,$0)))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what d you think she does in the circus ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(v|do-3s_6(pro:sub|she_5,pro:int|what_1,$1),prep|in_7(det:art|the_8($2,n|circus_9($2)),$1)),$0),$0))
example_end

Sent: is she dancing on the horse 's back ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(and(part|dance-presp_3(pro:sub|she_2,$0),prep|on_4(n|horse_6's($1,adv|back_8($1)),$0)),$0))
example_end

Sent: you took it off .
Sem: lambda $0_{r}.and(v|take-past_2(pro:per|you_1,pro:per|it_3,$0),adv|off_4($0))
example_end

Sent: those are horses .
Sem: lambda $0_{r}.n|horse-pl_3(pro:dem|those_1,$0)
example_end

Sent: d you think they look like Perro ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.and(cop|look_5(pro:sub|they_4,$1),conj|like_6(n:prop|perro_7,$1)),$0),$0))
example_end

Sent: your tummy made a noise ?
Sem: lambda $0_{r}.Q(v|make-past_3(det:poss|your_1($1,n|tummy_2($1)),det:art|a_4($2,n|noise_5($2)),$0))
example_end

Sent: perhaps that was your tummy saying that it has enough chocolate .
Sem: lambda $0_{r}.and(part|say-presp_6(you,lambda $1_{r}.aux|have-3s_9(pro:per|it_8,adv|enough_10(BARE($2,n|chocolate_11($2))),$1),$0),adv|perhaps_1($0))
example_end

Sent: you get over there and catch it .
Sem: lambda $0_{r}.and(v|catch_6(pro:per|you_1,pro:per|it_7,$0),adv|over_3(adv|there_4($0)))
example_end

Sent: it 's a bag .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|bag_4(pro:per|it_1,$0))
example_end

Sent: you don 't remember ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|remember_4(pro:per|you_1,$0),$0),$0))
example_end

Sent: what d you think is in there ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(aux|be-3s_5(pro:int|what_1,$1),adv|in_6(adv|there_7($1))),$0),$0))
example_end

Sent: they 're not the kind that you eat .
Sem: lambda $0_{r}.not(det:art|the_4(pro:sub|they_1,n|kind_5(pro:sub|they_1,$0)),$0)
example_end

Sent: they 're dried beans .
Sem: lambda $0_{r}.and(n|bean-pl_4(pro:sub|they_1,$0),v|dry-past_3(pro:sub|they_1,$0))
example_end

Sent: dried beans .
Sem: BARE($0,and(v|dry-past_1($0),n|bean-pl_2($0)))
example_end

Sent: pumpkin seeds ?
Sem: BARE($0,Q(and_comp(n|pumpkin_1($0),v|seed-3s_2($0))))
example_end

Sent: well nobody .
Sem: lambda $0_{r}.and(pro:indef|nobody_2($0),co|well_1($0))
example_end

Sent: they 're put in here so_that you may play with the bag .
Sem: lambda $0_{r}.conj|so_that_6(mod|may_8(and(v|play_9(pro:per|you_7,$0),prep|with_10(det:art|the_11($1,n|bag_12($1)),$0)),$0),aux|~be_2(and(part|put-pastp_3(pro:sub|they_1,$0),prep|in_4(adv|here_5($0))),$0))
example_end

Sent: bean bag .
Sem: BARE($0,and_comp(n|bean_1($0),n|bag_2($0)))
example_end

Sent: remember you had a froggie who had beans in him ?
Sem: lambda $0_{r}.Q(and(v|have-past_3(pro:per|you_2,det:art|a_4($1,n|frog-dim_5($1)),$0),v|remember_1(you,$0)))
example_end

Sent: well you go over there and throw it up .
Sem: lambda $0_{r}.and(and(and(v|throw_7(pro:per|you_2,pro:per|it_8,$0),adv|over_4(adv|there_5($0))),adv|up_9($0)),co|well_1($0))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: no I think we 'd better not throw it up like that .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.not(mod|~genmod_5(and(and(and(v|throw_8(pro:sub|we_4,pro:per|it_9,$1),adj|good-cp_6($1)),adv|up_10($1)),prep|like_11(pro:dem|that_12,$1)),$1),$1),$0),co|no_1($0))
example_end

Sent: you just throw it to me .
Sem: lambda $0_{r}.and(and(v|throw_3(pro:per|you_1,pro:per|it_4,$0),adv|just_2($0)),prep|to_5(pro:obj|me_6,$0))
example_end

Sent: why are you knocking them over ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|knock-presp_4(pro:per|you_3,pro:obj|them_5,$0),$1($0)),adv|over_6($0)),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I 've had enough .
Sem: lambda $0_{r}.aux|~have_2(and(part|have-pastp_3(pro:sub|i_1,$0),adv|enough_4($0)),$0)
example_end

Sent: are you going to eat it ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.v|eat_5(pro:per|you_2,pro:per|it_6,$1),$0),$0))
example_end

Sent: okay honey .
Sem: lambda $0_{r}.and(n|honey_2($0),co|okay_1($0))
example_end

Sent: it 's very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:per|it_1,$0))
example_end

Sent: why aren 't you eating it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(aux|be_2(and(part|eat-presp_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),$0),$0)
example_end

Sent: what are you doing Adam .
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you putting on your head ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|put-presp_4(pro:per|you_3,$1,$0),prep|on_5(det:poss|your_6($2,n|head_7($2)),$0)),$0)
example_end

Sent: why did you turn the light on ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|turn_4(pro:per|you_3,det:art|the_5($1,n|light_6($1)),$0),$2($0)),adv|on_7($0)),$0)
example_end

Sent: look up at the light .
Sem: lambda $0_{r}.and(and(co|look_1(you,$0),adv|up_2($0)),prep|at_3(det:art|the_4($1,n|light_5($1)),$0))
example_end

Sent: isn 't it pretty ?
Sem: lambda $0_{r}.Q(not(adv|pretty_4(pro:per|it_3,$0),$0))
example_end

Sent: is that you talking ?
Sem: lambda $0_{r}.Q(part|talk-presp_4(you,$0))
example_end

Sent: who is honey ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|honey_3,$0)
example_end

Sent: Adam d you want to write on your money ?
Sem: lambda $0_{r}.Q(v|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.and(v|write_6(pro:per|you_3,$1),prep|on_7(det:poss|your_8($2,n|money_9($2)),$1)),$0),$0))
example_end

Sent: I don 't see it .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: Adam you 'd better put the cover on first .
Sem: lambda $0_{r}.mod|~genmod_3_good-cp_4(and(and(v|put-zero_5(pro:per|you_2,det:art|the_6($1,n|cover_7($1)),$0),adv|on_8($0)),adv|first_9($0)),$0)
example_end

Sent: yes you 'd better put the top on .
Sem: lambda $0_{r}.and(mod|~genmod_3_good-cp_4(and(v|put-zero_5(pro:per|you_2,det:art|the_6($1,n|top_7($1)),$0),adv|on_8($0)),$0),co|yes_1($0))
example_end

Sent: people who made the toys .
Sem: BARE($0,n|person-pl_1($0))
example_end

Sent: did you make this toy ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|make_3(pro:per|you_2,pro:dem|this_4($1,n|toy_5($1)),$0),$0))
example_end

Sent: does this horse have a saddle ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_4(pro:dem|this_2($1,n|horse_3($1)),det:art|a_5($2,n|saddle_6($2)),$0),$0))
example_end

Sent: it doesn 't have a saddle ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|have_4(pro:per|it_1,det:art|a_5($1,n|saddle_6($1)),$0),$0),$0))
example_end

Sent: the diaper man .
Sem: det:art|the_1($0,and_comp(n|diaper_2($0),n|man_3($0)))
example_end

Sent: warm out isn 't it ?
Sem: lambda $0_{r}.Q(and(BARE($1,adv|out_2(v|warm_1($1))),not(cop|be_3(pro:per|it_5,$0),$0)))
example_end

Sent: what kind of game d you have Adam ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_5(v|have_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|game_4($3))))),$0),$0)
example_end

Sent: you match them ?
Sem: lambda $0_{r}.Q(v|match_2(pro:per|you_1,pro:obj|them_3,$0))
example_end

Sent: well let 's put them all together first .
Sem: lambda $0_{r}.and(v:obj|let_2(you,lambda $1_{r}.and(and(v|put-zero_4(pro:obj|~us_3,post|all_6(pro:obj|them_5),$1),adv|together_7($1)),adv|first_8($1)),$0),co|well_1($0))
example_end

Sent: is that a rocket ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|rocket_4(pro:rel|that_2,$0)))
example_end

Sent: one two three four .
Sem: BARE($0,det:num|one_1(det:num|two_2(det:num|three_3(det:num|four_4($0)))))
example_end

Sent: well how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do_3(and(v|know_5(pro:per|you_4,$0),$1($0)),$0),co|well_1($0))
example_end

Sent: she 's the copilot .
Sem: lambda $0_{r}.det:art|the_3(pro:sub|she_1,n|pilot_4(pro:sub|she_1,$0))
example_end

Sent: she helps drive the rocket .
Sem: lambda $0_{r}.n|drive_3(pro:sub|she_1,det:art|the_4($1,n|rocket_5($1)),$0)
example_end

Sent: yes you do .
Sem: lambda $0_{r}.and(v|do_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: that 's the landing tower .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,and_comp(part|land-presp_4(pro:dem|that_1,$0),n|tower_5(pro:dem|that_1,$0)))
example_end

Sent: those two are just alike .
Sem: lambda $0_{r}.adv|just_4(adv|alike_5(pro:dem|those_1($1,det:num|two_2($1)),$0))
example_end

Sent: these are control panels .
Sem: lambda $0_{r}.and_comp(n|control_3(pro:dem|these_1,$0),n|panel-pl_4(pro:dem|these_1,$0))
example_end

Sent: space scanners .
Sem: BARE($0,and_comp(n|space_1($0),n|scan-dv_2($0)))
example_end

Sent: I 'll help you take one .
Sem: lambda $0_{r}.mod|~will_2(v|help_3(pro:sub|i_1,lambda $1_{r}.v|take_5(pro:per|you_4,pro:indef|one_6,$1),$0),$0)
example_end

Sent: turn it over .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: there are the things that you match on that side .
Sem: lambda $0_{r}.and(cop|be-pres_2(det:art|the_3($1,n|thing-pl_4($1)),$0),adv|there_1($0))
example_end

Sent: no I want you to sit up .
Sem: lambda $0_{r}.and(v|want_3(pro:sub|i_2,lambda $1_{r}.and(v|sit_6(pro:per|you_4,$1),adv|up_7($1)),$0),co|no_1($0))
example_end

Sent: you 're sitting on the others dear .
Sem: lambda $0_{r}.aux|~be_2(and(part|sit-presp_3(pro:per|you_1,$0),prep|on_4(det:art|the_5($1,n:pt|others_6($1)),$0)),$0)
example_end

Sent: sit up so you may have another card .
Sem: lambda $0_{r}.conj|so_3(mod|may_5(v|have_6(pro:per|you_4,qn|another_7($1,n|card_8($1)),$0),$0),and(v|sit_1(you,$0),adv|up_2($0)))
example_end

Sent: take one .
Sem: lambda $0_{r}.v|take_1(you,pro:indef|one_2,$0)
example_end

Sent: well look at the one you have .
Sem: lambda $0_{r}.and(and(cop|look_2(you,$0),prep|at_3(det:art|the_4($1,pro:indef|one_5($1)),$0)),co|well_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh look there 's another one .
Sem: lambda $0_{r}.and(and(and(cop|~be_4(qn|another_5($1,pro:indef|one_6($1)),$0),pro:exist|there_3($0)),co|look_2(you,$0)),co|oh_1($0))
example_end

Sent: you may take another turn .
Sem: lambda $0_{r}.mod|may_2(v|take_3(pro:per|you_1,qn|another_4($1,n|turn_5($1)),$0),$0)
example_end

Sent: d you have one that looks like that ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,pro:indef|one_4,$0),$0))
example_end

Sent: yes you have .
Sem: lambda $0_{r}.and(v|have_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: oh you didn 't finish yet .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|finish_5(pro:per|you_2,$0),adv|yet_6($0)),$0),$0),co|oh_1($0))
example_end

Sent: yes that 's right .
Sem: lambda $0_{r}.and(n|right_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: is there another one like that ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(qn|another_3($1,att(pro:indef|one_4,prep|like_5(pro:dem|that_6),$1)),$0))
example_end

Sent: no don 't spread them over the floor like that .
Sem: lambda $0_{r}.and(not(mod|do_2(and(and(v|spread-zero_4(you,pro:obj|them_5,$0),prep|over_6(det:art|the_7($1,n|floor_8($1)),$0)),prep|like_9(pro:dem|that_10,$0)),$0),$0),co|no_1($0))
example_end

Sent: that 's a space scanner .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|space_4(pro:dem|that_1,$0),n|scan-dv_5(pro:dem|that_1,$0)))
example_end

Sent: you use it to look into space with .
Sem: lambda $0_{r}.v|use_2(pro:per|you_1,lambda $1_{r}.and(cop|look_5(pro:per|it_3_with_8,$1),prep|into_6(BARE($2,n|space_7($2)),$1)),$0)
example_end

Sent: and this is blast .
Sem: lambda $0_{r}.n|blast+off_4(pro:dem|this_2,$0)
example_end

Sent: five four three two one zero blast .
Sem: BARE($0,det:num|five_1($0))
example_end

Sent: that 's a space chart .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|space_4(pro:dem|that_1,$0),n|chart_5(pro:dem|that_1,$0)))
example_end

Sent: well it has the things that you find in space on it .
Sem: lambda $0_{r}.and(aux|have-3s_3(att(pro:per|it_2,prep|on_11(pro:per|it_12)),det:art|the_4($1,n|thing-pl_5($1)),$0),n|well_1($0))
example_end

Sent: you match all of them together that you can .
Sem: lambda $0_{r}.pro:rel|that_7(mod|can_9(pro:per|you_8,$0),and(and(v|match_2(pro:per|you_1,$0),prep|of_4(qn|all_3($1,pro:obj|them_5($1)),$0)),adv|together_6($0)))
example_end

Sent: and here 's the pilot .
Sem: lambda $0_{r}.and(cop|~be_3(det:art|the_4($1,n|pilot_5($1)),$0),pro:exist|here_2($0))
example_end

Sent: the pilot drives the spaceship see ?
Sem: lambda $0_{r}.Q(and(v|drive-3s_3(det:art|the_1($1,n|pilot_2($1)),det:art|the_4($2,n|space+ship_5($2)),$0),v|see_6(you,$0)))
example_end

Sent: let 's put them all together first .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(and(v|put-zero_3(pro:obj|~us_2,post|all_5($2,pro:obj|them_4($2)),$1),adv|together_6($1)),adv|first_7($1)),$0)
example_end

Sent: this is the landing tower .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,and_comp(part|land-presp_4(pro:dem|this_1,$0),n|tower_5(pro:dem|this_1,$0)))
example_end

Sent: so_that they 're go where they want to go .
Sem: lambda $0_{r}.cop|~be_3(v|go_4(pro:sub|they_2,lambda $1_{r}.and(v|want_7(pro:sub|they_6,lambda $2_{r}.v|go_9(pro:sub|they_6,$2),$1),adv:int|where_5($1)),$0),$0)
example_end

Sent: it 's for the pilot to get out .
Sem: lambda $0_{r}.and(cop|~be_2(pro:per|it_1,lambda $1_{r}.and(v|get_7(pro:per|it_1,$1),adv|out_8($1)),$0),conj|for_3(det:art|the_4($2,n|pilot_5($2)),$0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: no but what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:per|it_5,$0),co|no_1($0))
example_end

Sent: that 's five four three two one zero .
Sem: BARE($0,det:num|five_3($0))
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: and what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: this is the landing tower .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,and_comp(part|land-presp_4(pro:dem|this_1,$0),n|tower_5(pro:dem|this_1,$0)))
example_end

Sent: what comes first ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|come-3s_2($1,$0),adv|first_3($0))
example_end

Sent: you 'll bend them .
Sem: lambda $0_{r}.mod|~will_2(v|bend_3(pro:per|you_1,pro:obj|them_4,$0),$0)
example_end

Sent: pilot and what ?
Sem: BARE($0,Q(pro:int|what_3($0)))
example_end

Sent: that 's the copilot .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n|pilot_4(pro:dem|that_1,$0))
example_end

Sent: no you don 't throw that away .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|throw_5(pro:per|you_2,pro:rel|that_6,$0),adv|away_7($0)),$0),$0),co|no_1($0))
example_end

Sent: why d you have_to throw that away ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod:aux|have_to_4(mod|do_2(and(and(v|throw_5(pro:per|you_3,pro:dem|that_6,$0),$1($0)),adv|away_7($0)),$0),$0)
example_end

Sent: no don 't throw it away .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|throw_4(you,pro:per|it_5,$0),adv|away_6($0)),$0),$0),co|no_1($0))
example_end

Sent: what are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_3,$0)
example_end

Sent: they 're more than numbers .
Sem: lambda $0_{r}.n|number-pl_5(pro:sub|they_1,$0)
example_end

Sent: what are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_3,$0)
example_end

Sent: they 're directions .
Sem: lambda $0_{r}.n|direction-pl_3(pro:sub|they_1,$0)
example_end

Sent: yes they are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:sub|they_2,$0),co|yes_1($0))
example_end

Sent: it 's going to pop ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|it_1,lambda $1_{r}.n|pop_5(pro:per|it_1,$1),$0),$0))
example_end

Sent: look what he has on his head .
Sem: lambda $0_{r}.co|look_1(you,lambda $1_{r}.and(aux|have-3s_4(pro:sub|he_3,pro:int|what_2,$1),adv|on_5(det:poss|his_6($2,n|head_7($2)),$1)),$0)
example_end

Sent: yes he is the pilot but what is this on his head ?
Sem: lambda $0_{r}.and(det:art|the_4(pro:sub|he_2,n|pilot_5(pro:sub|he_2,$0)),co|yes_1($0))
example_end

Sent: a space what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_1($2,n|space_2($2)),$0)
example_end

Sent: what 're you going to do with it ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),prep|with_7(pro:per|it_8,$1)),$0),$0)
example_end

Sent: put them in the box ?
Sem: lambda $0_{r}.Q(and(v|put-zero_1(you,pro:obj|them_2,$0),prep|in_3(det:art|the_4($1,n|box_5($1)),$0)))
example_end

Sent: like a Jack_a_weasel .
Sem: prep|like_1(det:art|a_2($0,n:prop|jack_a_weasel_3($0)))
example_end

Sent: spread them .
Sem: lambda $0_{r}.v|spread-zero_1(you,pro:obj|them_2,$0)
example_end

Sent: what is a Jack_a_weasel ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n:prop|jack_a_weasel_4($2)),$0)
example_end

Sent: d you know what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_1(v|know_3(pro:per|you_2,$1,$0),$0)
example_end

Sent: yes you can sit on me .
Sem: lambda $0_{r}.and(mod|can_3(and(v|sit_4(pro:per|you_2,$0),prep|on_5(pro:obj|me_6,$0)),$0),co|yes_1($0))
example_end

Sent: find another game .
Sem: lambda $0_{r}.v|find_1(you,qn|another_2($1,n|game_3($1)),$0)
example_end

Sent: you bent that game didn 't you ?
Sem: lambda $0_{r}.Q(and(v|bend-past_2(pro:per|you_1,det:dem|that_3($1,n|game_4($1)),$0),not(mod|do_5(pro:per|you_7,$0),$0)))
example_end

Sent: I don 't know why .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),$1($0)),$0),$0)
example_end

Sent: because you had it in your pocket .
Sem: lambda $0_{r}.and(v|have-past_3(pro:per|you_2,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|pocket_7($1)),$0))
example_end

Sent: what d you have in your pocket today ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(and(v|have_4(pro:per|you_3,$1,$0),prep|in_5(det:poss|your_6($2,n|pocket_7($2)),$0)),adv:tem|today_8($0)),$0)
example_end

Sent: how did you get zeros in your pocket ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|get_4(pro:per|you_3,BARE($1,det:num|zero-pl_5($1)),$0),$2($0)),prep|in_6(det:poss|your_7($3,n|pocket_8($3)),$0)),$0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: he 's a happy fellow ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:sub|he_1,and(n|fellow_5(pro:sub|he_1,$0),adj|happy_4(pro:sub|he_1,$0))))
example_end

Sent: why is he so happy ?
Sem: lambda $1_{e}.lambda $0_{r}.adv|so_4($1(adj|happy_5(pro:sub|he_3,$0)))
example_end

Sent: that one what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1($2,pro:indef|one_2($2)),$0)
example_end

Sent: been sleep .
Sem: lambda $0_{r}.aux|be-pastp_1(n|sleep_2(you,$0),$0)
example_end

Sent: they are going to sleep ?
Sem: lambda $0_{r}.Q(aux|be-pres_2(part|go-presp_3(pro:sub|they_1,lambda $1_{r}.v|sleep_5(pro:sub|they_1,$1),$0),$0))
example_end

Sent: what shall we call the babies ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|shall_2(v|call_4(pro:sub|we_3,det:art|the_5($1,n|baby-pl_6($1)),$2,$0),$0)
example_end

Sent: baby Bozos .
Sem: att(n:prop|bozos_2,BARE($0,n|baby_1($0)))
example_end

Sent: oh my_goodness .
Sem: lambda $0_{r}.and(co|my_goodness_2($0),co|oh_1($0))
example_end

Sent: what happened to one two three ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(BARE($2,det:num|one_4($2)),$0))
example_end

Sent: yes what happened to one two three ?
Sem: lambda $1_{e}.lambda $0_{r}.and(and(v|happen-past_3($1,$0),prep|to_4(BARE($2,det:num|one_5($2)),$0)),co|yes_1($0))
example_end

Sent: where does this baby have his hands ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|have_5(pro:dem|this_3($1,n|baby_4($1)),det:poss|his_6($2,n|hand-pl_7($2)),$0),$3($0)),$0)
example_end

Sent: why d you think he has his hands on his tummy ?
Sem: lambda $4_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.and(v|have-3s_6(pro:sub|he_5,det:poss|his_7($2,n|hand-pl_8($2)),$1),prep|on_9(det:poss|his_10($3,n|tummy_11($3)),$1)),$0),$4($0)),$0)
example_end

Sent: he 's dressing up ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|dress-presp_3(pro:sub|he_1,$0),adv|up_4($0)),$0))
example_end

Sent: what are you putting around his neck ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|put-presp_4(pro:per|you_3,$1,$0),prep|around_5(det:poss|his_6($2,n|neck_7($2)),$0)),$0)
example_end

Sent: oh bandana oh this must be a cowboy .
Sem: lambda $0_{r}.and(and(and(mod|must_5(det:art|a_7(pro:dem|this_4,n|cow+boy_8(pro:dem|this_4,$0)),$0),BARE($1,n|bandana_2($1))),co|oh_1($0)),co|oh_3($0))
example_end

Sent: two cowboys and one baby .
Sem: BARE($0,det:num|one_4(det:num|two_1(n|baby_5($0))))
example_end

Sent: did he take a bath Adam ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|take_3(pro:sub|he_2,det:art|a_4($1,n|bath_5($1)),$0),$0))
example_end

Sent: they 're going to sleep in the Wintertime .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|they_1,lambda $1_{r}.and(n|sleep_5(pro:sub|they_1,$1),prep|in_6(det:art|the_7($2,n:prop|wintertime_8($2)),$1)),$0),$0)
example_end

Sent: do they all fit in there Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(and(part|fit-pastp_4(post|all_3($1,pro:sub|they_2($1)),$0),prep|in_5(adv|there_6($0))),$0))
example_end

Sent: they almost fit ?
Sem: lambda $0_{r}.Q(and(v|fit-zero_3(pro:sub|they_1,$0),adv|almost_2($0)))
example_end

Sent: they are taking baths .
Sem: lambda $0_{r}.aux|be-pres_2(part|take-presp_3(pro:sub|they_1,BARE($1,n|bath-pl_4($1)),$0),$0)
example_end

Sent: sleeping in the bath .
Sem: lambda $0_{r}.and(part|sleep-presp_1(you,$0),prep|in_2(det:art|the_3($1,n|bath_4($1)),$0))
example_end

Sent: did you ever do that ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|do_4(pro:per|you_2,pro:dem|that_5,$0),adv|ever_3($0)),$0))
example_end

Sent: ride on that ?
Sem: lambda $0_{r}.Q(and(n|ride_1(you,$0),prep|on_2(pro:dem|that_3,$0)))
example_end

Sent: can you ride on that ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|ride_3(pro:per|you_2,$0),prep|on_4(pro:dem|that_5,$0)),$0))
example_end

Sent: you are too big .
Sem: lambda $0_{r}.adv|too_3(adj|big_4(pro:per|you_1,$0))
example_end

Sent: I think so too .
Sem: lambda $0_{r}.and(and(v|think_2(pro:sub|i_1,$0),conj|so_3($0)),post|too_4($0))
example_end

Sent: he 's hanging out_of your pocket .
Sem: lambda $0_{r}.aux|~be_2(and(part|hang-presp_3(pro:sub|he_1,$0),prep|out_of_4(det:poss|your_5($1,n|pocket_6($1)),$0)),$0)
example_end

Sent: that doesn 't come off dear .
Sem: lambda $0_{r}.not(mod|do_2(and(v|come_4(pro:dem|that_1,$0),prep|off_5($0)),$0),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: don 't throw them .
Sem: lambda $0_{r}.not(mod|do_1(v|throw_3(you,pro:obj|them_4,$0),$0),$0)
example_end

Sent: no I 'll be glad if you will hand it to me .
Sem: lambda $0_{r}.and(conj|if_6(mod|will_8(and(v|hand_9(pro:per|you_7,pro:per|it_10,$0),prep|to_11(pro:obj|me_12,$0)),$0),mod|~will_3(adj|glad_5(pro:sub|i_2,$0),$0)),co|no_1($0))
example_end

Sent: what happened to your babies ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:poss|your_4($2,n|baby-pl_5($2)),$0))
example_end

Sent: do they have their blankets ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:sub|they_2,det:poss|their_4($1,n|blanket-pl_5($1)),$0),$0))
example_end

Sent: about to wake up .
Sem: lambda $0_{r}.and(and(v|wake_3(you,$0),adv|about_1($0)),adv|up_4($0))
example_end

Sent: I almost dressed you ?
Sem: lambda $0_{r}.Q(and(v|dress-past_3(pro:sub|i_1,pro:per|you_4,$0),adv|almost_2($0)))
example_end

Sent: I dressed you up like a baby elephant !
Sem: lambda $0_{r}.and(and(v|dress-past_2(pro:sub|i_1,pro:per|you_3,$0),adv|up_4($0)),prep|like_5(det:art|a_6($1,and(n|baby_7($1),n|elephant_8($1))),$0))
example_end

Sent: there are some seals .
Sem: lambda $0_{r}.and(cop|be-pres_2(qn|some_3($1,n|seal-pl_4($1)),$0),adv|there_1($0))
example_end

Sent: birthday time .
Sem: BARE($0,and_comp(n|birth+day_1($0),n|time_2($0)))
example_end

Sent: eat my lunch ?
Sem: lambda $0_{r}.Q(v|eat_1(you,det:poss|my_2($1,n|lunch_3($1)),$0))
example_end

Sent: and then may I look ?
Sem: lambda $0_{r}.Q(mod|may_3(and(cop|look_5(pro:sub|i_4,$0),adv:tem|then_2($0)),$0))
example_end

Sent: may I look now ?
Sem: lambda $0_{r}.Q(mod|may_1(and(cop|look_3(pro:sub|i_2,$0),adv|now_4($0)),$0))
example_end

Sent: I 've finished my lunch .
Sem: lambda $0_{r}.aux|~have_2(part|finish-pastp_3(pro:sub|i_1,det:poss|my_4($1,n|lunch_5($1)),$0),$0)
example_end

Sent: three dollies .
Sem: BARE($0,det:num|three_1(n|doll-dim_2($0)))
example_end

Sent: two seals one strong man .
Sem: and(BARE($0,det:num|two_1(n|seal-pl_2($0))),BARE($1,and(adj|strong_4($1),pro:indef|one_3(n|man_5($1)))))
example_end

Sent: one bareback rider .
Sem: BARE($0,and(adv|bareback_2($0),det:num|one_1(n|ride-dv_3($0))))
example_end

Sent: and a train .
Sem: det:art|a_2($0,n|train_3($0))
example_end

Sent: a circus train .
Sem: det:art|a_1($0,and_comp(n|circus_2($0),n|train_3($0)))
example_end

Sent: that 's not a circus train those are circus men ?
Sem: lambda $0_{r}.Q(not(and(det:art|a_4(pro:dem|that_1,and_comp(n|circus_5(pro:dem|that_1,$0),v|train_6(pro:dem|that_1,$0))),and_comp(n|circus_9(pro:dem|those_7,$0),n|man-pl_10(pro:dem|those_7,$0))),$0))
example_end

Sent: they are standing ?
Sem: lambda $0_{r}.Q(aux|be-pres_2(part|stand-presp_3(pro:sub|they_1,$0),$0))
example_end

Sent: who was that little boy ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,and(adj|little_4($2),n|boy_5($2))),$0)
example_end

Sent: his name .
Sem: det:poss|his_1($0,n|name_2($0))
example_end

Sent: I know his name .
Sem: lambda $0_{r}.v|know_2(pro:sub|i_1,det:poss|his_3($1,n|name_4($1)),$0)
example_end

Sent: that 's mine .
Sem: lambda $0_{r}.pro:poss|mine_3(pro:dem|that_1,$0)
example_end

Sent: I 'll hold it .
Sem: lambda $0_{r}.mod|~will_2(v|hold_3(pro:sub|i_1,pro:per|it_4,$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_3,$0)
example_end

Sent: they are hangers .
Sem: lambda $0_{r}.n|hang-dv_3(pro:sub|they_1,$0)
example_end

Sent: where does it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: d you know where that goes ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.and(v|go-3s_6(pro:dem|that_5,$1),adv:int|where_4($1)),$0),$0))
example_end

Sent: what d you do with those ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(pro:dem|those_6,$0)),$0)
example_end

Sent: you 've finished with those ?
Sem: lambda $0_{r}.Q(aux|~have_2(and(part|finish-pastp_3(pro:per|you_1,$0),prep|with_4(pro:dem|those_5,$0)),$0))
example_end

Sent: wait wait .
Sem: lambda $0_{r}.and(co|wait_2($0),co|wait_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: no I don 't think it opens does it ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|open-3s_7(pro:per|it_6,$1),$0),$0),$0),mod|do-3s_8(pro:per|it_9,$0)),co|no_1($0)))
example_end

Sent: show me please .
Sem: lambda $0_{r}.and(v|show_1(you,pro:obj|me_2,$0),co|please_3($0))
example_end

Sent: you have_to stand up and do it .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|do_6(pro:per|you_1,pro:per|it_7,$0),adv|up_4($0)),$0)
example_end

Sent: maybe you can fix it .
Sem: lambda $0_{r}.mod|can_3(and(v|fix_4(pro:per|you_2,pro:per|it_5,$0),adv|maybe_1($0)),$0)
example_end

Sent: can you try ?
Sem: lambda $0_{r}.Q(mod|can_1(v|try_3(pro:per|you_2,$0),$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: come on fellow .
Sem: lambda $0_{r}.and(v|come_1(you,BARE($1,n|fellow_3($1)),$0),prep|on_2($0))
example_end

Sent: pick what up ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|pick_1(you,$1,$0),adv|up_3($0))
example_end

Sent: now let go .
Sem: lambda $0_{r}.and(v|let-zero_2_go_3(you,$0),adv|now_1($0))
example_end

Sent: don 't hold it with you ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|hold_3(you,pro:per|it_4,$0),prep|with_5(pro:per|you_6,$0)),$0),$0))
example_end

Sent: well hold your hand way way up .
Sem: lambda $0_{r}.and(and(v|hold_2(you,det:poss|your_3($1,n|hand_4($1)),$0),n|way_6(n|way_5(adv|up_7($0)))),co|well_1($0))
example_end

Sent: drop it down .
Sem: lambda $0_{r}.and(v|drop_1(you,pro:per|it_2,$0),adv|down_3($0))
example_end

Sent: now pull it back up .
Sem: lambda $0_{r}.and(and(v|pull_2(you,pro:per|it_3,$0),adv|now_1($0)),adv|back_4(adv|up_5($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you 're dumping he was dumping trash out .
Sem: lambda $0_{r}.aux|be-past_5(and(n:gerund|dump-presp_6(pro:sub|he_4,BARE($1,n|trash_7($1)),$0),adv|out_8($0)),$0)
example_end

Sent: that 's your tie ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:dem|that_1,n|tie_4(pro:dem|that_1,$0)))
example_end

Sent: can you tie your tie ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tie_3(pro:per|you_2,det:poss|your_4($1,n|tie_5($1)),$0),$0))
example_end

Sent: here 's the string .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|string_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: yes it is turning around .
Sem: lambda $0_{r}.and(aux|be-3s_3(and(part|turn-presp_4(pro:per|it_2,$0),adv|around_5($0)),$0),co|yes_1($0))
example_end

Sent: it stopped ?
Sem: lambda $0_{r}.Q(v|stop-past_2(pro:per|it_1,$0))
example_end

Sent: it feels a little like rubber I guess .
Sem: lambda $0_{r}.v|guess_8(pro:sub|i_7,lambda $1_{r}.and(v|feel-3s_2(pro:per|it_1,$1),co|like_5(BARE($2,and(adj|little_4($2),n|rubber_6($2))),$1)),$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: I think it 's all wood .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.qn|all_5(pro:per|it_3,n|wood_6(pro:per|it_3,$1)),$0)
example_end

Sent: he comes ?
Sem: lambda $0_{r}.Q(v|come-3s_2(pro:sub|he_1,$0))
example_end

Sent: he who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|he_1,$0)
example_end

Sent: he who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|he_1,$0)
example_end

Sent: hold your arm way up .
Sem: lambda $0_{r}.and(v|hold_1(you,det:poss|your_2($1,n|arm_3($1)),$0),n|way_4(adv|up_5($0)))
example_end

Sent: throw it gently ?
Sem: lambda $0_{r}.Q(and(v|throw_1(you,pro:per|it_2,$0),adv|gentle-dadj_3($0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what 's a cardy ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,chi|cardy_4($2)),$0)
example_end

Sent: in your mouth ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|mouth_3($0))))
example_end

Sent: what 's in your mouth ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|~be_2($1,$0),prep|in_3(det:poss|your_4($2,n|mouth_5($2)),$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a word ?
Sem: BARE($0,Q(det:art|a_1($1,n|word_2($1),$0)))
example_end

Sent: I didn 't understand the word .
Sem: lambda $0_{r}.not(mod|do_2(v|understand_4(pro:sub|i_1,det:art|the_5($1,n|word_6($1)),$0),$0),$0)
example_end

Sent: drop it on you ?
Sem: lambda $0_{r}.Q(and(v|drop_1(you,pro:per|it_2,$0),prep|on_3(pro:per|you_4,$0)))
example_end

Sent: why are you putting sugar in there ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|put-presp_4(pro:per|you_3,BARE($1,n|sugar_5($1)),$0),$2($0)),prep|in_6(adv|there_7($0))),$0)
example_end

Sent: no more .
Sem: qn|no_1($0,pro:indef|more_2($0))
example_end

Sent: d you want more juice ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,BARE($1,and(qn|more_4($1),n|juice_5($1))),$0),$0))
example_end

Sent: please cry ?
Sem: lambda $0_{r}.Q(and(v|cry_2(you,$0),co|please_1($0)))
example_end

Sent: how can a cracker cry ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.n|can_2(and(v|cry_5(det:art|a_3($1,n|cracker_4($1)),$0),$2($0)),$0)
example_end

Sent: crackers can 't talk .
Sem: lambda $0_{r}.not(mod|can_2(v|talk_4(BARE($1,n|cracker-pl_1($1)),$0),$0),$0)
example_end

Sent: you eat crackers .
Sem: lambda $0_{r}.v|eat_2(pro:per|you_1,BARE($1,n|cracker-pl_3($1)),$0)
example_end

Sent: how can crackers talk ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.n|can_2(and(n|talk_4(BARE($1,n|cracker-pl_3($1)),$0),$2($0)),$0)
example_end

Sent: can bread talk ?
Sem: lambda $0_{r}.Q(mod|can_1(n|talk_3(BARE($1,n|bread_2($1)),$0),$0))
example_end

Sent: can bread cry ?
Sem: lambda $0_{r}.Q(mod|can_1(v|cry_3(BARE($1,n|bread_2($1)),$0),$0))
example_end

Sent: what kind of juice did you have before ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-past_5(and(v|have_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|juice_4($3))))),$0),adv|before_8($0)),$0)
example_end

Sent: hold your hand way up .
Sem: lambda $0_{r}.and(v|hold_1(you,det:poss|your_2($1,n|hand_3($1)),$0),n|way_4(adv|up_5($0)))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: he watches Miss Jean .
Sem: lambda $0_{r}.v|watch-3s_2(pro:sub|he_1,n:prop|jean_4_miss_3,$0)
example_end

Sent: romper bomper stomper boo .
Sem: BARE($0,wplay|boo_4($0))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: oh wheelbarrow .
Sem: lambda $0_{r}.and(n|wheel+barrow_2($0),co|oh_1($0))
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: roll it ?
Sem: lambda $0_{r}.Q(v|roll_1(you,pro:per|it_2,$0))
example_end

Sent: I 'll show you how .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|~will_2(and(v|show_3(pro:sub|i_1,pro:per|you_4,$0),$1($0)),$0)
example_end

Sent: just go around .
Sem: lambda $0_{r}.and(and(v|go_2(you,$0),adv|just_1($0)),adv|around_3($0))
example_end

Sent: you have some thing to show me ?
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,n|thing_4_some_3,$0)
example_end

Sent: oh that 's who we thought it was .
Sem: lambda $0_{r}.and(pro:int|who_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: Adam come back .
Sem: lambda $0_{r}.and(v|come_2(you,$0),adv|back_3($0))
example_end

Sent: careful it got caught around the chair .
Sem: lambda $0_{r}.and(aux|get-past_3(and(part|catch-pastp_4(pro:per|it_2,$0),prep|around_5(det:art|the_6($1,n|chair_7($1)),$0)),$0),co|careful_1($0))
example_end

Sent: where 's Cromer ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|~be_2(n:prop|cromer_3,$0),$1($0))
example_end

Sent: where did he go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: he went to the mountains for the summer .
Sem: lambda $0_{r}.and(and(v|go-past_2(pro:sub|he_1,$0),prep|to_3(det:art|the_4($1,n|mountain-pl_5($1)),$0)),prep|for_6(det:art|the_7($2,n|summer_8($2)),$0))
example_end

Sent: no Cromer .
Sem: lambda $0_{r}.and(n:prop|cromer_2($0),co|no_1($0))
example_end

Sent: are you going ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,$0),$0))
example_end

Sent: what are you drawing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(n|drawing_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what kind of helmet ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|helmet_4($2)))))
example_end

Sent: oh you 're drawing one for me ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(n|drawing_4(pro:per|you_2,att(pro:indef|one_5,prep|for_6(pro:obj|me_7)),$0),$0),co|oh_1($0)))
example_end

Sent: pen comes out ?
Sem: lambda $0_{r}.Q(and(v|come-3s_2(BARE($1,n|pen_1($1)),$0),adv|out_3($0)))
example_end

Sent: I 'm looking for something .
Sem: lambda $0_{r}.aux|~be_2(and(part|look-presp_3(pro:sub|i_1,$0),prep|for_4(pro:indef|something_5,$0)),$0)
example_end

Sent: what happens when you brush him ?
Sem: lambda $1_{e}.lambda $0_{r}.conj|when_3(v|brush_5(pro:per|you_4,pro:obj|him_6,$0),v|happen-3s_2($1,$0))
example_end

Sent: he rocks when you brush him ?
Sem: lambda $0_{r}.Q(conj|when_3(v|brush_5(pro:per|you_4,pro:obj|him_6,$0),v|rock-3s_2(pro:sub|he_1,$0)))
example_end

Sent: pens are to write on paper .
Sem: lambda $0_{r}.cop|be-pres_2(BARE($1,n|pen-pl_1($1)),lambda $2_{r}.and(v|write_4(BARE($3,n|pen-pl_1($3)),$2),prep|on_5(BARE($4,n|paper_6($4)),$2)),$0)
example_end

Sent: why d you need help ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|need_4(pro:per|you_3,BARE($1,co|help_5($1)),$0),$2($0)),$0)
example_end

Sent: can 't you do it Adam ?
Sem: lambda $0_{r}.Q(not(mod|can_1(v|do_4(pro:per|you_3,pro:per|it_5,$0),$0),$0))
example_end

Sent: you can do it even if you 're big .
Sem: lambda $0_{r}.conj|if_6(v|even_5(adj|big_9(pro:per|you_7,$0)),mod|can_2(v|do_3(pro:per|you_1,pro:per|it_4,$0),$0))
example_end

Sent: you don 't mean big .
Sem: lambda $0_{r}.not(mod|do_2(adj|mean_4(pro:per|you_1,lambda $1_{r}.adj|big_5(pro:per|you_1,$1),$0),$0),$0)
example_end

Sent: too big .
Sem: BARE($0,adv|too_1(adj|big_2($0)))
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: behind you .
Sem: prep|behind_1(pro:per|you_2)
example_end

Sent: behind you .
Sem: prep|behind_1(pro:per|you_2)
example_end

Sent: are you tired Adam ?
Sem: lambda $0_{r}.Q(v|tire-past_3(pro:per|you_2,$0))
example_end

Sent: did I wake you up ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(v|wake_3(pro:sub|i_2,pro:per|you_4,$0),adv|up_5($0)),$0))
example_end

Sent: oh I 'm so sorry .
Sem: lambda $0_{r}.and(adv|so_4(adj|sorry_5(pro:sub|i_2,$0)),co|oh_1($0))
example_end

Sent: were you having a dream ?
Sem: lambda $0_{r}.Q(cop|be-past_1(part|have-presp_3(pro:per|you_2,det:art|a_4($1,n|dream_5($1)),$0),$0))
example_end

Sent: you were just sleeping ?
Sem: lambda $0_{r}.Q(aux|be-past_2(and(part|sleep-presp_4(pro:per|you_1,$0),adv|just_3($0)),$0))
example_end

Sent: don 't wake you up again .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|wake_3(you,pro:per|you_4,$0),adv|up_5($0)),adv|again_6($0)),$0),$0)
example_end

Sent: did you have a dream ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|dream_5($1)),$0),$0))
example_end

Sent: what was the last work ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,and(adj|last_4($2),n|work_5($2))),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I missed lots_of that .
Sem: lambda $0_{r}.v|miss-past_2(pro:sub|i_1,qn|lots_of_3($1,pro:dem|that_4($1)),$0)
example_end

Sent: I 'm not waking you up because you 're not sleeping .
Sem: lambda $0_{r}.not(conj|because_7(not(cop|~be_9(part|sleep-presp_11(pro:per|you_8,$0),$0),$0),cop|~be_2(and(part|wake-presp_4(pro:sub|i_1,pro:per|you_5,$0),adv|up_6($0)),$0)),$0)
example_end

Sent: wake you up ?
Sem: lambda $0_{r}.Q(and(v|wake_1(you,pro:per|you_2,$0),adv|up_3($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: pull it up again .
Sem: lambda $0_{r}.and(and(v|pull_1(you,pro:per|it_2,$0),adv|up_3($0)),adv|again_4($0))
example_end

Sent: it 's turning .
Sem: lambda $0_{r}.aux|~be_2(part|turn-presp_3(pro:per|it_1,$0),$0)
example_end

Sent: tie the string ?
Sem: lambda $0_{r}.Q(v|tie_1(you,det:art|the_2($1,n|string_3($1)),$0))
example_end

Sent: why are you sitting on it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|sit-presp_4(pro:per|you_3,$0),$1($0)),prep|on_5(pro:per|it_6,$0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: why are you sitting on it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|sit-presp_4(pro:per|you_3,$0),$1($0)),prep|on_5(pro:per|it_6,$0)),$0)
example_end

Sent: because Shadow_Gay hugged you ?
Sem: lambda $0_{r}.Q(v|hug-past_3(n:prop|shadow_gay_2,pro:per|you_4,$0))
example_end

Sent: don 't you think it would hurt if a horse hugged you ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|think_4(pro:per|you_3,lambda $1_{r}.conj|if_8(v|hug-past_11(det:art|a_9($2,n|horse_10($2)),pro:per|you_12,$1),mod|will-cond_6(part|hurt-pastp_7(you,$1),$1)),$0),$0),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: the yoyo ran away from you .
Sem: lambda $0_{r}.and(and(v|run-past_3(det:art|the_1($1,n|yoyo_2($1)),$0),adv|away_4($0)),prep|from_5(pro:per|you_6,$0))
example_end

Sent: talk to Miss Jean .
Sem: lambda $0_{r}.and(n|talk_1(you,$0),prep|to_2(n:prop|jean_4_miss_3,$0))
example_end

Sent: why did I put it there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|put-zero_4(pro:sub|i_3,pro:per|it_5,$0),$1($0)),adv|there_6($0)),$0)
example_end

Sent: because I thought you were sleeping .
Sem: lambda $0_{r}.v|think-past_3(pro:sub|i_2,lambda $1_{r}.aux|be-past_5(part|sleep-presp_6(pro:per|you_4,$1),$1),$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: yes it goes up .
Sem: lambda $0_{r}.and(and(v|go-3s_3(pro:per|it_2,$0),adv|up_4($0)),co|yes_1($0))
example_end

Sent: then what does it do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_3(and(v|do_5(pro:per|it_4,$1,$0),adv:tem|then_1($0)),$0)
example_end

Sent: no Paul Douglas didn 't fall he knocked over the pan .
Sem: lambda $0_{r}.and(not(and(mod|do_4(v|fall_6(n:prop|douglas_3_paul_2,$0),$0),v|knock-past_8_over_9(pro:sub|he_7,det:art|the_10($1,n|pan_11($1)),$0)),$0),co|no_1($0))
example_end

Sent: what happened in the kitchen ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|in_3(det:art|the_4($2,n|kitchen_5($2)),$0))
example_end

Sent: you fell down .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|you_1,$0),adv|down_3($0))
example_end

Sent: in the holes ?
Sem: Q(prep|in_1(det:art|the_2($0,n|hole-pl_3($0))))
example_end

Sent: what kind of holes ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|hole-pl_4($2)))))
example_end

Sent: your holes in the kitchen ?
Sem: BARE($0,Q(det:poss|your_1($1,att(n|hole-pl_2($1),prep|in_3(det:art|the_4($2,n|kitchen_5($2)))),$0)))
example_end

Sent: I don 't think it 's hard enough .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.adv|enough_8(adj|hard_7(pro:per|it_5,$1)),$0),$0),$0)
example_end

Sent: if I had knocked you off you would have fallen on the floor .
Sem: lambda $0_{r}.aux|have_9(mod|will-cond_8(conj|if_1(aux|have-past_3(and(part|knock-pastp_4(pro:sub|i_2,pro:per|you_5,$0),prep|off_6($0)),$0),and(part|fall-pastp_10(pro:per|you_7,$0),prep|on_11(det:art|the_12($1,n|floor_13($1)),$0))),$0),$0)
example_end

Sent: but you 're still there .
Sem: lambda $0_{r}.and(cop|~be_3(pro:per|you_2,$0),adv|still_4(adv|there_5($0)))
example_end

Sent: well are you ready to go to bed ?
Sem: lambda $0_{r}.Q(and(adj|ready_4(pro:per|you_3,lambda $1_{r}.and(v|go_6(pro:per|you_3,$1),prep|to_7(BARE($2,n|bed_8($2)),$1)),$0),co|well_1($0)))
example_end

Sent: why are you resting like that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|rest-presp_4(pro:per|you_3,$0),$1($0)),prep|like_5(pro:dem|that_6,$0)),$0)
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: because they 're uneven ?
Sem: lambda $0_{r}.Q(adj|even_4(pro:sub|they_2,$0))
example_end

Sent: no it doesn 't push .
Sem: lambda $0_{r}.and(not(mod|do_3(v|push_5(pro:per|it_2,$0),$0),$0),co|no_1($0))
example_end

Sent: you try it .
Sem: lambda $0_{r}.v|try_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: Adam can you see with your nose ?
Sem: lambda $0_{r}.Q(mod|can_2(and(v|see_4(pro:per|you_3,$0),prep|with_5(det:poss|your_6($1,n|nose_7($1)),$0)),$0))
example_end

Sent: I see something on here .
Sem: lambda $0_{r}.and(v|see_2(pro:sub|i_1,pro:indef|something_3,$0),prep|on_4(adv|here_5($0)))
example_end

Sent: d you see any thing ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,n|thing_5_any_4,$0),$0))
example_end

Sent: yes what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|yes_1($0))
example_end

Sent: well that was an a .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n:let|a_5(pro:dem|that_2,$0)),co|well_1($0))
example_end

Sent: I am not waking you up because you are not sleeping .
Sem: lambda $0_{r}.not(conj|because_7(not(cop|be-pres_9(part|sleep-presp_11(pro:per|you_8,$0),$0),$0),aux|be-1s_2(and(part|wake-presp_4(pro:sub|i_1,pro:per|you_5,$0),adv|up_6($0)),$0)),$0)
example_end

Sent: you feel better .
Sem: lambda $0_{r}.v|feel_2(pro:per|you_1,lambda $1_{r}.adj|good-cp_3(pro:per|you_1,$1),$0)
example_end

Sent: that 's very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:dem|that_1,$0))
example_end

Sent: I 'll see what else is in here .
Sem: lambda $0_{r}.mod|~will_2(v|see_3(pro:sub|i_1,lambda $1_{r}.and(aux|be-3s_6(post|else_5(pro:int|what_4),$1),adv|in_7(adv|here_8($1))),$0),$0)
example_end

Sent: oh there 's something .
Sem: lambda $0_{r}.and(and(cop|~be_3(pro:indef|something_4,$0),pro:exist|there_2($0)),co|oh_1($0))
example_end

Sent: another one .
Sem: qn|another_1($0,pro:indef|one_2($0))
example_end

Sent: I don 't know if I have another one .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.v|have_7(pro:sub|i_6,qn|another_8($2,pro:indef|one_9($2)),$1),$0),$0),$0)
example_end

Sent: oh the other one .
Sem: lambda $0_{r}.and(det:art|the_2($1,att(pro:indef|one_4,BARE($2,qn|other_3($2)),$1),$0),co|oh_1($0))
example_end

Sent: you gave him one before .
Sem: lambda $0_{r}.and(v|give-past_2(pro:per|you_1,pro:indef|one_4,pro:obj|him_3,$0),adv|before_5($0))
example_end

Sent: wait Adam .
Sem: lambda $0_{r}.v|wait_1(you,$0)
example_end

Sent: you find it .
Sem: lambda $0_{r}.v|find_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: it 's a leaf ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,n|leaf_4(pro:per|it_1,$0)))
example_end

Sent: no that 's not a leaf .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:dem|that_2,n|leaf_6(pro:dem|that_2,$0)),$0),co|no_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: you look at it .
Sem: lambda $0_{r}.and(cop|look_2(pro:per|you_1,$0),prep|at_3(pro:per|it_4,$0))
example_end

Sent: David 's feather .
Sem: n:prop|david_1's($0,n|feather_3($0))
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: good morning .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: no not that one .
Sem: lambda $0_{r}.and(not(pro:rel|that_3($1,pro:indef|one_4($1)),$0),co|no_1($0))
example_end

Sent: d you want me to put this on you ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_6(pro:obj|me_4,pro:dem|this_7,$1),prep|on_8(pro:per|you_9,$1)),$0),$0))
example_end

Sent: you fell and broke your head .
Sem: lambda $0_{r}.v|break-past_4(pro:per|you_1,det:poss|your_5($1,n|head_6($1)),$0)
example_end

Sent: what was that word you said .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,n|word_4($2)),$0)
example_end

Sent: was it weeks ?
Sem: lambda $0_{r}.Q(n|week-pl_3(pro:per|it_2,$0))
example_end

Sent: like a boy .
Sem: prep|like_1(det:art|a_2($0,n|boy_3($0)))
example_end

Sent: no you put it on .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),adv|on_5($0)),co|no_1($0))
example_end

Sent: you 're just thinking ?
Sem: lambda $0_{r}.Q(cop|~be_2(and(part|think-presp_4(pro:per|you_1,$0),adv|just_3($0)),$0))
example_end

Sent: about the leaf ?
Sem: Q(prep|about_1(det:art|the_2($0,n|leaf_3($0))))
example_end

Sent: that 's not a leaf that 's a feather .
Sem: lambda $0_{r}.not(and(det:art|a_4(pro:dem|that_1,n|leaf_5(pro:dem|that_1,$0)),det:art|a_8(pro:rel|that_6,n|feather_9(pro:rel|that_6,$0))),$0)
example_end

Sent: why would you put it on the door ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),prep|on_6(det:art|the_7($2,n|door_8($2)),$0)),$0)
example_end

Sent: because that 's Robin 's .
Sem: lambda $0_{r}.poss|~s_5(n:prop|robin_4,pro:dem|that_2,$0)
example_end

Sent: no it 's David 's .
Sem: lambda $0_{r}.and(poss|~s_5(n:prop|david_4,pro:per|it_2,$0),co|no_1($0))
example_end

Sent: no it 's David 's .
Sem: lambda $0_{r}.and(poss|~s_5(n:prop|david_4,pro:per|it_2,$0),co|no_1($0))
example_end

Sent: no she doesn 't want to blow a balloon .
Sem: lambda $0_{r}.and(not(mod|do_3(v|want_5(pro:sub|she_2,lambda $1_{r}.v|blow_7(pro:sub|she_2,det:art|a_8($2,n|balloon_9($2)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: it has knots in it so it 's hard to blow it .
Sem: lambda $0_{r}.adv|so_6(adj|hard_9(pro:per|it_7,lambda $1_{r}.v|blow_11(pro:per|it_7,pro:per|it_12,$1),$0),and(aux|have-3s_2(pro:per|it_1,BARE($2,n|knot-pl_3($2)),$0),prep|in_4(pro:per|it_5,$0)))
example_end

Sent: I 'll try .
Sem: lambda $0_{r}.mod|~will_2(v|try_3(pro:sub|i_1,$0),$0)
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: well she 's trying .
Sem: lambda $0_{r}.and(aux|~be_3(part|try-presp_4(pro:sub|she_2,$0),$0),co|well_1($0))
example_end

Sent: she can 't blow it .
Sem: lambda $0_{r}.not(mod|can_2(v|blow_4(pro:sub|she_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: that is Ursula 's .
Sem: lambda $0_{r}.poss|~s_4(n:prop|ursula_3,pro:rel|that_1,$0)
example_end

Sent: there 's a little air in there see ?
Sem: lambda $0_{r}.Q(and(and(cop|~be_2(det:art|a_3($1,and(adj|little_4($1),n|air_5($1))),$0),prep|in_6(adv|there_7($0))),v|see_8(you,$0)))
example_end

Sent: you cannot  blow it when there 's a knot see ?
Sem: lambda $0_{r}.Q(and(not(conj|when_6(cop|~be_8(det:art|a_9($1,n|knot_10($1)),$0),mod|can_2(v|blow_4(pro:per|you_1,pro:per|it_5,$0),$0)),$0),v|see_11(you,$0)))
example_end

Sent: what d you think that says ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.v|say-3s_6(pro:rel|that_5,pro:int|what_1,$1),$0),$0))
example_end

Sent: that says puppy ?
Sem: lambda $0_{r}.Q(v|say-3s_2(pro:rel|that_1,BARE($1,n|puppy_3($1)),$0))
example_end

Sent: what d you think they 're having ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.aux|~be_6(part|have-presp_7(pro:sub|they_5,pro:int|what_1,$1),$1),$0),$0))
example_end

Sent: what kind of cake ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|cake_4($2)))))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: it 's a birthday cake .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|birth+day_4(pro:per|it_1,$0),n|cake_5(pro:per|it_1,$0)))
example_end

Sent: oh that is you ?
Sem: lambda $0_{r}.Q(and(pro:per|you_4(pro:rel|that_2,$0),co|oh_1($0)))
example_end

Sent: Adam am I Ursula Cromer ?
Sem: lambda $0_{r}.Q(n:prop|cromer_5_ursula_4(pro:sub|i_3,$0))
example_end

Sent: Robin made that .
Sem: lambda $0_{r}.v|make-past_2(n:prop|robin_1,pro:dem|that_3,$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I didn 't think he knew flowers he said roses .
Sem: lambda $0_{r}.and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|know-past_6(pro:sub|he_5,BARE($2,n|flower-pl_7($2)),$1),$0),$0),$0),v|say-past_9(pro:sub|he_8,BARE($3,n|rose-pl_10($3)),$0))
example_end

Sent: and he said flowers .
Sem: lambda $0_{r}.v|say-past_3(pro:sub|he_2,BARE($1,n|flower-pl_4($1)),$0)
example_end

Sent: where did you go yesterday Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|go_4(pro:per|you_3,$0),$1($0)),adv:tem|yesterday_5($0)),$0)
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: and what about inside the church ?
Sem: att(pro:int|what_2_about_3,prep|inside_4(det:art|the_5($0,n|church_6($0))))
example_end

Sent: it 's very funny .
Sem: lambda $0_{r}.adv|very_3(adj|fun-dn_4(pro:per|it_1,$0))
example_end

Sent: I don 't know why do you say that ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.mod|do_6(and(v|say_8(pro:per|you_7,pro:dem|that_9,$1),adv:int|why_5($1)),$1),$0),$0),$0))
example_end

Sent: what 're you looking ?
Sem: lambda $0_{r}.part|look-presp_4(pro:per|you_3,$0)
example_end

Sent: that 's a better one ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,and(pro:indef|one_5(pro:dem|that_1,$0),adj|good-cp_4(pro:dem|that_1,$0))))
example_end

Sent: who is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: don 't know .
Sem: lambda $0_{r}.not(mod|do_1(v|know_3(you,$0),$0),$0)
example_end

Sent: cat and the mouse .
Sem: det:art|the_3($0,n|mouse_4($0))
example_end

Sent: yes scout .
Sem: lambda $0_{r}.and(n|scout_2($0),co|yes_1($0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: close the zipper .
Sem: lambda $0_{r}.v|close_1(you,det:art|the_2($1,n|zip-dv_3($1)),$0)
example_end

Sent: no it 's not a bottle .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:per|it_2,n|bottle_6(pro:per|it_2,$0)),$0),co|no_1($0))
example_end

Sent: it 's lipstick .
Sem: lambda $0_{r}.n|lipstick_3(pro:per|it_1,$0)
example_end

Sent: just look .
Sem: lambda $0_{r}.and(cop|look_2(you,$0),adv|just_1($0))
example_end

Sent: no little boys don 't wear lipstick .
Sem: lambda $0_{r}.and(not(mod|do_4(v|wear_6(BARE($1,and(adj|little_2($1),n|boy-pl_3($1))),BARE($2,n|lipstick_7($2)),$0),$0),$0),qn|no_1($0))
example_end

Sent: only ladies .
Sem: adv|only_1(BARE($0,n|lady-pl_2($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: well because I know .
Sem: lambda $0_{r}.and(v|know_4(pro:sub|i_3,$0),co|well_1($0))
example_end

Sent: that 's all !
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: you know ?
Sem: lambda $0_{r}.Q(v|know_2(pro:per|you_1,$0))
example_end

Sent: how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: I cannot  get the knot out_of this balloon .
Sem: lambda $0_{r}.not(mod|can_2(and(v|get_4(pro:sub|i_1,det:art|the_5($1,n|knot_6($1)),$0),prep|out_of_7(pro:dem|this_8($2,n|balloon_9($2)),$0)),$0),$0)
example_end

Sent: if you think you can .
Sem: lambda $0_{r}.v|think_3(pro:per|you_2,$0)
example_end

Sent: you 're blowing the knot out ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|blow-presp_3(pro:per|you_1,det:art|the_4($1,v|knot_5($1)),$0),adv|out_6($0)),$0))
example_end

Sent: that 's a banjo ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,n|banjo_4(pro:dem|that_1,$0)))
example_end

Sent: it 's a feather .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|feather_4(pro:per|it_1,$0))
example_end

Sent: yes I see it .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what d you think that feather came from ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(v|come-past_7(pro:dem|that_5($2,n|feather_6($2)),$1),prep|from_8(pro:int|what_1,$1)),$0),$0))
example_end

Sent: good morning friend .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: for Paul ?
Sem: Q(conj|for_1(n:prop|paul_2))
example_end

Sent: I don 't think Paul can have any money .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(v|have_7(n:prop|paul_5,qn|any_8($2,n|money_9($2)),$1),$1),$0),$0),$0)
example_end

Sent: you were ?
Sem: lambda $0_{r}.Q(cop|be-past_2(pro:per|you_1,$0))
example_end

Sent: why were you crying ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.cop|be-past_2(and(part|cry-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: what kind of game ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|game_4($2)))))
example_end

Sent: I don 't think I have guns .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|have_6(pro:sub|i_5,BARE($2,n|gun-pl_7($2)),$1),$0),$0),$0)
example_end

Sent: what shall we play ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|play_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: new game .
Sem: BARE($0,and(adj|new_1($0),n|game_2($0)))
example_end

Sent: in my bag ?
Sem: Q(prep|in_1(det:poss|my_2($0,n|bag_3($0))))
example_end

Sent: don 't frighten you .
Sem: lambda $0_{r}.not(mod|do_1(v|frighten_3(you,pro:per|you_4,$0),$0),$0)
example_end

Sent: does it have a driver ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(pro:per|it_2,det:art|a_4($1,n|drive-dv_5($1)),$0),$0))
example_end

Sent: may I see it ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,pro:per|it_4,$0),$0))
example_end

Sent: show it to me .
Sem: lambda $0_{r}.and(v|show_1(you,pro:per|it_2,$0),prep|to_3(pro:obj|me_4,$0))
example_end

Sent: don 't take it apart .
Sem: lambda $0_{r}.not(mod|do_1(and(v|take_3(you,pro:per|it_4,$0),adv|apart_5($0)),$0),$0)
example_end

Sent: is it a happy face or a sad face ?
Sem: lambda $0_{r}.Q(det:art|a_7(pro:per|it_2,det:art|a_3(pro:per|it_2,and(and(n|face_9(pro:per|it_2,$0),adj|happy_4(pro:per|it_2,$0)),adj|sad_8(pro:per|it_2,$0)))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: why don 't you look and see if you can figure out what it is ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|see_7(pro:per|you_4,lambda $1_{r}.mod|can_10(and(v|figure_11(pro:per|you_9,lambda $2_{r}.pro:int|what_13(pro:per|it_14,$2),$1),adv|out_12($1)),$1),$0),$3($0)),$0),$0)
example_end

Sent: I think he said anything .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:sub|he_3,pro:indef|anything_5,$1),$0)
example_end

Sent: it doesn 't look like anything .
Sem: lambda $0_{r}.not(mod|do_2(and(cop|look_4(pro:per|it_1,$0),conj|like_5(pro:indef|anything_6,$0)),$0),$0)
example_end

Sent: I think it looks like something .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(cop|look-3s_4(pro:per|it_3,$1),conj|like_5(BARE($2,pro:indef|something_6($2)),$1)),$0)
example_end

Sent: is that right Adam .
Sem: lambda $0_{r}.n|right_3(pro:dem|that_2,$0)
example_end

Sent: I don 't think I 've ever seen anything like that .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.aux|~have_6(and(and(part|see-pastp_8(pro:sub|i_5,pro:indef|anything_9,$1),adv|ever_7($1)),prep|like_10(pro:dem|that_11,$1)),$1),$0),$0),$0)
example_end

Sent: don 't you remember ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|remember_4(pro:per|you_3,$0),$0),$0))
example_end

Sent: nobody 's there ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(pro:indef|nobody_1,$0),adv|there_3($0)))
example_end

Sent: what d you hear ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|hear_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: are you too big ?
Sem: lambda $0_{r}.Q(adv|too_3(adj|big_4(pro:per|you_2,$0)))
example_end

Sent: who can wear it ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_2(v|wear_3($1,pro:per|it_4,$0),$0)
example_end

Sent: just one minute now .
Sem: adv|now_4(adv|just_1(BARE($0,det:num|one_2(n|minute_3($0)))))
example_end

Sent: well you turn it up here see ?
Sem: lambda $0_{r}.Q(and(and(and(and(v|turn_3(pro:per|you_2,pro:per|it_4,$0),adv|up_5($0)),adv|here_6($0)),v|see_7(you,$0)),co|well_1($0)))
example_end

Sent: the light ?
Sem: BARE($0,Q(det:art|the_1($1,n|light_2($1),$0)))
example_end

Sent: it needs another battery .
Sem: lambda $0_{r}.v|need-3s_2(pro:per|it_1,qn|another_3($1,n|battery_4($1)),$0)
example_end

Sent: alright now look .
Sem: lambda $0_{r}.and(and(cop|look_3(you,$0),adv|now_2($0)),co|alright_1($0))
example_end

Sent: leave it off .
Sem: lambda $0_{r}.and(v|leave_1(you,pro:per|it_2,$0),adv|off_3($0))
example_end

Sent: and come and turn this one on .
Sem: lambda $0_{r}.and(v|turn_4(you,pro:dem|this_5($1,pro:indef|one_6($1)),$0),adv|on_7($0))
example_end

Sent: that 's fun .
Sem: lambda $0_{r}.adj|fun_3(pro:dem|that_1,$0)
example_end

Sent: it 's pretty ?
Sem: lambda $0_{r}.Q(adj|pretty_3(pro:per|it_1,$0))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you 're typing .
Sem: lambda $0_{r}.aux|~be_2(part|type-presp_3(pro:per|you_1,$0),$0)
example_end

Sent: put your other battery in .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:poss|your_2($1,and(qn|other_3($1),n|battery_4($1))),$0),adv|in_5($0))
example_end

Sent: the other way Adam .
Sem: det:art|the_1($0,and(qn|other_2($0),n|way_3($0)))
example_end

Sent: one way ?
Sem: BARE($0,Q(det:num|one_1(n|way_2($0))))
example_end

Sent: wrong way .
Sem: BARE($0,and(adj|wrong_1($0),n|way_2($0)))
example_end

Sent: which wheel ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|wheel_2($1))
example_end

Sent: don 't turn it over there .
Sem: lambda $0_{r}.not(mod|do_1(and(v|turn_3(you,pro:per|it_4,$0),adv|over_5(adv|there_6($0))),$0),$0)
example_end

Sent: okay try it now .
Sem: lambda $0_{r}.and(and(v|try_2(you,pro:per|it_3,$0),adv|now_4($0)),co|okay_1($0))
example_end

Sent: what is this Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: moon on it ?
Sem: BARE($0,Q(att(n|moon_1($0),prep|on_2(pro:per|it_3))))
example_end

Sent: you 're Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(pro:per|you_1,$0))
example_end

Sent: oh you want to keep those for you .
Sem: lambda $0_{r}.and(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|keep_5(pro:per|you_2,pro:dem|those_6,$1),prep|for_7(pro:per|you_8,$1)),$0),co|oh_1($0))
example_end

Sent: that 's an egg .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|egg_4(pro:dem|that_1,$0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: doing nothing ?
Sem: lambda $0_{r}.Q(part|do-presp_1(you,pro:indef|nothing_2,$0))
example_end

Sent: you may break it .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: what 're you doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you 're checking it ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|check-presp_3(pro:per|you_1,pro:per|it_4,$0),$0))
example_end

Sent: no if you put it over too far the battery will fall out .
Sem: lambda $0_{r}.and(mod|will_11(conj|if_2(and(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),adv|over_6($0)),adv|too_7(adv|far_8($0))),and(v|fall_12(det:art|the_9($1,n|battery_10($1)),$0),adv|out_13($0))),$0),co|no_1($0))
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: let me what ?
Sem: lambda $0_{r}.v|let-zero_1(you,pro:obj|me_2,$0)
example_end

Sent: was it stand up or shine up ?
Sem: lambda $0_{r}.Q(cop|be-past_1(pro:per|it_2,lambda $1_{r}.and(and(v|shine_6(you,$1),adv|up_4($1)),adv|up_7($1)),$0))
example_end

Sent: where are cowboys ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(aux|be-pres_2(BARE($1,n|cow+boy_3($1)),$0),$2($0))
example_end

Sent: what are cowboys doing ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(BARE($1,n|cow+boy_3($1)),$2,$0),$0)
example_end

Sent: they 're shooting ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|shoot-presp_3(pro:sub|they_1,$0),$0))
example_end

Sent: Shadow_Gay is gone ?
Sem: lambda $0_{r}.Q(part|go-pastp_3(n:prop|shadow_gay_1,$0))
example_end

Sent: oh he climbed out .
Sem: lambda $0_{r}.and(and(v|climb-past_3(pro:sub|he_2,$0),adv|out_4($0)),co|oh_1($0))
example_end

Sent: o what happened ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_3($1,$0),co|oh_1($0))
example_end

Sent: who 's making that noise ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|make-presp_3($1,pro:dem|that_4($2,n|noise_5($2)),$0),$0)
example_end

Sent: how are you doing that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: water for me ?
Sem: BARE($0,Q(att(n|water_1($0),prep|for_2(pro:obj|me_3))))
example_end

Sent: what are you looking for ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|look-presp_4_for_5(pro:per|you_3,$1,$0),$0)
example_end

Sent: I 'll turn it on .
Sem: lambda $0_{r}.mod|~will_2(and(v|turn_3(pro:sub|i_1,pro:per|it_4,$0),adv|on_5($0)),$0)
example_end

Sent: it 's too loud .
Sem: lambda $0_{r}.adv|too_3(adj|loud_4(pro:per|it_1,$0))
example_end

Sent: let 's turn it on here now .
Sem: lambda $0_{r}.and(v:obj|let_1(you,lambda $1_{r}.and(and(v|turn_3(pro:obj|~us_2,pro:per|it_4,$1),prep|on_5($1)),adv|here_6($1)),$0),adv|now_7($0))
example_end

Sent: it 's just too noisy .
Sem: lambda $0_{r}.adv|too_4(adj|just_3(adj|noise-dn_5(pro:per|it_1,$0)))
example_end

Sent: turn the battery on ?
Sem: lambda $0_{r}.Q(and(v|turn_1(you,det:art|the_2($1,n|battery_3($1)),$0),adv|on_4($0)))
example_end

Sent: it 's on .
Sem: lambda $0_{r}.adv|on_3(pro:per|it_1,$0)
example_end

Sent: what sounds like music ?
Sem: lambda $1_{e}.lambda $0_{r}.and(n|sound-pl_2($1,$0),co|like_3(BARE($2,n|music_4($2)),$0))
example_end

Sent: I do ?
Sem: lambda $0_{r}.Q(v|do_2(pro:sub|i_1,$0))
example_end

Sent: that nice .
Sem: lambda $0_{r}.adj|nice_2(pro:dem|that_1,$0)
example_end

Sent: okay that 's enough .
Sem: lambda $0_{r}.and(adv|enough_4(pro:dem|that_2,$0),co|okay_1($0))
example_end

Sent: baby Momma .
Sem: BARE($0,and_comp(n|baby_1($0),n:prop|momma_2($0)))
example_end

Sent: what 's that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: where did you go yesterday ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|go_4(pro:per|you_3,$0),$1($0)),adv:tem|yesterday_5($0)),$0)
example_end

Sent: did you see piggies ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,BARE($1,n|pig-dim_4($1)),$0),$0))
example_end

Sent: did you see bears ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,BARE($1,n|bear-pl_4($1)),$0),$0))
example_end

Sent: the zoo ?
Sem: BARE($0,Q(det:art|the_1($1,n|zoo_2($1),$0)))
example_end

Sent: something frightened you ?
Sem: lambda $0_{r}.Q(v|frighten-past_2(pro:indef|something_1,pro:per|you_3,$0))
example_end

Sent: you think a tiger ?
Sem: lambda $0_{r}.Q(v|think_2(pro:per|you_1,det:art|a_3($1,n|tiger_4($1)),$0))
example_end

Sent: what else did you see at the zoo ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(and(v|see_5(pro:per|you_4,$1,$0),prep|at_6(det:art|the_7($2,n|zoo_8($2)),$0)),$0)
example_end

Sent: can you tell her ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tell_3(pro:per|you_2,pro:obj|her_4,$0),$0))
example_end

Sent: yes elephants walking .
Sem: lambda $0_{r}.and(part|walk-presp_3(BARE($1,n|elephant-pl_2($1)),$0),co|yes_1($0))
example_end

Sent: because they like to walk .
Sem: lambda $0_{r}.v|like_3(pro:sub|they_2,lambda $1_{r}.v|walk_5(pro:sub|they_2,$1),$0)
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: well I didn 't see any monkeys .
Sem: lambda $0_{r}.and(not(mod|do_3(v|see_5(pro:sub|i_2,qn|any_6($1,n|monkey-pl_7($1)),$0),$0),$0),co|well_1($0))
example_end

Sent: did you see the monkeys ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,det:art|the_4($1,n|monkey-pl_5($1)),$0),$0))
example_end

Sent: I didn 't think you did .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what was in the cage that was walking back and forth ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|be-past_2($1,$0),prep|in_3(det:art|the_4($2,n|cage_5($2)),$0))
example_end

Sent: the big one .
Sem: det:art|the_1($0,and(adj|big_2($0),pro:indef|one_3($0)))
example_end

Sent: just looking .
Sem: lambda $0_{r}.and(part|look-presp_2(you,$0),adv|just_1($0))
example_end

Sent: just looking .
Sem: lambda $0_{r}.and(part|look-presp_2(you,$0),adv|just_1($0))
example_end

Sent: they have a black leopard you can see spots under the black .
Sem: lambda $0_{r}.and(v|have_2(pro:sub|they_1,det:art|a_3($1,and(n|black_4($1),n|leopard_5($1))),$0),mod|can_7(v|see_8(pro:per|you_6,BARE($2,att(n|spot-pl_9($2),prep|under_10(det:art|the_11($3,n|black_12($3))))),$0),$0))
example_end

Sent: which one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,pro:indef|one_2($1))
example_end

Sent: this one ?
Sem: BARE($0,Q(pro:dem|this_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: or the other one ?
Sem: BARE($0,Q(det:art|the_2($1,att(pro:indef|one_4,BARE($2,qn|other_3($2)),$1),$0)))
example_end

Sent: this one ?
Sem: BARE($0,Q(pro:dem|this_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: I don 't think we saw any monkeys did we ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|see-past_6(pro:sub|we_5,qn|any_7($2,n|monkey-pl_8($2)),$1),$0),$0),$0),mod|do-past_9(pro:sub|we_10,$0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what are that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: those are monkeys .
Sem: lambda $0_{r}.n|monkey-pl_3(pro:dem|those_1,$0)
example_end

Sent: you didn 't see the leopard .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:per|you_1,det:art|the_5($1,n|leopard_6($1)),$0),$0),$0)
example_end

Sent: and this is just like the lion we saw isn 't it ?
Sem: lambda $0_{r}.Q(and(and(cop|be-3s_3(pro:dem|this_2,$0),adv|just_4(prep|like_5(det:art|the_6($1,n|lion_7($1)),$0))),not(cop|be_10(pro:per|it_12,$0),$0)))
example_end

Sent: d you remember ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,$0),$0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: no more .
Sem: qn|no_1($0,pro:indef|more_2($0))
example_end

Sent: why don 't you leave it on the table ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|leave_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),prep|on_7(det:art|the_8($2,n|table_9($2)),$0)),$0),$0)
example_end

Sent: why are you crying ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|cry-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: because Mommy hugged you ?
Sem: lambda $0_{r}.Q(v|hug-past_3(n:prop|mommy_2,pro:per|you_4,$0))
example_end

Sent: why d you think Mommy hugged you ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.v|hug-past_6(n:prop|mommy_5,pro:per|you_7,$1),$0),$2($0)),$0)
example_end

Sent: you 're waking up ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|wake-presp_3(pro:per|you_1,$0),adv|up_4($0)),$0))
example_end

Sent: was that flower ?
Sem: lambda $0_{r}.Q(n|flower_3(pro:dem|that_2,$0))
example_end

Sent: you 're dropping it on your shirt .
Sem: lambda $0_{r}.aux|~be_2(and(part|drop-presp_3(pro:per|you_1,pro:per|it_4,$0),prep|on_5(det:poss|your_6($1,n|shirt_7($1)),$0)),$0)
example_end

Sent: how do I know what Adam ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:sub|i_3,$1,$0),$2($0)),$0)
example_end

Sent: Cecile what Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|cecile_1,$0)
example_end

Sent: he can 't say Cecile .
Sem: lambda $0_{r}.not(mod|can_2(v|say_4(pro:sub|he_1,n:prop|cecile_5,$0),$0),$0)
example_end

Sent: he says Pucile .
Sem: lambda $0_{r}.v|say-3s_2(pro:sub|he_1,chi|pucile_3,$0)
example_end

Sent: does she have coffee ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_3(pro:sub|she_2,BARE($1,n|coffee_4($1)),$0),$0))
example_end

Sent: only ladies .
Sem: adv|only_1(BARE($0,n|lady-pl_2($0)))
example_end

Sent: we won 't go into that .
Sem: lambda $0_{r}.not(mod|will_2(and(v|go_4(pro:sub|we_1,pro:dem|that_6,$0),prep|into_5($0)),$0),$0)
example_end

Sent: three minutes ?
Sem: BARE($0,Q(det:num|three_1(n|minute-pl_2($0))))
example_end

Sent: he 's pretty ?
Sem: lambda $0_{r}.Q(adv|pretty_3(pro:sub|he_1,$0))
example_end

Sent: what happens when you press the button ?
Sem: lambda $2_{e}.lambda $0_{r}.conj|when_3(v|press_5(pro:per|you_4,det:art|the_6($1,n|button_7($1)),$0),v|happen-3s_2($2,$0))
example_end

Sent: the light comes on ?
Sem: lambda $0_{r}.Q(v|come-3s_3_on_4(det:art|the_1($1,n|light_2($1)),$0))
example_end

Sent: wait let her show you .
Sem: lambda $0_{r}.and(v|let-zero_2(you,det:poss|her_3,$0),co|wait_1(you,$0))
example_end

Sent: his mouth ?
Sem: BARE($0,Q(det:poss|his_1($1,n|mouth_2($1),$0)))
example_end

Sent: that 's where his tongue should be .
Sem: lambda $0_{r}.cop|~be_2(pro:dem|that_1,lambda $1_{r}.mod|should_6(and(cop|be_7(det:poss|his_4($2,n|tongue_5($2)),$1),pro:rel|where_3($1)),$1),$0)
example_end

Sent: should be .
Sem: lambda $0_{r}.mod|should_1(cop|be_2(you,$0),$0)
example_end

Sent: safety rules ?
Sem: BARE($0,Q(and_comp(n|safety_1($0),v|rule-3s_2($0))))
example_end

Sent: what are the rules .
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|rule-pl_4($2)),$0)
example_end

Sent: d you know the rules ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,det:art|the_4($1,n|rule-pl_5($1)),$0),$0))
example_end

Sent: cry boys .
Sem: lambda $0_{r}.and(v|cry_1(you,$0),BARE($1,n|boy-pl_2($1)))
example_end

Sent: no I don 't think his mouth opens .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|open-3s_8(det:poss|his_6($2,n|mouth_7($2)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: I don 't think he can talk .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(v|talk_7(pro:sub|he_5,$1),$1),$0),$0),$0)
example_end

Sent: you talk for him .
Sem: lambda $0_{r}.and(v|talk_2(pro:per|you_1,$0),prep|for_3(pro:obj|him_4,$0))
example_end

Sent: oh you 're talking to me ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|talk-presp_4(pro:per|you_2,$0),prep|to_5(pro:obj|me_6,$0)),$0),co|oh_1($0)))
example_end

Sent: his neck ?
Sem: BARE($0,Q(det:poss|his_1($1,n|neck_2($1),$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: that 's his tongue ?
Sem: lambda $0_{r}.Q(det:poss|his_3(pro:dem|that_1,n|tongue_4(pro:dem|that_1,$0)))
example_end

Sent: can you mail it in the mailbox ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|mail_3(pro:per|you_2,pro:per|it_4,$0),prep|in_5(det:art|the_6($1,n|mail+box_7($1)),$0)),$0))
example_end

Sent: turn it off ?
Sem: lambda $0_{r}.Q(and(v|turn_1(you,pro:per|it_2,$0),adv|off_3($0)))
example_end

Sent: he uses the same construction for unlock .
Sem: lambda $0_{r}.and(v|use-3s_2(pro:sub|he_1,det:art|the_3($1,and(adj|same_4($1),n|construction_5($1))),$0),prep|for_6(BARE($2,v|lock_7($2)),$0))
example_end

Sent: he says lock it off .
Sem: lambda $0_{r}.v|say-3s_2(pro:sub|he_1,lambda $1_{r}.and(n|lock_3(pro:sub|he_1,pro:per|it_4,$1),adv|off_5($1)),$0)
example_end

Sent: are you sure ?
Sem: lambda $0_{r}.Q(adj|sure_3(pro:per|you_2,$0))
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: hours of collection .
Sem: BARE($0,att(n|hour-pl_1($0),prep|of_2(BARE($1,n|collection_3($1)))))
example_end

Sent: are you the mailman ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:per|you_2,n|mail+man_4(pro:per|you_2,$0)))
example_end

Sent: well you can 't go back there .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|go_5(pro:per|you_2,$0),adv|back_6(adv|there_7($0))),$0),$0),co|well_1($0))
example_end

Sent: well you can 't go back there .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|go_5(pro:per|you_2,$0),adv|back_6(adv|there_7($0))),$0),$0),co|well_1($0))
example_end

Sent: do you know ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,$0),$0))
example_end

Sent: well you did the other one .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,det:art|the_4($1,att(pro:indef|one_6,BARE($2,qn|other_5($2)),$1)),$0),co|well_1($0))
example_end

Sent: I was looking for the engine .
Sem: lambda $0_{r}.aux|be-past_2(and(part|look-presp_3(pro:sub|i_1,$0),prep|for_4(det:art|the_5($1,n|engine_6($1)),$0)),$0)
example_end

Sent: did you find it ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|find_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: oh where 's the caboose ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(cop|~be_3(det:art|the_4($1,n|caboose_5($1)),$0),$2($0)),co|oh_1($0))
example_end

Sent: you 're looking for it .
Sem: lambda $0_{r}.aux|~be_2(and(part|look-presp_3(pro:per|you_1,$0),prep|for_4(pro:per|it_5,$0)),$0)
example_end

Sent: I don 't think that 's the caboose is it .
Sem: lambda $0_{r}.and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|the_7(pro:dem|that_5,n|caboose_8(pro:dem|that_5,$1)),$0),$0),$0),aux|be-3s_9(pro:per|it_10,$0))
example_end

Sent: I see the caboose .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,det:art|the_3($1,n|caboose_4($1)),$0)
example_end

Sent: no you put your pennies through here .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:per|you_2,det:poss|your_4($1,n|penny-pl_5($1)),$0),adv|through_6(adv|here_7($0))),co|no_1($0))
example_end

Sent: the mail goes in up there yes .
Sem: lambda $0_{r}.and(and(and(v|go-3s_3(det:art|the_1($1,n|mail_2($1)),$0),adv|in_4($0)),adv|up_5(adv|there_6($0))),co|yes_7($0))
example_end

Sent: the postman comes and takes it out and puts it in a big bag .
Sem: lambda $0_{r}.and(coord|and_4(and(v|put-3s_9(det:art|the_1($1,n|post+man_2($1)),pro:per|it_10,$0),prep|in_11(det:art|a_12($2,and(adj|big_13($2),n|bag_14($2))),$0)),v|take-3s_5(det:art|the_1($1,n|post+man_2($1)),pro:per|it_6,$0)),adv|out_7($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: maybe it 's there .
Sem: lambda $0_{r}.and(and(cop|~be_3(pro:per|it_2,$0),adv|maybe_1($0)),adv|there_4($0))
example_end

Sent: we 'll pretend that 's the caboose .
Sem: lambda $0_{r}.mod|~will_2(v|pretend_3(pro:sub|we_1,lambda $1_{r}.det:art|the_6(pro:dem|that_4,n|caboose_7(pro:dem|that_4,$1)),$0),$0)
example_end

Sent: you don 't know where the caboose is ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|know_4(pro:per|you_1,lambda $1_{r}.and(cop|be-3s_8(det:art|the_6($2,n|caboose_7($2)),$1),adv:int|where_5($1)),$0),$0),$0))
example_end

Sent: what did he use to make his mailbox ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-past_2(v|use_4(pro:sub|he_3,lambda $1_{r}.v|make_6($2,det:poss|his_7($3,n|mail+box_8($3)),$1),$0),$0)
example_end

Sent: that spells a word ?
Sem: lambda $0_{r}.Q(v|spell-3s_2(pro:rel|that_1,det:art|a_3($1,n|word_4($1)),$0))
example_end

Sent: d you want me to what ?
Sem: lambda $0_{r}.mod|do_1(v|want_3(pro:per|you_2,pro:obj|me_4,$0),$0)
example_end

Sent: Adam if you bring me my purse I 'll see if I have one .
Sem: lambda $0_{r}.mod|~will_9(conj|if_2(v|bring_4(pro:per|you_3,det:poss|my_6($1,n|purse_7($1)),pro:obj|me_5,$0),v|see_10(pro:sub|i_8,lambda $2_{r}.v|have_13(pro:sub|i_12,pro:indef|one_14,$2),$0)),$0)
example_end

Sent: if you bring me my purse .
Sem: lambda $0_{r}.v|bring_3(pro:per|you_2,det:poss|my_5($1,n|purse_6($1)),pro:obj|me_4,$0)
example_end

Sent: on the chair .
Sem: prep|on_1(det:art|the_2($0,n|chair_3($0)))
example_end

Sent: what are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: it was even made by Indians .
Sem: lambda $0_{r}.cop|be-past_2(and(and(v|make-past_4(pro:per|it_1,$0),adv|even_3($0)),prep|by_5(n:prop|indians_6,$0)),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: they 're not Santa Claus .
Sem: lambda $0_{r}.not(n:prop|claus_5_santa_4(pro:sub|they_1,$0),$0)
example_end

Sent: let me see it .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|see_3(pro:obj|me_2,pro:per|it_4,$1),$0)
example_end

Sent: Santa Claus ?
Sem: BARE($0,Q(n:prop|claus_2_santa_1($0)))
example_end

Sent: what does he have in his hand ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(and(v|have_4(pro:sub|he_3,$1,$0),prep|in_5(det:poss|his_6($2,n|hand_7($2)),$0)),$0)
example_end

Sent: on his legs ?
Sem: Q(prep|on_1(det:poss|his_2($0,n|leg-pl_3($0))))
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: oh I don 't know .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,$0),$0),$0),co|oh_1($0))
example_end

Sent: maybe he parked it some place .
Sem: lambda $0_{r}.and(and(v|park-past_3(pro:sub|he_2,pro:per|it_4,$0),adv|maybe_1($0)),n|place_6_some_5($0))
example_end

Sent: I hope so .
Sem: lambda $0_{r}.and(n|hope_2(pro:sub|i_1,$0),adv|so_3($0))
example_end

Sent: his name is Jocko .
Sem: lambda $0_{r}.det:poss|his_1(n:prop|jocko_4,n|name_2(n:prop|jocko_4,$0))
example_end

Sent: he looks like a monkey .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:sub|he_1,$0),prep|like_3(det:art|a_4($1,n|monkey_5($1)),$0))
example_end

Sent: it 's a puzzle you know .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|puzzle_4(pro:per|it_1,$0))
example_end

Sent: here are some more .
Sem: lambda $0_{r}.and(cop|be-pres_2(BARE($1,pro:indef|more_4($1)),$0),adv|here_1($0))
example_end

Sent: these come out too .
Sem: lambda $0_{r}.and(and(v|come_2(pro:dem|these_1,$0),adv|out_3($0)),post|too_4($0))
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: see if those are in the right place .
Sem: lambda $0_{r}.v|see_1(you,lambda $1_{r}.prep|in_5(det:art|the_6($2,and(adj|right_7($2),n|place_8($2))),pro:dem|those_3,$1),$0)
example_end

Sent: what d you think goes there ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(v|go-3s_5(_,pro:int|what_1,$1),adv|there_6($1)),$0),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: now push it back .
Sem: lambda $0_{r}.and(and(v|push_2(you,pro:per|it_3,$0),adv|now_1($0)),adv|back_4($0))
example_end

Sent: no that 's not .
Sem: lambda $0_{r}.and(not(cop|~be_3(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: where d you think that goes ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(v|go-3s_6(pro:rel|that_5,$1),adv:int|where_1($1)),$0),$0))
example_end

Sent: close your eyes .
Sem: lambda $0_{r}.v|close_1(you,det:poss|your_2($1,n|eye-pl_3($1)),$0)
example_end

Sent: is that the shape ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,n|shape_4(pro:rel|that_2,$0)))
example_end

Sent: that must be what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|must_2($1(pro:dem|that_1,$0),$0)
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: yes but it must not be the right way .
Sem: lambda $0_{r}.and(not(mod|must_4(det:art|the_7(pro:per|it_3,and(n|way_9(pro:per|it_3,$0),adj|right_8(pro:per|it_3,$0))),$0),$0),co|yes_1($0))
example_end

Sent: that 's better .
Sem: lambda $0_{r}.adj|good-cp_3(pro:dem|that_1,$0)
example_end

Sent: I don 't think that looks like a nose to me .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(and(cop|look-3s_6(pro:dem|that_5,$1),prep|like_7(det:art|a_8($2,n|nose_9($2)),$1)),prep|to_10(pro:obj|me_11,$1)),$0),$0),$0)
example_end

Sent: what d you think it looks like ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(cop|look-3s_6(pro:per|it_5,$1),prep|like_7(pro:int|what_1,$1)),$0),$0))
example_end

Sent: a heater ?
Sem: BARE($0,Q(det:art|a_1($1,n|heat-dv_2($1),$0)))
example_end

Sent: what kind of heater ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|heat-dv_4($2)))))
example_end

Sent: a race ?
Sem: BARE($0,Q(det:art|a_1($1,n|race_2($1),$0)))
example_end

Sent: what kind of race ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|race_4($2)))))
example_end

Sent: what does it look now ?
Sem: lambda $0_{r}.cop|look_4(pro:per|it_3,$0)
example_end

Sent: there are two of those too .
Sem: BARE($0,det:num|two_3($0))
example_end

Sent: I see two shapes that look just like that .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,BARE($1,det:num|two_3(n|shape-pl_4($1))),$0)
example_end

Sent: on the puzzle .
Sem: prep|on_1(det:art|the_2($0,n|puzzle_3($0)))
example_end

Sent: a camera ?
Sem: BARE($0,Q(det:art|a_1($1,n|camera_2($1),$0)))
example_end

Sent: I don 't see it do you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|see_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0),v|do_6(pro:per|you_7,$0)))
example_end

Sent: I don 't see it .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: these pieces ?
Sem: BARE($0,Q(pro:dem|these_1($1,n|piece-pl_2($1),$0)))
example_end

Sent: oh you want me to put all of mine in ?
Sem: lambda $0_{r}.Q(and(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_6(pro:obj|me_4,BARE($2,att(qn|all_7($2),prep|of_8(pro:poss|mine_9))),$1),adv|in_10($1)),$0),co|oh_1($0)))
example_end

Sent: a little girl with a pinafore .
Sem: det:art|a_1($0,att(and(adj|little_2($0),n|girl_3($0)),prep|with_4(det:art|a_5($1,n|pinafore_6($1)))))
example_end

Sent: a little girl with a dress .
Sem: det:art|a_1($0,att(and(adj|little_2($0),n|girl_3($0)),prep|with_4(det:art|a_5($1,n|dress_6($1)))))
example_end

Sent: a monkey .
Sem: det:art|a_1($0,n|monkey_2($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: yes it looks like a wiggleworm but it 's not a wiggleworm is it ?
Sem: lambda $0_{r}.Q(and(and(conj|but_7(not(det:art|a_11(pro:per|it_8,n|wiggle+worm_12(pro:per|it_8,$0)),$0),and(cop|look-3s_3(pro:per|it_2,$0),prep|like_4(det:art|a_5($1,n|wiggle+worm_6($1)),$0))),aux|be-3s_13(pro:per|it_14,$0)),co|yes_1($0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: could that be his tail ?
Sem: lambda $0_{r}.Q(mod|could_1(det:poss|his_4(det:dem|that_2,n|tail_5(det:dem|that_2,$0)),$0))
example_end

Sent: he doesn 't have feet like that does he ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|have_4(pro:sub|he_1,BARE($1,att(n|foot-pl_5($1),prep|like_6(pro:dem|that_7))),$0),$0),$0),v|do-3s_8(pro:sub|he_9,$0)))
example_end

Sent: let 's finish this first .
Sem: lambda $0_{r}.and(v:obj|let_1(you,lambda $1_{r}.v|finish_3(pro:obj|~us_2,pro:dem|this_4,$1),$0),adj|first_5($0))
example_end

Sent: that 's his tongue isn 't it ?
Sem: lambda $0_{r}.Q(and(det:poss|his_3(pro:dem|that_1,n|tongue_4(pro:dem|that_1,$0)),not(cop|be_5(pro:per|it_7,$0),$0)))
example_end

Sent: the reindeer pulls his sleigh .
Sem: lambda $0_{r}.v|pull-3s_3(det:art|the_1($1,n|reindeer_2($1)),det:poss|his_4($2,n|sleigh_5($2)),$0)
example_end

Sent: yes perhaps he 's parked them .
Sem: lambda $0_{r}.and(aux|~be_4(and(part|park-pastp_5(pro:sub|he_3,pro:obj|them_6,$0),adv|perhaps_2($0)),$0),co|yes_1($0))
example_end

Sent: bottom of his boat .
Sem: BARE($0,att(adj|bottom_1($0),prep|of_2(det:poss|his_3($1,n|boat_4($1)))))
example_end

Sent: you may ask Ursula .
Sem: lambda $0_{r}.mod|may_2(v|ask_3(pro:per|you_1,n:prop|ursula_4,$0),$0)
example_end

Sent: yes they do .
Sem: lambda $0_{r}.and(v|do_3(pro:sub|they_2,$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: poor Jocko .
Sem: att(n:prop|jocko_2,BARE($0,adj|poor_1($0)))
example_end

Sent: he doesn 't have a nose .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|he_1,det:art|a_5($1,n|nose_6($1)),$0),$0),$0)
example_end

Sent: oh he has a nose now .
Sem: lambda $0_{r}.and(and(v|have-3s_3(pro:sub|he_2,det:art|a_4($1,n|nose_5($1)),$0),adv|now_6($0)),co|oh_1($0))
example_end

Sent: not in that ear .
Sem: not(prep|in_2(pro:dem|that_3($0,n|ear_4($0))))
example_end

Sent: yes thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where d you think it goes ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.v|go-3s_6(pro:per|it_5,$1),$0),$2($0)),$0)
example_end

Sent: he 's got his nose .
Sem: lambda $0_{r}.aux|~be_2(part|get-pastp_3(pro:sub|he_1,det:poss|his_4($1,n|nose_5($1)),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: no it came from this .
Sem: lambda $0_{r}.and(and(v|come-past_3(pro:per|it_2,$0),prep|from_4(pro:dem|this_5,$0)),co|no_1($0))
example_end

Sent: you must have broken it .
Sem: lambda $0_{r}.v|have_3(mod|must_2(part|break-pastp_4(pro:per|you_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: you probably stepped on it .
Sem: lambda $0_{r}.and(and(part|step-pastp_3(pro:per|you_1,$0),adv|probable-dadj_2($0)),prep|on_4(pro:per|it_5,$0))
example_end

Sent: yes that you step on .
Sem: lambda $0_{r}.and(and(v|step_4(pro:per|you_3,$0),adv|on_5($0)),co|yes_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I think you did .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|do-past_4(pro:per|you_3,$1),$0)
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: it was an accident .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|accident_4(pro:per|it_1,$0))
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: he doesn 't understand .
Sem: lambda $0_{r}.not(mod|do_2(v|understand_4(pro:sub|he_1,$0),$0),$0)
example_end

Sent: I don 't think you have_to cut it .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod:aux|have_to_6(pro:per|you_5,lambda $2_{r}.v|cut-zero_8(pro:per|you_5,$2),$1),$0),$0),$0)
example_end

Sent: maybe you can color it ?
Sem: lambda $0_{r}.Q(mod|can_3(and(v|color_4(pro:per|you_2,pro:per|it_5,$0),adv|maybe_1($0)),$0))
example_end

Sent: I don 't think you need to color that .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:per|you_5,lambda $2_{r}.v|color_8(pro:per|you_5,pro:dem|that_9,$2),$1),$0),$0),$0)
example_end

Sent: it 's fun ?
Sem: lambda $0_{r}.Q(adj|fun_3(pro:per|it_1,$0))
example_end

Sent: I don 't think .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: another Ursula ?
Sem: BARE($0,Q(qn|another_1($1,n:prop|ursula_2($1),$0)))
example_end

Sent: oh why did you put those in your doctor kit ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(and(v|put-zero_5(pro:per|you_4,pro:dem|those_6,$0),$1($0)),prep|in_7(det:poss|your_8($2,and_comp(n|doctor_9($2),n|kit_10($2))),$0)),$0),co|oh_1($0))
example_end

Sent: kit or box .
Sem: BARE($0,n|box_3($0))
example_end

Sent: you lost some germs from dirty hands .
Sem: lambda $0_{r}.and(v|lose-past_2(pro:per|you_1,qn|some_3($1,n|germ-pl_4($1)),$0),prep|from_5(BARE($2,and(adj|dirt-dn_6($2),n|hand-pl_7($2))),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: aren 't they in there ?
Sem: lambda $0_{r}.Q(not(and(aux|be_1(pro:sub|they_3,$0),adv|in_4(adv|there_5($0))),$0))
example_end

Sent: don 't you remember ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|remember_4(pro:per|you_3,$0),$0),$0))
example_end

Sent: where did we go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:sub|we_3,$0),$1($0)),$0)
example_end

Sent: and what did we do outside ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(and(v|do_5(pro:sub|we_4,$1,$0),adv|outside_6($0)),$0)
example_end

Sent: where did we go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:sub|we_3,$0),$1($0)),$0)
example_end

Sent: no you don 't need to cut them .
Sem: lambda $0_{r}.and(not(mod|do_3(v|need_5(pro:per|you_2,lambda $1_{r}.v|cut-zero_7(pro:per|you_2,pro:obj|them_8,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: no he lost his face Adam .
Sem: lambda $0_{r}.and(v|lose-past_3(pro:sub|he_2,det:poss|his_4($1,n|face_5($1)),$0),co|no_1($0))
example_end

Sent: sharing toys ?
Sem: lambda $0_{r}.Q(part|share-presp_1(you,BARE($1,n|toy-pl_2($1)),$0))
example_end

Sent: with your brother .
Sem: prep|with_1(det:poss|your_2($0,n|brother_3($0)))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: he wants you to play with that .
Sem: lambda $0_{r}.v|want-3s_2(pro:sub|he_1,lambda $1_{r}.and(v|play_5(pro:per|you_3,$1),prep|with_6(pro:dem|that_7,$1)),$0)
example_end

Sent: no not if he 's careful .
Sem: lambda $0_{r}.and(conj|if_3(co|careful_6(pro:sub|he_4,$0),neg|not_2($0)),co|no_1($0))
example_end

Sent: that might break .
Sem: lambda $0_{r}.v|break_3(pro:rel|that_1,$0)
example_end

Sent: this part looks like it 's had an accident .
Sem: lambda $0_{r}.cop|look-3s_3(pro:dem|this_1($1,n|part_2($1)),lambda $2_{r}.aux|~be_6(part|have-pastp_7(pro:per|it_5,det:art|a_8($3,n|accident_9($3)),$2),$2),$0)
example_end

Sent: this is a bucket loader .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,and_comp(n|bucket_4(pro:dem|this_1,$0),n|load-dv_5(pro:dem|this_1,$0)))
example_end

Sent: like a mitten .
Sem: prep|like_1(det:art|a_2($0,n|mitten_3($0)))
example_end

Sent: did you put your puzzle back together Adam ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|put-zero_3(pro:per|you_2,det:poss|your_4($1,n|puzzle_5($1)),$0),adv|back_6(adv|together_7($0))),$0))
example_end

Sent: Paul has never seen his face .
Sem: lambda $0_{r}.aux|have-3s_2(and(part|see-pastp_4(n:prop|paul_1,det:poss|his_5($1,n|face_6($1)),$0),adv|never_3($0)),$0)
example_end

Sent: Jocko 's face .
Sem: n:prop|jocko_1's($0,n|face_3($0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: no honey .
Sem: lambda $0_{r}.qn|no_1($0)
example_end

Sent: let 's put Jocko together .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(part|put-pastp_3(pro:obj|~us_2,n:prop|jocko_4,$1),adv|together_5($1)),$0)
example_end

Sent: and then we 'll look at some books .
Sem: lambda $0_{r}.mod|~will_4(and(and(cop|look_5(pro:sub|we_3,$0),adv:tem|then_2($0)),prep|at_6(qn|some_7($1,n|book-pl_8($1)),$0)),$0)
example_end

Sent: maybe Ursula brought some of Robin 's books .
Sem: lambda $0_{r}.and(v|bring-past_3(n:prop|ursula_2,qn|some_4(n:prop|robin_6's($1,n|book-pl_8($1))),$0),adv|maybe_1($0))
example_end

Sent: oh he only has half of his ear .
Sem: lambda $0_{r}.and(and(aux|have-3s_4(pro:sub|he_2,BARE($1,att(n|half_5($1),prep|of_6(det:poss|his_7($2,n|ear_8($2))))),$0),adv|only_3($0)),co|oh_1($0))
example_end

Sent: now he has two ears but no face .
Sem: lambda $0_{r}.and(v|have-3s_3(pro:sub|he_2,BARE($1,det:num|two_4(n|ear-pl_5($1))),$0),adv|now_1($0))
example_end

Sent: where 's a lobster ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|a_3($1,n|lobster_4($1)),$0))
example_end

Sent: Paul Adam is putting Jocko together .
Sem: lambda $0_{r}.aux|be-3s_3(and(part|put-presp_4(n:prop|adam_2_paul_1,n:prop|jocko_5,$0),adv|together_6($0)),$0)
example_end

Sent: then we can look at some of Robin 's books .
Sem: lambda $0_{r}.mod|can_3(and(and(cop|look_4(pro:sub|we_2,$0),adv:tem|then_1($0)),prep|at_5(qn|some_6(n:prop|robin_8's($1,n|book-pl_10($1))),$0)),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: what did Daddy say about throwing that ball Adam ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(n:prop|daddy_3,lambda $1_{r}.part|throw-presp_6($2,pro:dem|that_7($3,n|ball_8($3)),$1),$0),$0)
example_end

Sent: why are you taking him apart ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|take-presp_4(pro:per|you_3,pro:obj|him_5,$0),$1($0)),adv|apart_6($0)),$0)
example_end

Sent: yes he needs an ear .
Sem: lambda $0_{r}.and(v|need-3s_3(pro:sub|he_2,det:art|a_4($1,n|ear_5($1)),$0),co|yes_1($0))
example_end

Sent: he can 't talk yet he doesn 't have a mouth .
Sem: lambda $0_{r}.not(and(mod|can_2(and(v|talk_4(pro:sub|he_1,$0),adv|yet_5($0)),$0),not(mod|do_7(v|have_9(pro:sub|he_6,det:art|a_10($1,n|mouth_11($1)),$0),$0),$0)),$0)
example_end

Sent: he can 't see you because he doesn 't have what ?
Sem: lambda $0_{r}.Q(not(conj|because_6(not(mod|do_8(v|have_10(pro:sub|he_7,pro:int|what_11,$0),$0),$0),mod|can_2(v|see_4(pro:sub|he_1,pro:per|you_5,$0),$0)),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: guess you must have lost his eyes ?
Sem: lambda $0_{r}.Q(v|guess_1(you,lambda $1_{r}.aux|have_4(mod|must_3(part|lose-pastp_5(pro:per|you_2,det:poss|his_6($2,n|eye-pl_7($2)),$1),$1),$1),$0))
example_end

Sent: where are they ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-pres_2(pro:sub|they_3,$0),$1($0))
example_end

Sent: I don 't see them .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,pro:obj|them_5,$0),$0),$0)
example_end

Sent: you didn 't need your scissors did you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|need_4(pro:per|you_1,det:poss|your_5($1,n|scissors_6($1)),$0),$0),$0),mod|do-past_7(pro:per|you_8,$0)))
example_end

Sent: there they are .
Sem: lambda $0_{r}.adv|there_1(pro:sub|they_2,$0)
example_end

Sent: where were you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(pro:per|you_3,$0),$1($0))
example_end

Sent: can you tell her about your visit to the dentist ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|tell_3(pro:per|you_2,pro:obj|her_4,$0),prep|about_5(det:poss|your_6($1,att(n|visit_7($1),prep|to_8(det:art|the_9($2,n|dentist_10($2))))),$0)),$0))
example_end

Sent: is that your first time ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:rel|that_2,and(n|time_5(pro:rel|that_2,$0),adj|first_4(pro:rel|that_2,$0))))
example_end

Sent: what did the dentist say to you ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(and(co|say_5(det:art|the_3($1,n|dentist_4($1)),$2,$0),prep|to_6(pro:per|you_7,$0)),$0)
example_end

Sent: what did she tell you ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|tell_4(pro:sub|she_3,$1,pro:per|you_5,$0),$0)
example_end

Sent: that you had no what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|have-past_3(pro:per|you_2,$1,$0)
example_end

Sent: no cavities .
Sem: qn|no_1($0,n|cavity-pl_2($0))
example_end

Sent: that 's very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:dem|that_1,$0))
example_end

Sent: this is one of Robin 's favorites .
Sem: lambda $0_{r}.att(pro:indef|one_3(pro:dem|this_1,$0),prep|of_4(n:prop|robin_5's($1,n|favorite-pl_7($1))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: isn 't that a funny book ?
Sem: lambda $0_{r}.Q(not(det:art|a_4(det:dem|that_3,and(n|book_6(det:dem|that_3,$0),adj|fun-dn_5(det:dem|that_3,$0))),$0))
example_end

Sent: what was that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: and what lives in there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(n|life-pl_3($1,$0),prep|in_4(adv|there_5($0)))
example_end

Sent: what lives in that house ?
Sem: lambda $1_{e}.lambda $0_{r}.and(n|life-pl_2($1,$0),prep|in_3(pro:dem|that_4($2,n|house_5($2)),$0))
example_end

Sent: you have_to ask Ursula .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|ask_4(pro:per|you_1,$1),$0)
example_end

Sent: yes she said it was an airplane .
Sem: lambda $0_{r}.and(v|say-past_3(pro:sub|she_2,lambda $1_{r}.det:art|a_6(pro:per|it_4,n|airplane_7(pro:per|it_4,$1)),$0),co|yes_1($0))
example_end

Sent: that page is gone .
Sem: lambda $0_{r}.part|go-pastp_4(pro:dem|that_1($1,n|page_2($1)),$0)
example_end

Sent: that 's a rhinoceros .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|rhinoceros_4(pro:dem|that_1,$0))
example_end

Sent: were you coming to me ?
Sem: lambda $0_{r}.Q(cop|be-past_1(and(part|come-presp_3(pro:per|you_2,$0),prep|to_4(pro:obj|me_5,$0)),$0))
example_end

Sent: Paul would you like to see the book ?
Sem: lambda $0_{r}.Q(mod|will-cond_2(v|like_4(pro:per|you_3,lambda $1_{r}.v|see_6(pro:per|you_3,det:art|the_7($2,n|book_8($2)),$1),$0),$0))
example_end

Sent: seals and fish .
Sem: BARE($0,n|fish_3($0))
example_end

Sent: when you step on things you break them .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|break_7(pro:per|you_6,pro:obj|them_8,$0),and(and(v|step_3(pro:per|you_2,$0),$1($0)),prep|on_4(BARE($2,n|thing-pl_5($2)),$0)))
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: what does he sell ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(v|sell_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: what does he sell ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(v|sell_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: ice for boys and girls .
Sem: BARE($0,att(n|ice+cream_1($0),prep|for_2(BARE($1,n|girl-pl_5($1)))))
example_end

Sent: no I don 't think that 's a hippopotamus .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.det:art|a_8(pro:dem|that_6,n|hippopotamus_9(pro:dem|that_6,$1)),$0),$0),$0),co|no_1($0))
example_end

Sent: isn 't that a rhinoceros ?
Sem: lambda $0_{r}.Q(not(det:art|a_4(det:dem|that_3,n|rhinoceros_5(det:dem|that_3,$0)),$0))
example_end

Sent: why don 't you look at another one ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(cop|look_5(pro:per|you_4,$0),$1($0)),prep|at_6(qn|another_7($2,pro:indef|one_8($2)),$0)),$0),$0)
example_end

Sent: you 're a donkey ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,n|donkey_4(pro:per|you_1,$0)))
example_end

Sent: where 're you going with the wagon ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),prep|with_5(det:art|the_6($2,n|wagon_7($2)),$0)),$0)
example_end

Sent: because I 'm going to put the door on .
Sem: lambda $0_{r}.aux|~be_3(part|go-presp_4(pro:sub|i_2,lambda $1_{r}.and(v|put-zero_6(pro:sub|i_2,det:art|the_7($2,n|door_8($2)),$1),adv|on_9($1)),$0),$0)
example_end

Sent: oh Joe .
Sem: lambda $0_{r}.and(n:prop|joe_2($0),co|oh_1($0))
example_end

Sent: French Joe .
Sem: att(n:prop|joe_2,BARE($0,n:prop|french_1($0)))
example_end

Sent: I hope it doesn 't come out .
Sem: lambda $0_{r}.v|hope_2(pro:sub|i_1,lambda $1_{r}.not(mod|do_4(and(v|come_6(pro:per|it_3,$1),adv|out_7($1)),$1),$1),$0)
example_end

Sent: so they won 't fall out .
Sem: lambda $0_{r}.not(mod|will_3(and(and(v|fall_5(pro:sub|they_2,$0),co|so_1($0)),adv|out_6($0)),$0),$0)
example_end

Sent: that 's lumber ?
Sem: lambda $0_{r}.Q(n|lumber_3(pro:dem|that_1,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: that backs the dirt out ?
Sem: lambda $0_{r}.Q(and(v|back-3s_2(pro:rel|that_1,det:art|the_3($1,n|dirt_4($1)),$0),adv|out_5($0)))
example_end

Sent: oh it doesn 't go there ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(and(v|go_5(pro:per|it_2,$0),adv|there_6($0)),$0),$0),co|oh_1($0)))
example_end

Sent: where does it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: well I just picked it up off the floor .
Sem: lambda $0_{r}.and(and(and(and(v|pick-past_4(pro:sub|i_2,pro:per|it_5,$0),adv|just_3($0)),adv|up_6($0)),prep|off_7(det:art|the_8($1,n|floor_9($1)),$0)),co|well_1($0))
example_end

Sent: are they all named Joe ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(v|name-past_4(post|all_3($1,pro:sub|they_2($1)),n:prop|joe_5,$0),$0))
example_end

Sent: that 's what what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: oh it does ?
Sem: lambda $0_{r}.Q(and(mod|do-3s_3(pro:per|it_2,$0),co|oh_1($0)))
example_end

Sent: in that little tiny hole ?
Sem: Q(prep|in_1(pro:dem|that_2($0,and(adj|tiny_4($0),and(adj|little_3($0),n|hole_5($0))))))
example_end

Sent: oh what happens after it goes down there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(prep|after_4(and(v|go-3s_6(pro:per|it_5,$0),adv|down_7(adv|there_8($0))),v|happen-3s_3($1,$0)),co|oh_1($0))
example_end

Sent: for seeing ?
Sem: lambda $0_{r}.Q(part|see-presp_2(you,$0))
example_end

Sent: well give it to her .
Sem: lambda $0_{r}.and(and(v|give_2(you,pro:per|it_3,$0),prep|to_4(pro:obj|her_5,$0)),co|well_1($0))
example_end

Sent: you have_to look and see .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.cop|look_4(pro:per|you_1,$1),$0)
example_end

Sent: can you open the bag ?
Sem: lambda $0_{r}.Q(mod|can_1(v|open_3(pro:per|you_2,det:art|the_4($1,n|bag_5($1)),$0),$0))
example_end

Sent: what is he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: you don 't do that .
Sem: lambda $0_{r}.not(mod|do_2(v|do_4(pro:per|you_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: you have_to turn it .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|turn_4(pro:per|you_1,$1),$0)
example_end

Sent: oh yes if you put it down .
Sem: lambda $0_{r}.and(and(and(v|put-zero_5(pro:per|you_4,pro:per|it_6,$0),adv|down_7($0)),co|oh_1($0)),co|yes_2($0))
example_end

Sent: he 's walking isn 't he ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(part|walk-presp_3(pro:sub|he_1,$0),$0),not(cop|be_4(pro:sub|he_6,$0),$0)))
example_end

Sent: he doesn 't have one yet .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:sub|he_1,pro:indef|one_5,$0),adv|yet_6($0)),$0),$0)
example_end

Sent: we have_to ask permission first .
Sem: lambda $0_{r}.and(mod:aux|have_to_2(pro:sub|we_1,lambda $1_{r}.v|ask_4(pro:sub|we_1,$1),$0),adv|first_6($0))
example_end

Sent: now you blow through the hole .
Sem: lambda $0_{r}.and(and(v|blow_3(pro:per|you_2,$0),adv|now_1($0)),prep|through_4(det:art|the_5($1,n|hole_6($1)),$0))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: I don 't think they 'll go in there .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|~will_6(and(v|go_7(pro:sub|they_5,$1),prep|in_8(adv|there_9($1))),$1),$0),$0),$0)
example_end

Sent: what happened to it ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:per|it_4,$0))
example_end

Sent: blow very gently .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|very_2(adv|gentle-dadj_3($0)))
example_end

Sent: blow gently .
Sem: lambda $0_{r}.and(v|blow_1(you,$0),adv|gentle-dadj_2($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what happens when you catch them ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_2($1,$0),and(v|catch_5(pro:per|you_4,pro:obj|them_6,$0),$2($0)))
example_end

Sent: blow gently .
Sem: lambda $0_{r}.and(v|blow_1(you,$0),adv|gentle-dadj_2($0))
example_end

Sent: if you blow gently I think you 'll get more .
Sem: lambda $0_{r}.v|think_6(pro:sub|i_5,lambda $1_{r}.mod|~will_8(conj|if_1(and(v|blow_3(pro:per|you_2,$1),adv|gentle-dadj_4($1)),and(v|get_9(pro:per|you_7,$1),adv|more_10($1))),$1),$0)
example_end

Sent: don 't put it in your mouth .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|mouth_7($1)),$0)),$0),$0)
example_end

Sent: why don 't you hold it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|hold_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I didn 't see you .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,pro:per|you_5,$0),$0),$0)
example_end

Sent: did you ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:per|you_2,$0))
example_end

Sent: if you want to .
Sem: lambda $0_{r}.v|want_3(pro:per|you_2,$0)
example_end

Sent: no it didn 't go there .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|go_5(pro:per|it_2,$0),adv|there_6($0)),$0),$0),co|no_1($0))
example_end

Sent: blow it up in the air .
Sem: lambda $0_{r}.and(and(v|blow_1(you,pro:per|it_2,$0),adv|up_3($0)),prep|in_4(det:art|the_5($1,n|air_6($1)),$0))
example_end

Sent: he can see .
Sem: lambda $0_{r}.mod|can_2(v|see_3(pro:sub|he_1,$0),$0)
example_end

Sent: don 't put it in your mouth honey .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|mouth_7($1)),$0)),$0),$0)
example_end

Sent: because it was so pretty .
Sem: lambda $0_{r}.adv|so_4(adj|pretty_5(pro:per|it_2,$0))
example_end

Sent: don 't put it in your mouth honey .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|mouth_7($1)),$0)),$0),$0)
example_end

Sent: Adam we 'll have_to put it up if you put it in your mouth again .
Sem: lambda $0_{r}.mod|~will_3(mod:aux|have_to_4(pro:sub|we_2,lambda $1_{r}.v|put-zero_6(pro:sub|we_2,$1),$0),$0)
example_end

Sent: it doesn 't taste good does it .
Sem: lambda $0_{r}.and(not(mod|do_2(v|taste_4(pro:per|it_1,lambda $1_{r}.adj|good_5(pro:per|it_1,$1),$0),$0),$0),mod|do-3s_6(pro:per|it_7,$0))
example_end

Sent: Paul sees that one .
Sem: lambda $0_{r}.v|see-3s_2(n:prop|paul_1,pro:dem|that_3($1,pro:indef|one_4($1)),$0)
example_end

Sent: blow gently Adam .
Sem: lambda $0_{r}.and(v|blow_1(you,$0),adv|gentle-dadj_2($0))
example_end

Sent: it 's all_gone .
Sem: lambda $0_{r}.adj|all_gone_3(pro:per|it_1,$0)
example_end

Sent: d you have it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: no you put it in your mouth .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|mouth_7($1)),$0)),co|no_1($0))
example_end

Sent: what kind of gift ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|gift_4($2)))))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: what 's happening ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|happen-presp_3($1,$0),$0)
example_end

Sent: look at his feet .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|at_2(det:poss|his_3($1,n|foot-pl_4($1)),$0))
example_end

Sent: so his feet won 't get cold .
Sem: lambda $0_{r}.not(mod|will_4(and(v|get_6(det:poss|his_2($1,n|foot-pl_3($1)),lambda $2_{r}.adv|cold_7(det:poss|his_2($1,n|foot-pl_3($1)),$2),$0),co|so_1($0)),$0),$0)
example_end

Sent: you can use that ball for bowling .
Sem: lambda $0_{r}.mod|can_2(and(v|use_3(pro:per|you_1,pro:dem|that_4($1,n|ball_5($1)),$0),prep|for_6(BARE($2,n:gerund|bowl-presp_7($2)),$0)),$0)
example_end

Sent: well go see if it looks like that .
Sem: lambda $0_{r}.and(v|see_3(you,lambda $1_{r}.and(cop|look-3s_6(pro:per|it_5,$1),prep|like_7(pro:dem|that_8,$1)),$0),co|well_1($0))
example_end

Sent: because he likes to .
Sem: lambda $0_{r}.v|like-3s_3(pro:sub|he_2,$0)
example_end

Sent: why would you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: oh but he 's very talented .
Sem: lambda $0_{r}.and(adv|very_5(adj|talented_6(pro:sub|he_3,$0)),co|oh_1($0))
example_end

Sent: he can play two .
Sem: lambda $0_{r}.mod|can_2(and(v|play_3(pro:sub|he_1,$0),det:num|two_4($0)),$0)
example_end

Sent: oh you made a mistake ?
Sem: lambda $0_{r}.Q(and(v|make-past_3(pro:per|you_2,det:art|a_4($1,n|mistake_5($1)),$0),co|oh_1($0)))
example_end

Sent: how did you lose yourself ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|lose_4(pro:per|you_3,pro:refl|yourself_5,$0),$1($0)),$0)
example_end

Sent: why d you say Ursula 's words ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|say_4(pro:per|you_3,n:prop|ursula_5's($1,n|word-pl_7($1)),$0),$2($0)),$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: are they turning ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|turn-presp_3(pro:sub|they_2,$0),$0))
example_end

Sent: bowling pins .
Sem: BARE($0,and_comp(part|bowl-presp_1($0),n|pin-pl_2($0)))
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: no this is blue .
Sem: lambda $0_{r}.and(adj|blue_4(pro:dem|this_2,$0),qn|no_1($0))
example_end

Sent: what color is that ball in your hand ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4($2,att(n|ball_5($2),prep|in_6(det:poss|your_7($3,n|hand_8($3))))),n|color_2(pro:dem|that_4($2,att(n|ball_5($2),prep|in_6(det:poss|your_7($3,n|hand_8($3))))),$0))
example_end

Sent: yes I 'll bowl with you .
Sem: lambda $0_{r}.and(mod|~will_3(and(v|bowl_4(pro:sub|i_2,$0),prep|with_5(pro:per|you_6,$0)),$0),co|yes_1($0))
example_end

Sent: yes we knocked them all down .
Sem: lambda $0_{r}.and(and(v|knock-past_3(pro:sub|we_2,post|all_5($1,pro:obj|them_4($1)),$0),adv|down_6($0)),co|yes_1($0))
example_end

Sent: would it fit anywhere else ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_1(and(v|fit-zero_3(pro:per|it_2,$0),$1($0)),$0)
example_end

Sent: you put one out first .
Sem: lambda $0_{r}.and(and(v|put-zero_2(pro:per|you_1,pro:indef|one_3,$0),adv|out_4($0)),adv|first_5($0))
example_end

Sent: you have_to match it .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|match_4(pro:per|you_1,$1),$0)
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is it going to carry ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-3s_2(part|go-presp_4(pro:per|it_3,lambda $1_{r}.v|carry_6(pro:per|it_3,$2,$1),$0),$0)
example_end

Sent: I think that 's nice that you 're not crying .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.pro:rel|that_6(not(aux|~be_8(part|cry-presp_10(pro:per|you_7,$1),$1),$1),adj|nice_5(pro:dem|that_3,$1)),$0)
example_end

Sent: I was thinking of a funny story .
Sem: lambda $0_{r}.aux|be-past_2(and(part|think-presp_3(pro:sub|i_1,$0),prep|of_4(det:art|a_5($1,and(adj|fun-dn_6($1),n|story_7($1))),$0)),$0)
example_end

Sent: did you tell her about your visit to the pet shop ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|tell_3(pro:per|you_2,pro:obj|her_4,$0),prep|about_5(det:poss|your_6($1,att(n|visit_7($1),prep|to_8(det:art|the_9($2,and_comp(n|pet_10($2),n|shop_11($2)))))),$0)),$0))
example_end

Sent: what did you see at the pet shop Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|see_4(pro:per|you_3,$1,$0),prep|at_5(det:art|the_6($2,and_comp(n|pet_7($2),n|shop_8($2))),$0)),$0)
example_end

Sent: he 's giving them names .
Sem: lambda $0_{r}.aux|~be_2(part|give-presp_3(pro:sub|he_1,BARE($1,n|name-pl_5($1)),pro:obj|them_4,$0),$0)
example_end

Sent: only it didn 't have a mask over his eyes .
Sem: lambda $0_{r}.not(mod|do_3(and(and(v|have_5(pro:per|it_2,det:art|a_6($1,n|mask_7($1)),$0),adv|only_1($0)),adv|over_8(det:poss|his_9($2,n|eye-pl_10($2)),$0)),$0),$0)
example_end

Sent: yes you 're silly .
Sem: lambda $0_{r}.and(adj|silly_4(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: yes silly billy willy dilly .
Sem: lambda $0_{r}.and(wplay|dilly_5_willy_4($0),co|yes_1($0))
example_end

Sent: what is your name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_3($2,n|name_4($2)),$0)
example_end

Sent: did you see turtles ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|see_3(pro:per|you_2,BARE($1,n|turtle-pl_4($1)),$0),$0))
example_end

Sent: at the pet shop .
Sem: prep|at_1(det:art|the_2($0,and_comp(n|pet_3($0),n|shop_4($0))))
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: no you saw something else .
Sem: lambda $0_{r}.and(v|saw_3(pro:per|you_2,post|else_5(pro:indef|something_4),$0),co|no_1($0))
example_end

Sent: something in cages .
Sem: att(pro:indef|something_1,prep|in_2(BARE($0,n|cage-pl_3($0))))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: well nothing might happen .
Sem: lambda $0_{r}.and(mod|might_3(v|happen_4(pro:indef|nothing_2,$0),$0),co|well_1($0))
example_end

Sent: I just didn 't think you 'd like to have a kitty .
Sem: lambda $0_{r}.not(mod|do_3(and(v|think_5(pro:sub|i_1,lambda $1_{r}.mod|~genmod_7(v|like_8(pro:per|you_6,lambda $2_{r}.v|have_10(pro:per|you_6,det:art|a_11($3,n|kitty_12($3)),$2),$1),$1),$0),adv|just_2($0)),$0),$0)
example_end

Sent: they won 't fall out .
Sem: lambda $0_{r}.not(mod|will_2(and(v|fall_4(pro:sub|they_1,$0),adv|out_5($0)),$0),$0)
example_end

Sent: because the door isn 't wide enough .
Sem: lambda $0_{r}.not(adv|enough_7(adj|wide_6(det:art|the_2($1,n|door_3($1)),$0)),$0)
example_end

Sent: you ate the snake up ?
Sem: lambda $0_{r}.Q(and(v|eat-past_2(pro:per|you_1,det:art|the_3($1,n|snake_4($1)),$0),adv|up_5($0)))
example_end

Sent: was he good ?
Sem: lambda $0_{r}.Q(adj|good_3(pro:sub|he_2,$0))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: yes turtles crawl .
Sem: lambda $0_{r}.and(n|crawl_3(BARE($1,n|turtle-pl_2($1)),$0),co|yes_1($0))
example_end

Sent: yes snakes crawl .
Sem: lambda $0_{r}.and(n|crawl_3(BARE($1,n|snake-pl_2($1)),$0),co|yes_1($0))
example_end

Sent: I guess they walk yes .
Sem: lambda $0_{r}.and(v|guess_2(pro:sub|i_1,lambda $1_{r}.v|walk_4(pro:sub|they_3,$1),$0),co|yes_5($0))
example_end

Sent: I really don 't know Adam if you want to be so specific .
Sem: lambda $0_{r}.not(mod|do_3(and(v|know_5(pro:sub|i_1,lambda $1_{r}.v|want_9(pro:per|you_8,lambda $2_{r}.adv|so_12(adj|specific_13(pro:per|you_8,$2)),$1),$0),adv|real-dadj_2($0)),$0),$0)
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: that 's something from last time .
Sem: lambda $0_{r}.att(pro:indef|something_3(pro:dem|that_1,$0),prep|from_4(BARE($1,and(adj|last_5($1),n|time_6($1)))))
example_end

Sent: when you were playing upstairs .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-past_3(and(and(part|play-presp_4(pro:per|you_2,$0),$1($0)),adv|upstairs_5($0)),$0)
example_end

Sent: I don 't remember what was in it .
Sem: lambda $0_{r}.not(mod|do_2(v|remember_4(pro:sub|i_1,lambda $1_{r}.prep|in_7(pro:per|it_8,pro:int|what_5,$1),$0),$0),$0)
example_end

Sent: why don 't you let one of the Joes drive .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|let-zero_5(pro:per|you_4,lambda $1_{r}.n|drive_10(att(pro:indef|one_6,prep|of_7(det:art|the_8($2,n:prop|joes_9($2)))),$1),$0),$3($0)),$0),$0)
example_end

Sent: is this Joe ?
Sem: lambda $0_{r}.Q(n:prop|joe_3(pro:dem|this_2,$0))
example_end

Sent: oh this is terrific .
Sem: lambda $0_{r}.and(adj|terrific_4(pro:dem|this_2,$0),co|oh_1($0))
example_end

Sent: Joe terrific .
Sem: and(n:prop|joe_1,BARE($0,adj|terrific_2($0)))
example_end

Sent: he was in your truck .
Sem: lambda $0_{r}.prep|in_3(det:poss|your_4($1,n|truck_5($1)),pro:sub|he_1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: could he sit beside him ?
Sem: lambda $0_{r}.Q(mod|could_1(and(v|sit_3(pro:sub|he_2,$0),prep|beside_4(pro:obj|him_5,$0)),$0))
example_end

Sent: he can ride in something else .
Sem: lambda $0_{r}.mod|can_2(and(v|ride_3(pro:sub|he_1,$0),post|else_6(adv|in_4(pro:indef|something_5,$0))),$0)
example_end

Sent: it 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:per|it_1,$1(pro:per|it_1,$0))
example_end

Sent: was that another one getting some fire ?
Sem: lambda $0_{r}.Q(qn|another_3(pro:rel|that_2,pro:indef|one_4(pro:rel|that_2,$0)))
example_end

Sent: red street light .
Sem: BARE($0,and_comp(n|street_2($0),and(adj|red_1($0),n|light_3($0))))
example_end

Sent: you have_to stop .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|stop_4(pro:per|you_1,$1),$0)
example_end

Sent: green light you may go .
Sem: lambda $0_{r}.and(mod|may_4(v|go_5(pro:per|you_3,$0),$0),BARE($1,and_comp(n|green_1($1),adj|light_2($1))))
example_end

Sent: bring the can up to here .
Sem: lambda $0_{r}.and(v|bring_1(you,adv|up_4(det:art|the_2($1,n|can_3($1))),$0),prep|to_5(adv|here_6($0)))
example_end

Sent: the whole thing .
Sem: det:art|the_1($0,and(adj|whole_2($0),n|thing_3($0)))
example_end

Sent: blow gently now .
Sem: lambda $0_{r}.and(and(v|blow_1(you,$0),adv|gentle-dadj_2($0)),adv|now_3($0))
example_end

Sent: don 't put it in your mouth dear .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:per|it_4,$0),prep|in_5(det:poss|your_6($1,n|mouth_7($1)),$0)),$0),$0)
example_end

Sent: it 's not to eat .
Sem: lambda $0_{r}.not(cop|~be_2(v|eat_5(pro:per|it_1,$0),$0),$0)
example_end

Sent: can 't you tell the truth ?
Sem: lambda $0_{r}.Q(not(mod|can_1(v|tell_4(pro:per|you_3,det:art|the_5($1,n|truth_6($1)),$0),$0),$0))
example_end

Sent: no those are bowling pins .
Sem: lambda $0_{r}.and(and_comp(part|bowl-presp_4(det:dem|those_2,$0),n|pin-pl_5(det:dem|those_2,$0)),co|no_1($0))
example_end

Sent: no nothing goes in there .
Sem: lambda $0_{r}.and(and(v|go-3s_3(pro:indef|nothing_2,$0),adv|in_4(adv|there_5($0))),qn|no_1($0))
example_end

Sent: those are bowling pins .
Sem: lambda $0_{r}.and_comp(part|bowl-presp_3(det:dem|those_1,$0),n|pin-pl_4(det:dem|those_1,$0))
example_end

Sent: so who can see it ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_3(and(v|see_4($1,pro:per|it_5,$0),adv|so_1($0)),$0)
example_end

Sent: no I don 't need to see it .
Sem: lambda $0_{r}.and(not(mod|do_3(v|need_5(pro:sub|i_2,lambda $1_{r}.v|see_7(pro:sub|i_2,pro:per|it_8,$1),$0),$0),$0),co|no_1($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: we have_to put it up .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:sub|we_1,lambda $1_{r}.v|put-zero_4(pro:sub|we_1,$1),$0)
example_end

Sent: no you don 't need to play with the can right now .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|need_5(pro:per|you_2,lambda $1_{r}.and(n|play_7(pro:per|you_2,$1),prep|with_8(det:art|the_9($2,n|can_10($2)),$1)),$0),adv|right_11(adv|now_12($0))),$0),$0),co|no_1($0))
example_end

Sent: why d you want to put it in your mouth ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.and(v|put-zero_6(pro:per|you_3,pro:per|it_7,$1),prep|in_8(det:poss|your_9($2,n|mouth_10($2)),$1)),$0),$3($0)),$0)
example_end

Sent: oh he did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:sub|he_2,$0),co|oh_1($0))
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: now what happens ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_3($1,$0),adv|now_1($0))
example_end

Sent: a house ?
Sem: BARE($0,Q(det:art|a_1($1,n|house_2($1),$0)))
example_end

Sent: yes I think so .
Sem: lambda $0_{r}.and(and(v|think_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: he 'd like to get down on the floor and knock all your toys down .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:sub|he_1,lambda $1_{r}.and(and(and(v|knock_11(pro:sub|he_1,det:poss|your_13($2,qn|all_12($3,n|toy-pl_14($3),$2)),$1),adv|down_6($1)),prep|on_7(det:art|the_8($4,n|floor_9($4)),$1)),adv|down_15($1)),$0),$0)
example_end

Sent: isn 't that right Paul ?
Sem: lambda $0_{r}.Q(not(n|right_4(pro:dem|that_3,$0),$0))
example_end

Sent: stop that Paul .
Sem: lambda $0_{r}.n|stop_1(you,pro:rel|that_2,$0)
example_end

Sent: where 're they going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:sub|they_3,$0),$1($0)),$0)
example_end

Sent: oh that 's a nice little door .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and(and(n|door_7(pro:dem|that_2,$0),adj|nice_5(pro:dem|that_2,$0)),adj|little_6(pro:dem|that_2,$0))),co|oh_1($0))
example_end

Sent: they 've got what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~have_2(part|get-pastp_3(pro:sub|they_1,$1,$0),$0)
example_end

Sent: at their homes ?
Sem: Q(prep|at_1(det:poss|their_2($0,n|home-pl_3($0))))
example_end

Sent: oh they 're going in ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|go-presp_4(pro:sub|they_2,$0),adv|in_5($0)),$0),co|oh_1($0)))
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: fireman who ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,n|fire+man_1($2)),$0)
example_end

Sent: oh I don 't want you to knock because you might burn my house down .
Sem: lambda $0_{r}.and(not(conj|because_9(mod|might_11(and(v|burn_12(pro:per|you_10,det:poss|my_13($1,n|house_14($1)),$0),adv|down_15($0)),$0),mod|do_3(v|want_5(pro:sub|i_2,lambda $2_{r}.v|knock_8(pro:per|you_6,$2),$0),$0)),$0),co|oh_1($0))
example_end

Sent: oh alright .
Sem: lambda $0_{r}.and(co|alright_2($0),co|oh_1($0))
example_end

Sent: come in .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|in_2($0))
example_end

Sent: oh that was a fireman 's boy ?
Sem: lambda $0_{r}.Q(and(n|fire+man_5's'(pro:rel|that_2,n|boy_7(pro:rel|that_2,$0)),co|oh_1($0)))
example_end

Sent: well they weren 't built very well so they have be built again .
Sem: lambda $0_{r}.and(not(conj|so_8(cop|be_11(v|have_10(and(part|build-pastp_12(pro:sub|they_9,$0),adv|again_13($0)),$0),$0),aux|be_3(and(v|build-past_5(pro:sub|they_2,$0),adv|very_6(adv|well_7($0))),$0)),$0),co|well_1($0))
example_end

Sent: when the ladder gets up there ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(v|get-3s_4(det:art|the_2($1,n|ladder_3($1)),$0),$2($0)),prep|up_5(adv|there_6($0)))
example_end

Sent: a chimney ?
Sem: BARE($0,Q(det:art|a_1($1,n|chimney_2($1),$0)))
example_end

Sent: for their aunts ?
Sem: Q(prep|for_1(det:poss|their_2($0,n|aunt-pl_3($0))))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: oh it 's closed ?
Sem: lambda $0_{r}.Q(and(part|close-pastp_4(pro:per|it_2,$0),co|oh_1($0)))
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: he just woke up and had his bath and his breakfast and then he played .
Sem: lambda $0_{r}.coord|and_5(and(v|play-past_15(pro:sub|he_14,$0),adv:tem|then_13($0)),and(and(v|have-past_6(pro:sub|he_1,det:poss|his_7($1,n|bath_8($1)),$0),adv|just_2($0)),adv|up_4($0)))
example_end

Sent: so he 's tired .
Sem: lambda $0_{r}.and(part|tire-pastp_4(pro:sub|he_2,$0),adv|so_1($0))
example_end

Sent: he 's so tiny that he doesn 't really know that it 's not nice to knock your toys down .
Sem: lambda $0_{r}.pro:rel|that_5(not(mod|do_7(and(v|know_10(pro:sub|he_6,lambda $1_{r}.not(adj|nice_15(pro:per|it_12,lambda $2_{r}.and(v|knock_17(pro:per|it_12,det:poss|your_18($3,n|toy-pl_19($3)),$2),adv|down_20($2)),$1),$1),$0),adv|real-dadj_9($0)),$0),$0),adv|so_3(adj|tiny_4(pro:sub|he_1,$0)))
example_end

Sent: I 'm not going to tell you .
Sem: lambda $0_{r}.not(cop|~be_2(part|go-presp_4(pro:sub|i_1,lambda $1_{r}.v|tell_6(pro:sub|i_1,pro:per|you_7,$1),$0),$0),$0)
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: where did you go Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: is that the truth Adam ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,n|truth_4(pro:rel|that_2,$0)))
example_end

Sent: I don 't believe that 's the truth .
Sem: lambda $0_{r}.not(mod|do_2(v|believe_4(pro:sub|i_1,lambda $1_{r}.det:art|the_7(pro:dem|that_5,n|truth_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: a Dick Tracy car .
Sem: det:art|a_1($0,and_comp(n:prop|tracy_3_dick_2($0),n|car_4($0)))
example_end

Sent: what else did we see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:sub|we_4,$1,$0),$0)
example_end

Sent: where were you Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(pro:per|you_3,$0),$1($0))
example_end

Sent: can you tell her what else you saw ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_1(v|tell_3(pro:per|you_2,$1,pro:obj|her_4,$0),$0)
example_end

Sent: now that it 's all fixed what else did you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_9(pro:rel|that_2(adv|all_5(adv|now_1(part|fix-pastp_6(pro:per|it_3,$0))),v|see_11(pro:per|you_10,$1,$0)),$0)
example_end

Sent: he can 't walk .
Sem: lambda $0_{r}.not(mod|can_2(v|walk_4(pro:sub|he_1,$0),$0),$0)
example_end

Sent: I 'm not going to tell you but I know .
Sem: lambda $0_{r}.not(conj|but_8(v|know_10(pro:sub|i_9,$0),cop|~be_2(part|go-presp_4(pro:sub|i_1,lambda $1_{r}.v|tell_6(pro:sub|i_1,pro:per|you_7,$1),$0),$0)),$0)
example_end

Sent: I 'm not going to tell you .
Sem: lambda $0_{r}.not(cop|~be_2(part|go-presp_4(pro:sub|i_1,lambda $1_{r}.v|tell_6(pro:sub|i_1,pro:per|you_7,$1),$0),$0),$0)
example_end

Sent: I know .
Sem: lambda $0_{r}.v|know_2(pro:sub|i_1,$0)
example_end

Sent: what I saw yesterday .
Sem: lambda $1_{e}.lambda $0_{r}.and(v|see-past_3(pro:sub|i_2,$1,$0),adv:tem|yesterday_4($0))
example_end

Sent: and what else Adam ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: that 's all !
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: Paul saw some nice things .
Sem: lambda $0_{r}.v|see-past_2(n:prop|paul_1,qn|some_3($1,and(adj|nice_4($1),n|thing-pl_5($1))),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you don 't seem to remember .
Sem: lambda $0_{r}.not(mod|do_2(cop|seem_4(pro:per|you_1,lambda $1_{r}.v|remember_6(pro:per|you_1,$1),$0),$0),$0)
example_end

Sent: Paul what did you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: we went to the Boston Common .
Sem: lambda $0_{r}.and(v|go-past_2(pro:sub|we_1,$0),prep|to_3(det:art|the_4($1,and_comp(n:prop|boston_5($1),n:prop|common_6($1))),$0))
example_end

Sent: I 'm looking for a pencil .
Sem: lambda $0_{r}.aux|~be_2(and(part|look-presp_3(pro:sub|i_1,$0),prep|for_4(det:art|a_5($1,n|pencil_6($1)),$0)),$0)
example_end

Sent: I don 't have a pencil in there .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:sub|i_1,det:art|a_5($1,n|pencil_6($1)),$0),prep|in_7(adv|there_8($0))),$0),$0)
example_end

Sent: you want a pencil too ?
Sem: lambda $0_{r}.Q(and(v|want_2(pro:per|you_1,det:art|a_3($1,n|pencil_4($1)),$0),post|too_5($0)))
example_end

Sent: bring my purse .
Sem: lambda $0_{r}.v|bring_1(you,det:poss|my_2($1,n|purse_3($1)),$0)
example_end

Sent: let 's have something to read .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|have_3(pro:obj|~us_2,BARE($2,rel(pro:indef|something_4($2),lambda $3_{r}.v|read-zero_6(you,$3))),$1),$0)
example_end

Sent: I have something to read .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,BARE($1,rel(pro:indef|something_3($1),lambda $2_{r}.v|read-zero_5(you,$2))),$0)
example_end

Sent: shall we look at this ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(cop|look_3(pro:sub|we_2,$0),prep|at_4(pro:dem|this_5,$0)),$0))
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: because you didn 't eat your breakfast .
Sem: lambda $0_{r}.not(mod|do_3(v|eat_5(pro:per|you_2,det:poss|your_6($1,n|breakfast_7($1)),$0),$0),$0)
example_end

Sent: you don 't have_to go to bed again .
Sem: lambda $0_{r}.not(mod:aux|have_to_4(mod|do_2(and(and(v|go_5(pro:per|you_1,$0),prep|to_6(BARE($1,n|bed_7($1)),$0)),adv|again_8($0)),$0),$0),$0)
example_end

Sent: I think that 's enough .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.adv|enough_5(pro:dem|that_3,$1),$0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: d you have some things to hang up ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,qn|some_4($1,rel(n|thing-pl_5($1),lambda $2_{r}.and(v|hang_7(you,$2),adv|up_8($2)))),$0),$0))
example_end

Sent: are you all finished with that .
Sem: lambda $0_{r}.cop|be-pres_1(and(and(part|finish-pastp_4(pro:per|you_2,$0),adv|all_3($0)),prep|with_5(pro:dem|that_6,$0)),$0)
example_end

Sent: you haven 't even tried it yet .
Sem: lambda $0_{r}.not(aux|have_2(and(and(part|try-pastp_5(pro:per|you_1,pro:per|it_6,$0),adv|even_4($0)),adv|yet_7($0)),$0),$0)
example_end

Sent: d you have something to hang up ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,BARE($1,rel(pro:indef|something_4($1),lambda $2_{r}.and(v|hang_6(you,$2),adv|up_7($2)))),$0),$0))
example_end

Sent: oh that 's a clothes ?
Sem: lambda $0_{r}.Q(and(det:art|a_4(pro:dem|that_2,n|clothes+line_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: what 're you opening now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|open-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: you like what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|like_2(pro:per|you_1,$1,$0)
example_end

Sent: what about cheek ?
Sem: att(pro:int|what_1,prep|about_2(BARE($0,n|cheek_3($0))))
example_end

Sent: I think perhaps I can find some handkerchiefs .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|can_5(and(v|find_6(pro:sub|i_4,qn|some_7($2,n|handkerchief-pl_8($2)),$1),adv|perhaps_3($1)),$1),$0)
example_end

Sent: don 't step on Paul 's blanket .
Sem: lambda $0_{r}.not(mod|do_1(and(v|step_3(you,$0),prep|on_4(n:prop|paul_5's($1,n|blanket_7($1)),$0)),$0),$0)
example_end

Sent: where are you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|go-presp_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: careful of Paul .
Sem: BARE($0,co|careful_1($0))
example_end

Sent: you didn 't hang the socks up .
Sem: lambda $0_{r}.not(mod|do_2(and(v|hang_4(pro:per|you_1,det:art|the_5($1,n|sock-pl_6($1)),$0),adv|up_7($0)),$0),$0)
example_end

Sent: why don 't you hang it up by the heel .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(and(v|hang_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),adv|up_7($0)),prep|by_8(det:art|the_9($2,n|heel_10($2)),$0)),$0),$0)
example_end

Sent: this one ?
Sem: BARE($0,Q(pro:dem|this_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: well hang it by the toe .
Sem: lambda $0_{r}.and(and(v|hang_2(you,pro:per|it_3,$0),prep|by_4(det:art|the_5($1,n|toe_6($1)),$0)),co|well_1($0))
example_end

Sent: this is the toe .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,n|toe_4(pro:dem|this_1,$0))
example_end

Sent: are you putting all those away already ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(and(part|put-presp_3(pro:per|you_2,qn|all_4($1,pro:dem|those_5($1)),$0),adv|away_6($0)),adv|already_7($0)),$0))
example_end

Sent: you didn 't cook anything .
Sem: lambda $0_{r}.not(mod|do_2(v|cook_4(pro:per|you_1,pro:indef|anything_5,$0),$0),$0)
example_end

Sent: make some breakfast .
Sem: lambda $0_{r}.v|make_1(you,qn|some_2($1,n|breakfast_3($1)),$0)
example_end

Sent: that 's for a baby doll .
Sem: lambda $0_{r}.conj|for_3(det:art|a_4($1,and_comp(n|baby_5($1),n|doll_6($1))),pro:dem|that_1,$0)
example_end

Sent: yes when she cries .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(v|cry-3s_4(pro:sub|she_3,$0),$1($0)),co|yes_1($0))
example_end

Sent: d you have a doll ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,n|doll_5($1)),$0),$0))
example_end

Sent: maybe it 's in this bag Adam .
Sem: lambda $0_{r}.adv|maybe_1(prep|in_4(pro:dem|this_5($1,n|bag_6($1)),pro:per|it_2,$0))
example_end

Sent: what did you take ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|take_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what hurt you ?
Sem: lambda $1_{e}.lambda $0_{r}.v|hurt-zero_2($1,pro:per|you_3,$0)
example_end

Sent: careful Adam you may pull the ironing board down .
Sem: lambda $0_{r}.and(mod|may_4(and(v|pull_5(pro:per|you_3,det:art|the_6($1,and_comp(part|iron-presp_7($1),n|board_8($1))),$0),adv|down_9($0)),$0),and(BARE($2,co|careful_1($2)),n:prop|adam_2,$0))
example_end

Sent: don 't pull on it .
Sem: lambda $0_{r}.not(mod|do_1(and(v|pull_3(you,$0),prep|on_4(pro:per|it_5,$0)),$0),$0)
example_end

Sent: the iron might fall .
Sem: lambda $0_{r}.mod|might_3(v|fall_4(det:art|the_1($1,n|iron_2($1)),$0),$0)
example_end

Sent: then where will we tie it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will_3(and(and(v|tie_5(pro:sub|we_4,pro:per|it_6,$0),adv:tem|then_1($0)),$1($0)),$0)
example_end

Sent: no don 't pull like this .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|pull_4(you,$0),prep|like_5(pro:dem|this_6,$0)),$0),$0),co|no_1($0))
example_end

Sent: where will we put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will_2(and(v|put-zero_4(pro:sub|we_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: then you can 't hang anything .
Sem: lambda $0_{r}.not(mod|can_3(and(v|hang_5(pro:per|you_2,pro:indef|anything_6,$0),adv:tem|then_1($0)),$0),$0)
example_end

Sent: oh what would you do with it ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|will-cond_3(and(v|do_5(pro:per|you_4,$1,$0),prep|with_6(pro:per|it_7,$0)),$0),co|oh_1($0))
example_end

Sent: shake it ?
Sem: lambda $0_{r}.Q(v|shake_1(you,pro:per|it_2,$0))
example_end

Sent: oh maybe I 've got a sifter .
Sem: lambda $0_{r}.and(aux|~have_4(and(part|get-pastp_5(pro:sub|i_3,det:art|a_6($1,n|sift-dv_7($1)),$0),adv|maybe_2($0)),$0),co|oh_1($0))
example_end

Sent: I just put something in it .
Sem: lambda $0_{r}.and(and(v|put-zero_3(pro:sub|i_1,pro:indef|something_4,$0),adv|just_2($0)),prep|in_5(pro:per|it_6,$0))
example_end

Sent: does that one have a top ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|have_4(pro:dem|that_2($1,pro:indef|one_3($1)),det:art|a_5($2,n|top_6($2)),$0),$0))
example_end

Sent: what d you think you cook in here ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(v|cook_6(pro:per|you_5,pro:int|what_1,$1),adv|in_7(adv|here_8($1))),$0),$0))
example_end

Sent: strong master .
Sem: BARE($0,and(adj|strong_1($0),n|master_2($0)))
example_end

Sent: d you mean strong man ?
Sem: lambda $0_{r}.Q(mod|do_1(adj|mean_3(pro:per|you_2,BARE($1,and(adj|strong_4($1),n|man_5($1))),$0),$0))
example_end

Sent: is that the circus strong man ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,and(and_comp(n|circus_4(pro:rel|that_2,$0),n|man_6(pro:rel|that_2,$0)),adj|strong_5(pro:rel|that_2,$0))))
example_end

Sent: where is he ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:sub|he_3,$0),$1($0))
example_end

Sent: no don 't break him apart .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|break_4(you,pro:obj|him_5,$0),adv|apart_6($0)),$0),$0),co|no_1($0))
example_end

Sent: you broke that thing off ?
Sem: lambda $0_{r}.Q(and(v|break-past_2(pro:per|you_1,pro:dem|that_3($1,n|thing_4($1)),$0),adv|off_5($0)))
example_end

Sent: what d you call that thing ?
Sem: lambda $0_{r}.mod|do_2(v|call_4(pro:per|you_3,pro:dem|that_5($1,n|thing_6($1)),$0),$0)
example_end

Sent: strong man .
Sem: BARE($0,and(adj|strong_1($0),n|man_2($0)))
example_end

Sent: oh what would hurt him ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|will-cond_3(v|hurt-zero_4($1,pro:obj|him_5,$0),$0),co|oh_1($0))
example_end

Sent: don 't sit on him .
Sem: lambda $0_{r}.not(mod|do_1(and(v|sit_3(you,$0),prep|on_4(pro:obj|him_5,$0)),$0),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: he 's the ring master .
Sem: lambda $0_{r}.det:art|the_3(pro:sub|he_1,and_comp(n|ring_4(pro:sub|he_1,$0),n|master_5(pro:sub|he_1,$0)))
example_end

Sent: he 's going to hit the lion .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|he_1,lambda $1_{r}.v|hit-zero_5(pro:sub|he_1,det:art|the_6($2,n|lion_7($2)),$1),$0),$0)
example_end

Sent: does he have skates on ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|have_3(pro:sub|he_2,BARE($1,n|skate-pl_4($1)),$0),adv|on_5($0)),$0))
example_end

Sent: no that 's not a sword that 's a knife .
Sem: lambda $0_{r}.and(not(and(det:art|a_5(pro:dem|that_2,n|sword_6(pro:dem|that_2,$0)),det:art|a_9(pro:rel|that_7,n|knife_10(pro:rel|that_7,$0))),$0),co|no_1($0))
example_end

Sent: Joshua had a sword .
Sem: lambda $0_{r}.v|have-past_2(n:prop|joshua_1,det:art|a_3($1,n|sword_4($1)),$0)
example_end

Sent: she doesn 't have a sword .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|she_1,det:art|a_5($1,n|sword_6($1)),$0),$0),$0)
example_end

Sent: you can 't fight with her .
Sem: lambda $0_{r}.not(mod|can_2(and(v|fight_4(pro:per|you_1,$0),prep|with_5(pro:obj|her_6,$0)),$0),$0)
example_end

Sent: you 're folding your sword ?
Sem: lambda $0_{r}.Q(aux|~be_2(on|folding_3(pro:per|you_1,det:poss|your_4($1,n|sword_5($1)),$0),$0))
example_end

Sent: it 's suppertime ?
Sem: lambda $0_{r}.Q(n|supper+time_3(pro:per|it_1,$0))
example_end

Sent: what did you cook ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|cook_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you could set the table .
Sem: lambda $0_{r}.mod|could_2(v|set-zero_3(pro:per|you_1,det:art|the_4($1,n|table_5($1)),$0),$0)
example_end

Sent: you 're going to warm it up ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|warm_5(pro:per|you_1,pro:per|it_6,$1),adv|up_7($1)),$0),$0))
example_end

Sent: that 's a spoon ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|that_1,n|spoon_4(pro:dem|that_1,$0)))
example_end

Sent: oh this is a spoon .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|this_2,n|spoon_5(pro:dem|this_2,$0)),co|oh_1($0))
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: and I have_to eat from the pan ?
Sem: lambda $0_{r}.Q(mod:aux|have_to_3(and(v|eat_4(pro:sub|i_2,$0),prep|from_5(det:art|the_6($1,n|pan_7($1)),$0)),$0))
example_end

Sent: what do I have_to eat Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod:aux|have_to_4(mod|do_2(v|eat_5(pro:sub|i_3,$1,$0),$0),$0)
example_end

Sent: just sugar ?
Sem: BARE($0,Q(adv|just_1(BARE($1,n|sugar_2($1)),$0)))
example_end

Sent: you put some tea in my sugar ?
Sem: lambda $0_{r}.Q(and(v|put-zero_2(pro:per|you_1,qn|some_3($1,n|tea_4($1)),$0),prep|in_5(det:poss|my_6($2,n|sugar_7($2)),$0)))
example_end

Sent: Adam what do I have_to eat ?
Sem: lambda $1_{e}.lambda $0_{r}.mod:aux|have_to_5(mod|do_3(v|eat_6(pro:sub|i_4,$1,$0),$0),$0)
example_end

Sent: Adam 's eating chicken ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|eat-presp_3(n:prop|adam_1,BARE($1,n|chicken_4($1)),$0),$0))
example_end

Sent: what is Urs having ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|have-presp_4(n:prop|ursula_3,$1,$0),$0)
example_end

Sent: oh you don 't like yours ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|like_5(pro:per|you_2,pro:poss|yours_6,$0),$0),$0),co|oh_1($0)))
example_end

Sent: maybe it needs some more sugar .
Sem: lambda $0_{r}.and(v|need-3s_3(pro:per|it_2,qn|some_4($1,and(qn|more_5($1),n|sugar_6($1))),$0),adv|maybe_1($0))
example_end

Sent: would you like to go ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|go_5(pro:per|you_2,$1),$0),$0))
example_end

Sent: what color is that one ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4($2,pro:indef|one_5($2)),n|color_2(pro:dem|that_4($2,pro:indef|one_5($2)),$0))
example_end

Sent: what color is this one ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4($2,pro:indef|one_5($2)),n|color_2(pro:dem|this_4($2,pro:indef|one_5($2)),$0))
example_end

Sent: just pretend .
Sem: lambda $0_{r}.and(adj|pretend_2(you,$0),adv|just_1($0))
example_end

Sent: you will put what in it ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_2(and(v|put-zero_3(pro:per|you_1,$1,$0),prep|in_5(pro:per|it_6,$0)),$0)
example_end

Sent: this is ice ?
Sem: lambda $0_{r}.Q(n|ice+cream_3(pro:dem|this_1,$0))
example_end

Sent: what kind of ice ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|ice+cream_4($2)))))
example_end

Sent: sugar ice ?
Sem: BARE($0,Q(and_comp(n|sugar_1($0),n|ice+cream_2($0))))
example_end

Sent: that 's too sweet .
Sem: lambda $0_{r}.adv|too_3(co|sweet_4(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a pipe ?
Sem: BARE($0,Q(det:art|a_1($1,n|pipe_2($1),$0)))
example_end

Sent: a cigarette ?
Sem: BARE($0,Q(det:art|a_1($1,n|cigarette_2($1),$0)))
example_end

Sent: you 're going where ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_3(pro:per|you_1,$0),$1($0)),$0)
example_end

Sent: hang the line up ?
Sem: lambda $0_{r}.Q(and(v|hang_1(you,det:art|the_2($1,v|line_3($1)),$0),adv|up_4($0)))
example_end

Sent: where shell I tie it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.n|shell_2(and(v|tie_4(pro:sub|i_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: that 's too bad .
Sem: lambda $0_{r}.adv|too_3(adj|bad_4(pro:dem|that_1,$0))
example_end

Sent: you 'll have_to pay Urs for that .
Sem: lambda $0_{r}.mod:aux|have_to_3(mod|~will_2(and(v|pay_4(pro:per|you_1,n:prop|ursula_5,$0),prep|for_6(pro:dem|that_7,$0)),$0),$0)
example_end

Sent: don 't you have some money ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_4(pro:per|you_3,qn|some_5($1,n|money_6($1)),$0),$0),$0))
example_end

Sent: someone threw your money away ?
Sem: lambda $0_{r}.Q(and(v|throw-past_2(pro:indef|someone_1,det:poss|your_3($1,n|money_4($1)),$0),adv|away_5($0)))
example_end

Sent: Adam I 'll go downstairs with you .
Sem: lambda $0_{r}.mod|~will_3(and(and(v|go_4(pro:sub|i_2,$0),adv|downstairs_5($0)),prep|with_6(pro:per|you_7,$0)),$0)
example_end

Sent: I 'll fix your clothes while you 're gone .
Sem: lambda $0_{r}.conj|while_6(cop|~be_8(part|go-pastp_9(pro:per|you_7,$0),$0),mod|~will_2(v|fix_3(pro:sub|i_1,det:poss|your_4($1,n|clothes+line_5($1)),$0),$0))
example_end

Sent: ask her to excuse us please .
Sem: lambda $0_{r}.and(v|ask_1(you,lambda $1_{r}.v|excuse_4(pro:obj|her_2,pro:obj|us_5,$1),$0),co|please_6($0))
example_end

Sent: how d you fix that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|fix_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: oh d you want me to hang some clothes ?
Sem: lambda $0_{r}.Q(and(v|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.v|hang_7(pro:obj|me_5,qn|some_8($2,n:pt|clothes_9($2)),$1),$0),$0),co|oh_1($0)))
example_end

Sent: could I hang a sock ?
Sem: lambda $0_{r}.Q(mod|could_1(v|hang_3(pro:sub|i_2,det:art|a_4($1,n|sock_5($1)),$0),$0))
example_end

Sent: I need a clothes .
Sem: lambda $0_{r}.v|need_2(pro:sub|i_1,det:art|a_3($1,n|clothes+pin_4($1)),$0)
example_end

Sent: d you want that one ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,pro:dem|that_4($1,pro:indef|one_5($1)),$0),$0))
example_end

Sent: is it dry ?
Sem: lambda $0_{r}.Q(v|dry_3(pro:per|it_2,$0))
example_end

Sent: you must leave it there till it 's dry .
Sem: lambda $0_{r}.v|till_6(adj|dry_9(pro:per|it_7,$0),mod|must_2(and(v|leave_3(pro:per|you_1,pro:per|it_4,$0),adv|there_5($0)),$0))
example_end

Sent: you took all the laundry down ?
Sem: lambda $0_{r}.Q(and(v|take-past_2(pro:per|you_1,qn|all_3(det:art|the_4($1,n|laundry_5($1))),$0),adv|down_6($0)))
example_end

Sent: the little golden a b c you read it to me .
Sem: lambda $0_{r}.and(and(v|read-zero_8(pro:per|you_7,pro:per|it_9,$0),prep|to_10(pro:obj|me_11,$0)),det:art|the_1($1,and_comp(and_comp(n:let|a_4($1),n:let|b_5($1)),and(adj|golden_3($1),and(adj|little_2($1),n:let|c_6($1))))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: playing ball .
Sem: lambda $0_{r}.part|play-presp_1(you,BARE($1,n|ball_2($1)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: boat mhm .
Sem: lambda $0_{r}.and(n|boat_1($0),co|yes_2($0))
example_end

Sent: that 's a boy isn 't it ?
Sem: lambda $0_{r}.Q(and(det:art|a_3(pro:dem|that_1,n|boy_4(pro:dem|that_1,$0)),not(cop|be_5(pro:per|it_7,$0),$0)))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: that is a butterfly .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|butter+fly_4(pro:dem|that_1,$0))
example_end

Sent: not s .
Sem: not(BARE($0,n:let|s_2($0)))
example_end

Sent: that is a c .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n:let|c_4(pro:dem|that_1,$0))
example_end

Sent: a clown .
Sem: det:art|a_1($0,n|clown_2($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: oh I don 't think that says growl .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.v|say-3s_7(pro:rel|that_6,BARE($2,n|growl_8($2)),$1),$0),$0),$0),co|oh_1($0))
example_end

Sent: I think that says meow .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|say-3s_4(pro:rel|that_3,BARE($2,on|meow_5($2)),$1),$0)
example_end

Sent: a cat .
Sem: det:art|a_1($0,n|cat_2($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: yes a boot .
Sem: lambda $0_{r}.and(det:art|a_2($1,n|boot_3($1),$0),co|yes_1($0))
example_end

Sent: is that a pony ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|pony_4(pro:rel|that_2,$0)))
example_end

Sent: I 've never seen a pony that looked like that .
Sem: lambda $0_{r}.aux|~have_2(and(part|see-pastp_4(pro:sub|i_1,det:art|a_5($1,n|pony_6($1)),$0),adv|never_3($0)),$0)
example_end

Sent: where 's a seal ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|seal_4($1)),$0),$2($0))
example_end

Sent: Celia from North Carolina .
Sem: att(n:prop|celia_1,prep|from_2(BARE($0,and_comp(n:prop|north_3($0),n:prop|carolina_4($0)))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a little dog .
Sem: det:art|a_1($0,and(adj|little_2($0),n|dog_3($0)))
example_end

Sent: they 're not dry ?
Sem: lambda $0_{r}.Q(not(v|dry_4(pro:sub|they_1,$0),$0))
example_end

Sent: this is a g .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n:let|g_4(pro:dem|this_1,$0))
example_end

Sent: d you know this letter ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,pro:dem|this_4($1,n|letter_5($1)),$0),$0))
example_end

Sent: I don 't think the f can get in there .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_7(and(v|get_8(det:art|the_5($2,n:let|f_6($2)),$1),adv|in_9(adv|there_10($1))),$1),$0),$0),$0)
example_end

Sent: up a ladder ?
Sem: Q(prep|up_1(det:art|a_2($0,n|ladder_3($0))))
example_end

Sent: and water ?
Sem: BARE($0,Q(n|water_2($0)))
example_end

Sent: did you tell her about the fire station that we visited ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|tell_3(pro:per|you_2,pro:obj|her_4,$0),prep|about_5(det:art|the_6($1,and_comp(n|fire_7($1),n|station_8($1))),$0)),$0))
example_end

Sent: and you rang the bell .
Sem: lambda $0_{r}.v|ring-past_3(pro:per|you_2,det:art|the_4($1,n|bell_5($1)),$0)
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: I really don 't know why the farmer 's running .
Sem: lambda $0_{r}.not(mod|do_3(and(v|know_5(pro:sub|i_1,lambda $1_{r}.poss|~s_9(and(part|run-presp_10(det:art|the_7($2,n|farm_8($2)),$1),adv:int|why_6($1)),$1),$0),adv|real-dadj_2($0)),$0),$0)
example_end

Sent: perhaps to get the hay in before it rains .
Sem: lambda $0_{r}.and(and(and(v|get_3(you,det:art|the_4($1,n|hay_5($1)),$0),adv|perhaps_1($0)),adv|in_6($0)),and(v|rain-3s_9(you,$0),prep|before_7($0)))
example_end

Sent: what kind of flower is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|flower_4($2)))))
example_end

Sent: I guess it 's a daisy .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:per|it_3,n|daisy_6(pro:per|it_3,$1)),$0)
example_end

Sent: you kept moving .
Sem: lambda $0_{r}.n:gerund|move-presp_3(pro:per|you_1,$0)
example_end

Sent: I only tied one shoe .
Sem: lambda $0_{r}.and(v|tie-past_3(pro:sub|i_1,BARE($1,det:num|one_4(n|shoe_5($1))),$0),adv|only_2($0))
example_end

Sent: what about this Adam ?
Sem: att(pro:int|what_1,prep|about_2(pro:dem|this_3))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: we made one .
Sem: lambda $0_{r}.v|make-past_2(pro:sub|we_1,pro:indef|one_3,$0)
example_end

Sent: what did we call it ?
Sem: lambda $0_{r}.mod|do-past_2(v|call_4(pro:sub|we_3,pro:per|it_5,$0),$0)
example_end

Sent: a giraffe .
Sem: det:art|a_1($0,n|giraffe_2($0))
example_end

Sent: a tall giraffe .
Sem: det:art|a_1($0,and(adj|tall_2($0),n|giraffe_3($0)))
example_end

Sent: no that 's not Chicken_Little .
Sem: lambda $0_{r}.and(not(n:prop|chicken_little_5(pro:dem|that_2,$0),$0),co|no_1($0))
example_end

Sent: these don 't say quack .
Sem: lambda $0_{r}.not(mod|do_2(v|say_4(pro:dem|these_1,BARE($1,n|quack_5($1)),$0),$0),$0)
example_end

Sent: you don 't have anything to pour it in .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,BARE($1,rel(pro:indef|anything_5($1),lambda $2_{r}.and(v|pour_7(_,pro:per|it_8,$2),adv|in_9($2)))),$0),$0),$0)
example_end

Sent: what are you putting in my coffee ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|put-presp_4(pro:per|you_3,$1,$0),prep|in_5(det:poss|my_6($2,n|coffee_7($2)),$0)),$0)
example_end

Sent: I don 't want meat in my coffee !
Sem: lambda $0_{r}.not(mod|do_2(and(v|want_4(pro:sub|i_1,BARE($1,n|meat_5($1)),$0),prep|in_6(det:poss|my_7($2,n|coffee_8($2)),$0)),$0),$0)
example_end

Sent: tea and coffee both ?
Sem: BARE($0,Q(post|both_4(BARE($1,n|coffee_3($1)),$0)))
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's a horse .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|horse_4(pro:dem|that_1,$0))
example_end

Sent: and what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,$0)
example_end

Sent: ice cone .
Sem: BARE($0,and_comp(n|ice+cream_1($0),n|cone_2($0)))
example_end

Sent: an iceberg .
Sem: det:art|a_1($0,n|iceberg_2($0))
example_end

Sent: no iceberg .
Sem: qn|no_1($0,n|iceberg_2($0))
example_end

Sent: a hatso a fatso .
Sem: and(det:art|a_1($0,wplay|hatso_2($0)),det:art|a_3($1,n|fatso_4($1)))
example_end

Sent: this is j .
Sem: lambda $0_{r}.n:let|j_3(pro:dem|this_1,$0)
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: a pumpkin bird ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|pumpkin_2($1),n|bird_3($1)),$0)))
example_end

Sent: what kind of bird is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|bird_4($2)))))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: thank_you for the coffee .
Sem: BARE($0,att(co|thank_you_1($0),prep|for_2(det:art|the_3($1,n|coffee_4($1)))))
example_end

Sent: an owl .
Sem: det:art|a_1($0,n|owl_2($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you call them overalls .
Sem: lambda $0_{r}.v|call_2(pro:per|you_1,BARE($1,n:pt|overalls_4($1)),pro:obj|them_3,$0)
example_end

Sent: because they are .
Sem: lambda $0_{r}.cop|be-pres_3(pro:sub|they_2,$0)
example_end

Sent: why d you say poor piggie ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|say_4(pro:per|you_3,BARE($1,and(adj|poor_5($1),n|pig-dim_6($1))),$0),$2($0)),$0)
example_end

Sent: why would you knock that tree down ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(and(n|knock_4(pro:per|you_3,pro:rel|that_5($1,n|tree_6($1)),$0),$2($0)),adv|down_7($0)),$0)
example_end

Sent: he will laugh ?
Sem: lambda $0_{r}.Q(mod|will_2(v|laugh_3(pro:sub|he_1,$0),$0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: that 's a plum .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|plum_4(pro:dem|that_1,$0))
example_end

Sent: a plum .
Sem: det:art|a_1($0,n|plum_2($0))
example_end

Sent: what kind of plum ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|plum_4($2)))))
example_end

Sent: well she 's just standing there I guess .
Sem: lambda $0_{r}.and(and(cop|~be_3(and(and(on|standing_5(pro:sub|she_2,$0),adv|just_4($0)),adv|there_6($0)),$0),v|guess_8(pro:sub|i_7,$0)),co|well_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: this is a raccoon .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n|raccoon_4(pro:dem|this_1,$0))
example_end

Sent: a raccoon .
Sem: det:art|a_1($0,n|raccoon_2($0))
example_end

Sent: a raft .
Sem: det:art|a_1($0,n|raft_2($0))
example_end

Sent: because they 're on the river .
Sem: lambda $0_{r}.prep|on_4(det:art|the_5($1,n|river_6($1)),pro:sub|they_2,$0)
example_end

Sent: no they 're on the raft .
Sem: lambda $0_{r}.and(adv|on_4(det:art|the_5($1,n|raft_6($1)),pro:sub|they_2,$0),co|no_1($0))
example_end

Sent: they can 't swim .
Sem: lambda $0_{r}.not(mod|can_2(v|swim_4(pro:sub|they_1,$0),$0),$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: that 's a raven .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|raven_4(pro:dem|that_1,$0))
example_end

Sent: oh Adam I see something that you 've never seen before .
Sem: lambda $0_{r}.and(v|see_4(pro:sub|i_3,pro:indef|something_5,$0),co|oh_1($0))
example_end

Sent: but what 's happening ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_3(part|happen-presp_4($1,$0),$0)
example_end

Sent: who 's talking ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|talk-presp_3($1,$0),$0)
example_end

Sent: have you ever seen a turtle talk on a telephone ?
Sem: lambda $0_{r}.Q(aux|have_1(and(part|see-pastp_4(pro:per|you_2,lambda $1_{r}.and(n|talk_7(det:art|a_5($2,n|turtle_6($2)),$1),prep|on_8(det:art|a_9($3,n|telephone_10($3)),$1)),$0),adv|ever_3($0)),$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: yes that 's a funny page .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,and(n|page_6(pro:dem|that_2,$0),adj|fun-dn_5(pro:dem|that_2,$0))),co|yes_1($0))
example_end

Sent: that 's a truck .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|truck_4(pro:dem|that_1,$0))
example_end

Sent: yes a dump truck .
Sem: lambda $0_{r}.and(det:art|a_2($1,and_comp(n|dump_3($1),n|truck_4($1)),$0),co|yes_1($0))
example_end

Sent: a train ?
Sem: BARE($0,Q(det:art|a_1($1,n|train_2($1),$0)))
example_end

Sent: a train ?
Sem: BARE($0,Q(det:art|a_1($1,n|train_2($1),$0)))
example_end

Sent: he 's going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|he_1,lambda $1_{r}.v|do_5(pro:sub|he_1,$2,$1),$0),$0)
example_end

Sent: fall on a spoon ?
Sem: lambda $0_{r}.Q(and(n|fall_1(you,$0),prep|on_2(det:art|a_3($1,n|spoon_4($1)),$0)))
example_end

Sent: if he 's not careful .
Sem: lambda $0_{r}.not(co|careful_5(pro:sub|he_2,$0),$0)
example_end

Sent: what is that spoon ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,n|spoon_4($2)),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a squirrel .
Sem: det:art|a_1($0,n|squirrel_2($0))
example_end

Sent: d you know what 's happening on this page ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.aux|~be_5(and(part|happen-presp_6(pro:int|what_4,$1),prep|on_7(pro:dem|this_8($2,n|page_9($2)),$1)),$1),$0),$0))
example_end

Sent: oh you mean the wagon is going to fall down and hit the water melon ?
Sem: lambda $0_{r}.Q(and(v|mean_3(pro:per|you_2,lambda $1_{r}.aux|be-3s_6(part|go-presp_7(det:art|the_4($2,n|wagon_5($2)),lambda $3_{r}.and(v|hit-zero_12(det:art|the_4($2,n|wagon_5($2)),det:art|the_13($4,and_comp(n|water_14($4),n|melon_15($4))),$3),adv|down_10($3)),$1),$1),$0),co|oh_1($0)))
example_end

Sent: who is this sitting up here ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: no it looks like a fox .
Sem: lambda $0_{r}.and(and(cop|look-3s_3(pro:per|it_2,$0),prep|like_4(det:art|a_5($1,n|fox_6($1)),$0)),co|no_1($0))
example_end

Sent: that 's a wolf .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|wolf_4(pro:dem|that_1,$0))
example_end

Sent: that 's a yak .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|yak_4(pro:dem|that_1,$0))
example_end

Sent: no he 's playing the xylophone .
Sem: lambda $0_{r}.and(aux|~be_3(part|play-presp_4(pro:sub|he_2,det:art|the_5($1,n|xylophone_6($1)),$0),$0),co|no_1($0))
example_end

Sent: maybe he 's looking at his music .
Sem: lambda $0_{r}.aux|~be_3(and(and(part|look-presp_4(pro:sub|he_2,$0),adv|maybe_1($0)),prep|at_5(det:poss|his_6($1,n|music_7($1)),$0)),$0)
example_end

Sent: you can 't see the music .
Sem: lambda $0_{r}.not(mod|can_2(v|see_4(pro:per|you_1,det:art|the_5($1,n|music_6($1)),$0),$0),$0)
example_end

Sent: it must be over here .
Sem: lambda $0_{r}.mod|must_2(and(cop|be_3(pro:per|it_1,$0),prep|over_4(adv|here_5($0))),$0)
example_end

Sent: they didn 't put it on the picture .
Sem: lambda $0_{r}.not(mod|do_2(and(v|put-zero_4(pro:sub|they_1,pro:per|it_5,$0),prep|on_6(det:art|the_7($1,n|picture_8($1)),$0)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: x to nine .
Sem: BARE($0,n:let|x_1($0))
example_end

Sent: you mean this ladder ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,pro:dem|this_3($1,n|ladder_4($1)),$0))
example_end

Sent: what place d you think that is Adam ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_3(v|think_5(pro:per|you_4,lambda $1_{r}.$2(pro:dem|that_6,n|place_2(pro:dem|that_6,$1)),$0),$0)
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: what place d you think that is ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_3(v|think_5(pro:per|you_4,lambda $1_{r}.$2(pro:dem|that_6,n|place_2(pro:dem|that_6,$1)),$0),$0)
example_end

Sent: where d you think you 'd find all those animals ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.mod|~genmod_6(v|find_7(pro:per|you_5,qn|all_8(pro:dem|those_9($2,n|animal-pl_10($2))),$1),$1),$0),$3($0)),$0)
example_end

Sent: where 's Mr Pickle 's park ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(n:prop|pickle_4_mr_3's($1,n|park_6($1)),$0),$2($0))
example_end

Sent: where they sell balloons ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(v|sell_3(pro:sub|they_2,BARE($1,n|balloon-pl_4($1)),$0),$2($0))
example_end

Sent: where is that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:dem|that_3,$0),$1($0))
example_end

Sent: d you know the name of the park ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,det:art|the_4($1,att(n|name_5($1),prep|of_6(det:art|the_7($2,n|park_8($2))))),$0),$0))
example_end

Sent: I have an idea .
Sem: lambda $0_{r}.v|have_2(pro:sub|i_1,det:art|a_3($1,n|idea_4($1)),$0)
example_end

Sent: if I had to go to one place and find all those animals where would it be ?
Sem: lambda $4_{<r,t>}.lambda $0_{r}.mod|will-cond_15(conj|if_1(v|have-past_3(pro:sub|i_2,lambda $1_{r}.and(v|find_10(pro:sub|i_2,qn|all_11(pro:dem|those_12($2,n|animal-pl_13($2))),$1),prep|to_6(BARE($3,det:num|one_7(n|place_8($3))),$1)),$0),and(cop|be_17(pro:per|it_16,$0),$4($0))),$0)
example_end

Sent: in a trash can ?
Sem: Q(prep|in_1(det:art|a_2($0,and_comp(n|trash_3($0),mod|can_4($0)))))
example_end

Sent: yes that 's saggy baggy elephant .
Sem: lambda $0_{r}.and(and_comp(and_comp(adj|sag-dv_4(pro:dem|that_2,$0),adj|bag-dn_5(pro:dem|that_2,$0)),n|elephant_6(pro:dem|that_2,$0)),co|yes_1($0))
example_end

Sent: no he must be one of those big elephants .
Sem: lambda $0_{r}.and(mod|must_3(att(pro:indef|one_5(pro:sub|he_2,$0),prep|of_6(pro:dem|those_7($1,and(adj|big_8($1),n|elephant-pl_9($1))))),$0),co|no_1($0))
example_end

Sent: they 're not wet .
Sem: lambda $0_{r}.not(part|wet-pastp_4(pro:sub|they_1,$0),$0)
example_end

Sent: I can 't wear that anymore .
Sem: lambda $0_{r}.not(mod|can_2(and(v|wear_4(pro:sub|i_1,pro:rel|that_5,$0),adv|anymore_6($0)),$0),$0)
example_end

Sent: you better cut that down ?
Sem: lambda $0_{r}.Q(and(and(v|cut-zero_3(pro:per|you_1,pro:dem|that_4,$0),adv|good-cp_2($0)),adv|down_5($0)))
example_end

Sent: why would you cut the elephant ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|cut-zero_4(pro:per|you_3,det:art|the_5($1,n|elephant_6($1)),$0),$2($0)),$0)
example_end

Sent: the window .
Sem: det:art|the_1($0,n|window_2($0))
example_end

Sent: where d you have a wonderful baby ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,det:art|a_5($1,and(adj|wonder-full_6($1),n|baby_7($1))),$0),$2($0)),$0)
example_end

Sent: daisy oh .
Sem: lambda $0_{r}.and(n|daisy_1($0),co|oh_2($0))
example_end

Sent: on your napkin ?
Sem: Q(prep|on_1(det:poss|your_2($0,n|napkin_3($0))))
example_end

Sent: this is a story about an old woman who lived in a shoe .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,att(n|story_4(pro:dem|this_1,$0),prep|about_5(det:art|a_6($1,and(adj|old_7($1),n|woman_8($1))))))
example_end

Sent: oh you got some cheese .
Sem: lambda $0_{r}.and(v|get-past_3(pro:per|you_2,qn|some_4($1,n|cheese_5($1)),$0),co|oh_1($0))
example_end

Sent: or what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: a bird carriage ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|bird_2($1),n|carriage_3($1)),$0)))
example_end

Sent: a lobster .
Sem: det:art|a_1($0,n|lobster_2($0))
example_end

Sent: that 's not a lobster .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|lobster_5(pro:dem|that_1,$0)),$0)
example_end

Sent: it 's a crab .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|crab_4(pro:per|it_1,$0))
example_end

Sent: you sound like Donald_Duck .
Sem: lambda $0_{r}.and(v|sound_2(pro:per|you_1,$0),conj|like_3(n:prop|donald_duck_4,$0))
example_end

Sent: d you have it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: who took it ?
Sem: lambda $1_{e}.lambda $0_{r}.v|take-past_2($1,pro:per|it_3,$0)
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: I like to play with the children .
Sem: lambda $0_{r}.v|like_2(pro:sub|i_1,lambda $1_{r}.and(v|play_4(pro:sub|i_1,$1),prep|with_5(det:art|the_6($2,n|child-pl_7($2)),$1)),$0)
example_end

Sent: you 're a big child .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,and(n|child_5(pro:per|you_1,$0),adj|big_4(pro:per|you_1,$0)))
example_end

Sent: what has Celia got ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|have-3s_2(v|get-past_4(n:prop|celia_3,$1,$0),$0)
example_end

Sent: what has Celia got ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|have-3s_2(v|get-past_4(n:prop|celia_3,$1,$0),$0)
example_end

Sent: chop down ?
Sem: lambda $0_{r}.Q(and(n|chop_1(you,$0),adv|down_2($0)))
example_end

Sent: are you taking them down ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(and(part|take-presp_3(pro:per|you_2,pro:obj|them_4,$0),adv|down_5($0)),$0))
example_end

Sent: turn a somersault .
Sem: lambda $0_{r}.v|turn_1(you,det:art|a_2($1,n|somersault_3($1)),$0)
example_end

Sent: turning a somersault .
Sem: lambda $0_{r}.part|turn-presp_1(you,det:art|a_2($1,n|somersault_3($1)),$0)
example_end

Sent: she 's standing on her hands .
Sem: lambda $0_{r}.aux|~be_2(and(on|standing_3(pro:sub|she_1,$0),prep|on_4(det:poss|her_5($1,n|hand-pl_6($1)),$0)),$0)
example_end

Sent: she like to play that way .
Sem: lambda $0_{r}.v|like_2(pro:sub|she_1,lambda $1_{r}.v|play_4(pro:sub|she_1,pro:dem|that_5($2,n|way_6($2)),$1),$0)
example_end

Sent: that means fun jolly .
Sem: lambda $0_{r}.v|mean-3s_2(pro:rel|that_1,BARE($1,adj|fun_3($1)),$0)
example_end

Sent: jolly means happy .
Sem: lambda $0_{r}.n:pt|means_2(BARE($1,adj|jolly_1($1)),BARE($2,adj|happy_3($2)),$0)
example_end

Sent: so it will be nice and pretty .
Sem: lambda $0_{r}.and(mod|will_3(adv|pretty_7(pro:per|it_2,$0),$0),co|so_1($0))
example_end

Sent: paint brush .
Sem: BARE($0,and_comp(n|paint_1($0),n|brush_2($0)))
example_end

Sent: he 's a little boy who 's painting .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|he_1,and(n|boy_5(pro:sub|he_1,$0),adj|little_4(pro:sub|he_1,$0)))
example_end

Sent: because he likes to paint .
Sem: lambda $0_{r}.v|like-3s_3(pro:sub|he_2,lambda $1_{r}.v|paint_5(pro:sub|he_2,$1),$0)
example_end

Sent: because it 's fun .
Sem: lambda $0_{r}.adj|fun_4(pro:per|it_2,$0)
example_end

Sent: and snowballing what ?
Sem: lambda $1_{e}.lambda $0_{r}.part|snow+ball_2(you,$1,$0)
example_end

Sent: they didn 't cry at all did they ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|cry_4(pro:sub|they_1,$0),prep|at_5(BARE($1,qn|all_6($1)),$0)),$0),$0),mod|do-past_7(pro:sub|they_8,$0)))
example_end

Sent: what did you get ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|get_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: tell you a story ?
Sem: lambda $0_{r}.Q(v|tell_1(you,det:art|a_3($1,n|story_4($1)),pro:per|you_2,$0))
example_end

Sent: is that your favorite story ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:rel|that_2,and(n|story_5(pro:rel|that_2,$0),adj|favorite_4(pro:rel|that_2,$0))))
example_end

Sent: why don 't you do your puzzle ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|do_5(pro:per|you_4,det:poss|your_6($1,n|puzzle_7($1)),$0),$2($0)),$0),$0)
example_end

Sent: you do your puzzle .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,det:poss|your_3($1,n|puzzle_4($1)),$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: well no that 's a window .
Sem: lambda $0_{r}.and(and(det:art|a_5(pro:dem|that_3,n|window_6(pro:dem|that_3,$0)),co|well_1($0)),co|no_2($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a lobster .
Sem: det:art|a_1($0,n|lobster_2($0))
example_end

Sent: I don 't think that 's a lobster .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|a_7(pro:dem|that_5,n|lobster_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: a clothes .
Sem: det:art|a_1($0,n|clothes+pin_2($0))
example_end

Sent: I 'll come and do it .
Sem: lambda $0_{r}.mod|~will_2(v|do_5(pro:sub|i_1,pro:per|it_6,$0),$0)
example_end

Sent: your Mommy will bring yours Adam .
Sem: lambda $0_{r}.mod|will_3(v|bring_4(det:poss|your_1($1,n:prop|mommy_2($1)),pro:poss|yours_5,$0),$0)
example_end

Sent: you eat there on the tray .
Sem: lambda $0_{r}.and(and(v|eat_2(pro:per|you_1,$0),adv|there_3($0)),prep|on_4(det:art|the_5($1,n|tray_6($1)),$0))
example_end

Sent: it 's good .
Sem: lambda $0_{r}.adj|good_3(pro:per|it_1,$0)
example_end

Sent: Adam what do you want ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_3(v|want_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: you have cheese on your plate ?
Sem: lambda $0_{r}.Q(and(v|have_2(pro:per|you_1,BARE($1,n|cheese_3($1)),$0),prep|on_4(det:poss|your_5($2,n|plate_6($2)),$0)))
example_end

Sent: Adam sit down .
Sem: lambda $0_{r}.and(v|sit_2(you,$0),adv|down_3($0))
example_end

Sent: that pineapple juice is so sweet .
Sem: lambda $0_{r}.adv|so_5(adj|sweet_6(pro:dem|that_1($1,and_comp(n|pineapple_2($1),n|juice_3($1))),$0))
example_end

Sent: is that your favorite ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:rel|that_2,n|favorite_4(pro:rel|that_2,$0)))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: they look like night sticks .
Sem: lambda $0_{r}.and(cop|look_2(pro:sub|they_1,$0),co|like_3(BARE($1,and_comp(n|night_4($1),n|stick-pl_5($1))),$0))
example_end

Sent: the kind the policeman carry .
Sem: det:art|the_1($0,adj|kind_2($0))
example_end

Sent: baseball bat ?
Sem: BARE($0,Q(and_comp(n|baseball_1($0),n|bat_2($0))))
example_end

Sent: in the face ?
Sem: Q(prep|in_1(det:art|the_2($0,n|face_3($0))))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: you don 't run with a baseball bat .
Sem: lambda $0_{r}.not(mod|do_2(and(v|run_4(pro:per|you_1,$0),prep|with_5(det:art|a_6($1,and_comp(n|baseball_7($1),n|bat_8($1))),$0)),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I thought you were going to eat the cheese .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.aux|be-past_4(part|go-presp_5(pro:per|you_3,lambda $2_{r}.v|eat_7(pro:per|you_3,det:art|the_8($3,n|cheese_9($3)),$2),$1),$1),$0)
example_end

Sent: oh no I don 't like to fight .
Sem: lambda $0_{r}.and(and(not(mod|do_4(v|like_6(pro:sub|i_3,lambda $1_{r}.v|fight_8(pro:sub|i_3,$1),$0),$0),$0),co|oh_1($0)),co|no_2($0))
example_end

Sent: my hand is cold .
Sem: lambda $0_{r}.adv|cold_4(det:poss|my_1($1,n|hand_2($1)),$0)
example_end

Sent: did you finish the puzzle ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|finish_3(pro:per|you_2,det:art|the_4($1,n|puzzle_5($1)),$0),$0))
example_end

Sent: you stay here with Urs .
Sem: lambda $0_{r}.and(and(n|stay_2(pro:per|you_1,$0),adv|here_3($0)),prep|with_4(n:prop|ursula_5,$0))
example_end

Sent: Adam can you say package ?
Sem: lambda $0_{r}.Q(mod|can_2(v|say_4(pro:per|you_3,BARE($1,n|package_5($1)),$0),$0))
example_end

Sent: well go sit down .
Sem: lambda $0_{r}.and(and(v|sit_3(you,$0),adv|down_4($0)),co|well_1($0))
example_end

Sent: Adam come back here .
Sem: lambda $0_{r}.and(v|come_2(you,$0),adv|back_3(adv|here_4($0)))
example_end

Sent: d you have_to go ?
Sem: lambda $0_{r}.Q(mod:aux|have_to_3(mod|do_1(v|go_4(pro:per|you_2,$0),$0),$0))
example_end

Sent: they are tied .
Sem: lambda $0_{r}.aux|be-pres_2(part|tie-pastp_3(pro:sub|they_1,$0),$0)
example_end

Sent: who are you asking Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|ask-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what did you ask me ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|ask_4(pro:per|you_3,$1,pro:obj|me_5,$0),$0)
example_end

Sent: at the pillow station ?
Sem: Q(prep|at_1(det:art|the_2($0,and_comp(n|pillow_3($0),n|station_4($0)))))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: would you give me one of your crackers please ?
Sem: lambda $0_{r}.Q(and(mod|will-cond_1(v|give_3(pro:per|you_2,att(pro:indef|one_5,prep|of_6(det:poss|your_7($1,n|cracker-pl_8($1)))),pro:obj|me_4,$0),$0),co|please_9($0)))
example_end

Sent: they 're going to fall off the line .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|they_1,lambda $1_{r}.and(v|fall_5(pro:sub|they_1,$1),prep|off_6(det:art|the_7($2,n|line_8($2)),$1)),$0),$0)
example_end

Sent: isn 't that a shirt that 's hanging on the line ?
Sem: lambda $0_{r}.Q(not(det:art|a_4(det:dem|that_3,n|shirt_5(det:dem|that_3,$0)),$0))
example_end

Sent: Urs would you like more coffee ?
Sem: lambda $0_{r}.Q(mod|will-cond_2(v|like_4(pro:per|you_3,BARE($1,and(qn|more_5($1),n|coffee_6($1))),$0),$0))
example_end

Sent: you don 't like coffee .
Sem: lambda $0_{r}.not(mod|do_2(v|like_4(pro:per|you_1,BARE($1,n|coffee_5($1)),$0),$0),$0)
example_end

Sent: in Adam 's house ?
Sem: Q(prep|in_1(n:prop|adam_2's($0,n|house_4($0))))
example_end

Sent: where is Adam 's house ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(n:prop|adam_3's($1,n|house_5($1)),$0),$2($0))
example_end

Sent: it 's turned out ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|turn-pastp_3(pro:per|it_1,$0),adv|out_4($0)),$0))
example_end

Sent: how did your house get turned out ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(part|turn-pastp_6(_,det:poss|your_3($1,n|house_4($1)),$0),$2($0)),adv|out_7($0))
example_end

Sent: are you doing the twist ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|do-presp_3(pro:per|you_2,det:art|the_4($1,n|twist_5($1)),$0),$0))
example_end

Sent: you 've got your shirt on ?
Sem: lambda $0_{r}.Q(aux|~have_2(and(part|get-pastp_3(pro:per|you_1,det:poss|your_4($1,n|shirt_5($1)),$0),adv|on_6($0)),$0))
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: it 's not hanging ?
Sem: lambda $0_{r}.Q(not(cop|~be_2(part|hang-presp_4(pro:per|it_1,$0),$0),$0))
example_end

Sent: it 's not hanging on the line .
Sem: lambda $0_{r}.not(cop|~be_2(and(part|hang-presp_4(pro:per|it_1,$0),prep|on_5(det:art|the_6($1,n|line_7($1)),$0)),$0),$0)
example_end

Sent: shall I drink your pineapple juice ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|drink_3(pro:sub|i_2,det:poss|your_4($1,and_comp(n|pineapple_5($1),n|juice_6($1))),$0),$0))
example_end

Sent: and go for a ride !
Sem: lambda $0_{r}.and(v|go_2(you,$0),prep|for_3(det:art|a_4($1,n|ride_5($1)),$0))
example_end

Sent: d you really have dreams ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_4(pro:per|you_2,BARE($1,n|dream-pl_5($1)),$0),adv|real-dadj_3($0)),$0))
example_end

Sent: what 're dreams ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(BARE($2,n|dream-pl_3($2)),$0)
example_end

Sent: yes if it 's dirty than it can 't be cleaned .
Sem: lambda $0_{r}.and(not(aux|be_10(mod|can_8(conj|if_2(v|dirty_5(pro:per|it_3,$0),part|clean-pastp_11(pro:per|it_7,$0)),$0),$0),$0),co|yes_1($0))
example_end

Sent: Adam will you say one two three four ?
Sem: lambda $0_{r}.Q(mod|will_2(v|say_4(pro:per|you_3,BARE($1,det:num|one_5($1)),$0),$0))
example_end

Sent: you say it .
Sem: lambda $0_{r}.v|say_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: something 's sticking out on the tape recorder ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(and(part|stick-presp_3(pro:indef|something_1,$0),adv|out_4($0)),prep|on_5(det:art|the_6($1,and_comp(n|tape_7($1),n|record-dv_8($1))),$0)),$0))
example_end

Sent: do you have a Harvard shirt on ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|have_3(pro:per|you_2,det:art|a_4($1,and_comp(n:prop|harvard_5($1),n|shirt_6($1))),$0),adv|on_7($0)),$0))
example_end

Sent: oh the dresser is hurting your head .
Sem: lambda $0_{r}.and(aux|be-3s_4(part|hurt-presp_5(det:art|the_2($1,n|dresser_3($1)),det:poss|your_6($2,n|head_7($2)),$0),$0),co|oh_1($0))
example_end

Sent: why are you putting your head on the dresser ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|put-presp_4(pro:per|you_3,det:poss|your_5($1,n|head_6($1)),$0),$2($0)),prep|on_7(det:art|the_8($3,n|dresser_9($3)),$0)),$0)
example_end

Sent: does it still hurt you ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(and(v|hurt-zero_4(pro:per|it_2,pro:per|you_5,$0),adv|still_3($0)),$0))
example_end

Sent: Adam maybe you can use these .
Sem: lambda $0_{r}.mod|can_4(and(v|use_5(pro:per|you_3,pro:dem|these_6,$0),adv|maybe_2($0)),$0)
example_end

Sent: anything else ?
Sem: BARE($0,Q(post|else_2(pro:indef|anything_1,$0)))
example_end

Sent: would you get your handkerchief please ?
Sem: lambda $0_{r}.Q(and(mod|will-cond_1(v|get_3(pro:per|you_2,det:poss|your_4($1,n|handkerchief_5($1)),$0),$0),co|please_6($0)))
example_end

Sent: did it have a lion in it ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|have_3(pro:per|it_2,det:art|a_4($1,n|lion_5($1)),$0),prep|in_6(pro:per|it_7,$0)),$0))
example_end

Sent: did it have a scarecrow in it ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|have_3(pro:per|it_2,det:art|a_4($1,n|scare+crow_5($1)),$0),prep|in_6(pro:per|it_7,$0)),$0))
example_end

Sent: did it have a wizard in it ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|have_3(pro:per|it_2,det:art|a_4($1,n|wizard_5($1)),$0),prep|in_6(pro:per|it_7,$0)),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: it 's glued on there isn 't it ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(and(part|glue-pastp_3(pro:per|it_1,$0),prep|on_4(adv|there_5($0))),$0),not(cop|be_6(pro:per|it_8,$0),$0)))
example_end

Sent: d you know why those people wanted to go see the wizard ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,lambda $1_{r}.and(v|want-past_7(pro:dem|those_5($2,n|person-pl_6($2)),lambda $3_{r}.v|see_10(pro:dem|those_5($2,n|person-pl_6($2)),det:art|the_11($4,n|wizard_12($4)),$3),$1),adv:int|why_4($1)),$0),$0))
example_end

Sent: they each wanted the wizard to do something .
Sem: lambda $0_{r}.v|want-past_3(qn|each_2($1,pro:sub|they_1($1)),lambda $2_{r}.v|do_7(det:art|the_4($3,n|wizard_5($3)),pro:indef|something_8,$2),$0)
example_end

Sent: d you know what the lion wanted ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_1(v|know_3(pro:per|you_2,$1,$0),$0)
example_end

Sent: handle it very gently .
Sem: lambda $0_{r}.and(v|handle_1(you,pro:per|it_2,$0),adv|very_3(adv|gentle-dadj_4($0)))
example_end

Sent: you can open one end .
Sem: lambda $0_{r}.mod|can_2(v|open_3(pro:per|you_1,BARE($1,det:num|one_4(n|end_5($1))),$0),$0)
example_end

Sent: yes you open it .
Sem: lambda $0_{r}.and(v|open_3(pro:per|you_2,pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: attach rubber .
Sem: lambda $0_{r}.v|attach_1(you,BARE($1,n|rubber_2($1)),$0)
example_end

Sent: we have_to attach it to this little hook .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:sub|we_1,lambda $1_{r}.v|attach_4(pro:sub|we_1,$1),$0)
example_end

Sent: I 'm taking out the tail part .
Sem: lambda $0_{r}.aux|~be_2(and(part|take-presp_3(pro:sub|i_1,det:art|the_5($1,and_comp(n|tail_6($1),n|part_7($1))),$0),prep|out_4($0)),$0)
example_end

Sent: I think you can take this piece out too .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.mod|can_4(and(and(v|take_5(pro:per|you_3,pro:dem|this_6($2,n|piece_7($2)),$1),adv|out_8($1)),adv|too_9($1)),$1),$0)
example_end

Sent: alright Adam .
Sem: lambda $0_{r}.co|alright_1($0)
example_end

Sent: take this piece off very carefully .
Sem: lambda $0_{r}.and(and(v|take_1(you,pro:dem|this_2($1,n|piece_3($1)),$0),adv|off_4($0)),adv|very_5(adv|care-dadj_6($0)))
example_end

Sent: these we put into here .
Sem: lambda $0_{r}.and(v|put-zero_3(pro:sub|we_2,pro:dem|these_1,$0),prep|into_4(adv|here_5($0)))
example_end

Sent: this is the wing .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|this_1,n|wing_4(pro:dem|this_1,$0))
example_end

Sent: and another wing .
Sem: qn|another_2($0,n|wing_3($0))
example_end

Sent: I 'm taking the end off .
Sem: lambda $0_{r}.aux|~be_2(and(part|take-presp_3(pro:sub|i_1,det:art|the_4($1,n|end_5($1)),$0),adv|off_6($0)),$0)
example_end

Sent: then they can attach by themselves .
Sem: lambda $0_{r}.mod|can_3(and(and(v|attach_4(pro:sub|they_2,$0),adv:tem|then_1($0)),prep|by_5(pro:refl|themselves_6,$0)),$0)
example_end

Sent: we 're putting this clip onto the stick so it will go like an airplane .
Sem: lambda $0_{r}.co|so_9(mod|will_11(and(v|go_12(pro:per|it_10,$0),prep|like_13(det:art|a_14($1,n|airplane_15($1)),$0)),$0),aux|~be_2(and(part|put-presp_3(pro:sub|we_1,pro:dem|this_4($2,n|clip_5($2)),$0),prep|onto_6(det:art|the_7($3,n|stick_8($3)),$0)),$0))
example_end

Sent: it 's not easy .
Sem: lambda $0_{r}.not(adj|ease-dn_4(pro:per|it_1,$0),$0)
example_end

Sent: no it 's not so easy .
Sem: lambda $0_{r}.and(not(adv|so_5(adj|ease-dn_6(pro:per|it_2,$0)),$0),co|no_1($0))
example_end

Sent: now you turn the propeller many times .
Sem: lambda $0_{r}.and(and(v|turn_3(pro:per|you_2,det:art|the_4($1,n|propel-dv_5($1)),$0),adv|now_1($0)),and(qn|many_6($0),n|time-pl_7($0)))
example_end

Sent: okay let 's try it .
Sem: lambda $0_{r}.and(v:obj|let_2(you,lambda $1_{r}.v|try_4(pro:obj|~us_3,pro:per|it_5,$1),$0),co|okay_1($0))
example_end

Sent: you try it .
Sem: lambda $0_{r}.v|try_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: now hold it up in the air and let go .
Sem: lambda $0_{r}.and(and(and(v|let-zero_9_go_10(you,pro:per|it_3,$0),adv|now_1($0)),adv|up_4($0)),prep|in_5(det:art|the_6($1,n|air_7($1)),$0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: why don 't you leave it together ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|leave_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),adv|together_7($0)),$0),$0)
example_end

Sent: Paul Adam 's talking to you .
Sem: lambda $0_{r}.aux|~be_3(and(part|talk-presp_4(n:prop|adam_2,$0),prep|to_5(pro:per|you_6,$0)),$0)
example_end

Sent: do it more until it 's tight .
Sem: lambda $0_{r}.conj|until_4(adj|tight_7(pro:per|it_5,$0),and(mod|do_1(you,pro:per|it_2,$0),adv|more_3($0)))
example_end

Sent: no it doesn 't have wheels .
Sem: lambda $0_{r}.and(not(mod|do_3(v|have_5(pro:per|it_2,BARE($1,n|wheel-pl_6($1)),$0),$0),$0),co|no_1($0))
example_end

Sent: well it 's not a regular airplane .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:per|it_2,and(n|airplane_7(pro:per|it_2,$0),adj|regular_6(pro:per|it_2,$0))),$0),co|well_1($0))
example_end

Sent: see Paul .
Sem: lambda $0_{r}.v|see_1(you,n:prop|paul_2,$0)
example_end

Sent: he didn 't give me anything .
Sem: lambda $0_{r}.not(mod|do_2(v|give_4(pro:sub|he_1,pro:indef|anything_6,pro:obj|me_5,$0),$0),$0)
example_end

Sent: I took some paper from him .
Sem: lambda $0_{r}.and(v|take-past_2(pro:sub|i_1,qn|some_3($1,n|paper_4($1)),$0),prep|from_5(pro:obj|him_6,$0))
example_end

Sent: I took it from him .
Sem: lambda $0_{r}.and(v|take-past_2(pro:sub|i_1,pro:per|it_3,$0),prep|from_4(pro:obj|him_5,$0))
example_end

Sent: the tail .
Sem: det:art|the_1($0,n|tail_2($0))
example_end

Sent: the rudder .
Sem: det:art|the_1($0,n|rudder_2($0))
example_end

Sent: which part don 't you like ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.not(mod|do_3(co|like_6(pro:per|you_5,$1($2,adj|part_2($2)),$0),$0),$0)
example_end

Sent: you can have it straight .
Sem: lambda $0_{r}.mod|can_2(aux|have_3(pro:per|you_1,lambda $1_{r}.adv|straight_5(pro:per|it_4,$1),$0),$0)
example_end

Sent: that makes it fly .
Sem: lambda $0_{r}.v|make-3s_2(pro:rel|that_1,lambda $1_{r}.v|fly_4(pro:per|it_3,$1),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: well don 't hold the rubber band .
Sem: lambda $0_{r}.and(not(mod|do_2(v|hold_4(you,det:art|the_5($1,and_comp(n|rubber_6($1),n|band_7($1))),$0),$0),$0),co|well_1($0))
example_end

Sent: because then you keep it from turning .
Sem: lambda $0_{r}.and(v|keep_4(pro:per|you_3,lambda $1_{r}.n:gerund|turn-presp_7(pro:per|it_5,$1),$0),adv:tem|then_2($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: well he likes it but he doesn 't know how to handle it carefully .
Sem: lambda $0_{r}.and(and(v|like-3s_3(pro:sub|he_2,pro:per|it_4,$0),not(mod|do_7(v|know_9(pro:sub|he_6,lambda $1_{r}.and(and(v|handle_12(_,pro:per|it_13,$1),adv:int|how_10($1)),adv|care-dadj_14($1)),$0),$0),$0)),co|well_1($0))
example_end

Sent: you aren 't holding the rubber band are you ?
Sem: lambda $0_{r}.Q(and(not(aux|be_2(part|hold-presp_4(pro:per|you_1,det:art|the_5($1,and_comp(n|rubber_6($1),n|band_7($1))),$0),$0),$0),cop|be-pres_8(pro:per|you_9,$0)))
example_end

Sent: it turns too .
Sem: lambda $0_{r}.and(v|turn-3s_2(pro:per|it_1,$0),post|too_3($0))
example_end

Sent: see how the band is being twisted ?
Sem: lambda $0_{r}.Q(v|see_1(you,lambda $1_{r}.aux|be-presp_6(aux|be-3s_5(and(part|twist-pastp_7(det:art|the_3($2,n|band_4($2)),$1),adv:int|how_2($1)),$1),$1),$0))
example_end

Sent: the wings don 't turn do they ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|turn_5(det:art|the_1($1,n|wing-pl_2($1)),$0),$0),$0),mod|do_6(pro:sub|they_7,$0)))
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: I thought you said that was a propeller .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.v|say-past_4(pro:per|you_3,lambda $2_{r}.det:art|a_7(pro:rel|that_5,n|propel-dv_8(pro:rel|that_5,$2)),$1),$0)
example_end

Sent: no it was right but it fell on its tail .
Sem: lambda $0_{r}.and(and(adv|right_4(pro:per|it_2,$0),and(v|fall-past_7(pro:per|it_6,$0),prep|on_8(det:poss|its_9($1,n|tail_10($1)),$0))),co|no_1($0))
example_end

Sent: on a caboose ?
Sem: Q(prep|on_1(det:art|a_2($0,n|caboose_3($0))))
example_end

Sent: what kind of caboose ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|caboose_4($2)))))
example_end

Sent: you need to hold it up like this .
Sem: lambda $0_{r}.v|need_2(pro:per|you_1,lambda $1_{r}.and(and(v|hold_4(pro:per|you_1,pro:per|it_5,$1),adv|up_6($1)),prep|like_7(pro:dem|this_8,$1)),$0)
example_end

Sent: I heard it .
Sem: lambda $0_{r}.v|hear-past_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: it thought your arm was a tree .
Sem: lambda $0_{r}.v|think-past_2(pro:per|it_1,lambda $1_{r}.det:art|a_6(det:poss|your_3($2,n|arm_4($2)),n|tree_7(det:poss|your_3($2,n|arm_4($2)),$1)),$0)
example_end

Sent: why did it think that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|think_4(pro:per|it_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: Paul wouldn 't know what to do with an airplane .
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|will_2(v|know_4(n:prop|paul_1,$1,$0),$0),$0)
example_end

Sent: you won 't cut your finger what ?
Sem: lambda $0_{r}.not(mod|will_2(v|cut-zero_4(pro:per|you_1,det:poss|your_5($1,n|finger_6($1)),$0),$0),$0)
example_end

Sent: that 's a strong rubber band .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and_comp(n|rubber_5(pro:dem|that_1,$0),and(n|band_6(pro:dem|that_1,$0),adj|strong_4(pro:dem|that_1,$0))))
example_end

Sent: oh did it break ?
Sem: lambda $0_{r}.Q(and(mod|do-past_2(v|break_4(pro:per|it_3,$0),$0),co|oh_1($0)))
example_end

Sent: it doesn 't fly all by itself .
Sem: lambda $0_{r}.not(mod|do_2(and(n|fly_4(pro:per|it_1,$0),adv|all_5(prep|by_6(pro:refl|itself_7,$0))),$0),$0)
example_end

Sent: you help it by turning the propeller .
Sem: lambda $0_{r}.adv|by_4(part|turn-presp_5(you,det:art|the_6($1,n|propel-dv_7($1)),$0),v|help_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: I just don 't think that Paul is interested .
Sem: lambda $0_{r}.not(mod|do_3(and(v|think_5(pro:sub|i_1,lambda $1_{r}.aux|be-3s_8(part|interest-pastp_9(n:prop|paul_7,$1),$1),$0),adv|just_2($0)),$0),$0)
example_end

Sent: you made it ?
Sem: lambda $0_{r}.Q(v|make-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: who made it ?
Sem: lambda $1_{e}.lambda $0_{r}.v|make-past_2($1,pro:per|it_3,$0)
example_end

Sent: oh you made one .
Sem: lambda $0_{r}.and(v|make-past_3(pro:per|you_2,pro:indef|one_4,$0),co|oh_1($0))
example_end

Sent: a little boy named George .
Sem: det:art|a_1($0,and(adj|little_2($0),n|boy_3($0)))
example_end

Sent: and he had a sister named what ?
Sem: lambda $0_{r}.Q(v|have-past_3(pro:sub|he_2,det:art|a_4($1,n|sister_5($1)),$0))
example_end

Sent: no Tony was the little baby .
Sem: lambda $0_{r}.and(det:art|the_4(n:prop|tony_2,and(n|baby_6(n:prop|tony_2,$0),adj|little_5(n:prop|tony_2,$0))),co|no_1($0))
example_end

Sent: the little girl .
Sem: det:art|the_1($0,and(adj|little_2($0),n|girl_3($0)))
example_end

Sent: her name is Sheila .
Sem: lambda $0_{r}.n:prop|sheila_4(det:poss|her_1($1,n|name_2($1)),$0)
example_end

Sent: careful Adam you may break your airplane .
Sem: lambda $0_{r}.and(mod|may_4(v|break_5(pro:per|you_3,det:poss|your_6($1,n|airplane_7($1)),$0),$0),co|careful_1($0))
example_end

Sent: it fell on that on that part Adam .
Sem: lambda $0_{r}.and(v|fall-past_2(pro:per|it_1,$0),prep|on_5(pro:dem|that_6($1,n|part_7($1)),$0))
example_end

Sent: pick the one you dropped on the floor up .
Sem: lambda $0_{r}.and(v|pick_1(you,det:art|the_2($1,pro:indef|one_3($1)),$0),adv|up_9($0))
example_end

Sent: they 're all black ?
Sem: lambda $0_{r}.Q(post|all_3(n|black_4(pro:sub|they_1,$0)))
example_end

Sent: I 'm asking you .
Sem: lambda $0_{r}.aux|~be_2(part|ask-presp_3(pro:sub|i_1,pro:per|you_4,$0),$0)
example_end

Sent: no they aren 't all black .
Sem: lambda $0_{r}.and(not(qn|all_5(n|black_6(pro:sub|they_2,$0)),$0),co|no_1($0))
example_end

Sent: yes I think that 's black .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.adj|black_6(pro:dem|that_4,$1),$0),co|yes_1($0))
example_end

Sent: no the paper is .
Sem: lambda $0_{r}.and(cop|be-3s_4(det:art|the_2($1,n|paper_3($1)),$0),qn|no_1($0))
example_end

Sent: some of the paper is black .
Sem: lambda $0_{r}.n|black_6(BARE($1,att(qn|some_1($1),prep|of_2(det:art|the_3($2,n|paper_4($2))))),$0)
example_end

Sent: but that 's yellow .
Sem: lambda $0_{r}.adj|yellow_4(pro:dem|that_2,$0)
example_end

Sent: the yellow black thing .
Sem: det:art|the_1($0,and(n|black_3($0),and(adj|yellow_2($0),n|thing_4($0))))
example_end

Sent: all the others have their own color .
Sem: lambda $0_{r}.v|have_4(qn|all_1(det:art|the_2($1,n:pt|others_3($1))),det:poss|their_5($2,and(adj|own_6($2),n|color_7($2))),$0)
example_end

Sent: oh honey .
Sem: lambda $0_{r}.co|oh_1($0)
example_end

Sent: yes you made a mistake .
Sem: lambda $0_{r}.and(v|make-past_3(pro:per|you_2,det:art|a_4($1,n|mistake_5($1)),$0),co|yes_1($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: careful honey .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: fell went over you .
Sem: lambda $0_{r}.and(v|go-past_2(you,$0),adv|over_3(pro:per|you_4,$0))
example_end

Sent: what are you going to do with it ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),prep|with_7(pro:per|it_8,$1)),$0),$0)
example_end

Sent: oh Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|oh_1($0))
example_end

Sent: an airplane fell on your little brother .
Sem: lambda $0_{r}.and(v|fall-past_3(det:art|a_1($1,n|airplane_2($1)),$0),prep|on_4(det:poss|your_5($2,and(adj|little_6($2),n|brother_7($2))),$0))
example_end

Sent: did you make another mistake ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|make_3(pro:per|you_2,qn|another_4($1,n|mistake_5($1)),$0),$0))
example_end

Sent: you 're pushing Paul .
Sem: lambda $0_{r}.aux|~be_2(part|push-presp_3(pro:per|you_1,n:prop|paul_4,$0),$0)
example_end

Sent: why would you want to break them ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|want_4(pro:per|you_3,lambda $1_{r}.v|break_6(pro:per|you_3,pro:obj|them_7,$1),$0),$2($0)),$0)
example_end

Sent: you don 't like crayons ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|like_4(pro:per|you_1,BARE($1,n|crayon-pl_5($1)),$0),$0),$0))
example_end

Sent: you think that is meat ?
Sem: lambda $0_{r}.Q(v|think_2(pro:per|you_1,lambda $1_{r}.n|meat_5(pro:dem|that_3,$1),$0))
example_end

Sent: what kind of meat ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|meat_4($2)))))
example_end

Sent: you made two of that Adam ?
Sem: lambda $0_{r}.Q(v|make-past_2(pro:per|you_1,BARE($1,det:num|two_3($1)),$0))
example_end

Sent: because you took them out .
Sem: lambda $0_{r}.and(v|take-past_3(pro:per|you_2,pro:obj|them_4,$0),adv|out_5($0))
example_end

Sent: you magicked them ?
Sem: lambda $0_{r}.Q(chi|magicked_2(pro:per|you_1,pro:obj|them_3,$0))
example_end

Sent: you mean you made them disappear ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,lambda $1_{r}.v|make-past_4(pro:per|you_3,lambda $2_{r}.v|appear_6(pro:obj|them_5,$2),$1),$0))
example_end

Sent: you don 't want it to fall .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:per|you_1,lambda $1_{r}.v|fall_7(pro:per|it_5,$1),$0),$0),$0)
example_end

Sent: well I need my bricks if I have_to build my building .
Sem: lambda $0_{r}.and(conj|if_6(mod:aux|have_to_8(pro:sub|i_7,lambda $1_{r}.v|build_10(pro:sub|i_7,$1),$0),v|need_3(pro:sub|i_2,det:poss|my_4($2,n|brick-pl_5($2)),$0)),co|well_1($0))
example_end

Sent: your hands are what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_1($2,n|hand-pl_2($2)),$0)
example_end

Sent: well these are Paul 's .
Sem: lambda $0_{r}.and(poss|~s_5(n:prop|paul_4,pro:dem|these_2,$0),co|well_1($0))
example_end

Sent: I 'm giving these to Paul .
Sem: lambda $0_{r}.aux|~be_2(and(part|give-presp_3(pro:sub|i_1,det:dem|these_4,$0),prep|to_5(n:prop|paul_6,$0)),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: he has blocks too you know .
Sem: lambda $0_{r}.and(and(aux|have-3s_2(pro:sub|he_1,BARE($1,n|block-pl_3($1)),$0),adv|too_4($0)),v|know_6(pro:per|you_5,$0))
example_end

Sent: I didn 't knock mine down .
Sem: lambda $0_{r}.not(mod|do_2(and(v|knock_4(pro:sub|i_1,n|mine_5,$0),adv|down_6($0)),$0),$0)
example_end

Sent: so I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|so_1($0))
example_end

Sent: you 'll cut your little fingers there .
Sem: lambda $0_{r}.mod|~will_2(and(part|cut-pastp_3(pro:per|you_1,det:poss|your_4($1,and(adj|little_5($1),n|finger-pl_6($1))),$0),adv|there_7($0)),$0)
example_end

Sent: he can 't play well yet .
Sem: lambda $0_{r}.not(mod|can_2(and(and(v|play_4(pro:sub|he_1,$0),adv|well_5($0)),adv|yet_6($0)),$0),$0)
example_end

Sent: watch the propeller Paul .
Sem: lambda $0_{r}.v|watch_1(you,det:art|the_2($1,n|propel-dv_3($1)),$0)
example_end

Sent: Paul can you say airplane .
Sem: lambda $0_{r}.mod|can_2(v|say_4(pro:per|you_3,BARE($1,n|airplane_5($1)),$0),$0)
example_end

Sent: this is your house .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|this_1,n|house_4(pro:dem|this_1,$0))
example_end

Sent: it fell apart again .
Sem: lambda $0_{r}.and(and(v|fall-past_2(pro:per|it_1,$0),adv|apart_3($0)),adv|again_4($0))
example_end

Sent: it 's going to fall apart ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|it_1,lambda $1_{r}.and(v|fall_5(pro:per|it_1,$1),adv|apart_6($1)),$0),$0))
example_end

Sent: no why would you take it apart ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|will-cond_3(and(and(v|take_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),adv|apart_7($0)),$0),co|no_1($0))
example_end

Sent: I put the men in my house ?
Sem: lambda $0_{r}.Q(and(v|put-zero_2(pro:sub|i_1,det:art|the_3($1,n|man-pl_4($1)),$0),prep|in_5(det:poss|my_6($2,n|house_7($2)),$0)))
example_end

Sent: in the airplane .
Sem: prep|in_1(det:art|the_2($0,n|airplane_3($0)))
example_end

Sent: go in the airplane .
Sem: lambda $0_{r}.and(v|go_1(you,$0),prep|in_2(det:art|the_3($1,n|airplane_4($1)),$0))
example_end

Sent: well he 's too fat .
Sem: lambda $0_{r}.and(adv|too_4(adj|fat_5(pro:sub|he_2,$0)),co|well_1($0))
example_end

Sent: I don 't think he can go in the airplane .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(and(v|go_7(pro:sub|he_5,$1),prep|in_8(det:art|the_9($2,n|airplane_10($2)),$1)),$1),$0),$0),$0)
example_end

Sent: I wouldn 't laugh about that .
Sem: lambda $0_{r}.not(mod|will_2(and(v|laugh_4(pro:sub|i_1,$0),prep|about_5(pro:dem|that_6,$0)),$0),$0)
example_end

Sent: they 're too heavy .
Sem: lambda $0_{r}.adv|too_3(adj|heavy_4(pro:sub|they_1,$0))
example_end

Sent: are you ready Adam ?
Sem: lambda $0_{r}.Q(v|ready_3(pro:per|you_2,$0))
example_end

Sent: no it didn 't break .
Sem: lambda $0_{r}.and(not(mod|do_3(v|break_5(pro:per|it_2,$0),$0),$0),co|no_1($0))
example_end

Sent: well don 't break the airplane .
Sem: lambda $0_{r}.and(not(mod|do_2(v|break_4(you,det:art|the_5($1,n|airplane_6($1)),$0),$0),$0),co|well_1($0))
example_end

Sent: you can 't sit on Paul dear .
Sem: lambda $0_{r}.not(mod|can_2(and(v|sit_4(pro:per|you_1,$0),prep|on_5(n:prop|paul_6,$0)),$0),$0)
example_end

Sent: he 's not quite big enough yet .
Sem: lambda $0_{r}.not(adv|yet_7(adv|enough_6(adv|quite_4(adj|big_5(pro:sub|he_1,$0)))),$0)
example_end

Sent: now what do I do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_3(and(v|do_5(pro:sub|i_4,$1,$0),adv|now_1($0)),$0)
example_end

Sent: one two three four .
Sem: BARE($0,det:num|one_1(det:num|two_2(det:num|three_3(det:num|four_4($0)))))
example_end

Sent: Paul Adam say it 's your turn .
Sem: lambda $0_{r}.v|say_3(n:prop|adam_2,lambda $1_{r}.det:poss|your_6(pro:per|it_4,n|turn_7(pro:per|it_4,$1)),$0)
example_end

Sent: you take Paul 's turn because he can 't do that .
Sem: lambda $0_{r}.conj|because_6(not(mod|can_8(v|do_10(pro:sub|he_7,pro:dem|that_11,$0),$0),$0),v|take_2(pro:per|you_1,n:prop|paul_3's($1,n|turn_5($1)),$0))
example_end

Sent: I 'm watching .
Sem: lambda $0_{r}.aux|~be_2(part|watch-presp_3(pro:sub|i_1,$0),$0)
example_end

Sent: you hit the side of the chair .
Sem: lambda $0_{r}.v|hit-zero_2(pro:per|you_1,det:art|the_3($1,att(n|side_4($1),prep|of_5(det:art|the_6($2,n|chair_7($2))))),$0)
example_end

Sent: you don 't throw blocks you know .
Sem: lambda $0_{r}.and(not(mod|do_2(v|throw_4(pro:per|you_1,BARE($1,n|block-pl_5($1)),$0),$0),$0),v|know_7(pro:per|you_6,$0))
example_end

Sent: where 's your handkerchief ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:poss|your_3($1,n|handkerchief_4($1)),$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: wait a minute .
Sem: lambda $0_{r}.v|wait_1(you,det:art|a_2($1,n|minute_3($1)),$0)
example_end

Sent: close it up .
Sem: lambda $0_{r}.and(v|close_1(you,pro:per|it_2,$0),adv|up_3($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh shall I show you ?
Sem: lambda $0_{r}.and(mod|shall_2(v|show_4(pro:sub|i_3,pro:per|you_5,$0),$0),co|oh_1($0))
example_end

Sent: yes please .
Sem: lambda $0_{r}.and(co|please_2($0),co|yes_1($0))
example_end

Sent: you squeeze and then let go .
Sem: lambda $0_{r}.and(v|let-zero_5_go_6(pro:per|you_1,$0),adv:tem|then_4($0))
example_end

Sent: is that what he 's doing ?
Sem: lambda $0_{r}.Q(pro:int|what_3(pro:dem|that_2,$0))
example_end

Sent: because he 's holding on by his hands .
Sem: lambda $0_{r}.aux|~be_3(and(and(part|hold-presp_4(pro:sub|he_2,$0),adv|on_5($0)),prep|by_6(det:poss|his_7($1,n|hand-pl_8($1)),$0)),$0)
example_end

Sent: you show me how .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|show_2(pro:per|you_1,pro:obj|me_3,$0),$1($0))
example_end

Sent: what do I do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|do_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: let 's call him Clever the Clown ?
Sem: lambda $0_{r}.Q(v:obj|let_1(you,lambda $1_{r}.v|call_3(pro:obj|~us_2,det:art|the_6($2,and_comp(n:prop|clever_5($2),n:prop|clown_7($2))),pro:obj|him_4,$1),$0))
example_end

Sent: well you didn 't finish playing with this yet .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|finish_5(pro:per|you_2,lambda $1_{r}.and(part|play-presp_6(pro:per|you_2,$1),prep|with_7(pro:dem|this_8,$1)),$0),adv|yet_9($0)),$0),$0),co|well_1($0))
example_end

Sent: pull it out and see .
Sem: lambda $0_{r}.and(v|see_5(you,pro:per|it_2,$0),adv|out_3($0))
example_end

Sent: oh careful .
Sem: lambda $0_{r}.and(co|careful_2($0),co|oh_1($0))
example_end

Sent: you look like a Chinese princess .
Sem: lambda $0_{r}.and(cop|look_2(pro:per|you_1,$0),conj|like_3(det:art|a_4($1,and(n:prop|chinese_5($1),n|princess_6($1))),$0))
example_end

Sent: a blonde wig .
Sem: det:art|a_1($0,and(adj|blonde_2($0),n|wig_3($0)))
example_end

Sent: it 's a wig .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|wig_4(pro:per|it_1,$0))
example_end

Sent: why are you backing away ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|back-presp_4(pro:per|you_3,$0),$1($0)),adv|away_5($0)),$0)
example_end

Sent: look at this Adam .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|at_2(pro:dem|this_3,$0))
example_end

Sent: I like this .
Sem: lambda $0_{r}.v|like_2(pro:sub|i_1,pro:dem|this_3,$0)
example_end

Sent: a lion !
Sem: det:art|a_1($0,n|lion_2($0))
example_end

Sent: d you think that 's a lion ?
Sem: lambda $0_{r}.Q(mod|do_1(v|think_3(pro:per|you_2,lambda $1_{r}.det:art|a_6(pro:dem|that_4,n|lion_7(pro:dem|that_4,$1)),$0),$0))
example_end

Sent: look at it again .
Sem: lambda $0_{r}.and(and(cop|look_1(you,$0),prep|at_2(pro:per|it_3,$0)),adv|again_4($0))
example_end

Sent: no that doesn 't look like a lion .
Sem: lambda $0_{r}.and(not(mod|do_3(and(cop|look_5(pro:dem|that_2,$0),conj|like_6(det:art|a_7($1,n|lion_8($1)),$0)),$0),$0),qn|no_1($0))
example_end

Sent: yes it looks like a leopard .
Sem: lambda $0_{r}.and(and(cop|look-3s_3(pro:per|it_2,$0),prep|like_4(det:art|a_5($1,n|leopard_6($1)),$0)),co|yes_1($0))
example_end

Sent: if he 's in a cage .
Sem: lambda $0_{r}.prep|in_4(det:art|a_5($1,n|cage_6($1)),pro:sub|he_2,$0)
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: yes he may try .
Sem: lambda $0_{r}.and(mod|may_3(v|try_4(pro:sub|he_2,$0),$0),co|yes_1($0))
example_end

Sent: it wouldn 't fit me .
Sem: lambda $0_{r}.not(mod|will_2(v|fit-zero_4(pro:per|it_1,pro:obj|me_5,$0),$0),$0)
example_end

Sent: you 've seen people wear those haven 't you ?
Sem: lambda $0_{r}.Q(and(aux|~have_2(part|see-pastp_3(pro:per|you_1,lambda $1_{r}.v|wear_5(BARE($2,n|person-pl_4($2)),pro:dem|those_6,$1),$0),$0),not(aux|have_7(pro:per|you_9,$0),$0)))
example_end

Sent: what kind of uniform ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|uniform_4($2)))))
example_end

Sent: no you 're asking me .
Sem: lambda $0_{r}.and(aux|~be_3(part|ask-presp_4(pro:per|you_2,pro:obj|me_5,$0),$0),co|no_1($0))
example_end

Sent: well that 's part of the dress that some people wear .
Sem: lambda $0_{r}.and(att(n|part_4(pro:dem|that_2,$0),prep|of_5(det:art|the_6($1,n|dress_7($1)))),co|well_1($0))
example_end

Sent: remember in your book .
Sem: lambda $0_{r}.and(v|remember_1(you,$0),prep|in_2(det:poss|your_3($1,n|book_4($1)),$0))
example_end

Sent: I think it 's Chinese .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.n:prop|chinese_5(pro:per|it_3,$1),$0)
example_end

Sent: that was an accident .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|accident_4(pro:dem|that_1,$0))
example_end

Sent: oh come on .
Sem: lambda $0_{r}.and(and(v|come_2(you,$0),adv|on_3($0)),co|oh_1($0))
example_end

Sent: put it on .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),adv|on_3($0))
example_end

Sent: oh you 'd like me to buy a dress like that ?
Sem: lambda $0_{r}.Q(and(mod|~genmod_3(v|like_4(pro:per|you_2,lambda $1_{r}.v|buy_7(pro:obj|me_5,det:art|a_8($2,att(n|dress_9($2),prep|like_10(pro:dem|that_11))),$1),$0),$0),co|oh_1($0)))
example_end

Sent: a dragon .
Sem: det:art|a_1($0,n|dragon_2($0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: so two people can play .
Sem: lambda $0_{r}.mod|can_4(and(v|play_5(BARE($1,det:num|two_2(n|person-pl_3($1))),$0),adv|so_1($0)),$0)
example_end

Sent: well you 're right .
Sem: lambda $0_{r}.and(n|right_4(pro:per|you_2,$0),co|well_1($0))
example_end

Sent: can you tell time ?
Sem: lambda $0_{r}.Q(mod|can_1(v|tell_3(pro:per|you_2,BARE($1,n|time_4($1)),$0),$0))
example_end

Sent: oh that 's three thirty five .
Sem: BARE($0,and_comp(and_comp(det:num|three_4($0),det:num|thirty_5($0)),det:num|five_6($0)))
example_end

Sent: no that 's six thirty .
Sem: BARE($0,and_comp(det:num|six_4($0),det:num|thirty_5($0)))
example_end

Sent: no that 's dinner time .
Sem: lambda $0_{r}.and(and_comp(n|dinner_4(pro:dem|that_2,$0),n|time_5(pro:dem|that_2,$0)),co|no_1($0))
example_end

Sent: I don 't think you can get it in your pocket .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.mod|can_6(and(aux|get_7(pro:per|you_5,pro:per|it_8,$1),prep|in_9(det:poss|your_10($2,n|pocket_11($2)),$1)),$1),$0),$0),$0)
example_end

Sent: you have_to put it back in the bag .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.v|put-zero_4(pro:per|you_1,$1),$0)
example_end

Sent: yes it did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: it 's a recorder .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|record-dv_4(pro:per|it_1,$0))
example_end

Sent: blowing cars ?
Sem: lambda $0_{r}.Q(part|blow-presp_1(you,BARE($1,n|car-pl_2($1)),$0))
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you can change the shape .
Sem: lambda $0_{r}.mod|can_2(v|change_3(pro:per|you_1,det:art|the_4($1,n|shape_5($1)),$0),$0)
example_end

Sent: you could wear it for a bracelet .
Sem: lambda $0_{r}.mod|could_2(and(v|wear_3(pro:per|you_1,pro:per|it_4,$0),prep|for_5(det:art|a_6($1,n|bracelet_7($1)),$0)),$0)
example_end

Sent: you better put things in it ?
Sem: lambda $0_{r}.Q(and(and(part|put-pastp_3(pro:per|you_1,BARE($1,n|thing-pl_4($1)),$0),adj|good-cp_2($0)),prep|in_5(pro:per|it_6,$0)))
example_end

Sent: what kind of things would you put in it ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|will-cond_5(and(v|put-zero_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|thing-pl_4($3))))),$0),prep|in_8(pro:per|it_9,$0)),$0)
example_end

Sent: did you show Ursula your car ?
Sem: lambda $0_{r}.v|do-past_1(v|show_3(pro:per|you_2,det:poss|your_5($1,n|car_6($1)),n:prop|ursula_4,$0),$0)
example_end

Sent: a net ?
Sem: BARE($0,Q(det:art|a_1($1,n|net_2($1),$0)))
example_end

Sent: what are you catching ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|catch-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what kind of fish did you catch ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do-past_5(v|catch_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|fish_4($3))))),$0),$0)
example_end

Sent: yes I like fish .
Sem: lambda $0_{r}.and(co|like_3(pro:sub|i_2,BARE($1,n|fish_4($1)),$0),co|yes_1($0))
example_end

Sent: what kind of fish is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_6,att(n|kind_2(pro:dem|this_6,$0),prep|of_3(BARE($2,n|fish_4($2)))))
example_end

Sent: I think I have enough fish now .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|have_4(pro:sub|i_3,adj|enough_5(BARE($2,n|fish_6($2))),$1),adv|now_7($1)),$0)
example_end

Sent: well they have_to be clean .
Sem: lambda $0_{r}.and(mod:aux|have_to_3(pro:sub|they_2,lambda $1_{r}.adj|clean_6(pro:sub|they_2,$1),$0),co|well_1($0))
example_end

Sent: they don 't roll ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|roll_4(pro:sub|they_1,$0),$0),$0))
example_end

Sent: why d you think they don 't ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|think_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: I 'll cook them tonight .
Sem: lambda $0_{r}.mod|~will_2(and(v|cook_3(pro:sub|i_1,pro:obj|them_4,$0),adv:tem|tonight_5($0)),$0)
example_end

Sent: don 't put it in there Adam .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:per|it_4,$0),prep|in_5(adv|there_6($0))),$0),$0)
example_end

Sent: you may forget it .
Sem: lambda $0_{r}.mod|may_2(v|forget_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: some meat ?
Sem: BARE($0,Q(qn|some_1($1,n|meat_2($1),$0)))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: we 're going to have fish .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:sub|we_1,lambda $1_{r}.v|have_5(pro:sub|we_1,BARE($2,n|fish_6($2)),$1),$0),$0)
example_end

Sent: what else shall we have for supper ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_3(and(v|have_5(pro:sub|we_4,$1,$0),prep|for_6(BARE($2,n|supper_7($2)),$0)),$0)
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: and macaroni ?
Sem: BARE($0,Q(n|macaroni_2($0)))
example_end

Sent: anything else ?
Sem: BARE($0,Q(post|else_2(pro:indef|anything_1,$0)))
example_end

Sent: what would I like from the store ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will-cond_2(and(co|like_4(pro:sub|i_3,$1,$0),prep|from_5(det:art|the_6($2,n|store_7($2)),$0)),$0)
example_end

Sent: some soup and some juice .
Sem: qn|some_4($0,qn|some_1($1,n|juice_5($1),$0))
example_end

Sent: and some hamburger .
Sem: qn|some_2($0,n|hamburger_3($0))
example_end

Sent: some macaroni ?
Sem: BARE($0,Q(qn|some_1($1,n|macaroni_2($1),$0)))
example_end

Sent: this is my refrigerator .
Sem: lambda $0_{r}.det:poss|my_3(pro:dem|this_1,n|refrigerator_4(pro:dem|this_1,$0))
example_end

Sent: you can look .
Sem: lambda $0_{r}.mod|can_2(co|look_3(pro:per|you_1,$0),$0)
example_end

Sent: Adam why don 't you show Ursula what you did yesterday ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.not(mod|do_3(and(v|show_6(pro:per|you_5,$1,n:prop|ursula_7,$0),$2($0)),$0),$0)
example_end

Sent: I think it 's on the other page on the back .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.adv|on_5(det:art|the_6($2,att(and(qn|other_7($2),n|page_8($2)),prep|on_9(det:art|the_10($3,n|back_11($3))))),pro:per|it_3,$1),$0)
example_end

Sent: it 's a poodle .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|poodle_4(pro:per|it_1,$0))
example_end

Sent: it works like a puppet Adam .
Sem: lambda $0_{r}.and(v|work-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,n|puppet_5($1)),$0))
example_end

Sent: you put your hand in it .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,det:poss|your_3($1,n|hand_4($1)),$0),prep|in_5(pro:per|it_6,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you were getting it right .
Sem: lambda $0_{r}.aux|be-past_2(n:gerund|get-presp_3(pro:per|you_1,lambda $1_{r}.co|right_5(pro:per|it_4,$1),$0),$0)
example_end

Sent: call somebody back ?
Sem: lambda $0_{r}.Q(and(n|call_1(you,pro:indef|somebody_2,$0),adv|back_3($0)))
example_end

Sent: I don 't usually keep soup in my refrigerator .
Sem: lambda $0_{r}.not(mod|do_2(and(and(v|keep_5(pro:sub|i_1,BARE($1,n|soup_6($1)),$0),adv|usual-dadj_4($0)),prep|in_7(det:poss|my_8($2,n|refrigerator_9($2)),$0)),$0),$0)
example_end

Sent: I keep it in the cabinet .
Sem: lambda $0_{r}.and(v|keep_2(pro:sub|i_1,pro:per|it_3,$0),prep|in_4(det:art|the_5($1,n|cabinet_6($1)),$0))
example_end

Sent: what kind of soup did you buy for me ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do-past_5(and(v|buy_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|soup_4($3))))),$0),prep|for_8(pro:obj|me_9,$0)),$0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: yes that was a loud noise .
Sem: lambda $0_{r}.and(det:art|a_4(pro:rel|that_2,and(n|noise_6(pro:rel|that_2,$0),adj|loud_5(pro:rel|that_2,$0))),co|yes_1($0))
example_end

Sent: what was it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: not better what ?
Sem: not(att(pro:int|what_3,BARE($0,adj|good-cp_2($0))))
example_end

Sent: than hair ?
Sem: Q(prep|than_1(BARE($0,n|hair_2($0))))
example_end

Sent: no those are Bandaids .
Sem: lambda $0_{r}.and(n:prop|bandaids_4(pro:dem|those_2,$0),qn|no_1($0))
example_end

Sent: what d you have on your neck ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|have_4(pro:per|you_3,$1,$0),prep|on_5(det:poss|your_6($2,n|neck_7($2)),$0)),$0)
example_end

Sent: absolutely nothing .
Sem: adv|absolute-dadj_1(BARE($0,pro:indef|nothing_2($0)))
example_end

Sent: I think I need to find your suspenders don 't you think so ?
Sem: lambda $0_{r}.Q(v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|need_4(pro:sub|i_3,lambda $2_{r}.v|find_6(pro:sub|i_3,det:poss|your_7($3,n|suspenders_8($3)),$2),$1),not(mod|do_9(and(v|think_12(pro:per|you_11,$1),co|so_13($1)),$1),$1)),$0))
example_end

Sent: you look like you 're about to lose your pants .
Sem: lambda $0_{r}.conj|like_3(adv|about_6(pro:per|you_4,lambda $1_{r}.v|lose_8(pro:per|you_4,det:poss|your_9($2,n:pt|pants_10($2)),$1),$0),cop|look_2(pro:per|you_1,$0))
example_end

Sent: how 're you going to get it off if I put it on ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.conj|if_9(and(v|put-zero_11(pro:sub|i_10,pro:per|it_12,$0),adv|on_13($0)),aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|get_6(pro:per|you_3,pro:per|it_7,$1),adv|off_8($1)),$0),$2($0)),$0))
example_end

Sent: which finger ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|finger_2($1))
example_end

Sent: what did you forget ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|forget_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: is that what he did ?
Sem: lambda $0_{r}.Q(pro:int|what_3(pro:dem|that_2,$0))
example_end

Sent: did he ever remember what he forgot ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_1(and(v|remember_4(pro:sub|he_2,$1,$0),adv|ever_3($0)),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: I don 't think I need anything else from the store today .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(and(v|need_6(pro:sub|i_5,post|else_8(BARE($2,pro:indef|anything_7($2))),$1),prep|from_9(det:art|the_10($3,n|store_11($3)),$1)),adv:tem|today_12($1)),$0),$0),$0)
example_end

Sent: what d you have_to do ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_2(mod:aux|have_to_4(pro:per|you_3,lambda $1_{r}.v|do_6($2,$1),$0),$0)
example_end

Sent: what 're you going to cook for supper tonight ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(n|cook_6($2,$1),prep|for_7(BARE($3,n|supper_8($3)),$1)),$0),adv:tem|tonight_9($0)),$0)
example_end

Sent: macaroni and beans .
Sem: BARE($0,n|bean-pl_3($0))
example_end

Sent: and fish .
Sem: BARE($0,n|fish_2($0))
example_end

Sent: why don 't you use the other part of the shelf there for a stove ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|use_5(pro:per|you_4,adv|there_12(det:art|the_6($1,att(and(qn|other_7($1),n|part_8($1)),prep|of_9(det:art|the_10($2,n|shelf_11($2)))))),$0),$3($0)),prep|for_13(det:art|a_14($4,n|stove_15($4)),$0)),$0),$0)
example_end

Sent: no the other part .
Sem: lambda $0_{r}.and(det:art|the_2($1,and(qn|other_3($1),n|part_4($1)),$0),qn|no_1($0))
example_end

Sent: how d you cook macaroni ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(n|cook_4(pro:per|you_3,BARE($1,n|macaroni_5($1)),$0),$2($0)),$0)
example_end

Sent: how d you cook it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|cook_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: my pants is are going to lose .
Sem: lambda $0_{r}.aux|be-pres_4(part|go-presp_5(det:poss|my_1($1,n:pt|pants_2($1)),lambda $2_{r}.v|lose_7(det:poss|my_1($1,n:pt|pants_2($1)),$2),$0),$0)
example_end

Sent: you mean you 're going to lose your pants .
Sem: lambda $0_{r}.v|mean_2(pro:per|you_1,lambda $1_{r}.aux|~be_4(part|go-presp_5(pro:per|you_3,lambda $2_{r}.v|lose_7(pro:per|you_3,det:poss|your_8($3,n:pt|pants_9($3)),$2),$1),$1),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: because you wanted me to put it on your finger .
Sem: lambda $0_{r}.v|want-past_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_6(pro:obj|me_4,pro:per|it_7,$1),prep|on_8(det:poss|your_9($2,n|finger_10($2)),$1)),$0)
example_end

Sent: no just one .
Sem: lambda $0_{r}.and(adj|just_2(pro:indef|one_3,$0),qn|no_1($0))
example_end

Sent: you have dirt on your finger ?
Sem: lambda $0_{r}.Q(and(v|have_2(pro:per|you_1,BARE($1,n|dirt_3($1)),$0),prep|on_4(det:poss|your_5($2,n|finger_6($2)),$0)))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: d you like that ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: you don 't like it either ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(v|like_4(pro:per|you_1,pro:per|it_5,$0),adv|either_6($0)),$0),$0))
example_end

Sent: why d you call those sunglasses ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|call_4(pro:per|you_3,BARE($1,n|sunglass-pl_6($1)),pro:dem|those_5,$0),$2($0)),$0)
example_end

Sent: why do you call those sunglasses .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|call_4(pro:per|you_3,BARE($1,n|sunglass-pl_6($1)),pro:dem|those_5,$0),$2($0)),$0)
example_end

Sent: those are Ursula 's glasses .
Sem: lambda $0_{r}.n:prop|ursula_3's'(pro:dem|those_1,n|glass-pl_5(pro:dem|those_1,$0))
example_end

Sent: you do too have glasses .
Sem: lambda $0_{r}.v|do_2(and(v|have_4(pro:per|you_1,BARE($1,n|glass-pl_5($1)),$0),adv|too_3($0)),$0)
example_end

Sent: you have sunglasses that she gave you .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,BARE($1,n|sunglass-pl_3($1)),$0)
example_end

Sent: around their eyes ?
Sem: Q(prep|around_1(det:poss|their_2($0,n|eye-pl_3($0))))
example_end

Sent: some puppies do .
Sem: lambda $0_{r}.v|do_3(qn|some_1($1,n|puppy-pl_2($1)),$0)
example_end

Sent: we saw a puppy in the pet shop that had spots around his eyes .
Sem: lambda $0_{r}.v|see-past_2(pro:sub|we_1,det:art|a_3($1,att(n|puppy_4($1),prep|in_5(det:art|the_6($2,and_comp(n|pet_7($2),n|shop_8($2)))))),$0)
example_end

Sent: no puppies what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(qn|no_1($2,n|puppy-pl_2($2)),$0)
example_end

Sent: oh Adam don 't lean on my foot .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|lean_5(you,$0),prep|on_6(det:poss|my_7($1,n|foot_8($1)),$0)),$0),$0),co|oh_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: your hand fits in there further than mine .
Sem: lambda $0_{r}.and(and(v|fit-3s_3(det:poss|your_1($1,n|hand_2($1)),$0),adv|in_4(adv|there_5($0))),adv|further_6(prep|than_7(pro:poss|mine_8,$0)))
example_end

Sent: I 'm not keeping you from flying .
Sem: lambda $0_{r}.not(prep|from_6(n:gerund|fly-presp_7(you,$0),cop|~be_2(part|keep-presp_4(pro:sub|i_1,pro:per|you_5,$0),$0)),$0)
example_end

Sent: an extension cord .
Sem: det:art|a_1($0,and_comp(n|extension_2($0),n|cord_3($0)))
example_end

Sent: not very far in the air did it ?
Sem: BARE($0,adv|far_3($0))
example_end

Sent: where 's the other part ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,and(qn|other_4($1),n|part_5($1))),$0))
example_end

Sent: why does the other part leave ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(n|leave_6(det:art|the_3($1,and(pro:indef|other_4($1),adj|part_5($1))),$0),$2($0)),$0)
example_end

Sent: what was his name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|his_3($2,n|name_4($2)),$0)
example_end

Sent: don 't do that please .
Sem: lambda $0_{r}.and(not(mod|do_1(v|do_3(you,det:dem|that_4,$0),$0),$0),co|please_5($0))
example_end

Sent: on the shelf .
Sem: prep|on_1(det:art|the_2($0,n|shelf_3($0)))
example_end

Sent: in the bread box .
Sem: prep|in_1(det:art|the_2($0,and_comp(n|bread_3($0),n|box_4($0))))
example_end

Sent: except you always tell Daddy about the surprises don 't you ?
Sem: lambda $0_{r}.Q(and(and(and(v|tell_4(pro:per|you_2,n:prop|daddy_5,$0),adv|always_3($0)),prep|about_6(det:art|the_7($1,n|surprise-pl_8($1)),$0)),not(mod|do_9(pro:per|you_11,$0),$0)))
example_end

Sent: oops you lost something .
Sem: lambda $0_{r}.and(v|lose-past_3(pro:per|you_2,BARE($1,pro:indef|something_4($1)),$0),co|oops_1($0))
example_end

Sent: I don 't have anything to put water in right now .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:sub|i_1,lambda $1_{r}.and(v|put-zero_7(pro:indef|anything_5,BARE($2,n|water_8($2)),$1),prep|in_9($1)),$0),adv|right_10(adv|now_11($0))),$0),$0)
example_end

Sent: can you put it back ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:per|it_4,$0),adv|back_5($0)),$0))
example_end

Sent: I hope he can swim .
Sem: lambda $0_{r}.v|hope_2(pro:sub|i_1,lambda $1_{r}.mod|can_4(v|swim_5(pro:sub|he_3,$1),$1),$0)
example_end

Sent: the boat just tipped over .
Sem: lambda $0_{r}.and(and(v|tip-past_4(det:art|the_1($1,n|boat_2($1)),$0),adv|just_3($0)),adv|over_5($0))
example_end

Sent: a space boat ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n|space_2($1),n|boat_3($1)),$0)))
example_end

Sent: what 's a space boat ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,and_comp(n|space_4($2),n|boat_5($2))),$0)
example_end

Sent: no what was that that we watched ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|no_1($0))
example_end

Sent: I don 't remember .
Sem: lambda $0_{r}.not(mod|do_2(v|remember_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: and where are they going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.cop|be-pres_3(and(part|go-presp_5(pro:sub|they_4,$0),$1($0)),$0)
example_end

Sent: oh what is he doing out in the sailboat anyway ?
Sem: lambda $1_{e}.lambda $0_{r}.and(cop|be-3s_3(and(and(and(part|do-presp_5(pro:sub|he_4,$1,$0),adv|out_6($0)),prep|in_7(det:art|the_8($2,n|sail+boat_9($2)),$0)),adv|anyway_10($0)),$0),co|oh_1($0))
example_end

Sent: oh I 'm glad .
Sem: lambda $0_{r}.and(adj|glad_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: but I don 't think he rides in the boat .
Sem: lambda $0_{r}.not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.and(v|ride-3s_7(pro:sub|he_6,$1),prep|in_8(det:art|the_9($2,n|boat_10($2)),$1)),$0),$0),$0)
example_end

Sent: he probably rides in the car .
Sem: lambda $0_{r}.and(and(n|ride-pl_3(pro:sub|he_1,$0),adv|probable-dadj_2($0)),prep|in_4(det:art|the_5($1,n|car_6($1)),$0))
example_end

Sent: oh that 's the water ?
Sem: lambda $0_{r}.Q(and(det:art|the_4(pro:dem|that_2,n|water_5(pro:dem|that_2,$0)),co|oh_1($0)))
example_end

Sent: perhaps he uses his oar to push out from the shore .
Sem: lambda $0_{r}.and(v|use-3s_3(pro:sub|he_2,lambda $1_{r}.and(and(v|push_7(det:poss|his_4($2,n|oar_5($2)),$1),adv|out_8($1)),prep|from_9(det:art|the_10($3,n|shore_11($3)),$1)),$0),co|perhaps_1($0))
example_end

Sent: where 's the oar ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|oar_4($1)),$0))
example_end

Sent: oh hurry up .
Sem: lambda $0_{r}.and(and(v|hurry_2(you,$0),adv|up_3($0)),co|oh_1($0))
example_end

Sent: he lost his sail .
Sem: lambda $0_{r}.v|lose-past_2(pro:sub|he_1,det:poss|his_3($1,n|sail_4($1)),$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: perhaps the wind blows the boat over .
Sem: lambda $0_{r}.and(and(v|blow-3s_4(det:art|the_2($1,n|wind_3($1)),det:art|the_5($2,v|boat_6($2)),$0),co|perhaps_1($0)),adv|over_7($0))
example_end

Sent: oh is that what 's happening ?
Sem: lambda $0_{r}.Q(and(pro:int|what_4(pro:dem|that_3,$0),co|oh_1($0)))
example_end

Sent: oh hello .
Sem: lambda $0_{r}.and(n|hello_2($0),co|oh_1($0))
example_end

Sent: did you have a ride on your boat today .
Sem: lambda $0_{r}.v|do-past_1(and(and(v|have_3(pro:per|you_2,det:art|a_4($1,n|ride_5($1)),$0),prep|on_6(det:poss|your_7($2,n|boat_8($2)),$0)),adv:tem|today_9($0)),$0)
example_end

Sent: oh his boy went too .
Sem: lambda $0_{r}.and(and(v|go-past_4(det:poss|his_2($1,n|boy_3($1)),$0),adv|too_5($0)),co|oh_1($0))
example_end

Sent: is he going down in there ?
Sem: lambda $0_{r}.Q(cop|be-3s_1(and(and(part|go-presp_3(pro:sub|he_2,$0),adv|down_4($0)),prep|in_5(adv|there_6($0))),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: because you didn 't have it down in there properly I guess .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(and(v|have_5(pro:per|you_2,pro:per|it_6,$0),adv|down_7($0)),prep|in_8(adv|there_9($0))),adv|proper-dadj_10($0)),$0),$0),v|guess_12(pro:sub|i_11,$0))
example_end

Sent: it 's a level .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|level_4(pro:per|it_1,$0))
example_end

Sent: it 's a little game .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and(n|game_5(pro:per|it_1,$0),adj|little_4(pro:per|it_1,$0)))
example_end

Sent: you can make very funny people .
Sem: lambda $0_{r}.mod|can_2(v|make_3(pro:per|you_1,BARE($1,and(adv|very_4(adj|fun-dn_5($1)),n|person-pl_6($1))),$0),$0)
example_end

Sent: shall we make a funny man with this ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|make_3(pro:sub|we_2,det:art|a_4($1,and(adj|fun-dn_5($1),n|man_6($1))),$0),prep|with_7(pro:dem|this_8,$0)),$0))
example_end

Sent: you 're going to get what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|get_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: that 's a lock from a door .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(n|lock_4(pro:dem|that_1,$0),prep|from_5(det:art|a_6($1,n|door_7($1)))))
example_end

Sent: d you have one to put it on ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_6(pro:indef|one_4,pro:per|it_7,$1),adv|on_8($1)),$0),$0))
example_end

Sent: what d you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: a paper punch .
Sem: det:art|a_1($0,and_comp(n|paper_2($0),n|punch_3($0)))
example_end

Sent: what 're you going to do with the crayons ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),prep|with_7(det:art|the_8($3,n|crayon-pl_9($3)),$1)),$0),$0)
example_end

Sent: they 're so tiny .
Sem: lambda $0_{r}.adv|so_3(adj|tiny_4(pro:sub|they_1,$0))
example_end

Sent: you can 't color them .
Sem: lambda $0_{r}.not(mod|can_2(v|color_4(pro:per|you_1,pro:obj|them_5,$0),$0),$0)
example_end

Sent: from Africa .
Sem: prep|from_1(n:prop|africa_2)
example_end

Sent: forty inches .
Sem: BARE($0,det:num|forty_1(n|inch-pl_2($0)))
example_end

Sent: he 's not a fish .
Sem: lambda $0_{r}.not(det:art|a_4(pro:sub|he_1,n|fish_5(pro:sub|he_1,$0)),$0)
example_end

Sent: he 's a little boy .
Sem: lambda $0_{r}.det:art|a_3(pro:sub|he_1,and(n|boy_5(pro:sub|he_1,$0),adj|little_4(pro:sub|he_1,$0)))
example_end

Sent: no I 'm not a fish .
Sem: lambda $0_{r}.and(not(det:art|a_5(pro:sub|i_2,n|fish_6(pro:sub|i_2,$0)),$0),co|no_1($0))
example_end

Sent: no I don 't see any fish in here at all .
Sem: lambda $0_{r}.and(not(mod|do_3(and(and(v|see_5(pro:sub|i_2,qn|any_6($1,n|fish_7($1)),$0),prep|in_8(adv|here_9($0))),prep|at_10(BARE($2,pro:indef|all_11($2)),$0)),$0),$0),co|no_1($0))
example_end

Sent: fish must swim in the lake .
Sem: lambda $0_{r}.mod|must_2(and(v|swim_3(BARE($1,n|fish_1($1)),$0),prep|in_4(det:art|the_5($2,n|lake_6($2)),$0)),$0)
example_end

Sent: in the Charles River .
Sem: prep|in_1(det:art|the_2($0,and_comp(n:prop|charles_3($0),n:prop|river_4($0))))
example_end

Sent: you know where the Charles River is .
Sem: lambda $0_{r}.v|know_2(pro:per|you_1,lambda $1_{r}.and(cop|be-3s_7(det:art|the_4($2,and_comp(n:prop|charles_5($2),n:prop|river_6($2))),$1),adv:int|where_3($1)),$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: where we see the sailboats .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(v|see_3(pro:sub|we_2,det:art|the_4($1,n|sail+boat_5($1)),$0),$2($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: why should they come from Africa ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|should_2(and(and(v|come_4(pro:sub|they_3,$0),$1($0)),prep|from_5(n:prop|africa_6,$0)),$0)
example_end

Sent: they live in Africa ?
Sem: lambda $0_{r}.Q(and(v|live_2(pro:sub|they_1,$0),prep|in_3(n:prop|africa_4,$0)))
example_end

Sent: because Indians live in Africa .
Sem: lambda $0_{r}.and(v|live_3(n:prop|indians_2,$0),prep|in_4(n:prop|africa_5,$0))
example_end

Sent: you have some work ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,qn|some_3($1,n|work_4($1)),$0))
example_end

Sent: look in it and see what you see .
Sem: lambda $1_{e}.lambda $0_{r}.and(v|see_5(you,$1,$0),prep|in_2(pro:per|it_3,$0))
example_end

Sent: let me try it Adam .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|try_3(pro:obj|me_2,pro:per|it_4,$1),$0)
example_end

Sent: what is a game ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,n|game_4($2)),$0)
example_end

Sent: you 're supposed to fit the arms with the face .
Sem: lambda $0_{r}.aux|~be_2(v|suppose-past_3(pro:per|you_1,lambda $1_{r}.v|fit-zero_5(pro:per|you_1,det:art|the_6($2,att(n|arm-pl_7($2),prep|with_8(det:art|the_9($3,n|face_10($3))))),$1),$0),$0)
example_end

Sent: is it in the key case ?
Sem: lambda $0_{r}.Q(prep|in_3(det:art|the_4($1,and_comp(n|key_5($1),n|case_6($1))),pro:per|it_2,$0))
example_end

Sent: the key chain ?
Sem: BARE($0,Q(det:art|the_1($1,and_comp(n|key_2($1),n|chain_3($1)),$0)))
example_end

Sent: you ask Urs to tell you about this .
Sem: lambda $0_{r}.v|ask_2(pro:per|you_1,lambda $1_{r}.and(v|tell_5(n:prop|ursula_3,pro:per|you_6,$1),prep|about_7(pro:dem|this_8,$1)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: if you shoot him he won 't laugh .
Sem: lambda $0_{r}.not(mod|will_6(conj|if_1(v|shoot_3(pro:per|you_2,pro:obj|him_4,$0),v|laugh_8(pro:sub|he_5,$0)),$0),$0)
example_end

Sent: in the box .
Sem: det:art|the_2($0,n|box_3($0))
example_end

Sent: draw on the paper .
Sem: lambda $0_{r}.and(v|draw_1(you,$0),prep|on_2(det:art|the_3($1,n|paper_4($1)),$0))
example_end

Sent: what are you going to do up there ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),adv|up_7(adv|there_8($1))),$0),$0)
example_end

Sent: can you measure the door ?
Sem: lambda $0_{r}.Q(mod|can_1(v|measure_3(pro:per|you_2,det:art|the_4($1,n|door_5($1)),$0),$0))
example_end

Sent: careful you almost hit Ursula .
Sem: lambda $0_{r}.and(and(n|hit_4(pro:per|you_2,n:prop|ursula_5,$0),adv|almost_3($0)),co|careful_1($0))
example_end

Sent: can you measure the door for me ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|measure_3(pro:per|you_2,det:art|the_4($1,n|door_5($1)),$0),prep|for_6(pro:obj|me_7,$0)),$0))
example_end

Sent: why d you want to ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|want_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: you broke it .
Sem: lambda $0_{r}.v|break-past_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: and you can 't have that .
Sem: lambda $0_{r}.not(mod|can_3(v|have_5(pro:per|you_2,pro:dem|that_6,$0),$0),$0)
example_end

Sent: yes you broke it .
Sem: lambda $0_{r}.and(v|break-past_3(pro:per|you_2,pro:per|it_4,$0),co|yes_1($0))
example_end

Sent: yes sticks do break .
Sem: lambda $0_{r}.and(mod|do_3(v|break_4(BARE($1,v|stick-3s_2($1)),$0),$0),co|yes_1($0))
example_end

Sent: well sit down and write .
Sem: lambda $0_{r}.and(and(v|write_5(you,$0),adv|down_3($0)),co|well_1($0))
example_end

Sent: well don 't do that .
Sem: lambda $0_{r}.not(mod|do_2(v|do_4(you,pro:dem|that_5,$0),$0),$0)
example_end

Sent: we can make it round again .
Sem: lambda $0_{r}.mod|can_2(and(v|make_3(pro:sub|we_1,lambda $1_{r}.adv|round_5(pro:per|it_4,$1),$0),adv|again_6($0)),$0)
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: well that 's not a stapler is it ?
Sem: lambda $0_{r}.Q(and(and(not(det:art|a_5(pro:dem|that_2,n|staple-dv_6(pro:dem|that_2,$0)),$0),aux|be-3s_7(pro:per|it_8,$0)),co|well_1($0)))
example_end

Sent: what is that you have in your hand ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: a wrench .
Sem: det:art|a_1($0,v|wrench_2($0))
example_end

Sent: what kind of wrench is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_6,att(n|kind_2(pro:per|it_6,$0),prep|of_3(BARE($2,v|wrench_4($2)))))
example_end

Sent: paper punch .
Sem: BARE($0,and_comp(n|paper_1($0),n|punch_2($0)))
example_end

Sent: from the bag .
Sem: prep|from_1(det:art|the_2($0,n|bag_3($0)))
example_end

Sent: what can we take down ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_2(and(v|take_4(pro:sub|we_3,$1,$0),adv|down_5($0)),$0)
example_end

Sent: where 's the key ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|key_4($1)),$0),$2($0))
example_end

Sent: Robin lost the key to the door ?
Sem: lambda $0_{r}.Q(v|lose-past_2(n:prop|robin_1,det:art|the_3($1,att(n|key_4($1),prep|to_5(det:art|the_6($2,n|door_7($2))))),$0))
example_end

Sent: maybe one of my keys fits .
Sem: lambda $0_{r}.and(v|fit-3s_6(BARE($1,pro:indef|one_2($1)),$0),adv|maybe_1($0))
example_end

Sent: if you 're careful .
Sem: lambda $0_{r}.co|careful_4(pro:per|you_2,$0)
example_end

Sent: can you find a key that fits the lock ?
Sem: lambda $0_{r}.Q(mod|can_1(v|find_3(pro:per|you_2,det:art|a_4($1,n|key_5($1)),$0),$0))
example_end

Sent: a house to a door ?
Sem: BARE($0,Q(det:art|a_1($1,att(n|house_2($1),prep|to_3(det:art|a_4($2,n|door_5($2)))),$0)))
example_end

Sent: you mean a door to the house ?
Sem: lambda $0_{r}.Q(v|mean_2(pro:per|you_1,det:art|a_3($1,att(n|door_4($1),prep|to_5(det:art|the_6($2,n|house_7($2))))),$0))
example_end

Sent: somebody can walk in .
Sem: lambda $0_{r}.mod|can_2(and(v|walk_3(pro:indef|somebody_1,$0),adv|in_4($0)),$0)
example_end

Sent: Adam may I try it ?
Sem: lambda $0_{r}.Q(mod|may_2(v|try_4(pro:sub|i_3,pro:per|it_5,$0),$0))
example_end

Sent: he said one of your brothers .
Sem: lambda $0_{r}.v|say-past_2(pro:sub|he_1,BARE($1,det:num|one_3($1)),$0)
example_end

Sent: he didn 't think this key would work .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|he_1,lambda $1_{r}.mod|will-cond_7(v|work_8(pro:dem|this_5($2,n|key_6($2)),$1),$1),$0),$0),$0)
example_end

Sent: the keyhole in your door is closed up .
Sem: lambda $0_{r}.aux|be-3s_6(and(part|close-pastp_7(det:art|the_1($1,att(n|key+hole_2($1),prep|in_3(det:poss|your_4($2,n|door_5($2))))),$0),adv|up_8($0)),$0)
example_end

Sent: I think you do it with screws and a screwdriver Adam .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.and(v|do_4(pro:per|you_3,pro:per|it_5,$1),prep|with_6(det:art|a_9($2,n|screw+driver_10($2)),$1)),$0)
example_end

Sent: you had one in your pocket .
Sem: lambda $0_{r}.and(part|have-pastp_2(pro:per|you_1,pro:indef|one_3,$0),prep|in_4(det:poss|your_5($1,n|pocket_6($1)),$0))
example_end

Sent: okay that 's enough .
Sem: lambda $0_{r}.and(adv|enough_4(pro:dem|that_2,$0),co|okay_1($0))
example_end

Sent: Adam you 're just walking over her feet .
Sem: lambda $0_{r}.cop|~be_3(and(and(part|walk-presp_5(pro:per|you_2,$0),adv|just_4($0)),prep|over_6(det:poss|her_7($1,n|foot-pl_8($1)),$0)),$0)
example_end

Sent: you might break that off .
Sem: lambda $0_{r}.mod|might_2(and(v|break_3(pro:per|you_1,pro:dem|that_4,$0),adv|off_5($0)),$0)
example_end

Sent: no I don 't think you should do that .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|should_7(v|do_8(pro:per|you_6,pro:dem|that_9,$1),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: put it on the board .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|board_5($1)),$0))
example_end

Sent: yes if you 're careful .
Sem: lambda $0_{r}.and(co|careful_5(pro:per|you_3,$0),co|yes_1($0))
example_end

Sent: where 's my key ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|my_3($1,n|key_4($1)),$0),$2($0))
example_end

Sent: are you going to put it on ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.and(v|put-zero_5(pro:per|you_2,pro:per|it_6,$1),adv|on_7($1)),$0),$0))
example_end

Sent: you put it in .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:per|you_1,pro:per|it_3,$0),adv|in_4($0))
example_end

Sent: do it on the floor first .
Sem: lambda $0_{r}.and(and(mod|do_1(you,pro:per|it_2,$0),prep|on_3(det:art|the_4($1,n|floor_5($1)),$0)),adv|first_6($0))
example_end

Sent: put your lock in on the floor .
Sem: lambda $0_{r}.and(and(v|put-zero_1(you,det:poss|your_2($1,n|lock_3($1)),$0),adv|in_4($0)),prep|on_5(det:art|the_6($2,n|floor_7($2)),$0))
example_end

Sent: be careful and don 't lose the screws .
Sem: lambda $0_{r}.not(mod|do_4(v|lose_6(det:art|the_7($1,n|screw-pl_8($1)),$0),$0),$0)
example_end

Sent: ouch Adam .
Sem: lambda $0_{r}.n|ouch_1($0)
example_end

Sent: you don 't need that .
Sem: lambda $0_{r}.not(mod|do_2(v|need_4(pro:per|you_1,pro:dem|that_5,$0),$0),$0)
example_end

Sent: I don 't think you need that either .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:per|you_5,pro:dem|that_7,$1),$0),adv|either_8($0)),$0),$0)
example_end

Sent: okay now you do it .
Sem: lambda $0_{r}.and(and(v|do_4(pro:per|you_3,pro:per|it_5,$0),adv|now_2($0)),co|okay_1($0))
example_end

Sent: no you don 't need this at all .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|need_5(pro:per|you_2,pro:dem|this_6,$0),prep|at_7(BARE($1,pro:indef|all_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: because we need that on the door .
Sem: lambda $0_{r}.and(v|need_3(pro:sub|we_2,pro:dem|that_4,$0),prep|on_5(det:art|the_6($1,n|door_7($1)),$0))
example_end

Sent: it already has a lock in it I think .
Sem: lambda $0_{r}.and(and(and(v|have-3s_3(pro:per|it_1,det:art|a_4($1,n|lock_5($1)),$0),adv|already_2($0)),prep|in_6(pro:per|it_7,$0)),v|think_9(pro:sub|i_8,$0))
example_end

Sent: can you screw this ?
Sem: lambda $0_{r}.Q(mod|can_1(v|screw_3(pro:per|you_2,pro:dem|this_4,$0),$0))
example_end

Sent: that 's part of the lock .
Sem: lambda $0_{r}.att(n|part_3(pro:dem|that_1,$0),prep|of_4(det:art|the_5($1,n|lock_6($1))))
example_end

Sent: yes that 's to take it off .
Sem: lambda $0_{r}.and(cop|~be_3(pro:dem|that_2,lambda $1_{r}.and(v|take_5(pro:dem|that_2,pro:per|it_6,$1),adv|off_7($1)),$0),co|yes_1($0))
example_end

Sent: no no you don 't need that .
Sem: lambda $0_{r}.and(not(mod|do_4(v|need_6(pro:per|you_3,pro:dem|that_7,$0),$0),$0),and(co|no_2($0),co|no_1($0)))
example_end

Sent: put your screw back in .
Sem: lambda $0_{r}.and(v|put-zero_1(you,det:poss|your_2($1,n|screw_3($1)),$0),adj|back_4(adv|in_5($0)))
example_end

Sent: where 's your screwdriver ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,n|screw+driver_4($1)),$0),$2($0))
example_end

Sent: have you looked in there ?
Sem: lambda $0_{r}.Q(v|have_1(and(cop|look-past_3(pro:per|you_2,$0),prep|in_4(adv|there_5($0))),$0))
example_end

Sent: look in there .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|in_2(adv|there_3($0)))
example_end

Sent: what d you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I see my Harvard shirt .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,co|my_3($1,and_comp(n:prop|harvard_4($1),n|shirt_5($1))),$0)
example_end

Sent: that 's not a Harvard shirt .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,and_comp(n:prop|harvard_5(pro:dem|that_1,$0),n|shirt_6(pro:dem|that_1,$0))),$0)
example_end

Sent: look that way what d you see ?
Sem: lambda $2_{e}.lambda $0_{r}.and(co|look_1(you,pro:dem|that_2($1,n|way_3($1)),$0),mod|do_5(v|see_7(pro:per|you_6,$2,$0),$0))
example_end

Sent: look through the other end and see what you see .
Sem: lambda $1_{e}.lambda $0_{r}.and(v|see_7(you,$1,$0),prep|through_2(det:art|the_3($2,and(qn|other_4($2),n|end_5($2))),$0))
example_end

Sent: you see the wood of the hammer .
Sem: lambda $0_{r}.v|see_2(pro:per|you_1,det:art|the_3($1,att(n|wood_4($1),prep|of_5(det:art|the_6($2,n|hammer_7($2))))),$0)
example_end

Sent: wood or word ?
Sem: BARE($0,Q(n|word_3($0)))
example_end

Sent: we 'll see what happens when you put a key in the lock .
Sem: lambda $0_{r}.mod|~will_2(v|see_3(pro:sub|we_1,lambda $1_{r}.and(v|happen-3s_5(pro:int|what_4,$1),and(and(v|put-zero_8(pro:per|you_7,det:art|a_9($2,n|key_10($2)),$1),conj|when_6($1)),prep|in_11(det:art|the_12($3,n|lock_13($3)),$1))),$0),$0)
example_end

Sent: whoops you missed .
Sem: lambda $0_{r}.and(v|miss-past_3(pro:per|you_2,$0),co|whoops_1($0))
example_end

Sent: where d you put the keys ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|put-zero_4(pro:per|you_3,det:art|the_5($1,n|key-pl_6($1)),$0),$2($0)),$0)
example_end

Sent: is that the right key ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:rel|that_2,and(n|key_5(pro:rel|that_2,$0),adj|right_4(pro:rel|that_2,$0))))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: try that .
Sem: lambda $0_{r}.v|try_1(you,pro:dem|that_2,$0)
example_end

Sent: is it turned ?
Sem: lambda $0_{r}.Q(aux|be-3s_1(v|turn-past_3(pro:per|it_2,$0),$0))
example_end

Sent: okay Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|okay_1($0))
example_end

Sent: come in .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|in_2($0))
example_end

Sent: you didn 't know I was home did you ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(v|know_4(pro:per|you_1,lambda $1_{r}.adv|home_7(pro:sub|i_5,$1),$0),$0),$0),mod|do-past_8(pro:per|you_9,$0)))
example_end

Sent: where were you Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-past_2(pro:per|you_3,$0),$1($0))
example_end

Sent: from Pembroke ?
Sem: Q(prep|from_1(n:prop|pembroke_2))
example_end

Sent: did you have a nice time in Pembroke ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|have_3(pro:per|you_2,det:art|a_4($1,and(adj|nice_5($1),n|time_6($1))),$0),prep|in_7(n:prop|pembroke_8,$0)),$0))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you played ?
Sem: lambda $0_{r}.Q(v|play-past_2(pro:per|you_1,$0))
example_end

Sent: you played with the kitty ?
Sem: lambda $0_{r}.Q(and(v|play-past_2(pro:per|you_1,$0),prep|with_3(det:art|the_4($1,n|kitty_5($1)),$0)))
example_end

Sent: what was the kitty 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|kitty_4's($2,n|name_6($2)),$0)
example_end

Sent: that 's a funny name for a kitty .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(and(n|name_5(pro:dem|that_1,$0),adj|fun-dn_4(pro:dem|that_1,$0)),prep|for_6(det:art|a_7($1,n|kitty_8($1)))))
example_end

Sent: what else did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|do_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: with a rocket ship ?
Sem: Q(prep|with_1(det:art|a_2($0,and_comp(n|rocket_3($0),n|ship_4($0)))))
example_end

Sent: oh what was the name of the rocket ship ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(det:art|the_4($2,att(n|name_5($2),prep|of_6(det:art|the_7($3,and_comp(n|rocket_8($3),n|ship_9($3)))))),$0),co|oh_1($0))
example_end

Sent: a violin ?
Sem: BARE($0,Q(det:art|a_1($1,n|violin_2($1),$0)))
example_end

Sent: that 's a funny name for a rocket ship .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(and(n|name_5(pro:dem|that_1,$0),adj|fun-dn_4(pro:dem|that_1,$0)),prep|for_6(det:art|a_7($1,and_comp(n|rocket_8($1),n|ship_9($1))))))
example_end

Sent: where is Ursula going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|go-presp_4(n:prop|ursula_3,$0),$1($0)),$0)
example_end

Sent: Adam you could draw some pictures now .
Sem: lambda $0_{r}.mod|could_3(and(v|draw_4(pro:per|you_2,qn|some_5($1,n|picture-pl_6($1)),$0),adv|now_7($0)),$0)
example_end

Sent: you drew a picture once ?
Sem: lambda $0_{r}.Q(and(v|draw-past_2(pro:per|you_1,det:art|a_3($1,n|picture_4($1)),$0),adv|once_5($0)))
example_end

Sent: you don 't have a mailbox up here .
Sem: lambda $0_{r}.not(mod|do_2(and(v|have_4(pro:per|you_1,det:art|a_5($1,n|mail+box_6($1)),$0),adv|up_7(adv|here_8($0))),$0),$0)
example_end

Sent: to Robin ?
Sem: Q(prep|to_1(n:prop|robin_2))
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: Robin will read it ?
Sem: lambda $0_{r}.Q(mod|will_2(v|read-zero_3(n:prop|robin_1,pro:per|it_4,$0),$0))
example_end

Sent: by himself ?
Sem: Q(prep|by_1(pro:refl|himself_2))
example_end

Sent: he 's been to school for one day .
Sem: lambda $0_{r}.aux|~be_2(prep|to_4(BARE($1,att(n|school_5($1),prep|for_6(BARE($2,pro:indef|one_7(n|day_8($2)))))),pro:sub|he_1,$0),$0)
example_end

Sent: why should he cry in school ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|should_2(and(and(v|cry_4(pro:sub|he_3,$0),$1($0)),prep|in_5(BARE($2,n|school_6($2)),$0)),$0)
example_end

Sent: why would he want to ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|want_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: because Shadow_Gay spanked him .
Sem: lambda $0_{r}.v|spank-past_3(n:prop|shadow_gay_2,pro:obj|him_4,$0)
example_end

Sent: some little paper off ?
Sem: BARE($0,Q(adv|off_4(qn|some_1($1,and(adj|little_2($1),n|paper_3($1))),$0)))
example_end

Sent: well draw on this .
Sem: lambda $0_{r}.and(and(v|draw_2(you,$0),prep|on_3(pro:dem|this_4,$0)),co|well_1($0))
example_end

Sent: you 're going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: a kitty 's name .
Sem: n|kitty_2's($0,n|name_4($0))
example_end

Sent: look in the other end Adam .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|in_2(det:art|the_3($1,and(qn|other_4($1),n|end_5($1))),$0))
example_end

Sent: turn it over .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|over_3($0))
example_end

Sent: turn them around .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:obj|them_2,$0),adv|around_3($0))
example_end

Sent: yes I see you .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,pro:per|you_4,$0),co|yes_1($0))
example_end

Sent: well write on the paper .
Sem: lambda $0_{r}.and(and(v|write_2(you,$0),prep|on_3(det:art|the_4($1,n|paper_5($1)),$0)),co|well_1($0))
example_end

Sent: well don 't write on it .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|write_4(you,$0),prep|on_5(pro:per|it_6,$0)),$0),$0),co|well_1($0))
example_end

Sent: yes a funny man .
Sem: lambda $0_{r}.and(det:art|a_2($1,and(adj|fun-dn_3($1),n|man_4($1)),$0),co|yes_1($0))
example_end

Sent: no you can 't take it out .
Sem: lambda $0_{r}.and(not(mod|can_3(and(v|take_5(pro:per|you_2,pro:per|it_6,$0),adv|out_7($0)),$0),$0),co|no_1($0))
example_end

Sent: he doesn 't have any arms .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|he_1,qn|any_5($1,n|arm-pl_6($1)),$0),$0),$0)
example_end

Sent: where d you think his arms are ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|think_4(pro:per|you_3,lambda $1_{r}.cop|be-pres_7(det:poss|his_5($2,n|arm-pl_6($2)),$1),$0),$3($0)),$0)
example_end

Sent: the pen ?
Sem: BARE($0,Q(det:art|the_1($1,n|pen_2($1),$0)))
example_end

Sent: is that a man ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|man_4(pro:rel|that_2,$0)))
example_end

Sent: why don 't you write something ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|write_5(pro:per|you_4,pro:indef|something_6,$0),$1($0)),$0),$0)
example_end

Sent: with the pen .
Sem: prep|with_1(det:art|the_2($0,n|pen_3($0)))
example_end

Sent: write your name .
Sem: lambda $0_{r}.v|write_1(you,det:poss|your_2($1,n|name_3($1)),$0)
example_end

Sent: will read your name ?
Sem: lambda $0_{r}.Q(mod|will_1(v|read-zero_2(you,det:poss|your_3($1,n|name_4($1)),$0),$0))
example_end

Sent: what 's the bird doing ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_5(det:art|the_3($1,n|bird_4($1)),$2,$0),$0)
example_end

Sent: does this write ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|write_3(pro:dem|this_2,$0),$0))
example_end

Sent: she showed you one time .
Sem: lambda $0_{r}.v|show-past_2(pro:sub|she_1,BARE($1,det:num|one_4(n|time_5($1))),pro:per|you_3,$0)
example_end

Sent: whose name are you writing ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.cop|be-pres_3(part|write-presp_5(pro:per|you_4,$1($2,n|name_2($2)),$0),$0)
example_end

Sent: where has Shadow_Gay been ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|have-3s_2(and(cop|be-pastp_4(n:prop|shadow_gay_3,$0),$1($0)),$0)
example_end

Sent: I haven 't seen Shadow_Gay in a long time .
Sem: lambda $0_{r}.not(aux|have_2(and(part|see-pastp_4(pro:sub|i_1,n:prop|shadow_gay_5,$0),prep|in_6(det:art|a_7($1,and(adj|long_8($1),n|time_9($1))),$0)),$0),$0)
example_end

Sent: he went to Boston University ?
Sem: lambda $0_{r}.Q(and(v|go-past_2(pro:sub|he_1,$0),prep|to_3(BARE($1,and_comp(n:prop|boston_4($1),n:prop|university_5($1))),$0)))
example_end

Sent: oh and what did he do there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do-past_4(and(v|do_6(pro:sub|he_5,$1,$0),adv|there_7($0)),$0),co|oh_1($0))
example_end

Sent: what did he play ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|play_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: he played with you ?
Sem: lambda $0_{r}.Q(and(v|play-past_2(pro:sub|he_1,$0),prep|with_3(pro:per|you_4,$0)))
example_end

Sent: and your bunny .
Sem: det:poss|your_2($0,n|bunny_3($0))
example_end

Sent: with your bunny ?
Sem: Q(prep|with_1(det:poss|your_2($0,n|bunny_3($0))))
example_end

Sent: your name is Bunny ?
Sem: lambda $0_{r}.Q(n:prop|bunny_4(det:poss|your_1($1,n|name_2($1)),$0))
example_end

Sent: my name is funny .
Sem: lambda $0_{r}.adj|fun-dn_4(det:poss|my_1($1,n|name_2($1)),$0)
example_end

Sent: funny bunny ?
Sem: BARE($0,Q(and(adj|fun-dn_1($0),n|bunny_2($0))))
example_end

Sent: what 's a Boody ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,chi|boody_4($2)),$0)
example_end

Sent: this is one of your tinker toys .
Sem: lambda $0_{r}.att(pro:indef|one_3(pro:dem|this_1,$0),prep|of_4(det:poss|your_5($1,and_comp(n|tinker_6($1),n|toy-pl_7($1)))))
example_end

Sent: would you like to do the puzzle that was in this morning 's paper ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,lambda $1_{r}.v|do_5(pro:per|you_2,det:art|the_6($2,n|puzzle_7($2)),$1),$0),$0))
example_end

Sent: you have so many pencils .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,adv|so_3(qn|many_4($1,n|pencil-pl_5($1))),$0)
example_end

Sent: you lost your footie ballie .
Sem: lambda $0_{r}.v|lose-past_2(pro:per|you_1,det:poss|your_3($1,and_comp(n|foot-dim_4($1),n|ball-dim_5($1))),$0)
example_end

Sent: d you see the puzzle ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,det:art|the_4($1,n|puzzle_5($1)),$0),$0))
example_end

Sent: I 'm hiding Adam .
Sem: lambda $0_{r}.aux|~be_2(part|hide-presp_3(pro:sub|i_1,$0),$0)
example_end

Sent: I wouldn 't know .
Sem: lambda $0_{r}.not(mod|will_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what did the puzzle say ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(v|say_5(det:art|the_3($1,n|puzzle_4($1)),$2,$0),$0)
example_end

Sent: I don 't see the puzzle .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,det:art|the_5($1,n|puzzle_6($1)),$0),$0),$0)
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: you might hurt yourself .
Sem: lambda $0_{r}.mod|might_2(v|hurt-zero_3(pro:per|you_1,pro:refl|yourself_4,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: Adam d you want to put this on the key chain ?
Sem: lambda $0_{r}.Q(v|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.and(v|put-zero_6(pro:per|you_3,pro:dem|this_7,$1),prep|on_8(det:art|the_9($2,and_comp(n|key_10($2),n|chain_11($2))),$1)),$0),$0))
example_end

Sent: you come and look Adam .
Sem: lambda $0_{r}.cop|look_4(pro:per|you_1,$0)
example_end

Sent: come and look .
Sem: lambda $0_{r}.cop|look_3(you,$0)
example_end

Sent: you hold the key .
Sem: lambda $0_{r}.v|hold_2(pro:per|you_1,det:art|the_3($1,n|key_4($1)),$0)
example_end

Sent: well don 't play with it .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|play_4(you,$0),prep|with_5(pro:per|it_6,$0)),$0),$0),co|well_1($0))
example_end

Sent: how can you get it on ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(and(v|get_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),adv|on_6($0)),$0)
example_end

Sent: no I 'm asking you .
Sem: lambda $0_{r}.and(aux|~be_3(part|ask-presp_4(pro:sub|i_2,pro:per|you_5,$0),$0),co|no_1($0))
example_end

Sent: maybe you just have_to push it on Adam .
Sem: lambda $0_{r}.mod:aux|have_to_4(and(and(and(v|push_5(pro:per|you_2,pro:per|it_6,$0),adv|maybe_1($0)),adv|just_3($0)),prep|on_7($0)),$0)
example_end

Sent: you knocked my glasses off .
Sem: lambda $0_{r}.and(v|knock-past_2(pro:per|you_1,det:poss|my_3($1,n|glass-pl_4($1)),$0),adv|off_5($0))
example_end

Sent: did it ?
Sem: lambda $0_{r}.Q(v|do-past_1(you,pro:per|it_2,$0))
example_end

Sent: why did it frighten you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|frighten_4(pro:per|it_3,pro:per|you_5,$0),$1($0)),$0)
example_end

Sent: I heard a little click .
Sem: lambda $0_{r}.v|hear-past_2(pro:sub|i_1,det:art|a_3($1,and(adj|little_4($1),n|click_5($1))),$0)
example_end

Sent: click click click ?
Sem: BARE($0,Q(and_comp(and_comp(n|click_1($0),n|click_2($0)),n|click_3($0))))
example_end

Sent: what about the door ?
Sem: att(pro:int|what_1,adv|about_2(det:art|the_3($0,n|door_4($0))))
example_end

Sent: what 's the governor 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|governor_4's($2,n|name_6($2)),$0)
example_end

Sent: my pocket .
Sem: det:poss|my_1($0,n|pocket_2($0))
example_end

Sent: I found a penny on the floor .
Sem: lambda $0_{r}.and(v|find-past_2(pro:sub|i_1,det:art|a_3($1,n|penny_4($1)),$0),prep|on_5(det:art|the_6($2,n|floor_7($2)),$0))
example_end

Sent: we don 't need it ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|need_4(pro:sub|we_1,pro:per|it_5,$0),$0),$0))
example_end

Sent: what else do we need ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_3(v|need_5(pro:sub|we_4,$1,$0),$0)
example_end

Sent: whoops you missed it .
Sem: lambda $0_{r}.and(v|miss-past_3(pro:per|you_2,pro:per|it_4,$0),co|whoops_1($0))
example_end

Sent: don 't knock me .
Sem: lambda $0_{r}.not(mod|do_1(v|knock_3(you,pro:obj|me_4,$0),$0),$0)
example_end

Sent: if a carpenter knocks what does a plumber do ?
Sem: lambda $3_{e}.lambda $0_{r}.v|do-3s_6(conj|if_1(v|knock-3s_4(det:art|a_2($1,n|carpenter_3($1)),$0),v|do_9(det:art|a_7($2,n|plumber_8($2)),$3,$0)),$0)
example_end

Sent: who puts the door in ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|put-3s_2($1,det:art|the_3($2,n|door_4($2)),$0),adv|in_5($0))
example_end

Sent: a carpenter ?
Sem: BARE($0,Q(det:art|a_1($1,n|carpenter_2($1),$0)))
example_end

Sent: alright carpenter Adam .
Sem: lambda $0_{r}.and(and_comp(n|carpenter_2($0),n:prop|adam_3($0)),co|alright_1($0))
example_end

Sent: I 'm a nut ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:sub|i_1,n|nut_4(pro:sub|i_1,$0)))
example_end

Sent: did he say mhm ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|say_3(pro:sub|he_2,BARE($1,co|yes_4($1)),$0),$0))
example_end

Sent: he was a nice carpenter wasn 't he ?
Sem: lambda $0_{r}.Q(and(det:art|a_3(pro:sub|he_1,and(n|carpenter_5(pro:sub|he_1,$0),adj|nice_4(pro:sub|he_1,$0))),not(cop|be_6(pro:sub|he_8,$0),$0)))
example_end

Sent: you didn 't get in his way ?
Sem: lambda $0_{r}.Q(not(mod|do_2(and(v|get_4(pro:per|you_1,$0),prep|in_5(det:poss|his_6($1,n|way_7($1)),$0)),$0),$0))
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I 'm waiting for you to put the other door hinge on .
Sem: lambda $0_{r}.aux|~be_2(and(part|wait-presp_3(pro:sub|i_1,lambda $1_{r}.and(v|put-zero_7(pro:sub|i_1,det:art|the_8($2,and_comp(n|door_10($2),and(qn|other_9($2),n|hinge_11($2)))),$1),adv|on_12($1)),$0),prep|for_4(pro:per|you_5,$0)),$0)
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: what d you do when you go to school Adam ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(mod|do_2(v|do_4(pro:per|you_3,$1,$0),$0),and(and(v|go_7(pro:per|you_6,$0),$2($0)),prep|to_8(BARE($3,n|school_9($3)),$0)))
example_end

Sent: what d you think Robin is doing in school ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.aux|be-3s_6(and(part|do-presp_7(n:prop|robin_5,pro:int|what_1,$1),prep|in_8(BARE($2,n|school_9($2)),$1)),$1),$0),$0))
example_end

Sent: playing with your bunny .
Sem: lambda $0_{r}.and(part|play-presp_1(you,$0),prep|with_2(det:poss|your_3($1,n|bunny_4($1)),$0))
example_end

Sent: with your cowboy bunny ?
Sem: Q(prep|with_1(det:poss|your_2($0,and_comp(n|cow+boy_3($0),n|bunny_4($0)))))
example_end

Sent: cowboy hat in school ?
Sem: BARE($0,Q(att(and_comp(n|cow+boy_1($0),n|hat_2($0)),prep|in_3(BARE($1,n|school_4($1))))))
example_end

Sent: some little screws in .
Sem: adv|in_4(qn|some_1($0,and(adj|little_2($0),n|screw-pl_3($0))))
example_end

Sent: in the binoculars .
Sem: prep|in_1(det:art|the_2($0,n|binocular-pl_3($0)))
example_end

Sent: however it 's put together .
Sem: lambda $0_{r}.cop|~be_3(and(and(v|put-zero_4(pro:per|it_2,$0),adv|however_1($0)),adv|together_5($0)),$0)
example_end

Sent: I don 't think you need to take it apart .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:per|you_5,lambda $2_{r}.and(v|take_8(pro:per|you_5,pro:per|it_9,$2),adv|apart_10($2)),$1),$0),$0),$0)
example_end

Sent: no I think these must be David 's .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.mod|must_5(poss|~s_8(n:prop|david_7,pro:dem|these_4,$1),$1),$0),co|no_1($0))
example_end

Sent: take it off .
Sem: lambda $0_{r}.and(v|take_1(you,pro:per|it_2,$0),adv|off_3($0))
example_end

Sent: yes but I don 't see another one like that .
Sem: lambda $0_{r}.and(not(mod|do_4(and(v|see_6(pro:sub|i_3,qn|another_7($1,pro:indef|one_8($1)),$0),prep|like_9(pro:dem|that_10,$0)),$0),$0),co|yes_1($0))
example_end

Sent: to the door .
Sem: prep|to_1(det:art|the_2($0,n|door_3($0)))
example_end

Sent: why we don 't have a lock to fit the key .
Sem: lambda $4_{<r,t>}.lambda $0_{r}.not(mod|do_3(and(v|have_5(pro:sub|we_2,det:art|a_6($1,rel(n|lock_7($1),lambda $2_{r}.v|fit-zero_9(_,det:art|the_10($3,n|key_11($3)),$2))),$0),$4($0)),$0),$0)
example_end

Sent: because we couldn 't find the key to fit it .
Sem: lambda $0_{r}.not(mod|could_3(v|find_5(pro:sub|we_2,det:art|the_6($1,rel(n|key_7($1),lambda $2_{r}.v|fit-zero_9(_,pro:per|it_10,$2))),$0),$0),$0)
example_end

Sent: I guess we didn 't buy the right one .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.not(mod|do_4(v|buy_6(pro:sub|we_3,det:art|the_7($2,att(pro:indef|one_9,BARE($3,adj|right_8($3)),$2)),$1),$1),$1),$0)
example_end

Sent: you know how this works Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|know_2(pro:per|you_1,$0),and(n|work-pl_5(det:dem|this_4,$0),$1($0)))
example_end

Sent: d you see anything happening ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,BARE($1,and(pro:indef|anything_4($1),lambda $2_{r}.part|happen-presp_5(_,$1,$2))),$0),$0))
example_end

Sent: where 's your rain hat ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:poss|your_3($1,and_comp(n|rain_4($1),n|hat_5($1))),$0),$2($0))
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: maybe it 's in the bag .
Sem: lambda $0_{r}.adv|maybe_1(prep|in_4(det:art|the_5($1,n|bag_6($1)),pro:per|it_2,$0))
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: oh it 's a game .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,n|game_5(pro:per|it_2,$0)),co|oh_1($0))
example_end

Sent: he just had a nap .
Sem: lambda $0_{r}.and(v|have-past_3(pro:sub|he_1,det:art|a_4($1,n|nap_5($1)),$0),adv|just_2($0))
example_end

Sent: yes that 'll hurt him .
Sem: lambda $0_{r}.and(mod|~will_3(v|hurt-zero_4(pro:dem|that_2,pro:obj|him_5,$0),$0),co|yes_1($0))
example_end

Sent: he 'll put it in his mouth .
Sem: lambda $0_{r}.mod|~will_2(and(v|put-zero_3(pro:sub|he_1,pro:per|it_4,$0),prep|in_5(det:poss|his_6($1,n|mouth_7($1)),$0)),$0)
example_end

Sent: yes he puts everything in his mouth .
Sem: lambda $0_{r}.and(and(v|put-3s_3(pro:sub|he_2,pro:indef|everything_4,$0),prep|in_5(det:poss|his_6($1,n|mouth_7($1)),$0)),co|yes_1($0))
example_end

Sent: well sometimes you do when you wake up from your nap .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(and(and(v|do_4(pro:per|you_3,$0),adv|sometimes_2($0)),and(and(v|wake_7_up_8(pro:per|you_6,$0),$1($0)),prep|from_9(det:poss|your_10($2,n|nap_11($2)),$0))),n|well_1($0))
example_end

Sent: are your hands washed ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(v|wash-past_4(det:poss|your_2($1,n|hand-pl_3($1)),$0),$0))
example_end

Sent: he 's telling a story .
Sem: lambda $0_{r}.aux|~be_2(part|tell-presp_3(pro:sub|he_1,det:art|a_4($1,n|story_5($1)),$0),$0)
example_end

Sent: a frog .
Sem: det:art|a_1($0,n|frog_2($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: don 't play with the record .
Sem: lambda $0_{r}.not(mod|do_1(and(v|play_3(you,$0),prep|with_4(det:art|the_5($1,n|record_6($1)),$0)),$0),$0)
example_end

Sent: I can 't see what it says .
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|can_2(v|see_4(pro:sub|i_1,$1,$0),$0),$0)
example_end

Sent: who 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's your bunny with the funny name .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|that_1,att(n|bunny_4(pro:dem|that_1,$0),prep|with_5(det:art|the_6($1,and(adj|fun-dn_7($1),n|name_8($1))))))
example_end

Sent: what 's the bunny 's name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n|bunny_4's($2,n|name_6($2)),$0)
example_end

Sent: something to drink .
Sem: BARE($0,rel(pro:indef|something_1($0),lambda $1_{r}.v|drink_3(you,$1)))
example_end

Sent: would you like some milk ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(v|like_3(pro:per|you_2,qn|some_4($1,n|milk_5($1)),$0),$0))
example_end

Sent: well why don 't we pick some of the toys up first .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(not(mod|do_3(and(and(and(v|pick_6(pro:sub|we_5,qn|some_7(det:art|the_9($1,n|toy-pl_10($1))),$0),$2($0)),adv|up_11($0)),adv|first_12($0)),$0),$0),co|well_1($0))
example_end

Sent: no so you can 't spill it .
Sem: lambda $0_{r}.and(not(mod|can_4(v|spill_6(pro:per|you_3,pro:per|it_7,$0),$0),$0),co|no_1($0))
example_end

Sent: except for the key case .
Sem: prep|for_2(det:art|the_3($0,and_comp(n|key_4($0),n|case_5($0))))
example_end

Sent: you could keep that .
Sem: lambda $0_{r}.mod|could_2(v|keep_3(pro:per|you_1,pro:dem|that_4,$0),$0)
example_end

Sent: did you pick all of them up ?
Sem: lambda $0_{r}.Q(mod|do-past_1(and(v|pick_3(pro:per|you_2,BARE($1,att(pro:indef|all_4($1),prep|of_5(pro:obj|them_6))),$0),adv|up_7($0)),$0))
example_end

Sent: I found one that you missed .
Sem: lambda $0_{r}.v|find-past_2(pro:sub|i_1,pro:indef|one_3,$0)
example_end

Sent: because it was in there .
Sem: lambda $0_{r}.and(cop|be-past_3(pro:per|it_2,$0),prep|in_4(adv|there_5($0)))
example_end

Sent: see these on the end ?
Sem: lambda $0_{r}.Q(and(v|see_1(you,pro:dem|these_2,$0),prep|on_3(det:art|the_4($1,n|end_5($1)),$0)))
example_end

Sent: they 're there so you can open them .
Sem: lambda $0_{r}.conj|so_4(mod|can_6(v|open_7(pro:per|you_5,pro:obj|them_8,$0),$0),and(aux|~be_2(pro:sub|they_1,$0),adv|there_3($0)))
example_end

Sent: because you broke it .
Sem: lambda $0_{r}.v|break-past_3(pro:per|you_2,pro:per|it_4,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: very good Adam .
Sem: BARE($0,adv|very_1(adj|good_2($0)))
example_end

Sent: so I can 't what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|can_3($1(pro:sub|i_2,$0),$0),$0)
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: why did you miss Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|miss_4(pro:per|you_3,n:prop|adam_5,$0),$1($0)),$0)
example_end

Sent: Paul Smith .
Sem: BARE($0,and_comp(n:prop|paul_1($0),n:prop|smith_2($0)))
example_end

Sent: he dropped your crayons .
Sem: lambda $0_{r}.v|drop-past_2(pro:sub|he_1,det:poss|your_3($1,n|crayon-pl_4($1)),$0)
example_end

Sent: didn 't you spank him ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|spank_4(pro:per|you_3,pro:obj|him_5,$0),$0),$0))
example_end

Sent: okay that 's enough spanking .
Sem: lambda $0_{r}.and(adv|enough_4(pro:dem|that_2,lambda $1_{r}.part|spank-presp_5(pro:dem|that_2,$1),$0),co|okay_1($0))
example_end

Sent: the bag .
Sem: det:art|the_1($0,n|bag_2($0))
example_end

Sent: you give it a name .
Sem: lambda $0_{r}.v|give_2(pro:per|you_1,det:art|a_4($1,n|name_5($1)),pro:per|it_3,$0)
example_end

Sent: what would you like its name to be ?
Sem: lambda $0_{r}.mod|will-cond_2(v|like_4(pro:per|you_3,det:poss|its_5($1,n|name_6($1)),$0),$0)
example_end

Sent: you tore off a hole ?
Sem: lambda $0_{r}.Q(and(v|tear-past_2(pro:per|you_1,det:art|a_4($1,n|hole_5($1)),$0),prep|off_3($0)))
example_end

Sent: he doesn 't want a little piece .
Sem: lambda $0_{r}.not(mod|do_2(v|want_4(pro:sub|he_1,det:art|a_5($1,and(adj|little_6($1),n|piece_7($1))),$0),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: it 's not a ball .
Sem: lambda $0_{r}.not(det:art|a_4(pro:per|it_1,n|ball_5(pro:per|it_1,$0)),$0)
example_end

Sent: where did you find that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|find_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: in a vase ?
Sem: Q(prep|in_1(det:art|a_2($0,n|vase_3($0))))
example_end

Sent: in water ?
Sem: Q(prep|in_1(BARE($0,n|water_2($0))))
example_end

Sent: did you bring one up ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|bring_3(pro:per|you_2,BARE($1,det:num|one_4($1)),$0),adv|up_5($0)),$0))
example_end

Sent: I thought you wanted her to read you a story .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.v|want-past_4(pro:per|you_3,lambda $2_{r}.v|read-zero_7(pro:obj|her_5,det:art|a_9($3,n|story_10($3)),pro:per|you_8,$2),$1),$0)
example_end

Sent: that doesn 't look like a banana .
Sem: lambda $0_{r}.not(mod|do_2(and(cop|look_4(pro:dem|that_1,$0),conj|like_5(det:art|a_6($1,n|banana_7($1)),$0)),$0),$0)
example_end

Sent: where is a story ?
Sem: det:art|a_3($0,n|story_4($0))
example_end

Sent: oh you mean the Humpty_Dumpty .
Sem: lambda $0_{r}.and(v|mean_3(pro:per|you_2,det:art|the_4($1,n:prop|humpty_dumpty_5($1)),$0),co|oh_1($0))
example_end

Sent: that hurts Paul .
Sem: lambda $0_{r}.v|hurt-3s_2(pro:rel|that_1,n:prop|paul_3,$0)
example_end

Sent: d you have a favorite story ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,det:art|a_4($1,and(adj|favorite_5($1),n|story_6($1))),$0),$0))
example_end

Sent: they took a bus to the hardware store .
Sem: lambda $0_{r}.and(v|take-past_2(pro:sub|they_1,det:art|a_3($1,n|bus_4($1)),$0),prep|to_5(det:art|the_6($2,and_comp(n|hardware_7($2),n|store_8($2))),$0))
example_end

Sent: did you take a bus ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|take_3(pro:per|you_2,det:art|a_4($1,n|bus_5($1)),$0),$0))
example_end

Sent: oh that 's very nice .
Sem: lambda $0_{r}.and(adv|very_4(adj|nice_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: did you ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:per|you_2,$0))
example_end

Sent: I don 't know why he broke his leg .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.and(v|break-past_7(pro:sub|he_6,det:poss|his_8($2,n|leg_9($2)),$1),adv:int|why_5($1)),$0),$0),$0)
example_end

Sent: is it better now ?
Sem: lambda $0_{r}.Q(adv|now_4(adj|good-cp_3(pro:per|it_2,$0)))
example_end

Sent: a toy car .
Sem: det:art|a_1($0,and_comp(n|toy_2($0),n|car_3($0)))
example_end

Sent: shoe store .
Sem: BARE($0,and_comp(n|shoe_1($0),n|store_2($0)))
example_end

Sent: do the bird .
Sem: lambda $0_{r}.v|do_1(you,det:art|the_2($1,n|bird_3($1)),$0)
example_end

Sent: is that a game ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|game_4(pro:rel|that_2,$0)))
example_end

Sent: well something like a game .
Sem: lambda $0_{r}.and(att(pro:indef|something_2,prep|like_3(det:art|a_4($1,n|game_5($1))),$0),co|well_1($0))
example_end

Sent: you can make the bird fly .
Sem: lambda $0_{r}.mod|can_2(v|make_3(pro:per|you_1,lambda $1_{r}.n|fly_6(det:art|the_4($2,n|bird_5($2)),$1),$0),$0)
example_end

Sent: he can flap his wings .
Sem: lambda $0_{r}.mod|can_2(v|flap_3(pro:sub|he_1,det:poss|his_4($1,n|wing-pl_5($1)),$0),$0)
example_end

Sent: we can cut paper ?
Sem: lambda $0_{r}.Q(mod|can_2(v|cut-zero_3(pro:sub|we_1,BARE($1,n|paper_4($1)),$0),$0))
example_end

Sent: I don 't think your scissors are up here .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(cop|be-pres_7(det:poss|your_5($2,n|scissors_6($2)),$1),prep|up_8(adv|here_9($1))),$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh you 're making the bird fly .
Sem: lambda $0_{r}.and(aux|~be_3(part|make-presp_4(pro:per|you_2,lambda $1_{r}.n|fly_7(det:art|the_5($2,n|bird_6($2)),$1),$0),$0),co|oh_1($0))
example_end

Sent: can you do it now ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|do_3(pro:per|you_2,pro:per|it_4,$0),adv|now_5($0)),$0))
example_end

Sent: can he get to his crown ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|get_3(pro:sub|he_2,$0),prep|to_4(det:poss|his_5($1,n|crown_6($1)),$0)),$0))
example_end

Sent: can he put it on now ?
Sem: lambda $0_{r}.Q(mod|can_1(and(and(v|put-zero_3(pro:sub|he_2,pro:per|it_4,$0),adv|on_5($0)),adv|now_6($0)),$0))
example_end

Sent: he can 't find it .
Sem: lambda $0_{r}.not(mod|can_2(v|find_4(pro:sub|he_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: you have_to put one back .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(part|put-pastp_3(pro:per|you_1,BARE($1,det:num|one_4($1)),$0),n|back_5($0)),$0)
example_end

Sent: now which one would you like ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(mod|will-cond_4(co|like_6(pro:per|you_5,$1($2,pro:indef|one_3($2)),$0),$0),adv|now_1($0))
example_end

Sent: you have_to push another one out .
Sem: lambda $0_{r}.mod:aux|have_to_2(and(v|push_3(pro:per|you_1,qn|another_4($1,pro:indef|one_5($1)),$0),adv|out_6($0)),$0)
example_end

Sent: which color d you like ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do_3(co|like_5(pro:per|you_4,$1($2,n|color_2($2)),$0),$0)
example_end

Sent: now you can reach it .
Sem: lambda $0_{r}.mod|can_3(and(v|reach_4(pro:per|you_2,pro:per|it_5,$0),adv|now_1($0)),$0)
example_end

Sent: now he can find it .
Sem: lambda $0_{r}.mod|can_3(and(v|find_4(pro:sub|he_2,pro:per|it_5,$0),adv|now_1($0)),$0)
example_end

Sent: what kind of bird is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|bird_4($2)))))
example_end

Sent: what kind of bird was that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_6($1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|bird_4($3))))),$0)
example_end

Sent: oh a Mr Grant bird .
Sem: lambda $0_{r}.and(det:art|a_2($1,and_comp(n:prop|grant_4_mr_3($1),n|bird_5($1)),$0),co|oh_1($0))
example_end

Sent: that 's a new kind of bird .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,att(and(n|kind_5(pro:dem|that_1,$0),adj|new_4(pro:dem|that_1,$0)),prep|of_6(BARE($1,n|bird_7($1)))))
example_end

Sent: a Mr Grant bird .
Sem: det:art|a_1($0,and_comp(n:prop|grant_3_mr_2($0),n|bird_4($0)))
example_end

Sent: I never heard of that bird before .
Sem: lambda $0_{r}.and(and(and(v|hear-past_3(pro:sub|i_1,$0),adv|never_2($0)),prep|of_4(pro:dem|that_5($1,n|bird_6($1)),$0)),adv|before_7($0))
example_end

Sent: what does this man do ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do-3s_2(v|do_5(pro:dem|this_3($1,n|man_4($1)),$2,$0),$0)
example_end

Sent: oh I can 't tell you .
Sem: lambda $0_{r}.and(not(mod|can_3(v|tell_5(pro:sub|i_2,pro:per|you_6,$0),$0),$0),co|oh_1($0))
example_end

Sent: what is he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.cop|be-3s_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: well I can 't tell you what he 's doing .
Sem: lambda $1_{e}.lambda $0_{r}.and(not(mod|can_3(v|tell_5(pro:sub|i_2,$1,pro:per|you_6,$0),$0),$0),co|well_1($0))
example_end

Sent: what d you think he 's doing ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.aux|~be_6(part|do-presp_7(pro:sub|he_5,pro:int|what_1,$1),$1),$0),$0))
example_end

Sent: driving a what ?
Sem: lambda $1_{e}.lambda $0_{r}.part|drive-presp_1(you,$1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I thought it was a bus .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:per|it_3,n|bus_6(pro:per|it_3,$1)),$0)
example_end

Sent: yes you were wrong .
Sem: lambda $0_{r}.and(adj|wrong_4(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what does he raise ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-3s_2(v|raise_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: flowers and what else ?
Sem: BARE($0,Q(post|else_4(pro:int|what_3,$0)))
example_end

Sent: doesn 't he make food for you to eat ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|make_4(pro:sub|he_3,lambda $1_{r}.v|eat_9(BARE($2,n|food_5($2)),$1),$0),prep|for_6(pro:per|you_7,$0)),$0),$0))
example_end

Sent: look who makes the bread .
Sem: lambda $1_{e}.lambda $0_{r}.and(v|make-3s_3($1,det:art|the_4($2,n|bread_5($2)),$0),co|look_1(you,$0))
example_end

Sent: who is he ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|he_3,$0)
example_end

Sent: who is he ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|he_3,$0)
example_end

Sent: what did he do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: where is he putting that bread ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|put-presp_4(pro:sub|he_3,pro:dem|that_5($1,n|bread_6($1)),$0),$2($0)),$0)
example_end

Sent: what about this man ?
Sem: att(pro:int|what_1,prep|about_2(pro:dem|this_3($0,n|man_4($0))))
example_end

Sent: where is he going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|go-presp_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: he 's going on an airplane .
Sem: lambda $0_{r}.aux|~be_2(and(part|go-presp_3(pro:sub|he_1,$0),prep|on_4(det:art|a_5($1,n|airplane_6($1)),$0)),$0)
example_end

Sent: if he drives the airplane what is he called ?
Sem: lambda $2_{e}.lambda $0_{r}.cop|be-3s_7(conj|if_1(v|drive-3s_3(pro:sub|he_2,det:art|the_4($1,n|airplane_5($1)),$0),v|call-past_9(pro:sub|he_8,$2,$0)),$0)
example_end

Sent: no no no don 't write on yourself .
Sem: lambda $0_{r}.and(not(mod|do_4(and(v|write_6(you,$0),prep|on_7(pro:refl|yourself_8,$0)),$0),$0),and(co|no_3($0),and(co|no_2($0),co|no_1($0))))
example_end

Sent: take what out ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|take_1(you,$1,$0),adv|out_3($0))
example_end

Sent: where would you put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: you shut your garage down ?
Sem: lambda $0_{r}.Q(and(v|shut-zero_2(pro:per|you_1,det:poss|your_3($1,n|garage_4($1)),$0),adv|down_5($0)))
example_end

Sent: don 't write on yourself .
Sem: lambda $0_{r}.not(mod|do_1(and(v|write_3(you,$0),prep|on_4(pro:refl|yourself_5,$0)),$0),$0)
example_end

Sent: write on the paper .
Sem: lambda $0_{r}.and(v|write_1(you,$0),prep|on_2(det:art|the_3($1,n|paper_4($1)),$0))
example_end

Sent: oh I didn 't mean for you to tear off her paper .
Sem: lambda $0_{r}.and(mod|do_3(and(v|mean_5(pro:sub|i_2,lambda $1_{r}.and(n|tear_9(pro:sub|i_2,det:poss|her_11($2,n|paper_12($2)),$1),prep|off_10($1)),$0),prep|for_6(pro:per|you_7,$0)),$0),co|oh_1($0))
example_end

Sent: I meant for you to write on the small pad .
Sem: lambda $0_{r}.and(v|mean-past_2(pro:sub|i_1,lambda $1_{r}.and(v|write_6(pro:sub|i_1,$1),prep|on_7(det:art|the_8($2,and(adj|small_9($2),n|pad_10($2))),$1)),$0),prep|for_3(pro:per|you_4,$0))
example_end

Sent: don 't write on you either .
Sem: lambda $0_{r}.not(mod|do_1(and(and(v|write_3(you,$0),prep|on_4(pro:per|you_5,$0)),adv|either_6($0)),$0),$0)
example_end

Sent: I don 't think you write with pencil on that Adam .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.and(and(v|write_6(pro:per|you_5,$1),prep|with_7(BARE($2,n|pencil_8($2)),$1)),adv|on_9(pro:rel|that_10,$1)),$0),$0),$0)
example_end

Sent: you write with some crayons .
Sem: lambda $0_{r}.and(v|write_2(pro:per|you_1,$0),prep|with_3(qn|some_4($1,n|crayon-pl_5($1)),$0))
example_end

Sent: a sewing goes like that .
Sem: lambda $0_{r}.and(v|go-3s_3(BARE($1,part|sew-presp_2($1)),$0),prep|like_4(pro:dem|that_5,$0))
example_end

Sent: does it write ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(v|write_3(pro:per|it_2,$0),$0))
example_end

Sent: a sewing machine ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(part|sew-presp_2($1),n|machine_3($1)),$0)))
example_end

Sent: oh did you make something ?
Sem: lambda $0_{r}.Q(and(mod|do-past_2(v|make_4(pro:per|you_3,pro:indef|something_5,$0),$0),co|oh_1($0)))
example_end

Sent: a Jesus knot ?
Sem: BARE($0,Q(det:art|a_1($1,and_comp(n:prop|jesus_2($1),n|knot_3($1)),$0)))
example_end

Sent: what kind of knot is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|knot_4($2)))))
example_end

Sent: thinking knot ?
Sem: BARE($0,Q(and_comp(part|think-presp_1($0),n|knot_2($0))))
example_end

Sent: do you see any letters down here that you know ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|see_3(pro:per|you_2,qn|any_4($1,n|letter-pl_5($1)),$0),adv|down_6(adv|here_7($0))),$0))
example_end

Sent: can you make any of these letters ?
Sem: lambda $0_{r}.Q(mod|can_1(v|make_3(pro:per|you_2,qn|any_4(pro:dem|these_6($1,n|letter-pl_7($1))),$0),$0))
example_end

Sent: oh we 're not ready ?
Sem: lambda $0_{r}.Q(and(not(v|ready_5(pro:sub|we_2,$0),$0),co|oh_1($0)))
example_end

Sent: following thing .
Sem: lambda $0_{r}.part|follow-presp_1(you,BARE($1,n|thing_2($1)),$0)
example_end

Sent: oh that 's right .
Sem: lambda $0_{r}.and(n|right_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: find it what Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.v|find_1(you,$1,pro:per|it_2,$0)
example_end

Sent: you look and see if you can find it .
Sem: lambda $0_{r}.v|see_4(pro:per|you_1,lambda $1_{r}.mod|can_7(v|find_8(pro:per|you_6,pro:per|it_9,$1),$1),$0)
example_end

Sent: what kind d you think it is ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_3(v|think_5(pro:per|you_4,lambda $1_{r}.$2(pro:per|it_6,n|kind_2(pro:per|it_6,$1)),$0),$0)
example_end

Sent: that 's the little country doctor box .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,and_comp(and_comp(and(n|country_5(pro:dem|that_1,$0),adj|little_4(pro:dem|that_1,$0)),n|doctor_6(pro:dem|that_1,$0)),n|box_7(pro:dem|that_1,$0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: why don 't you find the d that 's on this line ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|find_5(pro:per|you_4,det:art|the_6($1,n:let|d_7($1)),$0),$2($0)),$0),$0)
example_end

Sent: d you know what this spells ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_1(v|know_3(pro:per|you_2,$1,$0),$0)
example_end

Sent: is this Michael ?
Sem: lambda $0_{r}.Q(n:prop|michael_3(pro:dem|this_2,$0))
example_end

Sent: who 's Michael ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|michael_3,$0)
example_end

Sent: a doctor box .
Sem: det:art|a_1($0,and_comp(n|doctor_2($0),n|box_3($0)))
example_end

Sent: listening to something .
Sem: lambda $0_{r}.and(part|listen-presp_1(you,$0),prep|to_2(pro:indef|something_3,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I think they 're marbles .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.n|marble-pl_5(pro:sub|they_3,$1),$0)
example_end

Sent: you 're talking to yourself ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|talk-presp_3(pro:per|you_1,$0),prep|to_4(pro:refl|yourself_5,$0)),$0))
example_end

Sent: you have a_lot_of money .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,qn|a_lot_of_3($1,n|money_4($1)),$0)
example_end

Sent: why don 't you draw with the crayons ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(and(v|draw_5(pro:per|you_4,$0),$1($0)),prep|with_6(det:art|the_7($2,n|crayon-pl_8($2)),$0)),$0),$0)
example_end

Sent: yes it is upside down .
Sem: lambda $0_{r}.and(and(cop|be-3s_3(pro:per|it_2,$0),adv|upside_4(adv|down_5($0))),co|yes_1($0))
example_end

Sent: like a bad cowboy ?
Sem: Q(prep|like_1(det:art|a_2($0,and(adj|bad_3($0),n|cow+boy_4($0)))))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: you push the chair back you don 't need it ?
Sem: lambda $0_{r}.Q(and(and(v|push_2(pro:per|you_1,det:art|the_3($1,n|chair_4($1)),$0),adv|back_5($0)),not(mod|do_7(v|need_9(pro:per|you_6,pro:per|it_10,$0),$0),$0)))
example_end

Sent: you were listening to in Mrs Major 's kitchen ?
Sem: lambda $0_{r}.Q(aux|be-past_2(and(part|listen-presp_3(pro:per|you_1,$0),prep|in_5(n:prop|major_7_mrs_6's($1,n|kitchen_9($1)),$0)),$0))
example_end

Sent: you were listening to Mrs Majors ?
Sem: lambda $0_{r}.Q(aux|be-past_2(and(part|listen-presp_3(pro:per|you_1,$0),prep|to_4(BARE($1,and_comp(n:prop|mrs_5($1),n:prop|majors_6($1))),$0)),$0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: that 's not right .
Sem: lambda $0_{r}.not(n|right_4(pro:dem|that_1,$0),$0)
example_end

Sent: I 'm sorry to say but that 's wrong .
Sem: lambda $0_{r}.conj|but_6(adj|wrong_9(pro:dem|that_7,$0),adj|sorry_3(pro:sub|i_1,lambda $1_{r}.v|say_5(pro:sub|i_1,$1),$0))
example_end

Sent: okay if you say so .
Sem: lambda $0_{r}.and(v|say_4(pro:per|you_3,$0),co|so_5($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: you were drooling on the board .
Sem: lambda $0_{r}.aux|be-past_2(and(part|drool-presp_3(pro:per|you_1,$0),prep|on_4(det:art|the_5($1,n|board_6($1)),$0)),$0)
example_end

Sent: what did they find ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|find_4(pro:sub|they_3,$1,$0),$0)
example_end

Sent: they found what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|find-past_2(pro:sub|they_1,$1,$0)
example_end

Sent: you count them .
Sem: lambda $0_{r}.v|count_2(pro:per|you_1,pro:obj|them_3,$0)
example_end

Sent: I 'll send them out .
Sem: lambda $0_{r}.mod|~will_2(and(v|send_3(pro:sub|i_1,pro:obj|them_4,$0),adv|out_5($0)),$0)
example_end

Sent: don 't throw so hard .
Sem: lambda $0_{r}.not(mod|do_1(and(v|throw_3(you,$0),adv|so_4(adv|hard_5($0))),$0),$0)
example_end

Sent: let 's play this game .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|play_3(pro:obj|~us_2,pro:dem|this_4($2,n|game_5($2)),$1),$0)
example_end

Sent: alright thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|alright_1($0))
example_end

Sent: no I think marbles are round .
Sem: lambda $0_{r}.and(v|think_3(pro:sub|i_2,lambda $1_{r}.adj|round_6(BARE($2,n|marble-pl_4($2)),$1),$0),co|no_1($0))
example_end

Sent: it looks a lot like one doesn 't it ?
Sem: lambda $0_{r}.Q(and(cop|look-3s_2(pro:per|it_1,det:art|a_3($1,att(n|lot_4($1),prep|like_5(det:num|one_6))),$0),not(mod|do_7(pro:per|it_9,$0),$0)))
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: I moved the microphone .
Sem: lambda $0_{r}.v|move-past_2(pro:sub|i_1,det:art|the_3($1,n|microphone_4($1)),$0)
example_end

Sent: look on the top line .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|on_2(det:art|the_3($1,and(adj|top_4($1),n|line_5($1))),$0))
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: you missed again .
Sem: lambda $0_{r}.and(v|miss-past_2(pro:per|you_1,$0),adv|again_3($0))
example_end

Sent: you might break them .
Sem: lambda $0_{r}.mod|might_2(v|break_3(pro:per|you_1,pro:obj|them_4,$0),$0)
example_end

Sent: alphabet basket .
Sem: BARE($0,and_comp(n|alphabet_1($0),n|basket_2($0)))
example_end

Sent: marble basket .
Sem: BARE($0,and_comp(n|marble_1($0),n|basket_2($0)))
example_end

Sent: alphabet basket .
Sem: BARE($0,and_comp(n|alphabet_1($0),n|basket_2($0)))
example_end

Sent: little country doctor box .
Sem: BARE($0,and_comp(and_comp(n|country_2($0),n|doctor_3($0)),and(adj|little_1($0),n|box_4($0))))
example_end

Sent: by the handle .
Sem: prep|by_1(det:art|the_2($0,n|handle_3($0)))
example_end

Sent: alphabet basket .
Sem: BARE($0,and_comp(n|alphabet_1($0),n|basket_2($0)))
example_end

Sent: I don 't think you need to play with a ball .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|need_6(pro:per|you_5,lambda $2_{r}.and(v|play_8(pro:per|you_5,$2),prep|with_9(det:art|a_10($3,n|ball_11($3)),$2)),$1),$0),$0),$0)
example_end

Sent: it 's a piece of wood .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,att(n|piece_4(pro:per|it_1,$0),prep|of_5(BARE($1,n|wood_6($1)))))
example_end

Sent: you found it ?
Sem: lambda $0_{r}.Q(v|find-past_2(pro:per|you_1,pro:per|it_3,$0))
example_end

Sent: in your zoo ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|zoo_3($0))))
example_end

Sent: what else did you find at the zoo ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(and(v|find_5(pro:per|you_4,$1,$0),prep|at_6(det:art|the_7($2,n|zoo_8($2)),$0)),$0)
example_end

Sent: some wood ?
Sem: BARE($0,Q(qn|some_1($1,n|wood_2($1),$0)))
example_end

Sent: a big giant .
Sem: det:art|a_1($0,and(adj|big_2($0),n|giant_3($0)))
example_end

Sent: I 'm breaking the stick that the motor of I made .
Sem: lambda $0_{r}.aux|~be_2(part|break-presp_3(pro:sub|i_1,det:art|the_4($1,n|stick_5_of_9($1)),$0),$0)
example_end

Sent: where 's the crayon ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|crayon_4($1)),$0),$2($0))
example_end

Sent: maybe you took it off .
Sem: lambda $0_{r}.and(and(v|take-past_3(pro:per|you_2,pro:per|it_4,$0),adv|maybe_1($0)),adv|off_5($0))
example_end

Sent: oh you 're putting on the clothes ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|put-presp_4(pro:per|you_2,det:art|the_6($1,n:pt|clothes_7($1)),$0),prep|on_5($0)),$0),co|oh_1($0)))
example_end

Sent: let 's take turns .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|take_3(pro:obj|~us_2,BARE($2,n|turn-pl_4($2)),$1),$0)
example_end

Sent: it 's your turn .
Sem: lambda $0_{r}.det:poss|your_3(pro:per|it_1,n|turn_4(pro:per|it_1,$0))
example_end

Sent: don 't take what off ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_1(and(v|take_3(you,$1,$0),adv|off_5($0)),$0),$0)
example_end

Sent: the s off ?
Sem: BARE($0,Q(adv|off_3(det:art|the_1($1,n:let|s_2($1)),$0)))
example_end

Sent: oh I know .
Sem: lambda $0_{r}.and(v|know_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: can you find the following things on this page .
Sem: lambda $0_{r}.mod|can_1(and(v|find_3(pro:per|you_2,det:art|the_4($1,n|thing-pl_6_follow-presp_5($1)),$0),prep|on_7(pro:dem|this_8($2,n|page_9($2)),$0)),$0)
example_end

Sent: your turn .
Sem: det:poss|your_1($0,n|turn_2($0))
example_end

Sent: let 's do it up here .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|do_3(pro:obj|~us_2,pro:per|it_4,$1),adv|up_5(adv|here_6($1))),$0)
example_end

Sent: my turn .
Sem: det:poss|my_1($0,n|turn_2($0))
example_end

Sent: no let 's do it up here first .
Sem: lambda $0_{r}.and(and(v:obj|let_2(you,lambda $1_{r}.and(v|do_4(pro:obj|~us_3,pro:per|it_5,$1),adv|up_6(adv|here_7($1))),$0),adv|first_8($0)),co|no_1($0))
example_end

Sent: no I want to find myself goes .
Sem: lambda $0_{r}.and(v|want_3(pro:sub|i_2,lambda $1_{r}.v|find_5(pro:sub|i_2,pro:refl|myself_6,$1),$0),co|no_1($0))
example_end

Sent: well that 's alright but let 's do it up here first .
Sem: lambda $0_{r}.and(conj|but_5(and(v:obj|let_6(you,lambda $1_{r}.and(v|do_8(pro:obj|~us_7,pro:per|it_9,$1),adv|up_10(adv|here_11($1))),$0),adv|first_12($0)),adj|alright_4(pro:dem|that_2,$0)),co|well_1($0))
example_end

Sent: alright where does he belong ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|do-3s_3(and(v|belong_5(pro:sub|he_4,$0),$1($0)),$0),co|alright_1($0))
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: your turn now .
Sem: adv|now_3(det:poss|your_1($0,n|turn_2($0)))
example_end

Sent: the razor blade .
Sem: det:art|the_1($0,and_comp(n|razor_2($0),n|blade_3($0)))
example_end

Sent: he means the razor .
Sem: lambda $0_{r}.v|mean-3s_2(pro:sub|he_1,det:art|the_3($1,n|razor_4($1)),$0)
example_end

Sent: I see where it goes .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,lambda $1_{r}.and(v|go-3s_5(pro:per|it_4,$1),pro:rel|where_3($1)),$0)
example_end

Sent: look on the second line .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),prep|on_2(det:art|the_3($1,and(adj|second_4($1),n|line_5($1))),$0))
example_end

Sent: if you can 't find it on the first line then look on the second line .
Sem: lambda $0_{r}.conj|if_1(not(mod|can_3(and(v|find_5(pro:per|you_2,pro:per|it_6,$0),prep|on_7(det:art|the_8($1,and(adj|first_9($1),n|line_10($1))),$0)),$0),$0),and(and(cop|look_12(you,$0),adv:tem|then_11($0)),prep|on_13(det:art|the_14($2,and(adj|second_15($2),n|line_16($2))),$0)))
example_end

Sent: no my turn .
Sem: lambda $0_{r}.and(det:poss|my_2($1,n|turn_3($1),$0),qn|no_1($0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: my turn .
Sem: det:poss|my_1($0,n|turn_2($0))
example_end

Sent: my turn .
Sem: det:poss|my_1($0,n|turn_2($0))
example_end

Sent: you said I could have the o .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.mod|could_4(v|have_5(pro:sub|i_3,det:art|the_6($2,n:let|o_7($2)),$1),$1),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what are they saying to each_other ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|say-presp_4(pro:sub|they_3,$1,$0),prep|to_5(pro:refl|each_other_6,$0)),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's a g .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n:let|g_4(pro:dem|that_1,$0))
example_end

Sent: and the other one 's a c .
Sem: lambda $0_{r}.det:art|a_6(det:art|the_2($1,att(pro:indef|one_4,BARE($2,qn|other_3($2)),$1)),n:let|c_7(det:art|the_2($1,att(pro:indef|one_4,BARE($3,qn|other_3($3)),$1)),$0))
example_end

Sent: where does the c belong ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.v|do-3s_2(and(v|belong_5(det:art|the_3($1,n:let|c_4($1)),$0),$2($0)),$0)
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: well look at it again .
Sem: lambda $0_{r}.and(and(and(cop|look_2(you,$0),prep|at_3(pro:per|it_4,$0)),adv|again_5($0)),co|well_1($0))
example_end

Sent: now put it down .
Sem: lambda $0_{r}.and(and(v|put-zero_2(you,pro:per|it_3,$0),adv|now_1($0)),adv|down_4($0))
example_end

Sent: that 's the b .
Sem: lambda $0_{r}.det:art|the_3(pro:dem|that_1,n:let|b_4(pro:dem|that_1,$0))
example_end

Sent: you turn it around .
Sem: lambda $0_{r}.and(v|turn_2(pro:per|you_1,pro:per|it_3,$0),adv|around_4($0))
example_end

Sent: that part of the n goes there .
Sem: lambda $0_{r}.and(v|go-3s_6(pro:dem|that_1($1,att(n|part_2($1),prep|of_3(det:art|the_4($2,n:let|n_5($2))))),$0),adv|there_7($0))
example_end

Sent: no that 's l .
Sem: lambda $0_{r}.and(n:let|l_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what 's doing just like that ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|do-presp_3($1,$0),adv|just_4(prep|like_5(pro:dem|that_6,$0))),$0)
example_end

Sent: Adam sleeping on Daddy ?
Sem: lambda $0_{r}.Q(and(part|sleep-presp_2(n:prop|adam_1,$0),prep|on_3(n:prop|daddy_4,$0)))
example_end

Sent: is that Adam ?
Sem: lambda $0_{r}.Q(n:prop|adam_3(pro:rel|that_2,$0))
example_end

Sent: her girl is talking to Adam ?
Sem: lambda $0_{r}.Q(aux|be-3s_3(and(part|talk-presp_4(det:poss|her_1($1,n|girl_2($1)),$0),prep|to_5(n:prop|adam_6,$0)),$0))
example_end

Sent: that 's part of her Adam ?
Sem: lambda $0_{r}.Q(att(n|part_3(pro:dem|that_1,$0),prep|of_4(det:poss|her_5)))
example_end

Sent: careful honey .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: don 't knock the tray over .
Sem: lambda $0_{r}.not(mod|do_1(and(v|knock_3(you,det:art|the_4($1,n|tray_5($1)),$0),adv|over_6($0)),$0),$0)
example_end

Sent: who says meow .
Sem: lambda $1_{e}.lambda $0_{r}.v|say-3s_2($1,BARE($2,on|meow_3($2)),$0)
example_end

Sent: it 's called a birdie .
Sem: lambda $0_{r}.aux|~be_2(part|call-pastp_3(pro:per|it_1,det:art|a_4($1,n|bird-dim_5($1)),$0),$0)
example_end

Sent: you drop it .
Sem: lambda $0_{r}.v|drop_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: it 's Kenner .
Sem: lambda $0_{r}.n:prop|kenner_3(pro:per|it_1,$0)
example_end

Sent: it 's a toy company .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|toy_4(pro:per|it_1,$0),n|company_5(pro:per|it_1,$0)))
example_end

Sent: that 's not tennis .
Sem: lambda $0_{r}.not(n|tennis_4(pro:dem|that_1,$0),$0)
example_end

Sent: you go over there and play .
Sem: lambda $0_{r}.and(n|play_6(pro:per|you_1,$0),adv|over_3(adv|there_4($0)))
example_end

Sent: it 's not broken .
Sem: lambda $0_{r}.not(part|break-pastp_4(pro:per|it_1,$0),$0)
example_end

Sent: it had a handle .
Sem: lambda $0_{r}.v|have-past_2(pro:per|it_1,det:art|a_3($1,n|handle_4($1)),$0)
example_end

Sent: you need to go to Mrs Monroe 's beds ?
Sem: lambda $0_{r}.Q(v|need_2(pro:per|you_1,lambda $1_{r}.and(v|go_4(pro:per|you_1,$1),prep|to_5(n:prop|monroe_7_mrs_6's($2,n|bed-pl_9($2)),$1)),$0))
example_end

Sent: her beds are at her house .
Sem: lambda $0_{r}.prep|at_4(det:poss|her_5($1,n|house_6($1)),det:poss|her_1($2,n|bed-pl_2($2)),$0)
example_end

Sent: careful honey .
Sem: lambda $0_{r}.co|careful_1($0)
example_end

Sent: go over there .
Sem: lambda $0_{r}.and(v|go_1(you,$0),adv|over_2(adv|there_3($0)))
example_end

Sent: here 's another microphone .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,n|microphone_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: you can put it in here if you want .
Sem: lambda $0_{r}.conj|if_7(v|want_9(pro:per|you_8,$0),mod|can_2(and(v|put-zero_3(pro:per|you_1,pro:per|it_4,$0),prep|in_5(adv|here_6($0))),$0))
example_end

Sent: you 're going to do what ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|do_5(pro:per|you_1,$2,$1),$0),$0)
example_end

Sent: don 't run doctor you might fall and hurt yourself .
Sem: lambda $0_{r}.not(and(mod|do_1(v|run_3(you,$0),$0),mod|might_6(v|hurt-zero_9(pro:per|you_5,pro:refl|yourself_10,$0),$0)),$0)
example_end

Sent: you 're a boy ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,n|boy_4(pro:per|you_1,$0)))
example_end

Sent: don 't run little boy .
Sem: lambda $0_{r}.not(mod|do_1(v|run_3(you,$0),$0),$0)
example_end

Sent: you might fall and hurt yourself .
Sem: lambda $0_{r}.mod|might_2(v|hurt-zero_5(pro:per|you_1,pro:refl|yourself_6,$0),$0)
example_end

Sent: you 'd like one of those ?
Sem: lambda $0_{r}.Q(mod|~genmod_2(v|like_3(pro:per|you_1,BARE($1,pro:indef|one_4($1)),$0),$0))
example_end

Sent: no we took Paul to the doctor yesterday didn 't we ?
Sem: lambda $0_{r}.Q(and(and(and(and(v|take-past_3(pro:sub|we_2,n:prop|paul_4,$0),prep|to_5(det:art|the_6($1,n|doctor_7($1)),$0)),adv:tem|yesterday_8($0)),not(mod|do_9(pro:sub|we_11,$0),$0)),co|no_1($0)))
example_end

Sent: for his checkup .
Sem: prep|for_1(det:poss|his_2($0,n|check+up_3($0)))
example_end

Sent: no he didn 't do anything to you did he ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(and(v|do_5(pro:sub|he_2,pro:indef|anything_6,$0),prep|to_7(pro:per|you_8,$0)),$0),$0),v|do-past_9(pro:sub|he_10,$0)),co|no_1($0)))
example_end

Sent: oh Adam look on the back .
Sem: lambda $0_{r}.and(and(cop|look_3(you,$0),prep|on_4(det:art|the_5($1,n|back_6($1)),$0)),co|oh_1($0))
example_end

Sent: did you look on the back ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(cop|look_3(pro:per|you_2,$0),prep|on_4(det:art|the_5($1,adj|back_6($1)),$0)),$0))
example_end

Sent: of the book .
Sem: prep|of_1(det:art|the_2($0,n|book_3($0)))
example_end

Sent: what d you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: call Robin doctor .
Sem: lambda $0_{r}.n|call_1(you,n:prop|robin_2,$0)
example_end

Sent: call Dr Robin .
Sem: lambda $0_{r}.n|call_1(you,n:prop|robin_3_dr_2,$0)
example_end

Sent: you left these out .
Sem: lambda $0_{r}.and(v|leave-past_2(pro:per|you_1,pro:dem|these_3,$0),adv|out_4($0))
example_end

Sent: oh look Adam .
Sem: lambda $0_{r}.and(co|look_2(you,$0),co|oh_1($0))
example_end

Sent: I see a cat .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,det:art|a_3($1,n|cat_4($1)),$0)
example_end

Sent: on the board .
Sem: prep|on_1(det:art|the_2($0,n|board_3($0)))
example_end

Sent: d you see a cat on the board ?
Sem: lambda $0_{r}.Q(mod|do_1(and(v|see_3(pro:per|you_2,det:art|a_4($1,n|cat_5($1)),$0),prep|on_6(det:art|the_7($2,n|board_8($2)),$0)),$0))
example_end

Sent: no wait .
Sem: lambda $0_{r}.and(co|wait_2(you,$0),co|no_1($0))
example_end

Sent: a box ?
Sem: BARE($0,Q(det:art|a_1($1,n|box_2($1),$0)))
example_end

Sent: alphabet basket .
Sem: BARE($0,and_comp(n|alphabet_1($0),n|basket_2($0)))
example_end

Sent: fruit basket .
Sem: BARE($0,and_comp(n|fruit_1($0),n|basket_2($0)))
example_end

Sent: it 's a fruit basket .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|fruit_4(pro:per|it_1,$0),n|basket_5(pro:per|it_1,$0)))
example_end

Sent: a green stamp basket .
Sem: det:art|a_1($0,and_comp(n|stamp_3($0),and(adj|green_2($0),n|basket_4($0))))
example_end

Sent: yes if she says so .
Sem: lambda $0_{r}.and(and(v|say-3s_4(pro:sub|she_3,$0),adv|so_5($0)),co|yes_1($0))
example_end

Sent: green stamp basket .
Sem: BARE($0,and_comp(n|stamp_2($0),and(adj|green_1($0),n|basket_3($0))))
example_end

Sent: oh that 's a stove .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|stove_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: can you cook on it ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|cook_3(pro:per|you_2,$0),prep|on_4(pro:per|it_5,$0)),$0))
example_end

Sent: that 's his hair .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|hair_4(pro:dem|that_1,$0))
example_end

Sent: that 's his hair .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|that_1,n|hair_4(pro:dem|that_1,$0))
example_end

Sent: I don 't think it 's sharp .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.adj|sharp_7(pro:per|it_5,$1),$0),$0),$0)
example_end

Sent: a board or drawing board .
Sem: det:art|a_1($0,and_comp(n|drawing_4($0),n|board_5($0)))
example_end

Sent: I like it so I 'd like to paint on it .
Sem: lambda $0_{r}.adv|so_4(mod|~genmod_6(v|like_7(pro:sub|i_5,lambda $1_{r}.and(v|paint_9(pro:sub|i_5,$1),prep|on_10(pro:per|it_11,$1)),$0),$0),v|like_2(pro:sub|i_1,pro:per|it_3,$0))
example_end

Sent: what would you like to paint on the box ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|will-cond_2(v|like_4(pro:per|you_3,lambda $1_{r}.and(v|paint_6(pro:per|you_3,$2,$1),prep|on_7(det:art|the_8($3,n|box_9($3)),$1)),$0),$0)
example_end

Sent: you can draw on the board .
Sem: lambda $0_{r}.mod|can_2(and(v|draw_3(pro:per|you_1,$0),prep|on_4(det:art|the_5($1,n|board_6($1)),$0)),$0)
example_end

Sent: is he alright ?
Sem: lambda $0_{r}.Q(co|alright_3(pro:sub|he_2,$0))
example_end

Sent: oh nothing .
Sem: lambda $0_{r}.and(pro:indef|nothing_2($0),co|oh_1($0))
example_end

Sent: just a tiny part of the petal .
Sem: adv|just_1(det:art|a_2($0,att(and(adj|tiny_3($0),n|part_4($0)),prep|of_5(det:art|the_6($1,n|petal_7($1))))))
example_end

Sent: no the flowers aren 't going anyplace .
Sem: lambda $0_{r}.and(not(aux|be_4(and(part|go-presp_6(det:art|the_2($1,n|flower-pl_3($1)),$0),adv|anyplace_7($0)),$0),$0),qn|no_1($0))
example_end

Sent: they can 't carry you anyplace .
Sem: lambda $0_{r}.not(mod|can_2(and(v|carry_4(pro:sub|they_1,pro:per|you_5,$0),adv|anyplace_6($0)),$0),$0)
example_end

Sent: Paul would like that .
Sem: lambda $0_{r}.mod|will-cond_2(prep|like_3(n:prop|paul_1,pro:dem|that_4,$0),$0)
example_end

Sent: he likes to ride in the lake .
Sem: lambda $0_{r}.v|like-3s_2(pro:sub|he_1,lambda $1_{r}.and(n|ride_4(pro:sub|he_1,$1),prep|in_5(det:art|the_6($2,n|lake_7($2)),$1)),$0)
example_end

Sent: why don 't you let him sit in the chair .
Sem: lambda $3_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|let-zero_5(pro:per|you_4,lambda $1_{r}.and(v|sit_7(pro:obj|him_6,$1),prep|in_8(det:art|the_9($2,n|chair_10($2)),$1)),$0),$3($0)),$0),$0)
example_end

Sent: why don 't you tell him a story .
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|tell_5(pro:per|you_4,det:art|a_7($1,n|story_8($1)),pro:obj|him_6,$0),$2($0)),$0),$0)
example_end

Sent: d you know a story he might like ?
Sem: lambda $0_{r}.Q(mod|do_1(v|know_3(pro:per|you_2,det:art|a_4($1,n|story_5($1)),$0),$0))
example_end

Sent: well tell him one .
Sem: lambda $0_{r}.and(v|tell_2(you,pro:indef|one_4,pro:obj|him_3,$0),co|well_1($0))
example_end

Sent: once upon a time .
Sem: BARE($0,att(adv|once_1($0),prep|upon_2(det:art|a_3($1,n|time_4($1)))))
example_end

Sent: we can 't hear you with your fingers in your mouth .
Sem: lambda $0_{r}.not(mod|can_2(and(v|hear_4(pro:sub|we_1,pro:per|you_5,$0),prep|with_6(det:poss|your_7($1,att(n|finger-pl_8($1),prep|in_9(det:poss|your_10($2,n|mouth_11($2))))),$0)),$0),$0)
example_end

Sent: that was a nice story .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|story_5(pro:dem|that_1,$0),adj|nice_4(pro:dem|that_1,$0)))
example_end

Sent: with the what ?
Sem: det:art|the_2($0,pro:int|what_3($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: alright you watch and tell us what 's happening ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|tell_5(pro:per|you_2,$1,pro:obj|us_6,$0),co|alright_1($0))
example_end

Sent: d you want to watch Adam ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.v|watch_5(pro:per|you_2,n:prop|adam_6,$1),$0),$0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: or did you say I want a watch ?
Sem: lambda $0_{r}.Q(v|do-past_2(v|say_4(pro:per|you_3,lambda $1_{r}.v|want_6(pro:sub|i_5,det:art|a_7($2,n|watch_8($2)),$1),$0),$0))
example_end

Sent: it works ?
Sem: lambda $0_{r}.Q(v|work-3s_2(pro:per|it_1,$0))
example_end

Sent: yes it should go in there .
Sem: lambda $0_{r}.and(mod|should_3(and(v|go_4(pro:per|it_2,$0),prep|in_5(adv|there_6($0))),$0),co|yes_1($0))
example_end

Sent: very gently .
Sem: BARE($0,adv|very_1(adv|gentle-dadj_2($0)))
example_end

Sent: because he 's small .
Sem: lambda $0_{r}.adj|small_4(pro:sub|he_2,$0)
example_end

Sent: well yes only he doesn 't like to play very noisy games .
Sem: lambda $0_{r}.and(and(not(mod|do_5(and(v|like_7(pro:sub|he_4,lambda $1_{r}.v|play_9(pro:sub|he_4,BARE($2,and(adv|very_10(adj|noise-dn_11($2)),n|game-pl_12($2))),$1),$0),adv|only_3($0)),$0),$0),co|well_1($0)),co|yes_2($0))
example_end

Sent: he has feathers .
Sem: lambda $0_{r}.aux|have-3s_2(pro:sub|he_1,BARE($1,n|feather-pl_3($1)),$0)
example_end

Sent: if he falls like that he 'll lose some of his feathers .
Sem: lambda $0_{r}.mod|~will_7(conj|if_1(and(v|fall-3s_3(pro:sub|he_2,$0),co|like_4(det:dem|that_5,$0)),v|lose_8(pro:sub|he_6,qn|some_9(det:poss|his_11($1,n|feather-pl_12($1))),$0)),$0)
example_end

Sent: that 's a good idea Adam .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: are you having fun ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|have-presp_3(pro:per|you_2,BARE($1,n|fun_4($1)),$0),$0))
example_end

Sent: no it 's not broken .
Sem: lambda $0_{r}.and(not(cop|~be_3(part|break-pastp_5(pro:per|it_2,$0),$0),$0),co|no_1($0))
example_end

Sent: oh yes that doesn 't go under there .
Sem: lambda $0_{r}.and(and(not(mod|do_4(and(v|go_6(det:dem|that_3,$0),prep|under_7(adv|there_8($0))),$0),$0),co|oh_1($0)),co|yes_2($0))
example_end

Sent: well you don 't want it to get a flat tire do you ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(v|want_5(pro:per|you_2,lambda $1_{r}.v|get_8(pro:per|it_6,det:art|a_9($2,and(n|flat_10($2),n|tire_11($2))),$1),$0),$0),$0),v|do_12(pro:per|you_13,$0)),co|well_1($0)))
example_end

Sent: no Adam don 't put anything else under there .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|put-zero_5(you,post|else_7(pro:indef|anything_6),$0),adv|under_8(adv|there_9($0))),$0),$0),co|no_1($0))
example_end

Sent: you let the marbles drive .
Sem: lambda $0_{r}.v|let-zero_2(pro:per|you_1,lambda $1_{r}.n|drive_5(det:art|the_3($2,n|marble-pl_4($2)),$1),$0)
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: you may break the crayons dear .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,det:art|the_4($1,n|crayon-pl_5($1)),$0),$0)
example_end

Sent: why 're you taking them out ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(and(part|take-presp_4(pro:per|you_3,pro:obj|them_5,$0),$1($0)),adv|out_6($0)),$0)
example_end

Sent: careful don 't put those letters under there honey .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|put-zero_4(you,pro:dem|those_5($1,n|letter-pl_6($1)),$0),adv|under_7(adv|there_8($0))),$0),$0),adj|care-dn_1($0))
example_end

Sent: I don 't know how you 'll get them out .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.mod|~will_7(and(and(v|get_8(pro:per|you_6,pro:obj|them_9,$1),adv:int|how_5($1)),adv|out_10($1)),$1),$0),$0),$0)
example_end

Sent: watching them push that thing over ?
Sem: lambda $0_{r}.Q(part|watch-presp_1(you,lambda $1_{r}.and(v|push_3(pro:obj|them_2,pro:dem|that_4($2,n|thing_5($2)),$1),adv|over_6($1)),$0))
example_end

Sent: what is that thing they 're pushing over ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,n|thing_4($2)),$0)
example_end

Sent: oh the top to the car .
Sem: lambda $0_{r}.and(det:art|the_2($1,att(n|top_3($1),prep|to_4(det:art|the_5($2,n|car_6($2)))),$0),co|oh_1($0))
example_end

Sent: oh what d you do in your office ?
Sem: lambda $1_{e}.lambda $0_{r}.and(mod|do_3(and(v|do_5(pro:per|you_4,$1,$0),prep|in_6(det:poss|your_7($2,n|office_8($2)),$0)),$0),co|oh_1($0))
example_end

Sent: what kind of work ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|work_4($2)))))
example_end

Sent: some pretty work ?
Sem: BARE($0,Q(qn|some_1($1,and(adj|pretty_2($1),n|work_3($1)),$0)))
example_end

Sent: you do bad work ?
Sem: lambda $0_{r}.Q(v|do_2(pro:per|you_1,BARE($1,and(adj|bad_3($1),n|work_4($1))),$0))
example_end

Sent: when I touch Paul ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(v|touch_3(pro:sub|i_2,n:prop|paul_4,$0),$1($0))
example_end

Sent: you 're going to spank me to pieces ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|spank_5(pro:per|you_1,pro:obj|me_6,$1),prep|to_7(BARE($2,n|piece-pl_8($2)),$1)),$0),$0))
example_end

Sent: where 're they going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|~be_2(and(part|go-presp_4(pro:sub|they_3,$0),$1($0)),$0)
example_end

Sent: no you don 't need water in that .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|need_5(pro:per|you_2,BARE($1,n|water_6($1)),$0),prep|in_7(pro:dem|that_8,$0)),$0),$0),co|no_1($0))
example_end

Sent: because that 's for a doll .
Sem: lambda $0_{r}.and(conj|for_4(det:art|a_5($1,n|doll_6($1)),pro:dem|that_2,$0),conj|because_1($0))
example_end

Sent: a cooking set .
Sem: det:art|a_1($0,and_comp(part|cook-presp_2($0),n|set_3($0)))
example_end

Sent: you said you have a stove Adam .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.v|have_4(pro:per|you_3,det:art|a_5($2,n|stove_6($2)),$1),$0)
example_end

Sent: you 're going to give the baby the bottle ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|give_5(pro:per|you_1,det:art|the_8($2,n|bottle_9($2)),det:art|the_6($3,n|baby_7($3)),$1),$0),$0))
example_end

Sent: it 's a pan .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|pan_4(pro:per|it_1,$0))
example_end

Sent: for cooking things .
Sem: lambda $0_{r}.n:gerund|cook-presp_2(you,BARE($1,n|thing-pl_3($1)),$0)
example_end

Sent: a frying pan .
Sem: det:art|a_1($0,and_comp(part|fry-presp_2($0),n|pan_3($0)))
example_end

Sent: I don 't have any sugar .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|i_1,qn|any_5($1,n|sugar_6($1)),$0),$0),$0)
example_end

Sent: where 's a train track ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,and_comp(n|train_4($1),n|track_5($1))),$0),$2($0))
example_end

Sent: that 's a pad for washing pans .
Sem: lambda $0_{r}.prep|for_5(n:gerund|wash-presp_6(you,BARE($1,n|pan-pl_7($1)),$0),det:art|a_3(pro:dem|that_1,n|pad_4(pro:dem|that_1,$0)))
example_end

Sent: no just pretend .
Sem: lambda $0_{r}.and(and(adj|pretend_3(you,$0),adv|just_2($0)),co|no_1($0))
example_end

Sent: no but you haven 't cooked anything yet .
Sem: lambda $0_{r}.and(not(aux|have_4(and(part|cook-pastp_6(pro:per|you_3,pro:indef|anything_7,$0),adv|yet_8($0)),$0),$0),co|no_1($0))
example_end

Sent: yes but you haven 't cooked anything .
Sem: lambda $0_{r}.and(not(aux|have_4(part|cook-pastp_6(pro:per|you_3,pro:indef|anything_7,$0),$0),$0),co|yes_1($0))
example_end

Sent: this will be your kitchen .
Sem: lambda $0_{r}.mod|will_2(det:poss|your_4(pro:dem|this_1,n|kitchen_5(pro:dem|this_1,$0)),$0)
example_end

Sent: they 're going to burn the house ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:sub|they_1,lambda $1_{r}.v|burn_5(pro:sub|they_1,det:art|the_6($2,n|house_7($2)),$1),$0),$0))
example_end

Sent: so_that it won 't fall on anybody .
Sem: lambda $0_{r}.not(mod|will_3(and(v|fall_5(pro:per|it_2,$0),prep|on_6(pro:indef|anybody_7,$0)),$0),$0)
example_end

Sent: yes because somebody could get burned .
Sem: lambda $0_{r}.and(mod|could_4(part|burn-pastp_6(_,pro:indef|somebody_3,$0),$0),co|yes_1($0))
example_end

Sent: oh cake I like that .
Sem: lambda $0_{r}.and(co|like_4(pro:sub|i_3,pro:dem|that_5,$0),co|oh_1($0))
example_end

Sent: birthday cake ?
Sem: BARE($0,Q(and_comp(n|birth+day_1($0),n|cake_2($0))))
example_end

Sent: what kind of cake ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|cake_4($2)))))
example_end

Sent: what is a buddy cake ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,and_comp(n|buddy_4($2),n|cake_5($2))),$0)
example_end

Sent: in the oven ?
Sem: Q(prep|in_1(det:art|the_2($0,n|oven_3($0))))
example_end

Sent: oh you 're getting water ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|get-presp_4(pro:per|you_2,BARE($1,n|water_5($1)),$0),$0),co|oh_1($0)))
example_end

Sent: the ducks ?
Sem: BARE($0,Q(det:art|the_1($1,n|duck-pl_2($1),$0)))
example_end

Sent: he 's playing out what happens at supper .
Sem: lambda $0_{r}.aux|~be_2(and(part|play-presp_3(pro:sub|he_1,lambda $1_{r}.and(v|happen-3s_6(pro:int|what_5,$1),prep|at_7(BARE($2,n|supper+time_8($2)),$1)),$0),adv|out_4($0)),$0)
example_end

Sent: what shall I do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|do_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: will I get what out Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_1(and(v|get_3(pro:sub|i_2,$1,$0),adv|out_5($0)),$0)
example_end

Sent: we 'd better go see what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|~genmod_2(and(v|see_5(pro:sub|we_1,$1,$0),adj|good-cp_3($0)),$0)
example_end

Sent: oh the duck is going to cook the food with his mouth ?
Sem: lambda $0_{r}.Q(and(aux|be-3s_4(part|go-presp_5(det:art|the_2($1,n|duck_3($1)),lambda $2_{r}.v|cook_7(det:art|the_2($1,n|duck_3($1)),det:art|the_8($3,att(n|food_9($3),prep|with_10(det:poss|his_11($4,n|mouth_12($4))))),$2),$0),$0),co|oh_1($0)))
example_end

Sent: you will be a duck with a hand .
Sem: lambda $0_{r}.mod|will_2(det:art|a_4(pro:per|you_1,att(n|duck_5(pro:per|you_1,$0),prep|with_6(det:art|a_7($1,n|hand_8($1))))),$0)
example_end

Sent: you 're boiling water ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|boil-presp_3(pro:per|you_1,BARE($1,n|water_4($1)),$0),$0))
example_end

Sent: I guess I needed it to sew something .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.v|need-past_4(pro:sub|i_3,lambda $2_{r}.v|sew_7(pro:per|it_5,pro:indef|something_8,$2),$1),$0)
example_end

Sent: in_case something tears .
Sem: lambda $0_{r}.v|tear-3s_3(pro:indef|something_2,$0)
example_end

Sent: I don 't know what might tear .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,lambda $1_{r}.mod|might_6(v|tear_7(pro:int|what_5,$1),$1),$0),$0),$0)
example_end

Sent: oh he 's going to eat outside ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|go-presp_4(pro:sub|he_2,lambda $1_{r}.and(v|eat_6(pro:sub|he_2,$1),adv|outside_7($1)),$0),$0),co|oh_1($0)))
example_end

Sent: oh are we having a picnic ?
Sem: lambda $0_{r}.Q(and(cop|be-pres_2(part|have-presp_4(pro:sub|we_3,det:art|a_5($1,n|picnic_6($1)),$0),$0),co|oh_1($0)))
example_end

Sent: he didn 't mean to .
Sem: lambda $0_{r}.not(mod|do_2(adj|mean_4(pro:sub|he_1,$0),$0),$0)
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: what kind of fish are you having Adam ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.cop|be-pres_5(part|have-presp_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|fish_4($3))))),$0),$0)
example_end

Sent: it looks like a bottle opener .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,and_comp(n|bottle_5($1),adj|open-cp_6($1))),$0))
example_end

Sent: yes thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|yes_1($0))
example_end

Sent: I 'd like some Seven_up .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:sub|i_1,qn|some_4($1,n:prop|seven_up_5($1)),$0),$0)
example_end

Sent: you 're going to drink some Seven_up .
Sem: lambda $0_{r}.aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|drink_5(pro:per|you_1,qn|some_6($2,n:prop|seven_up_7($2)),$1),$0),$0)
example_end

Sent: a picnic ?
Sem: BARE($0,Q(det:art|a_1($1,n|picnic_2($1),$0)))
example_end

Sent: so_that it won 't burn while I 'm cooking it .
Sem: lambda $0_{r}.not(n|while_6(aux|~be_8(part|cook-presp_9(pro:sub|i_7,pro:per|it_10,$0),$0),mod|will_3(v|burn_5(pro:per|it_2,$0),$0)),$0)
example_end

Sent: yes thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|yes_1($0))
example_end

Sent: that 's all !
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: a duck drinks from a pan ?
Sem: lambda $0_{r}.Q(and(n|drink-pl_3(det:art|a_1($1,n|duck_2($1)),$0),prep|from_4(det:art|a_5($2,n|pan_6($2)),$0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: you 're very kind .
Sem: lambda $0_{r}.adv|very_3(adj|kind_4(pro:per|you_1,$0))
example_end

Sent: where 's Urs going to eat ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.cop|~be_2(and(part|go-presp_4(n:prop|ursula_3,lambda $1_{r}.v|eat_6(n:prop|ursula_3,$1),$0),$2($0)),$0)
example_end

Sent: on the tray ?
Sem: Q(prep|on_1(det:art|the_2($0,n|tray_3($0))))
example_end

Sent: there 's a tray .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,n|tray_4($1)),$0),pro:exist|there_1($0))
example_end

Sent: why don 't you use that tray ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|use_5(pro:per|you_4,pro:dem|that_6($1,n|tray_7($1)),$0),$2($0)),$0),$0)
example_end

Sent: no more trays .
Sem: qn|no_1($0,and(qn|more_2($0),n|tray-pl_3($0)))
example_end

Sent: the duck can share a tray with me .
Sem: lambda $0_{r}.mod|can_3(and(v|share_4(det:art|the_1($1,n|duck_2($1)),det:art|a_5($2,n|tray_6($2)),$0),prep|with_7(pro:obj|me_8,$0)),$0)
example_end

Sent: well you go sit in the chair with her beside the chair .
Sem: lambda $0_{r}.and(and(and(v|sit_4(pro:per|you_2,$0),prep|in_5(det:art|the_6($1,n|chair_7($1)),$0)),prep|with_8(att(pro:obj|her_9,prep|beside_10(det:art|the_11($2,n|chair_12($2)))),$0)),co|well_1($0))
example_end

Sent: what are you serving ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|serve-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh he was just visiting Paul while you were busy doing something else .
Sem: lambda $0_{r}.and(conj|while_7(adj|busy_10(pro:per|you_8,lambda $1_{r}.part|do-presp_11(pro:per|you_8,post|else_13(pro:indef|something_12),$1),$0),cop|be-past_3(and(part|visit-presp_5(pro:sub|he_2,n:prop|paul_6,$0),adv|just_4($0)),$0)),co|oh_1($0))
example_end

Sent: you were cooking Paul said .
Sem: lambda $0_{r}.and(aux|be-past_2(part|cook-presp_3(pro:per|you_1,$0),$0),v|say-past_5(n:prop|paul_4,$0))
example_end

Sent: a pencil I think .
Sem: lambda $0_{r}.and(det:art|a_1($1,n|pencil_2($1)),v|think_4(pro:sub|i_3,$0))
example_end

Sent: no I 'm not spilling it .
Sem: lambda $0_{r}.and(not(cop|~be_3(part|spill-presp_5(pro:sub|i_2,pro:per|it_6,$0),$0),$0),co|no_1($0))
example_end

Sent: what game is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|game_2(pro:dem|that_4,$0))
example_end

Sent: what game is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|game_2(pro:per|it_4,$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: oh that 's for the duck .
Sem: lambda $0_{r}.and(conj|for_4(det:art|the_5($1,n|duck_6($1)),pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: the car wouldn 't work .
Sem: lambda $0_{r}.not(mod|will_3(v|work_5(det:art|the_1($1,n|car_2($1)),$0),$0),$0)
example_end

Sent: the bell behind you .
Sem: det:art|the_1($0,att(n|bell_2($0),adv|behind_3(pro:per|you_4)))
example_end

Sent: a dinner bell .
Sem: det:art|a_1($0,and_comp(n|dinner_2($0),n|bell_3($0)))
example_end

Sent: peas in the oven ?
Sem: BARE($0,Q(att(n|pea-pl_1($0),prep|in_2(det:art|the_3($1,n|oven_4($1))))))
example_end

Sent: how d you say it Adam ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.v|do_2(and(v|say_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: pan in the oven ?
Sem: BARE($0,Q(att(n|pan_1($0),prep|in_2(det:art|the_3($1,n|oven_4($1))))))
example_end

Sent: the other part isn 't here .
Sem: lambda $0_{r}.not(and(cop|be_4(det:art|the_1($1,and(qn|other_2($1),n|part_3($1))),$0),adv|here_6($0)),$0)
example_end

Sent: she doesn 't have the other part .
Sem: lambda $0_{r}.not(mod|do_2(v|have_4(pro:sub|she_1,det:art|the_5($1,and(qn|other_6($1),n|part_7($1))),$0),$0),$0)
example_end

Sent: can she sit on the couch ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|sit_3(pro:sub|she_2,$0),prep|on_4(det:art|the_5($1,n|couch_6($1)),$0)),$0))
example_end

Sent: what happened to the children ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|child-pl_5($2)),$0))
example_end

Sent: what d you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that does look like an a .
Sem: lambda $0_{r}.v|do-3s_2(and(cop|look_3(pro:rel|that_1,$0),conj|like_4(det:art|a_5($1,n:let|a_6($1)),$0)),$0)
example_end

Sent: why don 't you see if you can get them out ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(conj|if_6(mod|can_8(and(v|get_9(pro:per|you_7,pro:obj|them_10,$0),adv|out_11($0)),$0),mod|do_2(and(v|see_5(pro:per|you_4,$0),$1($0)),$0)),$0)
example_end

Sent: well my hands are even bigger so how will we get them out ?
Sem: lambda $0_{r}.Q(and(adv|so_7(mod|will_9(and(and(v|get_11(pro:sub|we_10,pro:obj|them_12,$0),adv:int|how_8($0)),adv|out_13($0)),$0),adv|even_5(adj|big-cp_6(det:poss|my_2($1,n|hand-pl_3($1)),$0))),co|well_1($0)))
example_end

Sent: oh it 's not ready ?
Sem: lambda $0_{r}.Q(and(not(v|ready_5(pro:per|it_2,$0),$0),co|oh_1($0)))
example_end

Sent: oh it 's on the stove ?
Sem: lambda $0_{r}.Q(and(adv|on_4(det:art|the_5($1,n|stove_6($1)),pro:per|it_2,$0),co|oh_1($0)))
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: I thought it was ready .
Sem: lambda $0_{r}.v|think-past_2(pro:sub|i_1,lambda $1_{r}.adj|ready_5(pro:per|it_3,$1),$0)
example_end

Sent: may I see it ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,pro:per|it_4,$0),$0))
example_end

Sent: it 's a bunny rabbit .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|bunny_4(pro:per|it_1,$0),n|rabbit_5(pro:per|it_1,$0)))
example_end

Sent: an eraser .
Sem: det:art|a_1($0,n|erase-dv_2($0))
example_end

Sent: to erase on the typewriter .
Sem: lambda $0_{r}.and(v|erase_2(you,$0),prep|on_3(det:art|the_4($1,n|type+writer_5($1)),$0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: I was speaking to Adam .
Sem: lambda $0_{r}.aux|be-past_2(and(part|speak-presp_3(pro:sub|i_1,$0),prep|to_4(n:prop|adam_5,$0)),$0)
example_end

Sent: what did you say when ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(co|say_4(pro:per|you_3,$1,$0),$2($0)),$0)
example_end

Sent: no Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|no_1($0))
example_end

Sent: he 's on a broom .
Sem: lambda $0_{r}.prep|on_3(det:art|a_4($1,n|broom_5($1)),pro:sub|he_1,$0)
example_end

Sent: that 's Halloween .
Sem: lambda $0_{r}.n:prop|halloween_3(pro:dem|that_1,$0)
example_end

Sent: a witch yeah .
Sem: lambda $0_{r}.and(det:art|a_1($1,n|witch_2($1),$0),co|yeah_3($0))
example_end

Sent: does that turn ?
Sem: lambda $0_{r}.Q(mod|do-3s_1(n|turn_3(pro:dem|that_2,$0),$0))
example_end

Sent: do you see these words ?
Sem: lambda $0_{r}.Q(mod|do_1(v|see_3(pro:per|you_2,pro:dem|these_4($1,n|word-pl_5($1)),$0),$0))
example_end

Sent: you can spell these words .
Sem: lambda $0_{r}.mod|can_2(v|spell_3(pro:per|you_1,pro:dem|these_4($1,n|word-pl_5($1)),$0),$0)
example_end

Sent: are men ?
Sem: BARE($0,n|man-pl_2($0))
example_end

Sent: in houses ?
Sem: Q(prep|in_1(BARE($0,n|house-pl_2($0))))
example_end

Sent: that looks like that .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:dem|that_1,$0),prep|like_3(pro:dem|that_4,$0))
example_end

Sent: Adam you can turn it on the other side too .
Sem: lambda $0_{r}.mod|can_3(and(and(v|turn_4(pro:per|you_2,pro:per|it_5,$0),prep|on_6(det:art|the_7($1,and(qn|other_8($1),n|side_9($1))),$0)),post|too_10($0)),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I see .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,$0)
example_end

Sent: somebody to California .
Sem: att(pro:indef|somebody_1,prep|to_2(n:prop|california_3))
example_end

Sent: somebody 's place I think it was .
Sem: lambda $0_{r}.v|think_5(pro:sub|i_4,lambda $1_{r}.cop|be-past_7(pro:per|it_6,$1),$0)
example_end

Sent: oh what is that in the jeep ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(att(pro:dem|that_4,prep|in_5(det:art|the_6($2,n|jeep_7($2)))),$0),co|oh_1($0))
example_end

Sent: oh that 's a mother .
Sem: lambda $0_{r}.and(det:art|a_4(pro:dem|that_2,n|mother_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: oh the Daddy died ?
Sem: lambda $0_{r}.Q(and(v|die-past_4(det:art|the_2($1,n:prop|daddy_3($1)),$0),co|oh_1($0)))
example_end

Sent: anybody else in the family ?
Sem: BARE($0,Q(post|else_2(att(pro:indef|anybody_1,prep|in_3(det:art|the_4($1,n|family_5($1)))),$0)))
example_end

Sent: that 's another Daddy ?
Sem: lambda $0_{r}.Q(pro:indef|another_3(pro:dem|that_1,n:prop|daddy_4(pro:dem|that_1,$0)))
example_end

Sent: it doesn 't work ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|work_4(pro:per|it_1,$0),$0),$0))
example_end

Sent: oh Adam what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_5,$0),co|oh_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: he 's flying ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|fly-presp_3(pro:sub|he_1,$0),$0))
example_end

Sent: he flying .
Sem: lambda $0_{r}.part|fly-presp_2(pro:sub|he_1,$0)
example_end

Sent: he 's flying ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|fly-presp_3(pro:sub|he_1,$0),$0))
example_end

Sent: he caught his foot .
Sem: lambda $0_{r}.v|catch-past_2(pro:sub|he_1,det:poss|his_3($1,n|foot_4($1)),$0)
example_end

Sent: I don 't see it .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: that 's part of it ?
Sem: lambda $0_{r}.Q(att(n|part_3(pro:dem|that_1,$0),prep|of_4(pro:per|it_5)))
example_end

Sent: jump through the hole ?
Sem: lambda $0_{r}.Q(and(n|jump_1(you,$0),prep|through_2(det:art|the_3($1,n|hole_4($1)),$0)))
example_end

Sent: you turn it .
Sem: lambda $0_{r}.v|turn_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: can you blow in there ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|blow_3(pro:per|you_2,$0),adv|in_4(adv|there_5($0))),$0))
example_end

Sent: blow out .
Sem: lambda $0_{r}.and(v|blow_1(you,$0),adv|out_2($0))
example_end

Sent: it won 't hurt you .
Sem: lambda $0_{r}.not(mod|will_2(v|hurt-zero_4(pro:per|it_1,pro:per|you_5,$0),$0),$0)
example_end

Sent: oh Adam that won 't hurt you .
Sem: lambda $0_{r}.and(not(mod|will_4(v|hurt-zero_6(pro:rel|that_3,pro:per|you_7,$0),$0),$0),co|oh_1($0))
example_end

Sent: look Paul look .
Sem: lambda $0_{r}.and(co|look_1(you,$0),co|look_3(you,$0))
example_end

Sent: let go .
Sem: lambda $0_{r}.v|go_2(you,$0)
example_end

Sent: Paul caught it .
Sem: lambda $0_{r}.v|catch-past_2(n:prop|paul_1,pro:per|it_3,$0)
example_end

Sent: you going to try it again ?
Sem: lambda $0_{r}.Q(part|go-presp_2(pro:per|you_1,lambda $1_{r}.and(v|try_4(pro:per|you_1,pro:per|it_5,$1),adv|again_6($1)),$0))
example_end

Sent: alright now stand back and throw them .
Sem: lambda $0_{r}.and(and(and(v|throw_6(you,pro:obj|them_7,$0),adv|now_2($0)),adv|back_4($0)),co|alright_1($0))
example_end

Sent: oh sure you can .
Sem: lambda $0_{r}.and(and(mod|can_4(pro:per|you_3,$0),adj|sure_2($0)),co|oh_1($0))
example_end

Sent: what do owls say ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do_2(v|say_4(BARE($1,n|owl-pl_3($1)),$2,$0),$0)
example_end

Sent: whoo whoo whoo .
Sem: lambda $0_{r}.and(and(on|whoo_1($0),on|whoo_2($0)),on|whoo_3($0))
example_end

Sent: I don 't think they crawl no .
Sem: lambda $0_{r}.and(not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.v|crawl_6(pro:sub|they_5,$1),$0),$0),$0),co|no_7($0))
example_end

Sent: they walk don 't they ?
Sem: lambda $0_{r}.Q(and(v|walk_2(pro:sub|they_1,$0),not(mod|do_3(pro:sub|they_5,$0),$0)))
example_end

Sent: and fly .
Sem: lambda $0_{r}.n|fly_2(you,$0)
example_end

Sent: to have a wheel on it ?
Sem: lambda $0_{r}.Q(v|have_2(you,det:art|a_3($1,att(n|wheel_4($1),prep|on_5(pro:per|it_6))),$0))
example_end

Sent: you 're going to pick it up ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.and(v|pick_5(pro:per|you_1,pro:per|it_6,$1),adv|up_7($1)),$0),$0))
example_end

Sent: you pick it up .
Sem: lambda $0_{r}.and(v|pick_2(pro:per|you_1,pro:per|it_3,$0),adv|up_4($0))
example_end

Sent: it 's not a snail is it ?
Sem: lambda $0_{r}.Q(and(not(det:art|a_4(pro:per|it_1,n|snail_5(pro:per|it_1,$0)),$0),aux|be-3s_6(pro:per|it_7,$0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: it reminds you of a snail doesn 't it ?
Sem: lambda $0_{r}.Q(and(and(v|remind-3s_2(pro:per|it_1,pro:per|you_3,$0),prep|of_4(det:art|a_5($1,n|snail_6($1)),$0)),not(mod|do_7(pro:per|it_9,$0),$0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what shall we play ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|play_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: so the tractor can do what ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|can_4(and(v|do_5(det:art|the_2($1,n|tractor_3($1)),$2,$0),co|so_1($0)),$0)
example_end

Sent: so he can plant them .
Sem: lambda $0_{r}.mod|can_3(and(v|plant_4(pro:sub|he_2,pro:obj|them_5,$0),co|so_1($0)),$0)
example_end

Sent: you like pretty flower plants ?
Sem: lambda $0_{r}.Q(v|like_2(pro:per|you_1,BARE($1,and_comp(n|flower_4($1),and(adj|pretty_3($1),n|plant-pl_5($1)))),$0))
example_end

Sent: in your garden ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|garden_3($0))))
example_end

Sent: what kind of flowers do you like ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do_5(co|like_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|flower-pl_4($3))))),$0),$0)
example_end

Sent: I like roast beef chicken flowers .
Sem: lambda $0_{r}.v|like_2(pro:sub|i_1,BARE($1,and_comp(n|chicken_5($1),and_comp(and(n|roast_3($1),n|beef_4($1)),n|flower-pl_6($1)))),$0)
example_end

Sent: oh I don 't think I 've ever seen any roast beef and chicken flowers .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.aux|~have_7(and(part|see-pastp_9(pro:sub|i_6,qn|any_10($2,and_comp(and(n|roast_11($2),n|chicken_14($2)),n|flower-pl_15($2))),$1),adv|ever_8($1)),$1),$0),$0),$0),co|oh_1($0))
example_end

Sent: now what happens ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_3($1,$0),adv|now_1($0))
example_end

Sent: the jeep is coming in .
Sem: lambda $0_{r}.aux|be-3s_3(and(part|come-presp_4(det:art|the_1($1,n|jeep_2($1)),$0),adv|in_5($0)),$0)
example_end

Sent: the jeep is coming in .
Sem: lambda $0_{r}.aux|be-3s_3(and(part|come-presp_4(det:art|the_1($1,n|jeep_2($1)),$0),adv|in_5($0)),$0)
example_end

Sent: what does the jeep do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|do_5(det:art|the_3($1,n|jeep_4($1)),$2,$0),$0)
example_end

Sent: it 's takes it .
Sem: lambda $0_{r}.aux|~be_2(v|take-3s_3(pro:per|it_1,pro:per|it_4,$0),$0)
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: yes it is nap time .
Sem: lambda $0_{r}.and(and_comp(n|nap_4(pro:per|it_2,$0),n|time_5(pro:per|it_2,$0)),co|yes_1($0))
example_end

Sent: oh I missed .
Sem: lambda $0_{r}.and(v|miss-past_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: now you do it .
Sem: lambda $0_{r}.and(v|do_3(pro:per|you_2,pro:per|it_4,$0),adv|now_1($0))
example_end

Sent: before you go .
Sem: lambda $0_{r}.v|go_3(pro:per|you_2,$0)
example_end

Sent: now try this one .
Sem: lambda $0_{r}.and(v|try_2(you,pro:dem|this_3($1,pro:indef|one_4($1)),$0),adv|now_1($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: try again .
Sem: lambda $0_{r}.and(v|try_1(you,$0),adv|again_2($0))
example_end

Sent: oh you aren 't trying .
Sem: lambda $0_{r}.and(not(aux|be_3(part|try-presp_5(pro:per|you_2,$0),$0),$0),co|oh_1($0))
example_end

Sent: that 's not part of that is it ?
Sem: lambda $0_{r}.Q(and(not(att(n|part_4(pro:dem|that_1,$0),prep|of_5(pro:dem|that_6)),$0),cop|be-3s_7(pro:per|it_8,$0)))
example_end

Sent: that doesn 't stay on does it ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(n|stay_4(pro:dem|that_1,$0),prep|on_5($0)),$0),$0),mod|do-3s_6(pro:per|it_7,$0)))
example_end

Sent: oh somebody was a careless driver .
Sem: lambda $0_{r}.and(det:art|a_4(pro:indef|somebody_2,and(n|drive-dv_6(pro:indef|somebody_2,$0),adj|care-dn_5(pro:indef|somebody_2,$0))),co|oh_1($0))
example_end

Sent: you 're a nervous driver ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,and(n|drive-dv_5(pro:per|you_1,$0),adj|nervous_4(pro:per|you_1,$0))))
example_end

Sent: what 's a nervous driver Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,and(adj|nervous_4($2),n|drive-dv_5($2))),$0)
example_end

Sent: oh where 're you going ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|~be_3(and(part|go-presp_5(pro:per|you_4,$0),$1($0)),$0),co|oh_1($0))
example_end

Sent: oh where do you work ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(mod|do_3(and(v|work_5(pro:per|you_4,$0),$1($0)),$0),co|oh_1($0))
example_end

Sent: where do we work ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|work_4(pro:sub|we_3,$0),$1($0)),$0)
example_end

Sent: yes it 's part of Boston .
Sem: lambda $0_{r}.and(att(n|part_4(pro:per|it_2,$0),prep|of_5(n:prop|boston_6)),co|yes_1($0))
example_end

Sent: all of those are boxes of food ?
Sem: lambda $0_{r}.Q(att(n|box-pl_5(BARE($1,att(pro:indef|all_1($1),prep|of_2(pro:dem|those_3))),$0),prep|of_6(BARE($2,n|food_7($2)))))
example_end

Sent: oh they live on the top ?
Sem: lambda $0_{r}.Q(and(and(v|live_3(pro:sub|they_2,$0),prep|on_4(det:art|the_5($1,n|top_6($1)),$0)),co|oh_1($0)))
example_end

Sent: to the city of Boston ?
Sem: Q(prep|to_1(det:art|the_2($0,att(n|city_3($0),prep|of_4(n:prop|boston_5)))))
example_end

Sent: you have a giant coming through the city of Boston .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,lambda $1_{r}.and(part|come-presp_5(det:art|a_3($2,n|giant_4($2)),$1),prep|through_6(det:art|the_7($3,att(n|city_8($3),prep|of_9(n:prop|boston_10))),$1)),$0)
example_end

Sent: oh what kind of church is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_7,att(n|kind_3(pro:dem|that_7,$0),prep|of_4(BARE($2,n|church_5($2))))),co|oh_1($0))
example_end

Sent: oh they did ?
Sem: lambda $0_{r}.Q(and(v|do-past_3(pro:sub|they_2,$0),co|oh_1($0)))
example_end

Sent: a garage .
Sem: det:art|a_1($0,n|garage_2($0))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: the wheels can 't get in .
Sem: lambda $0_{r}.not(mod|can_3(and(v|get_5(det:art|the_1($1,n|wheel-pl_2($1)),$0),adv|in_6($0)),$0),$0)
example_end

Sent: they can 't ?
Sem: lambda $0_{r}.Q(not(mod|can_2(pro:sub|they_1,$0),$0))
example_end

Sent: poor Paul .
Sem: att(n:prop|paul_2,BARE($0,adj|poor_1($0)))
example_end

Sent: and why are you taking my garage ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_3(and(n:gerund|take-presp_5(pro:per|you_4,det:poss|my_6($1,n|garage_7($1)),$0),$2($0)),$0)
example_end

Sent: not your garage .
Sem: not(det:poss|your_2($0,n|garage_3($0)))
example_end

Sent: that was my garage .
Sem: lambda $0_{r}.det:poss|my_3(pro:dem|that_1,n|garage_4(pro:dem|that_1,$0))
example_end

Sent: he might hurt himself on this .
Sem: lambda $0_{r}.mod|might_2(and(v|hurt-zero_3(pro:sub|he_1,pro:refl|himself_4,$0),prep|on_5(pro:dem|this_6,$0)),$0)
example_end

Sent: no just to stand up .
Sem: lambda $0_{r}.and(and(and(v|stand_4(you,$0),adj|just_2($0)),adv|up_5($0)),qn|no_1($0))
example_end

Sent: oh you 're shoveling the snow off ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|shovel-presp_4(pro:per|you_2,det:art|the_5($1,n|snow_6($1)),$0),adv|off_7($0)),$0),co|oh_1($0)))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: don 't hit Paul on the head .
Sem: lambda $0_{r}.not(mod|do_1(and(n|hit_3(you,n:prop|paul_4,$0),prep|on_5(det:art|the_6($1,n|head_7($1)),$0)),$0),$0)
example_end

Sent: that might hurt him .
Sem: lambda $0_{r}.mod|might_2(v|hurt-zero_3(pro:rel|that_1,pro:obj|him_4,$0),$0)
example_end

Sent: no you 're too big .
Sem: lambda $0_{r}.and(adv|too_4(adj|big_5(pro:per|you_2,$0)),co|no_1($0))
example_end

Sent: the hole is too small .
Sem: lambda $0_{r}.adv|too_4(adj|small_5(det:art|the_1($1,n|hole_2($1)),$0))
example_end

Sent: one more .
Sem: BARE($0,pro:indef|more_2($0))
example_end

Sent: did you turn it over ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|turn_3(pro:per|you_2,pro:per|it_4,$0),adv|over_5($0)),$0))
example_end

Sent: look and see .
Sem: lambda $0_{r}.v|see_3(you,$0)
example_end

Sent: that 's a k .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n:let|k_4(pro:dem|that_1,$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: good for you Adam .
Sem: BARE($0,adj|good_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it looks like an x .
Sem: lambda $0_{r}.and(cop|look-3s_2(pro:per|it_1,$0),prep|like_3(det:art|a_4($1,n:let|x_5($1)),$0))
example_end

Sent: would you like an apple ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,n|apple_5($1)),$0),$0))
example_end

Sent: I like apples .
Sem: lambda $0_{r}.v|like_2(pro:sub|i_1,BARE($1,n|apple-pl_3($1)),$0)
example_end

Sent: yes you may eat that one .
Sem: lambda $0_{r}.and(mod|may_3(v|eat_4(pro:per|you_2,pro:dem|that_5($1,pro:indef|one_6($1)),$0),$0),co|yes_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you were just playing with Paul ?
Sem: lambda $0_{r}.Q(aux|be-past_2(and(and(part|play-presp_4(pro:per|you_1,$0),adv|just_3($0)),prep|with_5(n:prop|paul_6,$0)),$0))
example_end

Sent: did you tell Ursula what happened in the barber shop ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_1(v|tell_3(pro:per|you_2,$1,n:prop|ursula_4,$0),$0)
example_end

Sent: what happened in the barber shop ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|in_3(det:art|the_4($2,and_comp(n|barber_5($2),n|shop_6($2))),$0))
example_end

Sent: she wets my hair .
Sem: lambda $0_{r}.v|wet-3s_2(pro:sub|she_1,det:poss|my_3($1,n|hair_4($1)),$0)
example_end

Sent: after it 's cut ?
Sem: lambda $0_{r}.Q(n|cut_4(_,pro:per|it_2,$0))
example_end

Sent: what are you looking for ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|look-presp_4_for_5(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: it 's a q .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n:let|q_4(pro:per|it_1,$0))
example_end

Sent: I didn 't say you 're cute I said that 's a q .
Sem: lambda $0_{r}.and(not(mod|do_2(v|say_4(pro:sub|i_1,lambda $1_{r}.adj|cute_7(pro:per|you_5,$1),$0),$0),$0),v|say-past_9(pro:sub|i_8,lambda $2_{r}.det:art|a_12(pro:dem|that_10,n:let|q_13(pro:dem|that_10,$2)),$0))
example_end

Sent: that you just put in .
Sem: lambda $0_{r}.and(and(part|put-pastp_4(pro:per|you_2,$0),adv|just_3($0)),adv|in_5($0))
example_end

Sent: this is a q with the little thing sticking out .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|this_1,n:let|q_4(pro:dem|this_1,$0))
example_end

Sent: a cane .
Sem: det:art|a_1($0,n|cane_2($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: you stay down here .
Sem: lambda $0_{r}.and(n|stay_2(pro:per|you_1,$0),adv|down_3(adv|here_4($0)))
example_end

Sent: she hold his hands ?
Sem: lambda $0_{r}.Q(v|hold_2(pro:sub|she_1,det:poss|his_3($1,n|hand-pl_4($1)),$0))
example_end

Sent: Paul stand up .
Sem: lambda $0_{r}.and(v|stand_2(you,$0),adv|up_3($0))
example_end

Sent: like a what ?
Sem: det:art|a_2($0,pro:int|what_3($0))
example_end

Sent: a camel .
Sem: det:art|a_1($0,n|camel_2($0))
example_end

Sent: like a camel ?
Sem: Q(prep|like_1(det:art|a_2($0,n|camel_3($0))))
example_end

Sent: he can talk ?
Sem: lambda $0_{r}.Q(mod|can_2(v|talk_3(pro:sub|he_1,$0),$0))
example_end

Sent: what can he say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|can_2(v|say_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: can you understand him ?
Sem: lambda $0_{r}.Q(mod|can_1(v|understand_3(pro:per|you_2,pro:obj|him_4,$0),$0))
example_end

Sent: I can understand myself .
Sem: lambda $0_{r}.mod|can_2(v|understand_3(pro:sub|i_1,pro:refl|myself_4,$0),$0)
example_end

Sent: I hope so .
Sem: lambda $0_{r}.and(n|hope_2(pro:sub|i_1,$0),adv|so_3($0))
example_end

Sent: oh that 's nice .
Sem: lambda $0_{r}.and(adj|nice_4(pro:dem|that_2,$0),co|oh_1($0))
example_end

Sent: no I don 't think so does it ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),conj|so_6($0)),$0),$0),mod|do-3s_7(pro:per|it_8,$0)),co|no_1($0)))
example_end

Sent: I don 't know about that .
Sem: lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),prep|about_5(pro:dem|that_6,$0)),$0),$0)
example_end

Sent: don 't you turn it around ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|turn_4(pro:per|you_3,pro:per|it_5,$0),adv|around_6($0)),$0),$0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: I almost sat on Paul he moves so quickly .
Sem: lambda $0_{r}.and(and(and(v|sit-past_3(pro:sub|i_1,$0),adv|almost_2($0)),prep|on_4(n:prop|paul_5,$0)),and(v|move-3s_7(pro:sub|he_6,$0),adv|so_8(adv|quick-dadj_9($0))))
example_end

Sent: oh he 'll play a game with some blocks .
Sem: lambda $0_{r}.and(mod|~will_3(and(v|play_4(pro:sub|he_2,det:art|a_5($1,n|game_6($1)),$0),prep|with_7(qn|some_8($2,n|block-pl_9($2)),$0)),$0),co|oh_1($0))
example_end

Sent: three two what ?
Sem: BARE($0,det:num|three_1(det:num|two_2(pro:int|what_3($0))))
example_end

Sent: dot dot .
Sem: BARE($0,and_comp(n|dot_1($0),n|dot_2($0)))
example_end

Sent: do you remember what you told Mommy about this ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_1(and(v|remember_3(pro:per|you_2,$1,$0),prep|about_8(pro:dem|this_9,$0)),$0)
example_end

Sent: you said it was an a upsidedown .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.det:art|a_5(pro:per|it_3,and(n:let|a_6(pro:per|it_3,$1),adv|upside+down_7(pro:per|it_3,$1))),$0)
example_end

Sent: no that 's properly .
Sem: lambda $0_{r}.and(adv|proper-dadj_4(pro:dem|that_2,$0),co|no_1($0))
example_end

Sent: but it wasn 't an a at all was it ?
Sem: lambda $0_{r}.Q(and(not(det:art|a_5(pro:per|it_2,att(n:let|a_6(pro:per|it_2,$0),prep|at_7(BARE($1,pro:indef|all_8($1))))),$0),cop|be-past_9(pro:per|it_10,$0)))
example_end

Sent: it was a v .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n:let|v_4(pro:per|it_1,$0))
example_end

Sent: he thinks he 's grown a little .
Sem: lambda $0_{r}.v|think-3s_2(pro:sub|he_1,lambda $1_{r}.aux|~be_4(and(part|grow-pastp_5(pro:sub|he_3,$1),adj|little_7($1)),$1),$0)
example_end

Sent: what 're you going to do with that Paul ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),prep|with_7(det:dem|that_8,$1)),$0),$0)
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: well I 'm sorry Paul .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|well_1($0))
example_end

Sent: you 'll have_to grow a little .
Sem: lambda $0_{r}.mod|~will_2(mod:aux|have_to_3(pro:per|you_1,lambda $1_{r}.v|grow_5(pro:per|you_1,$1),$0),$0)
example_end

Sent: no I put that there for you .
Sem: lambda $0_{r}.and(and(and(part|put-pastp_3(pro:sub|i_2,det:dem|that_4,$0),adv|there_5($0)),prep|for_6(pro:per|you_7,$0)),co|no_1($0))
example_end

Sent: you might be able to see what you write better if you use that .
Sem: lambda $2_{e}.lambda $0_{r}.conj|if_11(v|use_13(pro:per|you_12,pro:dem|that_14,$0),mod|might_2(adj|able_4(pro:per|you_1,lambda $1_{r}.and(v|see_6(pro:per|you_1,$2,$1),adj|good-cp_10($1)),$0),$0))
example_end

Sent: I don 't understand why you want that .
Sem: lambda $0_{r}.not(mod|do_2(v|understand_4(pro:sub|i_1,lambda $1_{r}.and(v|want_7(pro:per|you_6,pro:dem|that_8,$1),adv:int|why_5($1)),$0),$0),$0)
example_end

Sent: oh he 's grown enough ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|grow-pastp_4(pro:sub|he_2,$0),adv|enough_5($0)),$0),co|oh_1($0)))
example_end

Sent: I 'll play over here with him so he won 't bother you .
Sem: lambda $0_{r}.conj|so_8(not(mod|will_10(v|bother_12(pro:sub|he_9,pro:per|you_13,$0),$0),$0),mod|~will_2(and(and(v|play_3(pro:sub|i_1,$0),adv|over_4(adv|here_5($0))),prep|with_6(pro:obj|him_7,$0)),$0))
example_end

Sent: well come on .
Sem: lambda $0_{r}.and(v|come_2_on_3(you,$0),co|well_1($0))
example_end

Sent: a small bug and what ?
Sem: BARE($0,Q(det:art|a_1($1,att(pro:int|what_5,BARE($2,adj|small_2($2)),$1),$0)))
example_end

Sent: big bug .
Sem: BARE($0,and(adj|big_1($0),n|bug_2($0)))
example_end

Sent: the big bug ?
Sem: BARE($0,Q(det:art|the_1($1,and(adj|big_2($1),n|bug_3($1)),$0)))
example_end

Sent: what kind of bug .
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|bug_4($2)))))
example_end

Sent: oh what do bugs like to eat ?
Sem: lambda $4_{e}.lambda $0_{r}.and(mod|do_3(co|like_5(BARE($1,n|bug-pl_4($1)),lambda $2_{r}.v|eat_7(BARE($3,n|bug-pl_4($3)),$4,$2),$0),$0),co|oh_1($0))
example_end

Sent: who is Michael ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(n:prop|michael_3,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh he goes to nursery school ?
Sem: lambda $0_{r}.Q(and(and(v|go-3s_3(pro:sub|he_2,$0),prep|to_4(BARE($1,and_comp(n|nursery_5($1),n|school_6($1))),$0)),co|oh_1($0)))
example_end

Sent: how are you doing with it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|do-presp_4(pro:per|you_3,$0),$1($0)),prep|with_5(pro:per|it_6,$0)),$0)
example_end

Sent: I ready .
Sem: lambda $0_{r}.v|ready_2(pro:sub|i_1,$0)
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: this morning ?
Sem: BARE($0,Q(pro:dem|this_1($1,n|morning_2($1),$0)))
example_end

Sent: this morning ?
Sem: BARE($0,Q(pro:dem|this_1($1,n|morning_2($1),$0)))
example_end

Sent: he was playing with the cow .
Sem: lambda $0_{r}.aux|be-past_2(and(part|play-presp_3(pro:sub|he_1,$0),prep|with_4(det:art|the_5($1,n|cow_6($1)),$0)),$0)
example_end

Sent: she turned the direction so she could hear better .
Sem: lambda $0_{r}.conj|so_5(mod|could_7(and(v|hear_8(pro:sub|she_6,$0),adj|good-cp_9($0)),$0),v|turn-past_2(pro:sub|she_1,det:art|the_3($1,n|direction_4($1)),$0))
example_end

Sent: careful don 't push him down honey .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|push_4(you,pro:obj|him_5,$0),adv|down_6($0)),$0),$0),adj|care-dn_1($0))
example_end

Sent: Paul why don 't you come over here .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_3(and(and(v|come_6(pro:per|you_5,$0),$1($0)),adv|over_7(adv|here_8($0))),$0),$0)
example_end

Sent: Adam can you spell your name over here ?
Sem: lambda $0_{r}.Q(n|can_2(and(v|spell_4(pro:per|you_3,det:poss|your_5($1,n|name_6($1)),$0),adv|over_7(adv|here_8($0))),$0))
example_end

Sent: look here .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),adv|here_2($0))
example_end

Sent: can you put these letter on here ?
Sem: lambda $0_{r}.Q(mod|can_1(and(v|put-zero_3(pro:per|you_2,pro:dem|these_4($1,n|letter_5($1)),$0),prep|on_6(adv|here_7($0))),$0))
example_end

Sent: you don 't have_to make it .
Sem: lambda $0_{r}.v|make_6(you,$0)
example_end

Sent: I mean with these .
Sem: lambda $0_{r}.and(v|mean_2(pro:sub|i_1,$0),prep|with_3(pro:dem|these_4,$0))
example_end

Sent: what is this Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: a channel .
Sem: det:art|a_1($0,n|channel_2($0))
example_end

Sent: when does Walt Disney come on ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(and(v|come_5(n:prop|disney_4_walt_3,$0),$1($0)),adv|on_6($0)),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: he comes on on Sunday .
Sem: lambda $0_{r}.and(and(v|come-3s_2(pro:sub|he_1,$0),adv|on_3($0)),prep|on_4(n:prop|sunday_5,$0))
example_end

Sent: no just Sunday .
Sem: lambda $0_{r}.and(adj|just_2(n:prop|sunday_3,$0),qn|no_1($0))
example_end

Sent: we say a funny program didn 't we ?
Sem: lambda $0_{r}.Q(and(v|say_2(pro:sub|we_1,det:art|a_3($1,and(adj|fun-dn_4($1),n|program_5($1))),$0),not(mod|do_6(pro:sub|we_8,$0),$0)))
example_end

Sent: about a funny dog .
Sem: prep|about_1(det:art|a_2($0,and(adj|fun-dn_3($0),n|dog_4($0))))
example_end

Sent: they were shooting at him and the in the stall was what ?
Sem: lambda $0_{r}.Q(aux|be-past_2(att(att(pro:int|what_12(pro:sub|they_1,$0),prep|at_4(pro:obj|him_5)),prep|in_8(det:art|the_9($1,n|stall_10($1)))),$0))
example_end

Sent: no a big bull .
Sem: lambda $0_{r}.and(det:art|a_2($1,and(adj|big_3($1),n|bull_4($1)),$0),qn|no_1($0))
example_end

Sent: and the dog got frightened of the big bull and backed out .
Sem: lambda $0_{r}.aux|get-past_4(and(and(v|back-past_11(det:art|the_2($1,n|dog_3($1)),$0),prep|of_6(det:art|the_7($2,and(adj|big_8($2),n|bull_9($2))),$0)),adv|out_12($0)),$0)
example_end

Sent: no I don 't think he 'd like you in there either .
Sem: lambda $0_{r}.and(not(mod|do_3(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|~genmod_7(and(and(v|like_8(pro:sub|he_6,pro:per|you_9,$1),prep|in_10(adv|there_11($1))),adv|either_12($1)),$1),$0),$0),$0),co|no_1($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: you might hurt him .
Sem: lambda $0_{r}.mod|might_2(v|hurt-zero_3(pro:per|you_1,pro:obj|him_4,$0),$0)
example_end

Sent: what else happened ?
Sem: lambda $1_{e}.lambda $0_{r}.v|happen-past_3($1,$0)
example_end

Sent: do you remember the name of the story ?
Sem: lambda $0_{r}.Q(mod|do_1(v|remember_3(pro:per|you_2,det:art|the_4($1,att(n|name_5($1),prep|of_6(det:art|the_7($2,n|story_8($2))))),$0),$0))
example_end

Sent: what was it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: a funny cartoon .
Sem: det:art|a_1($0,and(adj|fun-dn_2($0),n|cartoon_3($0)))
example_end

Sent: it 's about Hector .
Sem: lambda $0_{r}.prep|about_3(n:prop|hector_4,pro:per|it_1,$0)
example_end

Sent: the stow away pup .
Sem: det:art|the_1($0,and(and_comp(v|stow_2($0),adv|away_3($0)),n|pup_4($0)))
example_end

Sent: yes it was .
Sem: lambda $0_{r}.and(cop|be-past_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: why are you doing that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: no Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|no_1($0))
example_end

Sent: what are you eating ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|eat-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: why are you eating an apple ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|eat-presp_4(pro:per|you_3,det:art|a_5($1,n|apple_6($1)),$0),$2($0)),$0)
example_end

Sent: I don 't know why .
Sem: lambda $1_{<r,t>}.lambda $0_{r}.not(mod|do_2(and(v|know_4(pro:sub|i_1,$0),$1($0)),$0),$0)
example_end

Sent: I do h .
Sem: lambda $0_{r}.v|do_2(pro:sub|i_1,BARE($1,n:let|h_3($1)),$0)
example_end

Sent: h e .
Sem: BARE($0,n:let|h_1($0))
example_end

Sent: mine says p a u l .
Sem: lambda $0_{r}.v|say-3s_2(n|mine_1,BARE($1,n:let|p_3($1)),$0)
example_end

Sent: what does that spell ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(n|spell_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: me said t v e i l .
Sem: lambda $0_{r}.v|say-past_2(pro:obj|me_1,BARE($1,n:let|t_3($1)),$0)
example_end

Sent: what does that spell ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(n|spell_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: p u i m o .
Sem: BARE($0,n:let|p_1($0))
example_end

Sent: this is Paul 's name .
Sem: lambda $0_{r}.n:prop|paul_3's'(pro:dem|this_1,n|name_5(pro:dem|this_1,$0))
example_end

Sent: that 's Paul 's name .
Sem: lambda $0_{r}.n:prop|paul_3's'(pro:dem|that_1,n|name_5(pro:dem|that_1,$0))
example_end

Sent: d a l e .
Sem: BARE($0,n:let|d_1($0))
example_end

Sent: that 's your name .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|that_1,n|name_4(pro:dem|that_1,$0))
example_end

Sent: whose glove is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|glove_2(pro:dem|that_4,$0))
example_end

Sent: that 's Ursula 's glove .
Sem: lambda $0_{r}.n:prop|ursula_3's'(pro:dem|that_1,n|glove_5(pro:dem|that_1,$0))
example_end

Sent: you have pretty gloves ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,BARE($1,and(adj|pretty_3($1),n|glove-pl_4($1))),$0))
example_end

Sent: who said your gloves were pretty ?
Sem: lambda $1_{e}.lambda $0_{r}.v|say-past_2($1,lambda $2_{r}.adv|pretty_6(det:poss|your_3($3,n|glove-pl_4($3)),$2),$0)
example_end

Sent: this is another word Adam .
Sem: lambda $0_{r}.qn|another_3(pro:dem|this_1,n|word_4(pro:dem|this_1,$0))
example_end

Sent: that 's h e he .
Sem: lambda $0_{r}.and(n:let|h_3(pro:dem|that_1,$0),pro:sub|he_5)
example_end

Sent: here 's another word .
Sem: lambda $0_{r}.pro:exist|here_1(qn|another_3($1,n|word_4($1)),$0)
example_end

Sent: here 's another word Adam look .
Sem: lambda $0_{r}.and(pro:exist|here_1(qn|another_3($1,n|word_4($1)),$0),co|look_6(you,$0))
example_end

Sent: Paul you come over and play with this .
Sem: lambda $0_{r}.and(and(n|play_6(pro:per|you_2,$0),adv|over_4($0)),prep|with_7(pro:dem|this_8,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a snail ?
Sem: BARE($0,Q(det:art|a_1($1,n|snail_2($1),$0)))
example_end

Sent: what does a snail do ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-3s_2(v|do_5(det:art|a_3($1,n|snail_4($1)),$2,$0),$0)
example_end

Sent: no this is channel two .
Sem: BARE($0,and_comp(v|channel_4($0),det:num|two_5($0)))
example_end

Sent: this is two .
Sem: BARE($0,det:num|two_3($0))
example_end

Sent: where is four ?
Sem: lambda $0_{r}.Q(adv:int|where_1(BARE($1,det:num|four_3($1)),$0))
example_end

Sent: poor Paul .
Sem: att(n:prop|paul_2,BARE($0,adj|poor_1($0)))
example_end

Sent: you 're having a hard time .
Sem: lambda $0_{r}.aux|~be_2(part|have-presp_3(pro:per|you_1,det:art|a_4($1,and(adj|hard_5($1),n|time_6($1))),$0),$0)
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: he can play with a few .
Sem: lambda $0_{r}.mod|can_2(v|play_3(pro:sub|he_1,$0),$0)
example_end

Sent: yes maybe he 's big enough now .
Sem: lambda $0_{r}.and(adv|now_7(adv|enough_6(adv|maybe_2(adj|big_5(pro:sub|he_3,$0)))),co|yes_1($0))
example_end

Sent: why are you hiding behind there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(and(part|hide-presp_4(pro:per|you_3,$0),$1($0)),adv|behind_5(adv|there_6($0))),$0)
example_end

Sent: four goes here .
Sem: lambda $0_{r}.and(v|go-3s_2(BARE($1,det:num|four_1($1)),$0),adv|here_3($0))
example_end

Sent: what goes next ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|go-3s_2($1,$0),adv|next_3($0))
example_end

Sent: channel o goes next .
Sem: lambda $0_{r}.and(v|go-3s_3(BARE($1,and_comp(n|channel_1($1),n:let|o_2($1))),$0),adv|next_4($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's k .
Sem: lambda $0_{r}.n:let|k_3(pro:dem|that_1,$0)
example_end

Sent: well k starts with key yes .
Sem: lambda $0_{r}.and(and(and(v|start-3s_3(BARE($1,n:let|k_2($1)),$0),prep|with_4(BARE($2,n|key_5($2)),$0)),co|well_1($0)),co|yes_6($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: one more .
Sem: BARE($0,pro:indef|more_2($0))
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: wait a minute .
Sem: lambda $0_{r}.v|wait_1(you,det:art|a_2($1,n|minute_3($1)),$0)
example_end

Sent: try again .
Sem: lambda $0_{r}.and(v|try_1(you,$0),adv|again_2($0))
example_end

Sent: watch your fingers .
Sem: lambda $0_{r}.v|watch_1(you,det:poss|your_2($1,n|finger-pl_3($1)),$0)
example_end

Sent: that 's a good idea .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: wait Adam .
Sem: lambda $0_{r}.v|wait_1(you,$0)
example_end

Sent: it 's all_gone .
Sem: lambda $0_{r}.adj|all_gone_3(pro:per|it_1,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: with the what ?
Sem: det:art|the_2($0,pro:int|what_3($0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I do ?
Sem: lambda $0_{r}.Q(v|do_2(pro:sub|i_1,$0))
example_end

Sent: I 'll try .
Sem: lambda $0_{r}.mod|~will_2(v|try_3(pro:sub|i_1,$0),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: that 's a good idea .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: oh my_goodness .
Sem: lambda $0_{r}.and(co|my_goodness_2($0),co|oh_1($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: just a minute .
Sem: adv|just_1(det:art|a_2($0,n|minute_3($0)))
example_end

Sent: just a minute .
Sem: adv|just_1(det:art|a_2($0,n|minute_3($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: can you spell your name ?
Sem: lambda $0_{r}.Q(mod|can_1(v|spell_3(pro:per|you_2,det:poss|your_4($1,n|name_5($1)),$0),$0))
example_end

Sent: very good Adam .
Sem: BARE($0,adv|very_1(adj|good_2($0)))
example_end

Sent: yes I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: well no .
Sem: lambda $0_{r}.and(co|no_2($0),co|well_1($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: did it ?
Sem: lambda $0_{r}.Q(v|do-past_1(you,pro:per|it_2,$0))
example_end

Sent: are you sure ?
Sem: lambda $0_{r}.Q(adj|sure_3(pro:per|you_2,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what does it say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: what does it say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: he 's happy .
Sem: lambda $0_{r}.adj|happy_3(pro:sub|he_1,$0)
example_end

Sent: and what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,$0)
example_end

Sent: and what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,$0)
example_end

Sent: and what is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what about this ?
Sem: att(pro:int|what_1,prep|about_2(pro:dem|this_3))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: and what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,$0)
example_end

Sent: what kind of flowers are they ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:sub|they_6,att(n|kind_2(pro:sub|they_6,$0),prep|of_3(BARE($2,n|flower-pl_4($2)))))
example_end

Sent: and what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,$0)
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: don 't you see it ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|see_4(pro:per|you_3,pro:per|it_5,$0),$0),$0))
example_end

Sent: no look .
Sem: lambda $0_{r}.and(co|look_2(you,$0),co|no_1($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: look at it again .
Sem: lambda $0_{r}.and(and(cop|look_1(you,$0),prep|at_2(pro:per|it_3,$0)),adv|again_4($0))
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: what 's he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: yes I suppose so .
Sem: lambda $0_{r}.and(and(v|suppose_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: bless you .
Sem: lambda $0_{r}.v|bless_1(you,pro:per|you_2,$0)
example_end

Sent: bless you .
Sem: lambda $0_{r}.v|bless_1(you,pro:per|you_2,$0)
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: no Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|no_1($0))
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: I do too .
Sem: lambda $0_{r}.and(v|do_2(pro:sub|i_1,$0),post|too_3($0))
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: oh Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|oh_1($0))
example_end

Sent: oh alright .
Sem: lambda $0_{r}.and(co|alright_2($0),co|oh_1($0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: oh alright .
Sem: lambda $0_{r}.and(co|alright_2($0),co|oh_1($0))
example_end

Sent: what happened to the airplane ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(det:art|the_4($2,n|airplane_5($2)),$0))
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: are you ready to go to bed ?
Sem: lambda $0_{r}.Q(adj|ready_3(pro:per|you_2,lambda $1_{r}.and(v|go_5(pro:per|you_2,$1),prep|to_6(BARE($2,n|bed_7($2)),$1)),$0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: yes they do .
Sem: lambda $0_{r}.and(v|do_3(pro:sub|they_2,$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what 's this one ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3($2,pro:indef|one_4($2)),$0)
example_end

Sent: what are these ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|these_3,$0)
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: and this ?
Sem: BARE($0,Q(pro:dem|this_2($0)))
example_end

Sent: what about this ?
Sem: att(pro:int|what_1,prep|about_2(pro:dem|this_3))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|oh_1($0))
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: you 're too big ?
Sem: lambda $0_{r}.Q(adv|too_3(adj|big_4(pro:per|you_1,$0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: on the other side .
Sem: prep|on_1(det:art|the_2($0,and(qn|other_3($0),n|side_4($0))))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what d you hear ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|hear_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh you did ?
Sem: lambda $0_{r}.Q(and(v|do-past_3(pro:per|you_2,$0),co|oh_1($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: one more what ?
Sem: att(BARE($0,det:num|one_1(pro:int|what_3($0))),BARE($1,adv|more_2($1)))
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: now let go .
Sem: lambda $0_{r}.and(v|let-zero_2_go_3(you,$0),adv|now_1($0))
example_end

Sent: can you fix it ?
Sem: lambda $0_{r}.Q(mod|can_1(v|fix_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: what does that say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: oh my_goodness .
Sem: lambda $0_{r}.and(co|my_goodness_2($0),co|oh_1($0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_1,$0)
example_end

Sent: you have ?
Sem: lambda $0_{r}.Q(v|have_2(pro:per|you_1,$0))
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: good morning .
Sem: BARE($0,and(adj|good_1($0),n|morning_2($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: come on .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|on_2($0))
example_end

Sent: who are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: oh my_goodness .
Sem: lambda $0_{r}.and(co|my_goodness_2($0),co|oh_1($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: oh Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|oh_1($0))
example_end

Sent: you blow it .
Sem: lambda $0_{r}.v|blow_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you 'll break it .
Sem: lambda $0_{r}.mod|~will_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: where is it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-3s_2(pro:per|it_3,$0),$1($0))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh alright .
Sem: lambda $0_{r}.and(co|alright_2($0),co|oh_1($0))
example_end

Sent: I do ?
Sem: lambda $0_{r}.Q(v|do_2(pro:sub|i_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: look at that .
Sem: lambda $0_{r}.cop|look_1(you,pro:dem|that_3_at_2,$0)
example_end

Sent: you can keep it .
Sem: lambda $0_{r}.mod|can_2(v|keep_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what kind of dog is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(BARE($2,n|dog_4($2)))))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: why is he crying ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(part|cry-presp_4(pro:sub|he_3,$0),$1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: I didn 't bring one .
Sem: lambda $0_{r}.not(mod|do_2(v|bring_4(pro:sub|i_1,pro:indef|one_5,$0),$0),$0)
example_end

Sent: look at it .
Sem: lambda $0_{r}.cop|look_1(you,pro:per|it_3_at_2,$0)
example_end

Sent: oh alright .
Sem: lambda $0_{r}.and(co|alright_2($0),co|oh_1($0))
example_end

Sent: wait a minute .
Sem: lambda $0_{r}.v|wait_1(you,det:art|a_2($1,n|minute_3($1)),$0)
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: where are you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-pres_2(pro:per|you_3,$0),$1($0))
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: you may break it .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: you may break it .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: yes I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: you 're what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_1,$0)
example_end

Sent: yes please .
Sem: lambda $0_{r}.and(co|please_2($0),co|yes_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I don 't think it does .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I can 't see it .
Sem: lambda $0_{r}.not(mod|can_2(v|see_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: what else do you need ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do_3(v|need_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: like this .
Sem: prep|like_1(pro:dem|this_2)
example_end

Sent: why would you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: you have_to be careful .
Sem: lambda $0_{r}.mod:aux|have_to_2(pro:per|you_1,lambda $1_{r}.adj|care-dn_5(pro:per|you_1,$1),$0)
example_end

Sent: count them .
Sem: lambda $0_{r}.v|count_1(you,pro:obj|them_2,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: one two three four five .
Sem: BARE($0,det:num|one_1(det:num|two_2(det:num|three_3(det:num|four_4(det:num|five_5($0))))))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: one two .
Sem: BARE($0,det:num|one_1($0))
example_end

Sent: like this .
Sem: prep|like_1(pro:dem|this_2)
example_end

Sent: count them .
Sem: lambda $0_{r}.v|count_1(you,pro:obj|them_2,$0)
example_end

Sent: look here .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),adv|here_2($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what did you make ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|make_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I can 't see .
Sem: lambda $0_{r}.not(mod|can_2(v|see_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|oh_1($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: good for you Adam .
Sem: BARE($0,adj|good_1($0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: yes I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: you 're a big boy .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,and(n|boy_5(pro:per|you_1,$0),adj|big_4(pro:per|you_1,$0)))
example_end

Sent: it 's your turn .
Sem: lambda $0_{r}.det:poss|your_3(pro:per|it_1,n|turn_4(pro:per|it_1,$0))
example_end

Sent: like that ?
Sem: Q(prep|like_1(pro:dem|that_2))
example_end

Sent: oh Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|oh_1($0))
example_end

Sent: whose house ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,n|house_2($1))
example_end

Sent: yes you are a big boy .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|you_2,and(n|boy_6(pro:per|you_2,$0),adj|big_5(pro:per|you_2,$0))),co|yes_1($0))
example_end

Sent: you don 't remember ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|remember_4(pro:per|you_1,$0),$0),$0))
example_end

Sent: that 's it .
Sem: lambda $0_{r}.pro:dem|that_1(pro:per|it_3,$0)
example_end

Sent: d you like that ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,pro:dem|that_4,$0),$0))
example_end

Sent: why are you doing that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.aux|be-pres_2(and(part|do-presp_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: you 're silly .
Sem: lambda $0_{r}.adj|silly_3(pro:per|you_1,$0)
example_end

Sent: oh you are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:per|you_2,$0),co|oh_1($0))
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: that 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you almost did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_1,$0),adv|almost_2($0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: don 't you remember ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|remember_4(pro:per|you_3,$0),$0),$0))
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what 's your name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_3($2,n|name_4($2)),$0)
example_end

Sent: what d you want to play ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|do_2(v|want_4(pro:per|you_3,lambda $1_{r}.v|play_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: I see you .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|you_3,$0)
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: good Adam .
Sem: BARE($0,adj|good_1($0))
example_end

Sent: oh you are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:per|you_2,$0),co|oh_1($0))
example_end

Sent: it 's your turn .
Sem: lambda $0_{r}.det:poss|your_3(pro:per|it_1,n|turn_4(pro:per|it_1,$0))
example_end

Sent: you did what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(pro:per|you_1,$1,$0)
example_end

Sent: oh I don 't know .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,$0),$0),$0),co|oh_1($0))
example_end

Sent: look Adam .
Sem: lambda $0_{r}.co|look_1(you,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: what kind is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,n|kind_2(pro:dem|that_4,$0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what d you have ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|have_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: it 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:per|it_1,$0)
example_end

Sent: what are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_3,$0)
example_end

Sent: that 's one .
Sem: lambda $0_{r}.pro:indef|one_3(pro:dem|that_1,$0)
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: what 's your name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|your_3($2,n|name_4($2)),$0)
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: what did you do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: what are you looking for ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|look-presp_4_for_5(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: let go .
Sem: lambda $0_{r}.v|go_2(you,$0)
example_end

Sent: watch your fingers .
Sem: lambda $0_{r}.v|watch_1(you,det:poss|your_2($1,n|finger-pl_3($1)),$0)
example_end

Sent: what 're you going to make ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|make_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: that was an accident .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|accident_4(pro:dem|that_1,$0))
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what did you buy ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|buy_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: no thank_you !
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: sixty dollars ?
Sem: BARE($0,Q(det:num|sixty_1(n|dollar-pl_2($0))))
example_end

Sent: it 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:per|it_1,$0)
example_end

Sent: you 're welcome .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: what d you need ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|need_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: oh Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|oh_1($0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's enough Adam .
Sem: lambda $0_{r}.adj|enough_3(pro:dem|that_1,$0)
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: you do it .
Sem: lambda $0_{r}.v|do_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: a book ?
Sem: BARE($0,Q(det:art|a_1($1,n|book_2($1),$0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: did you finish the puzzle ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|finish_3(pro:per|you_2,det:art|the_4($1,n|puzzle_5($1)),$0),$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: oh you are .
Sem: lambda $0_{r}.and(cop|be-pres_3(pro:per|you_2,$0),co|oh_1($0))
example_end

Sent: oh Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|oh_1($0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you don 't remember ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|remember_4(pro:per|you_1,$0),$0),$0))
example_end

Sent: I see .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: see what happens .
Sem: lambda $0_{r}.v|see_1(you,lambda $1_{r}.v|happen-3s_3(pro:int|what_2,$1),$0)
example_end

Sent: say thank_you .
Sem: lambda $0_{r}.v|say_1(you,BARE($1,n|thank_you_2($1)),$0)
example_end

Sent: what 're you going to draw ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|draw_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: that 's nice .
Sem: lambda $0_{r}.adj|nice_3(pro:dem|that_1,$0)
example_end

Sent: that 's a what ?
Sem: lambda $1_{e}.lambda $0_{r}.det:art|a_3(pro:dem|that_1,$1(pro:dem|that_1,$0))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: that 's a good idea .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: where are they ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-pres_2(pro:sub|they_3,$0),$1($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: that 's all !
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: which one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,pro:indef|one_2($1))
example_end

Sent: show me .
Sem: lambda $0_{r}.v|show_1(you,pro:obj|me_2,$0)
example_end

Sent: this one ?
Sem: BARE($0,Q(pro:dem|this_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: this one ?
Sem: BARE($0,Q(pro:dem|this_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: what d you need ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|need_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what other one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,and(qn|other_2($1),pro:indef|one_3($1)))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: it 's hard .
Sem: lambda $0_{r}.adj|hard_3(pro:per|it_1,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: there it is .
Sem: lambda $0_{r}.cop|be-3s_3_there_1_it_2(you,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what d you think it looks like ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.and(cop|look-3s_6(pro:per|it_5,$1),prep|like_7(pro:int|what_1,$1)),$0),$0))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: Robin 's .
Sem: poss|~s_2(n:prop|robin_1)
example_end

Sent: blow again .
Sem: lambda $0_{r}.and(n|blow_1(you,$0),adv|again_2($0))
example_end

Sent: well Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|well_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I 'm all finished .
Sem: lambda $0_{r}.adv|all_3(part|finish-pastp_4(pro:sub|i_1,$0))
example_end

Sent: Adam Smith ?
Sem: BARE($0,Q(n:prop|smith_2_adam_1($0)))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: can you say thank_you ?
Sem: lambda $0_{r}.Q(mod|can_1(v|say_3(pro:per|you_2,BARE($1,n|thank_you_4($1)),$0),$0))
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: oh Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|oh_1($0))
example_end

Sent: you 're welcome .
Sem: lambda $0_{r}.adj|welcome_3(pro:per|you_1,$0)
example_end

Sent: that 's nice .
Sem: lambda $0_{r}.adj|nice_3(pro:dem|that_1,$0)
example_end

Sent: what did you say Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: what is that Adam ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: are you finished ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(v|finish-past_3(pro:per|you_2,$0),$0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what are you writing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|write-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: a snail ?
Sem: BARE($0,Q(det:art|a_1($1,n|snail_2($1),$0)))
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: try again .
Sem: lambda $0_{r}.and(v|try_1(you,$0),adv|again_2($0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: is it a hat ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|hat_4(pro:per|it_2,$0)))
example_end

Sent: isn 't that pretty ?
Sem: lambda $0_{r}.Q(not(adv|pretty_4(pro:dem|that_3,$0),$0))
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: what 's this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: you don 't have what ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_2(v|have_4(pro:per|you_1,$1,$0),$0),$0)
example_end

Sent: no he 's not .
Sem: lambda $0_{r}.and(not(aux|~be_3(pro:sub|he_2,$0),$0),co|no_1($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: what 're you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's a good idea .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: a fence .
Sem: det:art|a_1($0,n|fence_2($0))
example_end

Sent: like that ?
Sem: Q(prep|like_1(pro:dem|that_2))
example_end

Sent: that 's a good idea .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: a mouse .
Sem: det:art|a_1($0,n|mouse_2($0))
example_end

Sent: is that yours ?
Sem: lambda $0_{r}.Q(pro:poss|yours_3(pro:dem|that_2,$0))
example_end

Sent: bless you .
Sem: lambda $0_{r}.v|bless_1(you,pro:per|you_2,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: I see .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: no Diandra .
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: what kind of fish ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|fish_4($2)))))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what 's he doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|do-presp_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: count them .
Sem: lambda $0_{r}.v|count_1(you,pro:obj|them_2,$0)
example_end

Sent: count them .
Sem: lambda $0_{r}.v|count_1(you,pro:obj|them_2,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: where did it go ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|go_4(pro:per|it_3,$0),$1($0)),$0)
example_end

Sent: which one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,pro:indef|one_2($1))
example_end

Sent: that one ?
Sem: BARE($0,Q(pro:dem|that_1($1,pro:indef|one_2($1),$0)))
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: a lion !
Sem: det:art|a_1($0,n|lion_2($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh very good .
Sem: lambda $0_{r}.and(adv|very_2(adj|good_3($0)),co|oh_1($0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: yes dear .
Sem: lambda $0_{r}.and(co|dear_2($0),co|yes_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: that 's very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: you turn it .
Sem: lambda $0_{r}.v|turn_2(pro:per|you_1,pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: no more .
Sem: qn|no_1($0,pro:indef|more_2($0))
example_end

Sent: isn 't that pretty ?
Sem: lambda $0_{r}.Q(not(adv|pretty_4(pro:dem|that_3,$0),$0))
example_end

Sent: that 's enough .
Sem: lambda $0_{r}.and(cop|~be_2(pro:dem|that_1,$0),adv|enough_3($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: is that a turtle ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:rel|that_2,n|turtle_4(pro:rel|that_2,$0)))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: the pen ?
Sem: BARE($0,Q(det:art|the_1($1,n|pen_2($1),$0)))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: put it on .
Sem: lambda $0_{r}.and(v|put-zero_1(you,pro:per|it_2,$0),adv|on_3($0))
example_end

Sent: just a minute .
Sem: adv|just_1(det:art|a_2($0,n|minute_3($0)))
example_end

Sent: is that your favorite ?
Sem: lambda $0_{r}.Q(det:poss|your_3(pro:rel|that_2,n|favorite_4(pro:rel|that_2,$0)))
example_end

Sent: no just one .
Sem: lambda $0_{r}.and(adj|just_2(pro:indef|one_3,$0),qn|no_1($0))
example_end

Sent: that 's what I thought .
Sem: lambda $0_{r}.pro:int|what_3(pro:dem|that_1,$0)
example_end

Sent: that 's good .
Sem: lambda $0_{r}.adj|good_3(pro:dem|that_1,$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: okay Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|okay_1($0))
example_end

Sent: what d you think ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|think_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what does that say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|say_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: which one ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,pro:indef|one_2($1))
example_end

Sent: what did you get ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|get_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: you don 't like it ?
Sem: lambda $0_{r}.Q(not(mod|do_2(v|like_4(pro:per|you_1,pro:per|it_5,$0),$0),$0))
example_end

Sent: that 's good .
Sem: lambda $0_{r}.adj|good_3(pro:dem|that_1,$0)
example_end

Sent: that 's it .
Sem: lambda $0_{r}.pro:dem|that_1(pro:per|it_3,$0)
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: oh what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_4,$0),co|oh_1($0))
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what else did you see .
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,$1,$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: that 's a horse .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,n|horse_4(pro:dem|that_1,$0))
example_end

Sent: oh I 'm sorry .
Sem: lambda $0_{r}.and(adj|sorry_4(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: where 's the box ?
Sem: lambda $0_{r}.Q(adv:int|where_1(det:art|the_3($1,n|box_4($1)),$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: what did he do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|do_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: what 's happening now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|happen-presp_3($1,$0),adv|now_4($0)),$0)
example_end

Sent: let me see it .
Sem: lambda $0_{r}.v|let-zero_1(you,lambda $1_{r}.v|see_3(pro:obj|me_2,pro:per|it_4,$1),$0)
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: you 'll break it .
Sem: lambda $0_{r}.mod|~will_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: where is that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(pro:dem|that_3,$0),$1($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: why would you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: alright Adam .
Sem: lambda $0_{r}.co|alright_1($0)
example_end

Sent: you may break it dear .
Sem: lambda $0_{r}.mod|may_2(v|break_3(pro:per|you_1,pro:per|it_4,$0),$0)
example_end

Sent: alright Adam .
Sem: lambda $0_{r}.co|alright_1($0)
example_end

Sent: I 'm sorry .
Sem: lambda $0_{r}.adj|sorry_3(pro:sub|i_1,$0)
example_end

Sent: like this .
Sem: prep|like_1(pro:dem|this_2)
example_end

Sent: come on .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|on_2($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: don 't do that .
Sem: lambda $0_{r}.not(mod|do_1(v|do_3(you,pro:dem|that_4,$0),$0),$0)
example_end

Sent: yes dear .
Sem: lambda $0_{r}.and(co|dear_2($0),co|yes_1($0))
example_end

Sent: a whale ?
Sem: BARE($0,Q(det:art|a_1($1,n|whale_2($1),$0)))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: what d you see ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|see_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: please don 't .
Sem: lambda $0_{r}.and(not(mod|do_2(you,$0),$0),co|please_1($0))
example_end

Sent: yes they do .
Sem: lambda $0_{r}.and(v|do_3(pro:sub|they_2,$0),co|yes_1($0))
example_end

Sent: shame on you .
Sem: BARE($0,att(n|shame_1($0),prep|on_2(pro:per|you_3)))
example_end

Sent: and what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_4,$0)
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: what d you need ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(v|need_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: look here .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),adv|here_2($0))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: oh alright .
Sem: lambda $0_{r}.and(co|alright_2($0),co|oh_1($0))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: why would you do that ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|do_4(pro:per|you_3,pro:dem|that_5,$0),$1($0)),$0)
example_end

Sent: you almost did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_1,$0),adv|almost_2($0))
example_end

Sent: shame on you .
Sem: BARE($0,att(n|shame_1($0),prep|on_2(pro:per|you_3)))
example_end

Sent: where 's the cat ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|cat_4($1)),$0),$2($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: oh Adam .
Sem: lambda $0_{r}.and(n:prop|adam_2($0),co|oh_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: yes it did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: oh I forgot .
Sem: lambda $0_{r}.and(v|forget-past_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: what shall we do ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|do_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: no it doesn 't .
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: oh Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|oh_1($0))
example_end

Sent: hello Adam .
Sem: lambda $0_{r}.co|hello_1($0)
example_end

Sent: what happened to it ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|happen-past_2($1,$0),prep|to_3(pro:per|it_4,$0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: yes I suppose so .
Sem: lambda $0_{r}.and(and(v|suppose_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: no thank_you Adam .
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: one two .
Sem: BARE($0,det:num|one_1($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what did you say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: this way .
Sem: pro:dem|this_1($0,n|way_2($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: no Paul .
Sem: lambda $0_{r}.and(n:prop|paul_2($0),co|no_1($0))
example_end

Sent: I 'll try .
Sem: lambda $0_{r}.mod|~will_2(v|try_3(pro:sub|i_1,$0),$0)
example_end

Sent: you almost did it ?
Sem: lambda $0_{r}.Q(and(mod|do-past_3(pro:per|you_1,pro:per|it_4,$0),adv|almost_2($0)))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: that 's not a hammer .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|hammer_5(pro:dem|that_1,$0)),$0)
example_end

Sent: how are you ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.and(aux|be-pres_2(pro:per|you_3,$0),$1($0))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: what is that song ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3($2,n|song_4($2)),$0)
example_end

Sent: who 's there ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|~be_2($1,$0),adv|there_3($0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: wait a minute .
Sem: lambda $0_{r}.v|wait_1(you,det:art|a_2($1,n|minute_3($1)),$0)
example_end

Sent: look here .
Sem: lambda $0_{r}.and(cop|look_1(you,$0),adv|here_2($0))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what d you mean ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(adj|mean_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: may I see that ?
Sem: lambda $0_{r}.Q(mod|may_1(v|see_3(pro:sub|i_2,pro:dem|that_4,$0),$0))
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: who is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: that 's what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_1,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: alright Adam .
Sem: lambda $0_{r}.co|alright_1($0)
example_end

Sent: here 's some paper .
Sem: lambda $0_{r}.pro:exist|here_1(qn|some_3($1,n|paper_4($1)),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: here they are .
Sem: lambda $0_{r}.adv|here_1(pro:sub|they_2,$0)
example_end

Sent: yes you do .
Sem: lambda $0_{r}.and(v|do_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I do ?
Sem: lambda $0_{r}.Q(v|do_2(pro:sub|i_1,$0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: turn it around .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:per|it_2,$0),adv|around_3($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I don 't think so .
Sem: lambda $0_{r}.not(mod|do_2(and(v|think_4(pro:sub|i_1,$0),co|so_5($0)),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: yes thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|yes_1($0))
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: a cat .
Sem: det:art|a_1($0,n|cat_2($0))
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: what is that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: I think so .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,$0),co|so_3($0))
example_end

Sent: I see them .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:obj|them_3,$0)
example_end

Sent: what 's her name ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:poss|her_3($2,n|name_4($2)),$0)
example_end

Sent: what are you doing ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|do-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I do ?
Sem: lambda $0_{r}.Q(v|do_2(pro:sub|i_1,$0))
example_end

Sent: shall I help you ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|help_3(pro:sub|i_2,pro:per|you_4,$0),$0))
example_end

Sent: squeeze it .
Sem: lambda $0_{r}.v|squeeze_1(you,pro:per|it_2,$0)
example_end

Sent: that 's it .
Sem: lambda $0_{r}.pro:dem|that_1(pro:per|it_3,$0)
example_end

