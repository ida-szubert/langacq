Sent: which one d you want ?
Sem: lambda $0_{r}.Q(mod|do_3(v|want_5(pro:per|you_4,pro:rel|which_1($1,pro:indef|one_2($1)),$0),$0))
example_end

Sent: it disappeared .
Sem: lambda $0_{r}.part|appear-pastp_2(pro:per|it_1,$0)
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: which one d you want ?
Sem: lambda $0_{r}.Q(mod|do_3(v|want_5(pro:per|you_4,pro:rel|which_1($1,pro:indef|one_2($1)),$0),$0))
example_end

Sent: careful Adam !
Sem: lambda $0_{e}.co|careful_1($0)
example_end

Sent: what 's that ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:dem|that_3,$0))
example_end

Sent: and what else ?
Sem: lambda $0_{e}.Q(post|else_3(pro:int|what_2,$0))
example_end

Sent: what is it ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:per|it_3,$0))
example_end

Sent: careful Adam !
Sem: lambda $0_{e}.co|careful_1($0)
example_end

Sent: like that ?
Sem: Q(prep|like_1(pro:dem|that_2))
example_end

Sent: what 're you doing now ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(part|do-presp_4(pro:per|you_3,pro:int|what_1,$0),adv|now_5($0)),$0))
example_end

Sent: it 's very hard .
Sem: lambda $0_{r}.adv|very_3(adv|hard_4(pro:per|it_1,$0))
example_end

Sent: oh my_goodness .
Sem: lambda $0_{r}.and(co|my_goodness_2($0),co|oh_1($0))
example_end

Sent: where did you put it ?
Sem: lambda $0_{r}.Q(mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),adv:int|where_1($0)),$0))
example_end

Sent: careful now .
Sem: lambda $0_{e}.adv|now_2(co|careful_1($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: careful now .
Sem: lambda $0_{e}.adv|now_2(co|careful_1($0))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what is this .
Sem: lambda $0_{r}.pro:int|what_1(pro:dem|this_3,$0)
example_end

Sent: you 're making what ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|make-presp_3(pro:per|you_1,pro:int|what_4,$0),$0))
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: those two are just alike .
Sem: lambda $0_{r}.adv|just_4(adv|alike_5(pro:dem|those_1($1,det:num|two_2($1)),$0))
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: I think you broke it .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|break-past_4(pro:per|you_3,pro:per|it_5,$1),$0)
example_end

Sent: be careful .
Sem: lambda $0_{e}.lambda $1_{r}.adj|care-dn_2($0,$1)
example_end

Sent: yes that 's right .
Sem: lambda $0_{r}.and(n|right_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: what does that look like ?
Sem: lambda $0_{r}.Q(mod|do-3s_2(and(co|look_4(pro:dem|that_3,$0),co|like_5(pro:int|what_1,$0)),$0))
example_end

Sent: how do you know ?
Sem: lambda $0_{r}.Q(mod|do_2(and(v|know_4(pro:per|you_3,$0),adv:int|how_1($0)),$0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: what are you ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:per|you_3,$0))
example_end

