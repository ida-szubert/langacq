Sent: what are you ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:per|you_3,$0))
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: what d you think they are ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.pro:int|what_1(pro:sub|they_5,$1),$0),$0))
example_end

Sent: oh I don 't know .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,$0),$0),$0),co|oh_1($0))
example_end

Sent: here are some more .
Sem: lambda $0_{r}.and(cop|be-pres_2(qn|some_3($1,pro:indef|more_4($1)),$0),adv|here_1($0))
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I see it .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,pro:per|it_3,$0)
example_end

Sent: that 's better .
Sem: lambda $0_{r}.adj|good-cp_3(pro:dem|that_1,$0)
example_end

Sent: what d you think they are ?
Sem: lambda $0_{r}.Q(mod|do_2(v|think_4(pro:per|you_3,lambda $1_{r}.pro:int|what_1(pro:sub|they_5,$1),$0),$0))
example_end

Sent: I don 't see it .
Sem: lambda $0_{r}.not(mod|do_2(v|see_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: yes thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: it was an accident .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|accident_4(pro:per|it_1,$0))
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: aren 't they in there ?
Sem: lambda $0_{r}.Q(not(and(aux|be_1(pro:sub|they_3,$0),adv|in_4(adv|there_5($0))),$0))
example_end

Sent: don 't you remember ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|remember_4(pro:per|you_3,$0),$0),$0))
example_end

Sent: where did we go ?
Sem: lambda $0_{r}.Q(mod|do-past_2(and(v|go_4(pro:sub|we_3,$0),adv:int|where_1($0)),$0))
example_end

Sent: where did we go ?
Sem: lambda $0_{r}.Q(mod|do-past_2(and(v|go_4(pro:sub|we_3,$0),adv:int|where_1($0)),$0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: where are they ?
Sem: lambda $0_{r}.Q(and(cop|be-pres_2(pro:sub|they_3,$0),adv:int|where_1($0)))
example_end

Sent: where were you ?
Sem: lambda $0_{r}.Q(and(cop|be-past_2(pro:per|you_3,$0),adv:int|where_1($0)))
example_end

Sent: that 's very good .
Sem: lambda $0_{r}.adv|very_3(adj|good_4(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:dem|that_3,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is he doing ?
Sem: lambda $0_{r}.Q(cop|be-3s_2(part|do-presp_4(pro:sub|he_3,pro:int|what_1,$0),$0))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: did you ?
Sem: lambda $0_{r}.Q(v|do-past_1(pro:per|you_2,$0))
example_end

Sent: no it didn 't go there .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|go_5(pro:per|it_2,$0),adv|there_6($0)),$0),$0),co|no_1($0))
example_end

Sent: it 's all_gone .
Sem: lambda $0_{r}.adj|all_gone_3(pro:per|it_1,$0)
example_end

Sent: d you have it ?
Sem: lambda $0_{r}.Q(mod|do_1(v|have_3(pro:per|you_2,pro:per|it_4,$0),$0))
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: what 's happening ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|happen-presp_3(pro:int|what_1,$0),$0))
example_end

Sent: what 's that ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:dem|that_3,$0))
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what is your name ?
Sem: lambda $0_{r}.Q(pro:int|what_1(det:poss|your_3($1,n|name_4($1)),$0))
example_end

Sent: what else did you see .
Sem: lambda $0_{r}.mod|do-past_3(v|see_5(pro:per|you_4,post|else_2(pro:int|what_1),$0),$0)
example_end

Sent: and what else ?
Sem: lambda $0_{e}.Q(post|else_3(pro:int|what_2,$0))
example_end

Sent: and what else ?
Sem: lambda $0_{e}.Q(post|else_3(pro:int|what_2,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it 's a what ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_1,pro:int|what_4(pro:per|it_1,$0)))
example_end

Sent: what does it look like to you ?
Sem: lambda $0_{r}.Q(mod|do-3s_2(and(and(co|look_4(pro:per|it_3,$0),co|like_5(pro:int|what_1,$0)),prep|to_6(pro:per|you_7,$0)),$0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: yes I think so .
Sem: lambda $0_{r}.and(and(v|think_3(pro:sub|i_2,$0),co|so_4($0)),co|yes_1($0))
example_end

Sent: who 's there ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(pro:rel|who_1,$0),adv|there_3($0)))
example_end

Sent: come in .
Sem: lambda $0_{r}.and(v|come_1(you,$0),adv|in_2($0))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: you tell me .
Sem: lambda $0_{r}.v|tell_2(pro:per|you_1,pro:obj|me_3,$0)
example_end

Sent: where were you Adam ?
Sem: lambda $0_{r}.Q(and(cop|be-past_2(pro:per|you_3,$0),adv:int|where_1($0)))
example_end

Sent: I know .
Sem: lambda $0_{r}.v|know_2(pro:sub|i_1,$0)
example_end

Sent: that 's all .
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

