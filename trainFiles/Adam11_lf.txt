Sent: because some things are surprises .
Sem: lambda $0_{r}.n|surprise-pl_5(qn|some_2($1,n|thing-pl_3($1)),$0)
example_end

Sent: not a cup ?
Sem: BARE($0,Q(not(det:art|a_2($1,n|cup_3($1)),$0)))
example_end

Sent: a naughty cup ?
Sem: BARE($0,Q(det:art|a_1($1,and(adj|naughty_2($1),n|cup_3($1)),$0)))
example_end

Sent: oh Adam what are you saying ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-pres_4(part|say-presp_6(pro:per|you_5,$1,$0),$0),co|oh_1($0))
example_end

Sent: would you like a piece ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,n|piece_5($1)),$0),$0))
example_end

Sent: you can have a pen .
Sem: lambda $0_{r}.mod|can_2(v|have_3(pro:per|you_1,det:art|a_4($1,n|pen_5($1)),$0),$0)
example_end

Sent: which one d you want ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do_3(v|want_5(pro:per|you_4,$1($2,pro:indef|one_2($2)),$0),$0)
example_end

Sent: d you want to write on this ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,lambda $1_{r}.and(v|write_5(pro:per|you_2,$1),prep|on_6(pro:dem|this_7,$1)),$0),$0))
example_end

Sent: I mean put the paper on this .
Sem: lambda $0_{r}.v|mean_2(pro:sub|i_1,lambda $1_{r}.and(v|put-zero_3(_,det:art|the_4($2,n|paper_5($2)),$1),prep|on_6(pro:dem|this_7,$1)),$0)
example_end

Sent: that 's it .
Sem: lambda $0_{r}.pro:dem|that_1(pro:per|it_3,$0)
example_end

Sent: what 're you going to write ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|write_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: oh have you been to see your doctor ?
Sem: lambda $0_{r}.Q(and(v|have_2(aux|be-pastp_4(pro:per|you_3,lambda $1_{r}.co|see_6(pro:per|you_3,det:poss|your_7($2,n|doctor_8($2)),$1),$0),$0),co|oh_1($0)))
example_end

Sent: what did he say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: he examined you ?
Sem: lambda $0_{r}.Q(v|examine-past_2(pro:sub|he_1,pro:per|you_3,$0))
example_end

Sent: he must have had something in his bag .
Sem: lambda $0_{r}.aux|have_3(mod|must_2(and(v|have-past_4(pro:sub|he_1,pro:indef|something_5,$0),prep|in_6(det:poss|his_7($1,n|bag_8($1)),$0)),$0),$0)
example_end

Sent: what color is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_4,n|color_2(pro:per|it_4,$0))
example_end

Sent: it 's a band .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|band_4(pro:per|it_1,$0))
example_end

Sent: a band .
Sem: det:art|a_1($0,n|band_2($0))
example_end

Sent: to hold it together .
Sem: lambda $0_{r}.and(v|hold_2(you,pro:per|it_3,$0),adv|together_4($0))
example_end

Sent: so it won 't come apart .
Sem: lambda $0_{r}.not(mod|will_3(and(v|come_5(pro:per|it_2,$0),adv|apart_6($0)),$0),$0)
example_end

Sent: sometimes he does .
Sem: lambda $0_{r}.and(v|do-3s_3(pro:sub|he_2,$0),adv|sometimes_1($0))
example_end

Sent: if he takes them apart I take them from him .
Sem: lambda $0_{r}.conj|if_1(and(v|take-3s_3(pro:sub|he_2,pro:obj|them_4,$0),adv|apart_5($0)),and(v|take_7(pro:sub|i_6,pro:obj|them_8,$0),prep|from_9(pro:obj|him_10,$0)))
example_end

Sent: he tries .
Sem: lambda $0_{r}.v|try-3s_2(pro:sub|he_1,$0)
example_end

Sent: no he couldn 't take it apart .
Sem: lambda $0_{r}.and(not(mod|could_3(and(v|take_5(pro:sub|he_2,pro:per|it_6,$0),adv|apart_7($0)),$0),$0),co|no_1($0))
example_end

Sent: yes it 's quite hard .
Sem: lambda $0_{r}.and(adv|quite_4(adv|hard_5(pro:per|it_2,$0)),co|yes_1($0))
example_end

Sent: no he didn 't break it .
Sem: lambda $0_{r}.and(not(mod|do_3(v|break_5(pro:sub|he_2,pro:per|it_6,$0),$0),$0),co|no_1($0))
example_end

Sent: d you like to ?
Sem: lambda $0_{r}.Q(mod|do_1(v|like_3(pro:per|you_2,$0),$0))
example_end

Sent: sometimes I do .
Sem: lambda $0_{r}.and(v|do_3(pro:sub|i_2,$0),adv|sometimes_1($0))
example_end

Sent: it 's so small .
Sem: lambda $0_{r}.adv|so_3(adj|small_4(pro:per|it_1,$0))
example_end

Sent: David likes to fix things do you ?
Sem: lambda $0_{r}.Q(and(v|like-3s_2(n:prop|david_1,lambda $1_{r}.v|fix_4(n:prop|david_1,BARE($2,n|thing-pl_5($2)),$1),$0),v|do_6(pro:per|you_7,$0)))
example_end

Sent: he likes to fix things that break .
Sem: lambda $0_{r}.v|like-3s_2(pro:sub|he_1,lambda $1_{r}.v|fix_4(pro:sub|he_1,BARE($2,n|thing-pl_5($2)),$1),$0)
example_end

Sent: did it make a noise ?
Sem: lambda $0_{r}.Q(v|do-past_1(you,lambda $1_{r}.v|make_3(pro:per|it_2,det:art|a_4($2,n|noise_5($2)),$1),$0))
example_end

Sent: well how did you know it was no good ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(mod|do-past_3(and(v|know_5(pro:per|you_4,lambda $1_{r}.not(adj|good_9(pro:per|it_6,$1),$1),$0),$2($0)),$0),co|well_1($0))
example_end

Sent: oh no .
Sem: lambda $0_{r}.co|oh_1_no_2($0)
example_end

Sent: it disappeared .
Sem: lambda $0_{r}.part|appear-pastp_2(pro:per|it_1,$0)
example_end

Sent: can it write ?
Sem: lambda $0_{r}.Q(mod|can_1(v|write_3(pro:per|it_2,$0),$0))
example_end

Sent: what shall I use ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|shall_2(v|use_4(pro:sub|i_3,$1,$0),$0)
example_end

Sent: what color d you want ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_3(v|want_5(pro:per|you_4,$1($2,n|color_2($2)),$0),$0)
example_end

Sent: what color is this ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_4,n|color_2(pro:dem|this_4,$0))
example_end

Sent: no it 's not blue .
Sem: lambda $0_{r}.and(not(adj|blue_5(pro:per|it_2,$0),$0),co|no_1($0))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: try it .
Sem: lambda $0_{r}.v|try_1(you,pro:per|it_2,$0)
example_end

Sent: did it click ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|click_3(pro:per|it_2,$0),$0))
example_end

Sent: what color is that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|that_4($1($2,n|color_2($2)),$0)
example_end

Sent: which one d you want ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.mod|do_3(v|want_5(pro:per|you_4,$1($2,pro:indef|one_2($2)),$0),$0)
example_end

Sent: which one this color ?
Sem: lambda $1_{<<e,e>,e>}.lambda $1_{<<e,e>,e>}.lambda $0_{r}.pro:dem|this_3($1($2,pro:indef|one_2($2)),n|color_4($1($2,pro:indef|one_2($2)),$0))
example_end

Sent: can you draw a moon ?
Sem: lambda $0_{r}.Q(mod|can_1(v|draw_3(pro:per|you_2,det:art|a_4($1,n|moon_5($1)),$0),$0))
example_end

Sent: a grapefruit ?
Sem: BARE($0,Q(det:art|a_1($1,n|grape+fruit_2($1),$0)))
example_end

Sent: what are you making ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(part|make-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: d you want some more paper ?
Sem: lambda $0_{r}.Q(mod|do_1(v|want_3(pro:per|you_2,qn|some_4($1,and(qn|more_5($1),n|paper_6($1))),$0),$0))
example_end

Sent: how would you like to have a piece of red paper ?
Sem: lambda $4_{<r,t>}.lambda $0_{r}.mod|will-cond_2(and(v|like_4(pro:per|you_3,lambda $1_{r}.v|have_6(pro:per|you_3,det:art|a_7($2,att(n|piece_8($2),prep|of_9(BARE($3,and(n|red_10($3),n|paper_11($3)))))),$1),$0),$4($0)),$0)
example_end

Sent: shall I fold it in half ?
Sem: lambda $0_{r}.Q(mod|shall_1(and(v|fold_3(pro:sub|i_2,pro:per|it_4,$0),prep|in_5(BARE($1,n|half_6($1)),$0)),$0))
example_end

Sent: what 're you making ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|make-presp_4(pro:per|you_3,$1,$0),$0)
example_end

Sent: that was very nice .
Sem: lambda $0_{r}.adv|very_3(adj|nice_4(pro:dem|that_1,$0))
example_end

Sent: what dropped in the water ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|drop-past_2($1,$0),prep|in_3(det:art|the_4($2,n|water_5($2)),$0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: it 's like suspenders .
Sem: lambda $0_{r}.conj|like_3(BARE($1,n|suspenders_4($1)),pro:per|it_1,$0)
example_end

Sent: oh you 're dressed up ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(v|dress-past_4(pro:per|you_2,$0),adv|up_5($0)),$0),co|oh_1($0)))
example_end

Sent: you look like a cowboy ?
Sem: lambda $0_{r}.Q(and(cop|look_2(pro:per|you_1,$0),conj|like_3(det:art|a_4($1,n|cow+boy_5($1)),$0)))
example_end

Sent: you 're a cowboy .
Sem: lambda $0_{r}.det:art|a_3(pro:per|you_1,n|cow+boy_4(pro:per|you_1,$0))
example_end

Sent: okay cowboy Adam .
Sem: lambda $0_{r}.and(n|cow+boy_2($0),co|okay_1($0))
example_end

Sent: well doesn 't your thumb go there ?
Sem: lambda $0_{r}.Q(and(not(mod|do_2(and(v|go_6(det:poss|your_4($1,n|thumb_5($1)),$0),adv|there_7($0)),$0),$0),co|well_1($0)))
example_end

Sent: what 's that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_3,$0)
example_end

Sent: a snowman yes .
Sem: lambda $0_{r}.and(det:art|a_1($1,n|snow+man_2($1),$0),co|yes_3($0))
example_end

Sent: no they must be David 's .
Sem: lambda $0_{r}.and(mod|must_3(poss|~s_6(n:prop|david_5,pro:sub|they_2,$0),$0),co|no_1($0))
example_end

Sent: those are David 's ?
Sem: lambda $0_{r}.Q(poss|~s_4(n:prop|david_3,pro:dem|those_1,$0))
example_end

Sent: well put them back in the bag .
Sem: lambda $0_{r}.and(and(and(v|put-zero_2(you,pro:obj|them_3,$0),adv|back_4($0)),prep|in_5(det:art|the_6($1,n|bag_7($1)),$0)),co|well_1($0))
example_end

Sent: well don 't put it on the floor .
Sem: lambda $0_{r}.and(not(mod|do_2(and(v|put-zero_4(you,pro:per|it_5,$0),prep|on_6(det:art|the_7($1,n|floor_8($1)),$0)),$0),$0),co|well_1($0))
example_end

Sent: I should think perhaps it is .
Sem: lambda $0_{r}.mod|should_2(v|think_3(pro:sub|i_1,lambda $1_{r}.and(cop|be-3s_6(pro:per|it_5,$1),adv|perhaps_4($1)),$0),$0)
example_end

Sent: is this a plate ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:dem|this_2,n|plate_4(pro:dem|this_2,$0)))
example_end

Sent: because she has_to write .
Sem: lambda $0_{r}.mod:aux|has_to_3(v|write_4(pro:sub|she_2,$0),$0)
example_end

Sent: this is his bottle on the stove .
Sem: lambda $0_{r}.det:poss|his_3(pro:dem|this_1,att(n|bottle_4(pro:dem|this_1,$0),prep|on_5(det:art|the_6($1,n|stove_7($1)))))
example_end

Sent: what am I going to have for breakfast ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-1s_2(part|go-presp_4(pro:sub|i_3,lambda $1_{r}.and(v|have_6(pro:sub|i_3,$2,$1),prep|for_7(BARE($3,n|breakfast_8($3)),$1)),$0),$0)
example_end

Sent: what are we having for breakfast ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(n:gerund|have-presp_4(pro:sub|we_3,$1,$0),prep|for_5(BARE($2,n|breakfast_6($2)),$0)),$0)
example_end

Sent: what 're we having ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|have-presp_4(pro:sub|we_3,$1,$0),$0)
example_end

Sent: what 're we having for supper ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|have-presp_4(pro:sub|we_3,$1,$0),prep|for_5(BARE($2,n|supper_6($2)),$0)),$0)
example_end

Sent: meat and gravy .
Sem: BARE($0,n|gravy_3($0))
example_end

Sent: and what else ?
Sem: post|else_3(pro:int|what_2)
example_end

Sent: and money !
Sem: BARE($0,n|money_2($0))
example_end

Sent: money gravy !
Sem: BARE($0,and_comp(n|money_1($0),n|gravy_2($0)))
example_end

Sent: I 'd like some money gravy .
Sem: lambda $0_{r}.mod|~genmod_2(v|like_3(pro:sub|i_1,qn|some_4($1,and_comp(n|money_5($1),n|gravy_6($1))),$0),$0)
example_end

Sent: some what on Adam ?
Sem: qn|some_1($0,att(det:int|what_2,prep|on_3(n:prop|adam_4),$0))
example_end

Sent: it 's a beard .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|beard_4(pro:per|it_1,$0))
example_end

Sent: will you show it to your Mother ?
Sem: lambda $0_{r}.mod|will_1(and(v|show_3(pro:per|you_2,pro:per|it_4,$0),prep|to_5(det:poss|your_6($1,n:prop|mother_7($1)),$0)),$0)
example_end

Sent: what is it ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,$0)
example_end

Sent: it 's about a boat ?
Sem: lambda $0_{r}.Q(adv|about_3(det:art|a_4($1,n|boat_5($1)),pro:per|it_1,$0))
example_end

Sent: you 're making a machine ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|make-presp_3(pro:per|you_1,det:art|a_4($1,n|machine_5($1)),$0),$0))
example_end

Sent: I see .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,$0)
example_end

Sent: you broke the boat .
Sem: lambda $0_{r}.v|break-past_2(pro:per|you_1,det:art|the_3($1,n|boat_4($1)),$0)
example_end

Sent: who are the people on the boat ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,att(n|person-pl_4($2),prep|on_5(det:art|the_6($3,n|boat_7($3))))),$0)
example_end

Sent: to the writing .
Sem: prep|to_1(det:art|the_2($0,part|write-presp_3($0)))
example_end

Sent: here 's a funny little spoon for your dinner .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,att(and(adj|little_5($1),and(adj|fun-dn_4($1),n|spoon_6($1))),prep|for_7(det:poss|your_8($2,n|dinner_9($2))))),$0),pro:exist|here_1($0))
example_end

Sent: no they 're too sharp Adam .
Sem: lambda $0_{r}.and(adv|too_4(adj|sharp_5(pro:sub|they_2,$0)),co|no_1($0))
example_end

Sent: no they 're too sharp .
Sem: lambda $0_{r}.and(adv|too_4(adj|sharp_5(pro:sub|they_2,$0)),co|no_1($0))
example_end

Sent: careful Adam !
Sem: BARE($0,co|careful_1($0))
example_end

Sent: don 't stop on her feet .
Sem: lambda $0_{r}.not(mod|do_1(and(v|stop_3(you,$0),prep|on_4(det:poss|her_5($1,n|foot-pl_6($1)),$0)),$0),$0)
example_end

Sent: is it sharp ?
Sem: lambda $0_{r}.Q(adj|sharp_3(pro:per|it_2,$0))
example_end

Sent: don 't put a hole in Bobo .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,det:art|a_4($1,n|hole_5($1)),$0),prep|in_6(n:prop|bobo_7,$0)),$0),$0)
example_end

Sent: and how will you fix it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|will_3(and(v|fix_5(pro:per|you_4,pro:per|it_6,$0),$1($0)),$0)
example_end

Sent: didn 't you have it down here Adam ?
Sem: lambda $0_{r}.Q(not(mod|do_1(and(v|have_4(pro:per|you_3,pro:per|it_5,$0),adv|down_6(adv|here_7($0))),$0),$0))
example_end

Sent: which one is getting full ?
Sem: lambda $1_{<<e,e>,e>}.lambda $1_{<<e,e>,e>}.lambda $0_{r}.aux|be-3s_3(part|get-presp_4($1($2,pro:indef|one_2($2)),lambda $3_{r}.adj|full_5($1($2,pro:indef|one_2($2)),$3),$0),$0)
example_end

Sent: what 's happening to the other one ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|happen-presp_3($1,$0),prep|to_4(det:art|the_5($2,att(pro:indef|one_7,BARE($3,qn|other_6($3)),$2)),$0)),$0)
example_end

Sent: oh it 's going to have just a little left ?
Sem: lambda $0_{r}.Q(and(cop|~be_3(part|go-presp_4(pro:per|it_2,lambda $1_{r}.aux|have_6(adj|left_10(BARE($2,adv|just_7(adj|little_9($2))),$1),$1),$0),$0),co|oh_1($0)))
example_end

Sent: what 's happening now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|happen-presp_3($1,$0),adv|now_4($0)),$0)
example_end

Sent: oh you 're showing pictures ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(part|show-presp_4(pro:per|you_2,BARE($1,n|picture-pl_5($1)),$0),$0),co|oh_1($0)))
example_end

Sent: what is that movie about ?
Sem: lambda $0_{r}.adv|about_5(pro:int|what_1,pro:dem|that_3($1,n|movie_4($1)),$0)
example_end

Sent: a duck ?
Sem: BARE($0,Q(det:art|a_1($1,n|duck_2($1),$0)))
example_end

Sent: don 't touch anything just look .
Sem: lambda $0_{r}.and(not(mod|do_1(v|touch_3(you,pro:indef|anything_4,$0),$0),$0),and(cop|look_6(you,$0),adv|just_5($0)))
example_end

Sent: I hear someone taking it from it .
Sem: lambda $0_{r}.v|hear_2(pro:sub|i_1,lambda $1_{r}.and(part|take-presp_4(pro:indef|someone_3,pro:per|it_5,$1),prep|from_6(pro:per|it_7,$1)),$0)
example_end

Sent: what does it sound like ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(v|sound_4(pro:per|it_3,$1,$0),$0)
example_end

Sent: she has_to push it down so it will record .
Sem: lambda $0_{r}.conj|so_6(mod|will_8(v|record_9(pro:per|it_7,$0),$0),mod:aux|has_to_2(and(v|push_3(pro:sub|she_1,pro:per|it_4,$0),adv|down_5($0)),$0))
example_end

Sent: yes what are you saying ?
Sem: lambda $1_{e}.lambda $0_{r}.and(aux|be-pres_3(part|say-presp_5(pro:per|you_4,$1,$0),$0),co|yes_1($0))
example_end

Sent: two street lights ?
Sem: BARE($0,Q(and_comp(n|street_2($0),det:num|two_1(n|light-pl_3($0)))))
example_end

Sent: like that ?
Sem: Q(prep|like_1(pro:dem|that_2))
example_end

Sent: what 're you doing now ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(and(part|do-presp_4(pro:per|you_3,$1,$0),adv|now_5($0)),$0)
example_end

Sent: making a hole ?
Sem: lambda $0_{r}.Q(part|make-presp_1(you,det:art|a_2($1,n|hole_3($1)),$0))
example_end

Sent: did you ask Ursula ?
Sem: lambda $0_{r}.Q(v|do-past_1(v|ask_3(pro:per|you_2,n:prop|ursula_4,$0),$0))
example_end

Sent: no if you could blow it up .
Sem: lambda $0_{r}.and(mod|could_4(and(v|blow_5(pro:per|you_3,pro:per|it_6,$0),adv|up_7($0)),$0),co|no_1($0))
example_end

Sent: it 's very hard .
Sem: lambda $0_{r}.adv|very_3(adv|hard_4(pro:per|it_1,$0))
example_end

Sent: oh careful honey .
Sem: lambda $0_{r}.and(co|careful_2($0),co|oh_1($0))
example_end

Sent: yes your nose bleeds a lot .
Sem: lambda $0_{r}.and(v|bleed-3s_4(det:poss|your_2($1,n|nose_3($1)),det:art|a_5($2,n|lot_6($2)),$0),co|yes_1($0))
example_end

Sent: where is the spider ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(det:art|the_3($1,n|spider_4($1)),$0),$2($0))
example_end

Sent: in your nose ?
Sem: Q(prep|in_1(det:poss|your_2($0,n|nose_3($0))))
example_end

Sent: oh my_goodness .
Sem: lambda $0_{r}.and(co|my_goodness_2($0),co|oh_1($0))
example_end

Sent: how did he get up there ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(and(v|get_4(pro:sub|he_3,$0),$1($0)),adv|up_5(adv|there_6($0))),$0)
example_end

Sent: what is that you 're using ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:rel|that_3,$0)
example_end

Sent: a knife ?
Sem: BARE($0,Q(det:art|a_1($1,n|knife_2($1),$0)))
example_end

Sent: what are you making with the knife ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(part|make-presp_4(pro:per|you_3,$1,$0),prep|with_5(det:art|the_6($2,n|knife_7($2)),$0)),$0)
example_end

Sent: a spoon ?
Sem: BARE($0,Q(det:art|a_1($1,n|spoon_2($1),$0)))
example_end

Sent: where did you put it ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,pro:per|it_5,$0),$1($0)),$0)
example_end

Sent: and what will you do with the paper ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_3(and(v|do_5(pro:per|you_4,$1,$0),prep|with_6(det:art|the_7($2,n|paper_8($2)),$0)),$0)
example_end

Sent: swallow it ?
Sem: lambda $0_{r}.Q(v|swallow_1(you,pro:per|it_2,$0))
example_end

Sent: because I wanted to know .
Sem: lambda $0_{r}.v|want-past_3(pro:sub|i_2,lambda $1_{r}.v|know_5(pro:sub|i_2,$1),$0)
example_end

Sent: I can make you another spoon .
Sem: lambda $0_{r}.mod|can_2(v|make_3(pro:sub|i_1,qn|another_5($1,n|spoon_6($1)),pro:per|you_4,$0),$0)
example_end

Sent: no he doesn 't play with the scissors .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|play_5(pro:sub|he_2,$0),prep|with_6(det:art|the_7($1,n|scissors_8($1)),$0)),$0),$0),co|no_1($0))
example_end

Sent: those are tweezers .
Sem: lambda $0_{r}.n|tweezers_3(pro:dem|those_1,$0)
example_end

Sent: for picking up things .
Sem: lambda $0_{r}.and(part|pick-presp_2(you,BARE($1,n|thing-pl_4($1)),$0),adv|up_3($0))
example_end

Sent: you want a knife ?
Sem: lambda $0_{r}.Q(v|want_2(pro:per|you_1,det:art|a_3($1,n|knife_4($1)),$0))
example_end

Sent: careful now .
Sem: BARE($0,adv|now_2(co|careful_1($0)))
example_end

Sent: it frightened you didn 't it ?
Sem: lambda $0_{r}.Q(and(v|frighten-past_2(pro:per|it_1,pro:per|you_3,$0),not(mod|do_4(pro:per|it_6,$0),$0)))
example_end

Sent: here 's a butter knife .
Sem: lambda $0_{r}.and(cop|~be_2(det:art|a_3($1,and_comp(n|butter_4($1),n|knife_5($1))),$0),pro:exist|here_1($0))
example_end

Sent: yes that 's yours .
Sem: lambda $0_{r}.and(pro:poss|yours_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: what did I do to him ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|do_4(pro:sub|i_3,$1,$0),prep|to_5(pro:obj|him_6,$0)),$0)
example_end

Sent: no you took it away .
Sem: lambda $0_{r}.and(and(v|take-past_3(pro:per|you_2,pro:per|it_4,$0),adv|away_5($0)),co|no_1($0))
example_end

Sent: I don 't think that was a worm .
Sem: lambda $0_{r}.not(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.det:art|a_7(pro:dem|that_5,n|worm_8(pro:dem|that_5,$1)),$0),$0),$0)
example_end

Sent: I think that was a snake maybe .
Sem: lambda $0_{r}.and(v|think_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:dem|that_3,n|snake_6(pro:dem|that_3,$1)),$0),adv|maybe_7($0))
example_end

Sent: I put it away .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:sub|i_1,pro:per|it_3,$0),adv|away_4($0))
example_end

Sent: in my purse .
Sem: prep|in_1(det:poss|my_2($0,n|purse_3($0)))
example_end

Sent: in this purse .
Sem: prep|in_1(pro:dem|this_2($0,n|purse_3($0)))
example_end

Sent: it 's just a toy snake .
Sem: lambda $0_{r}.det:art|a_4(pro:per|it_1,and_comp(n|toy_5(pro:per|it_1,$0),n|snake_6(pro:per|it_1,$0)))
example_end

Sent: it 's just a toy snake .
Sem: lambda $0_{r}.det:art|a_4(pro:per|it_1,and_comp(n|toy_5(pro:per|it_1,$0),n|snake_6(pro:per|it_1,$0)))
example_end

Sent: play with it .
Sem: lambda $0_{r}.and(n|play_1(you,$0),prep|with_2(pro:per|it_3,$0))
example_end

Sent: no you play games with it .
Sem: lambda $0_{r}.and(and(n|play_3(pro:per|you_2,BARE($1,n|game-pl_4($1)),$0),prep|with_5(pro:per|it_6,$0)),qn|no_1($0))
example_end

Sent: must be a bug ?
Sem: det:art|a_3($0,n|bug_4($0))
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: after you open it .
Sem: lambda $0_{r}.v|open_3(pro:per|you_2,pro:per|it_4,$0)
example_end

Sent: I see a what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|see_2(pro:sub|i_1,$1,$0)
example_end

Sent: a nut ?
Sem: BARE($0,Q(det:art|a_1($1,n|nut_2($1),$0)))
example_end

Sent: but they 're backwards .
Sem: lambda $0_{r}.and(cop|~be_3(pro:sub|they_2,$0),adv|backwards_4($0))
example_end

Sent: turn them around .
Sem: lambda $0_{r}.and(v|turn_1(you,pro:obj|them_2,$0),adv|around_3($0))
example_end

Sent: can 't you see better ?
Sem: lambda $0_{r}.Q(not(mod|can_1(v|see_4(pro:per|you_3,lambda $1_{r}.adj|good-cp_5(pro:per|you_3,$1),$0),$0),$0))
example_end

Sent: is it was a snake ?
Sem: lambda $0_{r}.Q(det:art|a_4(pro:per|it_2,n|snake_5(pro:per|it_2,$0)))
example_end

Sent: was it a snake ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|it_2,n|snake_4(pro:per|it_2,$0)))
example_end

Sent: it was a snake .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|snake_4(pro:per|it_1,$0))
example_end

Sent: it 's a shell .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|shell_4(pro:per|it_1,$0))
example_end

Sent: it sounds like the ocean .
Sem: lambda $0_{r}.and(v|sound-3s_2(pro:per|it_1,$0),prep|like_3(det:art|the_4($1,n|ocean_5($1)),$0))
example_end

Sent: it 's a sea shell .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and_comp(n|sea_4(pro:per|it_1,$0),n|shell_5(pro:per|it_1,$0)))
example_end

Sent: no it 's a real shell .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,and(n|shell_6(pro:per|it_2,$0),adj|real_5(pro:per|it_2,$0))),co|no_1($0))
example_end

Sent: if you listen very carefully you can hear something that sounds like the ocean .
Sem: lambda $0_{r}.mod|can_7(conj|if_1(and(v|listen_3(pro:per|you_2,$0),adv|very_4(adv|care-dadj_5($0))),v|hear_8(pro:per|you_6,pro:indef|something_9,$0)),$0)
example_end

Sent: hear the waves ?
Sem: lambda $0_{r}.Q(v|hear_1(you,det:art|the_2($1,n|wave-pl_3($1)),$0))
example_end

Sent: some little sea creature was in there once .
Sem: lambda $0_{r}.and(and(cop|be-past_5(qn|some_1($1,and_comp(n|sea_3($1),and(adj|little_2($1),n|creature_4($1)))),$0),prep|in_6(adv|there_7($0))),adv|once_8($0))
example_end

Sent: you let Bobo hear it .
Sem: lambda $0_{r}.v|let-zero_2(pro:per|you_1,lambda $1_{r}.v|hear_4(n:prop|bobo_3,pro:per|it_5,$1),$0)
example_end

Sent: that sounds like the stove ?
Sem: lambda $0_{r}.Q(and(n|sound-pl_2(pro:dem|that_1,$0),prep|like_3(det:art|the_4($1,n|stove_5($1)),$0)))
example_end

Sent: what part of the stove sounds like that ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.and(v|sound-3s_6($1($2,att(n|part_2($2),prep|of_3(det:art|the_4($3,n|stove_5($3))))),$0),prep|like_7(pro:dem|that_8,$0))
example_end

Sent: from the ocean .
Sem: prep|from_1(det:art|the_2($0,n|ocean_3($0)))
example_end

Sent: I put it away .
Sem: lambda $0_{r}.and(v|put-zero_2(pro:sub|i_1,pro:per|it_3,$0),adv|away_4($0))
example_end

Sent: in my purse .
Sem: prep|in_1(det:poss|my_2($0,n|purse_3($0)))
example_end

Sent: careful now .
Sem: BARE($0,adv|now_2(co|careful_1($0)))
example_end

Sent: what happens when you get married ?
Sem: lambda $2_{<r,t>}.lambda $1_{e}.lambda $0_{r}.and(v|happen-3s_2($1,$0),and(part|marry-pastp_6(_,pro:per|you_4,$0),$2($0)))
example_end

Sent: where 's the zipper ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|~be_2(det:art|the_3($1,n|zip-dv_4($1)),$0),$2($0))
example_end

Sent: here it is ?
Sem: lambda $0_{r}.Q(and(cop|be-3s_3(pro:per|it_2,$0),adv|here_1($0)))
example_end

Sent: let 's close the door alright ?
Sem: lambda $0_{r}.Q(and(v:obj|let_1(you,lambda $1_{r}.v|close_3(pro:obj|~us_2,det:art|the_4($2,n|door_5($2)),$1),$0),adj|alright_6($0)))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: you 're a kitten ?
Sem: lambda $0_{r}.Q(det:art|a_3(pro:per|you_1,n|kitten_4(pro:per|you_1,$0)))
example_end

Sent: now you can make dinner .
Sem: lambda $0_{r}.mod|can_3(and(v|make_4(pro:per|you_2,BARE($1,n|dinner_5($1)),$0),adv|now_1($0)),$0)
example_end

Sent: some more things for supper .
Sem: qn|some_1($0,att(and(qn|more_2($0),n|thing-pl_3($0)),prep|for_4(BARE($1,n|supper_5($1)))))
example_end

Sent: oh Adam isn 't that nice ?
Sem: lambda $0_{r}.Q(and(not(adj|nice_6(pro:dem|that_5,$0),$0),co|oh_1($0)))
example_end

Sent: he wants a bottle ?
Sem: lambda $0_{r}.Q(v|want-3s_2(pro:sub|he_1,det:art|a_3($1,n|bottle_4($1)),$0))
example_end

Sent: who 's the baby ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|the_3($2,n|baby_4($2)),$0)
example_end

Sent: yes I have one .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|i_2,pro:indef|one_4,$0),co|yes_1($0))
example_end

Sent: are you feeding the baby ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|feed-presp_3(pro:per|you_2,det:art|the_4($1,n|baby_5($1)),$0),$0))
example_end

Sent: yes I am feeding the baby .
Sem: lambda $0_{r}.and(aux|be-1s_3(part|feed-presp_4(pro:sub|i_2,det:art|the_5($1,n|baby_6($1)),$0),$0),co|yes_1($0))
example_end

Sent: may I have another bottle ?
Sem: lambda $0_{r}.Q(mod|may_1(v|have_3(pro:sub|i_2,qn|another_4($1,n|bottle_5($1)),$0),$0))
example_end

Sent: up for Bozo for breakfast ?
Sem: lambda $0_{r}.Q(adv|up_1_for_2(you,att(n:prop|bozo_3,prep|for_4(BARE($1,n|breakfast_5($1)))),$0))
example_end

Sent: oh yes they will all break if you aren 't careful .
Sem: lambda $0_{r}.and(and(conj|if_7(not(co|careful_11(pro:per|you_8,$0),$0),mod|will_4(and(v|break_6(pro:sub|they_3,$0),post|all_5($0)),$0)),co|oh_1($0)),co|yes_2($0))
example_end

Sent: what did he break ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|break_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: when is breakfast time ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(cop|be-3s_2(BARE($1,and_comp(n|breakfast_3($1),n|time_4($1))),$0),$2($0))
example_end

Sent: it 's night ?
Sem: lambda $0_{r}.Q(n|night+time_3(pro:per|it_1,$0))
example_end

Sent: what do we eat at night ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|eat_4(pro:sub|we_3,$1,$0),prep|at_5(BARE($2,n|night+time_6($2)),$0)),$0)
example_end

Sent: who drank that milk all up ?
Sem: lambda $1_{e}.lambda $0_{r}.and(v|drink-past_2($1,pro:dem|that_3($2,n|milk_4($2)),$0),adv|all_5(adv|up_6($0)))
example_end

Sent: didn 't Bobo have that bottle ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|have_4(n:prop|bobo_3,pro:dem|that_5($1,n|bottle_6($1)),$0),$0),$0))
example_end

Sent: oh he had one of these bottles ?
Sem: lambda $0_{r}.Q(and(v|have-past_3(pro:sub|he_2,BARE($1,det:num|one_4($1)),$0),co|oh_1($0)))
example_end

Sent: I will have a what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|will_2(v|have_3(pro:sub|i_1,$1,$0),$0)
example_end

Sent: what 're you going to do with those ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|~be_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.and(v|do_6(pro:per|you_3,$2,$1),prep|with_7(pro:dem|those_8,$1)),$0),$0)
example_end

Sent: what are you going to make ?
Sem: lambda $2_{e}.lambda $0_{r}.aux|be-pres_2(part|go-presp_4(pro:per|you_3,lambda $1_{r}.v|make_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: well I don 't know .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,$0),$0),$0),co|well_1($0))
example_end

Sent: what would you like to have ?
Sem: lambda $2_{e}.lambda $0_{r}.mod|will-cond_2(v|like_4(pro:per|you_3,lambda $1_{r}.v|have_6(pro:per|you_3,$2,$1),$0),$0)
example_end

Sent: cookies and grapefruit .
Sem: BARE($0,n|grape+fruit_3($0))
example_end

Sent: yes we have one of those .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|we_2,BARE($1,pro:indef|one_4($1)),$0),co|yes_1($0))
example_end

Sent: yes we have one of those .
Sem: lambda $0_{r}.and(v|have_3(pro:sub|we_2,BARE($1,pro:indef|one_4($1)),$0),co|yes_1($0))
example_end

Sent: one more what ?
Sem: att(BARE($0,det:num|one_1(pro:int|what_3($0))),BARE($1,adv|more_2($1)))
example_end

Sent: or marbles ?
Sem: BARE($0,Q(n|marble-pl_2($0)))
example_end

Sent: let 's have marbles .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.v|have_3(pro:obj|~us_2,BARE($2,n|marble-pl_4($2)),$1),$0)
example_end

Sent: this is your mixing bowl .
Sem: lambda $0_{r}.det:poss|your_3(pro:dem|this_1,and_comp(part|mix-presp_4(pro:dem|this_1,$0),n|bowl_5(pro:dem|this_1,$0)))
example_end

Sent: what is this .
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|this_3,$0)
example_end

Sent: are you going to make a valentine cookie ?
Sem: lambda $0_{r}.Q(cop|be-pres_1(part|go-presp_3(pro:per|you_2,lambda $1_{r}.v|make_5(pro:per|you_2,det:art|a_6($2,and_comp(n|valentine_7($2),n|cookie_8($2))),$1),$0),$0))
example_end

Sent: Adam how d you make the cookie dough ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do_3(and(v|make_5(pro:per|you_4,det:art|the_6($1,and_comp(n|cookie_7($1),n|dough_8($1))),$0),$2($0)),$0)
example_end

Sent: you 're making what ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|~be_2(part|make-presp_3(pro:per|you_1,$1,$0),$0)
example_end

Sent: yes I guess .
Sem: lambda $0_{r}.and(v|guess_3(pro:sub|i_2,$0),co|yes_1($0))
example_end

Sent: no she has nothing else .
Sem: lambda $0_{r}.and(aux|have-3s_3(pro:sub|she_2,post|else_5(pro:indef|nothing_4),$0),co|no_1($0))
example_end

Sent: yes you may put that in there .
Sem: lambda $0_{r}.and(mod|may_3(and(v|put-zero_4(pro:per|you_2,pro:dem|that_5,$0),prep|in_6(adv|there_7($0))),$0),co|yes_1($0))
example_end

Sent: well there 're some more behind you .
Sem: lambda $0_{r}.pro:indef|more_5($0)
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: shall I get the crayons ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|get_3(pro:sub|i_2,det:art|the_4($1,n|crayon-pl_5($1)),$0),$0))
example_end

Sent: maybe we can attach it to two chairs .
Sem: lambda $0_{r}.mod|can_3(and(and(v|attach_4(pro:sub|we_2,pro:per|it_5,$0),adv|maybe_1($0)),prep|to_6(BARE($1,det:num|two_7(n|chair-pl_8($1))),$0)),$0)
example_end

Sent: oh you have some pins .
Sem: lambda $0_{r}.and(v|have_3(pro:per|you_2,qn|some_4($1,n|pin-pl_5($1)),$0),co|oh_1($0))
example_end

Sent: shall I make it straight Adam ?
Sem: lambda $0_{r}.Q(mod|shall_1(v|make_3(pro:sub|i_2,lambda $1_{r}.n|straight_5(pro:per|it_4,$1),$0),$0))
example_end

Sent: I 'll bring some handkerchiefs .
Sem: lambda $0_{r}.mod|~will_2(v|bring_3(pro:sub|i_1,qn|some_4($1,n|handkerchief-pl_5($1)),$0),$0)
example_end

Sent: let 's hang some Kleenex up .
Sem: lambda $0_{r}.v:obj|let_1(you,lambda $1_{r}.and(v|hang_3(pro:obj|~us_2,qn|some_4($2,n:prop|kleenex_5($2)),$1),adv|up_6($1)),$0)
example_end

Sent: oh you 're smiling back ?
Sem: lambda $0_{r}.Q(and(aux|~be_3(and(part|smile-presp_4(pro:per|you_2,$0),adv|back_5($0)),$0),co|oh_1($0)))
example_end

Sent: why I don 't think you 'd need to use all of it .
Sem: lambda $4_{<r,t>}.lambda $0_{r}.not(mod|do_3(and(v|think_5(pro:sub|i_2,lambda $1_{r}.mod|~genmod_7(v|need_8(pro:per|you_6,lambda $2_{r}.v|use_10(pro:per|you_6,BARE($3,att(qn|all_11($3),prep|of_12(pro:per|it_13))),$2),$1),$1),$0),$4($0)),$0),$0)
example_end

Sent: that 's a nice white wash .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(and(n|wash_6(pro:dem|that_1,$0),adj|nice_4(pro:dem|that_1,$0)),adj|white_5(pro:dem|that_1,$0)))
example_end

Sent: while your clothes dry ?
Sem: lambda $0_{r}.Q(adj|dry_4(det:poss|your_2($1,n:pt|clothes_3($1)),$0))
example_end

Sent: this is the dining room ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:dem|this_1,and_comp(part|dine-presp_4(pro:dem|this_1,$0),n|room_5(pro:dem|this_1,$0))))
example_end

Sent: oh that 's the kitchen .
Sem: lambda $0_{r}.and(det:art|the_4(pro:dem|that_2,n|kitchen_5(pro:dem|that_2,$0)),co|oh_1($0))
example_end

Sent: you have two kitchens .
Sem: lambda $0_{r}.v|have_2(pro:per|you_1,BARE($1,det:num|two_3(n|kitchen-pl_4($1))),$0)
example_end

Sent: why is Bozo going to eat with the chickens ?
Sem: lambda $3_{<r,t>}.lambda $0_{r}.cop|be-3s_2(and(part|go-presp_4(n:prop|bozo_3,lambda $1_{r}.and(v|eat_6(n:prop|bozo_3,$1),prep|with_7(det:art|the_8($2,n|chicken-pl_9($2)),$1)),$0),$3($0)),$0)
example_end

Sent: oh he may spill the food .
Sem: lambda $0_{r}.and(mod|may_3(v|spill_4(pro:sub|he_2,det:art|the_5($1,n|food_6($1)),$0),$0),co|oh_1($0))
example_end

Sent: oh I didn 't know you had any chickens .
Sem: lambda $0_{r}.and(not(mod|do_3(v|know_5(pro:sub|i_2,lambda $1_{r}.part|have-pastp_7(pro:per|you_6,qn|any_8($2,n|chicken-pl_9($2)),$1),$0),$0),$0),co|oh_1($0))
example_end

Sent: you 'll play cowboys and Indians after supper ?
Sem: lambda $0_{r}.Q(mod|~will_2(and(v|play_3(pro:per|you_1,n:prop|indians_6,$0),prep|after_7(BARE($1,n|supper_8($1)),$0)),$0))
example_end

Sent: why are the Indians bad ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(adj|bad_5(det:art|the_3($2,n:prop|indians_4($2)),$0))
example_end

Sent: well why are the Indians bad ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(adj|bad_6(det:art|the_4($2,n:prop|indians_5($2)),$0)),co|well_1($0))
example_end

Sent: but that 's the living room .
Sem: lambda $0_{r}.det:art|the_4(pro:dem|that_2,and_comp(part|live-presp_5(pro:dem|that_2,$0),n|room_6(pro:dem|that_2,$0)))
example_end

Sent: it 's a nice kitchen .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,and(n|kitchen_5(pro:per|it_1,$0),adj|nice_4(pro:per|it_1,$0)))
example_end

Sent: I may look at them in the kitchen .
Sem: lambda $0_{r}.mod|may_2(and(and(cop|look_3(pro:sub|i_1,$0),prep|at_4(pro:obj|them_5,$0)),prep|in_6(det:art|the_7($1,n|kitchen_8($1)),$0)),$0)
example_end

Sent: the bowl ?
Sem: BARE($0,Q(det:art|the_1($1,n|bowl_2($1),$0)))
example_end

Sent: a beater .
Sem: det:art|a_1($0,n|beat-dv_2($0))
example_end

Sent: what are we having for supper ?
Sem: lambda $1_{e}.lambda $0_{r}.aux|be-pres_2(and(n:gerund|have-presp_4(pro:sub|we_3,$1,$0),prep|for_5(BARE($2,n|supper_6($2)),$0)),$0)
example_end

Sent: just a minute .
Sem: adv|just_1(det:art|a_2($0,n|minute_3($0)))
example_end

Sent: you 're going to have some water tea ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|have_5(pro:per|you_1,qn|some_6($2,and_comp(n|water_7($2),n|tea_8($2))),$1),$0),$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: that 's Ursula 's .
Sem: lambda $0_{r}.poss|~s_4(n:prop|ursula_3,pro:dem|that_1,$0)
example_end

Sent: you said this was mine .
Sem: lambda $0_{r}.v|say-past_2(pro:per|you_1,lambda $1_{r}.pro:poss|mine_5(pro:dem|this_3,$1),$0)
example_end

Sent: don 't put that so far .
Sem: lambda $0_{r}.not(mod|do_1(and(v|put-zero_3(you,pro:dem|that_4,$0),adv|so_5(adv|far_6($0))),$0),$0)
example_end

Sent: you 'll be on the cord .
Sem: lambda $0_{r}.mod|~will_2(prep|on_4(det:art|the_5($1,n|cord_6($1)),pro:per|you_1,$0),$0)
example_end

Sent: oh Bozo 's bottle .
Sem: lambda $0_{r}.and(n:prop|bozo_2's($1,n|bottle_4($1),$0),co|oh_1($0))
example_end

Sent: it 's not ready ?
Sem: lambda $0_{r}.Q(not(v|ready_4(pro:per|it_1,$0),$0))
example_end

Sent: under your rolling pin .
Sem: adv|under_1(det:poss|your_2($0,and_comp(part|roll-presp_3($0),n|pin_4($0))))
example_end

Sent: I think this is a cake knife .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.det:art|a_5(pro:dem|this_3,and_comp(n|cake_6(pro:dem|this_3,$1),n|knife_7(pro:dem|this_3,$1))),$0)
example_end

Sent: this isn 't a knife .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|this_1,n|knife_5(pro:dem|this_1,$0)),$0)
example_end

Sent: it 's a fork .
Sem: lambda $0_{r}.det:art|a_3(pro:per|it_1,n|fork_4(pro:per|it_1,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: careful of the cord .
Sem: BARE($0,co|careful_1($0))
example_end

Sent: is the tea ready ?
Sem: lambda $0_{r}.Q(adj|ready_4(det:art|the_2($1,n|tea_3($1)),$0))
example_end

Sent: thank_you Adam .
Sem: lambda $0_{r}.co|thank_you_1(you,$0)
example_end

Sent: I 'll let it cool .
Sem: lambda $0_{r}.mod|~will_2(v|let-zero_3(pro:sub|i_1,lambda $1_{r}.adj|cool_5(pro:per|it_4,$1),$0),$0)
example_end

Sent: what d you do with a water hydrant ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do_2(and(v|do_4(pro:per|you_3,$1,$0),prep|with_5(det:art|a_6($2,and_comp(n|water_7($2),n|hydrant_8($2))),$0)),$0)
example_end

Sent: oh you don 't have a small kitchen you have a big kitchen .
Sem: lambda $0_{r}.and(not(and(mod|do_3(v|have_5(pro:per|you_2,det:art|a_6($1,and(adj|small_7($1),n|kitchen_8($1))),$0),$0),v|have_10(pro:per|you_9,det:art|a_11($2,and(adj|big_12($2),n|kitchen_13($2))),$0)),$0),co|oh_1($0))
example_end

Sent: no I don 't think so .
Sem: lambda $0_{r}.and(not(mod|do_3(and(v|think_5(pro:sub|i_2,$0),co|so_6($0)),$0),$0),co|no_1($0))
example_end

Sent: under the sofa .
Sem: prep|under_1(det:art|the_2($0,n|sofa_3($0)))
example_end

Sent: why does your water come from the hydrant there ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.mod|do-3s_2(and(and(and(v|come_5(det:poss|your_3($1,n|water_4($1)),$0),$2($0)),prep|from_6(det:art|the_7($3,n|hydrant_8($3)),$0)),adv|there_9($0)),$0)
example_end

Sent: what did you put in the trash can ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(and(v|put-zero_4(pro:per|you_3,$1,$0),prep|in_5(det:art|the_6($2,and_comp(n|trash_7($2),mod|can_8($2))),$0)),$0)
example_end

Sent: that 's Daddy ?
Sem: lambda $0_{r}.Q(n:prop|daddy_3(pro:dem|that_1,$0))
example_end

Sent: what kind of cake do you have Adam ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|do_5(v|have_7(pro:per|you_6,$1($2,att(n|kind_2($2),prep|of_3(BARE($3,n|cake_4($3))))),$0),$0)
example_end

Sent: buddy cakes ?
Sem: BARE($0,Q(and_comp(n|buddy_1($0),n|cake-pl_2($0))))
example_end

Sent: what kind of cakes are those ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|those_6,att(n|kind_2(pro:dem|those_6,$0),prep|of_3(BARE($2,n|cake-pl_4($2)))))
example_end

Sent: here are two .
Sem: lambda $0_{r}.cop|be-pres_2(you,$0)
example_end

Sent: I see another one .
Sem: lambda $0_{r}.v|see_2(pro:sub|i_1,qn|another_3($1,pro:indef|one_4($1)),$0)
example_end

Sent: don 't you see it ?
Sem: lambda $0_{r}.Q(not(mod|do_1(v|see_4(pro:per|you_3,pro:per|it_5,$0),$0),$0))
example_end

Sent: a dog cake .
Sem: det:art|a_1($0,and_comp(n|dog_2($0),n|cake_3($0)))
example_end

Sent: I 've never had any dog cake .
Sem: lambda $0_{r}.aux|~have_2(and(part|have-pastp_4(pro:sub|i_1,qn|any_5($1,and_comp(n|dog_6($1),n|cake_7($1))),$0),adv|never_3($0)),$0)
example_end

Sent: dog cake and picnic cake ?
Sem: BARE($0,Q(and_comp(n|picnic_4($0),and_comp(n|dog_1($0),n|cake_5($0)))))
example_end

Sent: a dog cake must be a cake for a dog .
Sem: lambda $0_{r}.mod|must_4(det:art|a_6(det:art|a_1($1,and_comp(n|dog_2($1),n|cake_3($1))),att(n|cake_7(det:art|a_1($1,and_comp(n|dog_2($1),n|cake_3($1))),$0),prep|for_8(det:art|a_9($2,n|dog_10($2))))),$0)
example_end

Sent: is that right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_2,$0))
example_end

Sent: Bozo is getting some supper for his meal for the chickens ?
Sem: lambda $0_{r}.Q(aux|be-3s_2(part|get-presp_3(n:prop|bozo_1,qn|some_4($1,att(n|supper_5($1),prep|for_6(det:poss|his_7($2,att(n|meal_8($2),prep|for_9(det:art|the_10($3,n|chicken-pl_11($3)))))))),$0),$0))
example_end

Sent: you 're going out to the farm to get some eggs ?
Sem: lambda $0_{r}.Q(aux|~be_2(and(and(part|go-presp_3(pro:per|you_1,lambda $1_{r}.v|get_9(pro:per|you_1,qn|some_10($2,n|egg-pl_11($2)),$1),$0),adv|out_4($0)),prep|to_5(det:art|the_6($3,n|farm_7($3)),$0)),$0))
example_end

Sent: he did what ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(pro:sub|he_1,$1,$0)
example_end

Sent: oh and the chicken caught it .
Sem: lambda $0_{r}.and(v|catch-past_5(det:art|the_3($1,n|chicken_4($1)),pro:per|it_6,$0),co|oh_1($0))
example_end

Sent: and gave it to Bobo to eat .
Sem: lambda $0_{r}.and(v|give-past_2(you,pro:per|it_3,$0),prep|to_4(BARE($1,rel(n:prop|bobo_5($1),lambda $2_{r}.v|eat_7(you,$2))),$0))
example_end

Sent: well she 's in the kitchen .
Sem: lambda $0_{r}.and(prep|in_4(det:art|the_5($1,n|kitchen_6($1)),pro:sub|she_2,$0),co|well_1($0))
example_end

Sent: am I in your other kitchen ?
Sem: lambda $0_{r}.Q(prep|in_3(det:poss|your_4($1,and(qn|other_5($1),n|kitchen_6($1))),pro:sub|i_2,$0))
example_end

Sent: oh you want me to move ?
Sem: lambda $0_{r}.Q(and(v|want_3(pro:per|you_2,lambda $1_{r}.v|move_6(pro:obj|me_4,$1),$0),co|oh_1($0)))
example_end

Sent: I don 't think it 's broken I think it just came out .
Sem: lambda $0_{r}.not(and(mod|do_2(v|think_4(pro:sub|i_1,lambda $1_{r}.part|break-pastp_7(pro:per|it_5,$1),$0),$0),v|think_9(pro:sub|i_8,lambda $2_{r}.and(and(v|come-past_12(pro:per|it_10,$2),adv|just_11($2)),adv|out_13($2)),$0)),$0)
example_end

Sent: no it didn 't break did it ?
Sem: lambda $0_{r}.Q(and(and(not(mod|do_3(v|break_5(pro:per|it_2,$0),$0),$0),mod|do-past_6(pro:per|it_7,$0)),co|no_1($0)))
example_end

Sent: those two are just alike .
Sem: lambda $0_{r}.adv|just_4(adv|alike_5(pro:dem|those_1($1,det:num|two_2($1)),$0))
example_end

Sent: well how will the light keep Paul from waking up ?
Sem: lambda $2_{<r,t>}.lambda $0_{r}.and(and(mod|will_3(and(v|keep_6(det:art|the_4($1,n|light_5($1)),n:prop|paul_7,$0),$2($0)),$0),and(n:gerund|wake-presp_9_from_8(you,$0),adv|up_10($0))),co|well_1($0))
example_end

Sent: from waking up yes .
Sem: lambda $0_{r}.and(and(n:gerund|wake-presp_2(you,$0),prep|up_3($0)),co|yes_4($0))
example_end

Sent: that 's from Pinocchio .
Sem: lambda $0_{r}.prep|from_3(n:prop|pinocchio_4,pro:dem|that_1,$0)
example_end

Sent: sixty dollars ?
Sem: BARE($0,Q(det:num|sixty_1(n|dollar-pl_2($0))))
example_end

Sent: yes it is .
Sem: lambda $0_{r}.and(cop|be-3s_3(pro:per|it_2,$0),co|yes_1($0))
example_end

Sent: what did the carpenter say ?
Sem: lambda $2_{e}.lambda $0_{r}.v|do-past_2(v|say_5(det:art|the_3($1,n|carpenter_4($1)),$2,$0),$0)
example_end

Sent: you didn 't understand what he said ?
Sem: lambda $1_{e}.lambda $0_{r}.not(mod|do_2(v|understand_4(pro:per|you_1,$1,$0),$0),$0)
example_end

Sent: what did he say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_2(v|say_4(pro:sub|he_3,$1,$0),$0)
example_end

Sent: and what did he say ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-past_3(v|say_5(pro:sub|he_4,$1,$0),$0)
example_end

Sent: you were talking to the door that ?
Sem: lambda $0_{r}.Q(aux|be-past_2(and(part|talk-presp_3(pro:per|you_1,pro:dem|that_7,$0),prep|to_4(det:art|the_5($1,n|door_6($1)),$0)),$0))
example_end

Sent: you were telling the door that ?
Sem: lambda $0_{r}.Q(aux|be-past_2(part|tell-presp_3(pro:per|you_1,pro:dem|that_6,det:art|the_4($1,n|door_5($1)),$0),$0))
example_end

Sent: you had an accident .
Sem: lambda $0_{r}.v|have-past_2(pro:per|you_1,det:art|a_3($1,n|accident_4($1)),$0)
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: I think you broke it .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.v|break-past_4(pro:per|you_3,pro:per|it_5,$1),$0)
example_end

Sent: you can throw it away if you want to .
Sem: lambda $0_{r}.conj|if_6(v|want_8(pro:per|you_7,$0),mod|can_2(and(v|throw_3(pro:per|you_1,pro:per|it_4,$0),adv|away_5($0)),$0))
example_end

Sent: I guess it 's because you weren 't playing with it gently enough .
Sem: lambda $0_{r}.v|guess_2(pro:sub|i_1,lambda $1_{r}.conj|because_5(not(cop|be_7(and(and(part|play-presp_9(pro:per|you_6,$1),prep|with_10(pro:per|it_11,$1)),adv|gentle-dadj_12(adv|enough_13($1))),$1),$1),aux|~be_4(you,$1)),$0)
example_end

Sent: which way it were ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|it_3,n|way_2(pro:per|it_3,$0))
example_end

Sent: yes that 's right .
Sem: lambda $0_{r}.and(n|right_4(pro:dem|that_2,$0),co|yes_1($0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: I think he 's all finished by now .
Sem: lambda $0_{r}.v|think_2(pro:sub|i_1,lambda $1_{r}.cop|~be_4(and(and(part|finish-pastp_6(pro:sub|he_3,$1),adv|all_5($1)),adv|by_7(adv|now_8($1))),$1),$0)
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: perhaps he 's finished too .
Sem: lambda $0_{r}.aux|~be_3(and(and(part|finish-pastp_4(pro:sub|he_2,$0),adv|perhaps_1($0)),post|too_5($0)),$0)
example_end

Sent: did he take his pencil sharpener ?
Sem: lambda $0_{r}.Q(mod|do-past_1(v|take_3(pro:sub|he_2,det:poss|his_4($1,and_comp(n|pencil_5($1),n|sharpen-dv_6($1))),$0),$0))
example_end

Sent: whose pencil sharpener was that ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:dem|that_5,and_comp(n|pencil_2(pro:dem|that_5,$0),n|sharpen-dv_3(pro:dem|that_5,$0)))
example_end

Sent: I think perhaps he was going to put it up down there wasn 't he ?
Sem: lambda $0_{r}.Q(v|think_2(pro:sub|i_1,lambda $1_{r}.and(aux|be-past_5(and(part|go-presp_6(pro:sub|he_4,lambda $2_{r}.and(and(v|put-zero_8(pro:sub|he_4,pro:per|it_9,$2),adv|up_10($2)),adv|down_11(adv|there_12($2))),$1),adv|perhaps_3($1)),$1),not(cop|be_13(pro:sub|he_15,$1),$1)),$0))
example_end

Sent: you did .
Sem: lambda $0_{r}.v|do-past_2(pro:per|you_1,$0)
example_end

Sent: did you pick the screws up ?
Sem: lambda $0_{r}.Q(v|do-past_1(and(v|pick_3(pro:per|you_2,det:art|the_4($1,n|screw-pl_5($1)),$0),adv|up_6($0)),$0))
example_end

Sent: what does that roll like ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_2(n|roll_4(pro:dem|that_3,$1,$0),$0)
example_end

Sent: no you have_to turn it .
Sem: lambda $0_{r}.and(mod:aux|have_to_3(v|turn_4(pro:per|you_2,pro:per|it_5,$0),$0),co|no_1($0))
example_end

Sent: does it what ?
Sem: lambda $1_{e}.lambda $0_{r}.mod|do-3s_1($1(pro:per|it_2,$0),$0)
example_end

Sent: not without breaking .
Sem: lambda $0_{r}.not(n:gerund|break-presp_3(you,$0),$0)
example_end

Sent: yes you had an accident .
Sem: lambda $0_{r}.and(v|have-past_3(pro:per|you_2,det:art|a_4($1,n|accident_5($1)),$0),co|yes_1($0))
example_end

Sent: they 're all clean ?
Sem: lambda $0_{r}.Q(adv|all_3(adj|clean_4(pro:sub|they_1,$0)))
example_end

Sent: Adam did you open this package ?
Sem: lambda $0_{r}.Q(mod|do-past_2(v|open_4(pro:per|you_3,pro:dem|this_5($1,n|package_6($1)),$0),$0))
example_end

Sent: you opened it by yourself didn 't you ?
Sem: lambda $0_{r}.Q(and(and(v|open-past_2(pro:per|you_1,pro:per|it_3,$0),prep|by_4(pro:refl|yourself_5,$0)),not(mod|do_6(pro:per|you_8,$0),$0)))
example_end

Sent: would you like a pen ?
Sem: lambda $0_{r}.Q(mod|will-cond_1(conj|like_3(pro:per|you_2,det:art|a_4($1,n|pen_5($1)),$0),$0))
example_end

Sent: a red one .
Sem: det:art|a_1($0,att(pro:indef|one_3,BARE($1,n|red_2($1)),$0))
example_end

Sent: no it 's a red one .
Sem: lambda $0_{r}.and(det:art|a_4(pro:per|it_2,and(pro:indef|one_6(pro:per|it_2,$0),n|red_5(pro:per|it_2,$0))),co|no_1($0))
example_end

Sent: I ate my supper all up .
Sem: lambda $0_{r}.and(v|eat-past_2(pro:sub|i_1,det:poss|my_3($1,n|supper_4($1)),$0),adv|all_5(adv|up_6($0)))
example_end

Sent: oh yes .
Sem: lambda $0_{r}.and(co|yes_2($0),co|oh_1($0))
example_end

Sent: how do you know ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|do_2(and(v|know_4(pro:per|you_3,$0),$1($0)),$0)
example_end

Sent: what statue told you ?
Sem: lambda $1_{<<e,e>,e>}.lambda $0_{r}.v|tell-past_3($1($2,n|statue_2($2)),pro:per|you_4,$0)
example_end

Sent: I don 't believe it .
Sem: lambda $0_{r}.not(mod|do_2(v|believe_4(pro:sub|i_1,pro:per|it_5,$0),$0),$0)
example_end

Sent: nothing in that hand either .
Sem: adv|either_5(att(pro:indef|nothing_1,prep|in_2(pro:dem|that_3($0,n|hand_4($0)))))
example_end

Sent: oh you better put that back in there .
Sem: lambda $0_{r}.and(and(and(and(v|put-zero_4(pro:per|you_2,pro:dem|that_5,$0),adj|good-cp_3($0)),adv|back_6($0)),prep|in_7(adv|there_8($0))),co|oh_1($0))
example_end

Sent: you go put that right back .
Sem: lambda $0_{r}.and(v|put-zero_3(pro:per|you_1,pro:dem|that_4,$0),n|right_5(n|back_6($0)))
example_end

Sent: magician yes .
Sem: lambda $0_{r}.and(n|magician_1($0),co|yes_2($0))
example_end

Sent: no he doesn 't have one does he ?
Sem: lambda $0_{r}.Q(and(not(mod|do_3(v|have_5(pro:sub|he_2,pro:indef|one_6,$0),$0),$0),co|no_1($0)))
example_end

Sent: your Daddy is going to get after you .
Sem: lambda $0_{r}.aux|be-3s_3(part|go-presp_4(det:poss|your_1($1,n:prop|daddy_2($1)),lambda $2_{r}.and(v|get_6(det:poss|your_1($1,n:prop|daddy_2($1)),$2),prep|after_7(pro:per|you_8,$2)),$0),$0)
example_end

Sent: for taking this out .
Sem: lambda $0_{r}.and(part|take-presp_2(you,pro:dem|this_3,$0),adv|out_4($0))
example_end

Sent: how can he play ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(v|play_4(pro:sub|he_3,$0),$1($0)),$0)
example_end

Sent: how can he play without a bat ?
Sem: lambda $1_{<r,t>}.lambda $0_{r}.mod|can_2(and(and(v|play_4(pro:sub|he_3,$0),$1($0)),prep|without_5(det:art|a_6($2,n|bat_7($2)),$0)),$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: what are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_3,$0)
example_end

Sent: what kind of monster ?
Sem: lambda $0_{<<e,e>,e>}.$0($1,att(n|kind_2($1),prep|of_3(BARE($2,n|monster_4($2)))))
example_end

Sent: a sea green monster .
Sem: det:art|a_1($0,and(and_comp(n|sea_2($0),n|green_3($0)),n|monster_4($0)))
example_end

Sent: what kind of monster are you ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(pro:per|you_6,att(n|kind_2(pro:per|you_6,$0),prep|of_3(BARE($2,n|monster_4($2)))))
example_end

Sent: a mompsy ?
Sem: BARE($0,Q(det:art|a_1($1,chi|mompsy_2($1),$0)))
example_end

Sent: what 's a mompsy ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_3($2,chi|mompsy_4($2)),$0)
example_end

Sent: who did use them all ?
Sem: lambda $1_{e}.lambda $0_{r}.v|do-past_2(v|use_3($1,post|all_5($2,pro:obj|them_4($2)),$0),$0)
example_end

Sent: a boy what ?
Sem: lambda $1_{e}.lambda $0_{r}.$1(det:art|a_1($2,n|boy_2($2)),$0)
example_end

Sent: the light 's green .
Sem: lambda $0_{r}.n|green_4(det:art|the_1($1,n|light_2($1)),$0)
example_end

Sent: that 's part of my body ?
Sem: lambda $0_{r}.Q(att(n|part_3(pro:dem|that_1,$0),prep|of_4(det:poss|my_5($1,n|body_6($1)))))
example_end

Sent: oh what part is that ?
Sem: lambda $1_{e}.lambda $0_{r}.and($1(pro:dem|that_5,n|part_3(pro:dem|that_5,$0)),co|oh_1($0))
example_end

