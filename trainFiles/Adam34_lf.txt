Sent: this is black .
Sem: lambda $0_{r}.n|black_3(pro:dem|this_1,$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: you missed .
Sem: lambda $0_{r}.v|miss-past_2(pro:per|you_1,$0)
example_end

Sent: my turn ?
Sem: lambda $0_{e}.Q(det:poss|my_1($1,n|turn_2($1),$0))
example_end

Sent: what 's the matter ?
Sem: lambda $0_{r}.Q(det:art|the_3(pro:int|what_1,v|matter_4(pro:int|what_1,$0)))
example_end

Sent: careful Adam !
Sem: lambda $0_{e}.co|careful_1($0)
example_end

Sent: no Adam !
Sem: lambda $0_{r}.co|no_1($0)
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: what kind of bird is that ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:dem|that_6,att(n|kind_2(pro:dem|that_6,$0),prep|of_3(lambda $1_{e}.n|bird_4($1)))))
example_end

Sent: that 's all .
Sem: lambda $0_{r}.pro:indef|all_3(pro:dem|that_1,$0)
example_end

Sent: it 's what ?
Sem: lambda $0_{r}.Q(pro:int|what_3(pro:per|it_1,$0))
example_end

Sent: what is this .
Sem: lambda $0_{r}.pro:int|what_1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $0_{r}.pro:int|what_1(pro:dem|this_3,$0)
example_end

Sent: what is this .
Sem: lambda $0_{r}.pro:int|what_1(pro:dem|this_3,$0)
example_end

Sent: a pig ?
Sem: lambda $0_{e}.Q(det:art|a_1($1,n|pig_2($1),$0))
example_end

Sent: what is it ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:per|it_3,$0))
example_end

Sent: that 's a good idea .
Sem: lambda $0_{r}.det:art|a_3(pro:dem|that_1,and(n|idea_5(pro:dem|that_1,$0),adj|good_4(pro:dem|that_1,$0)))
example_end

Sent: it is .
Sem: lambda $0_{r}.cop|be-3s_2(pro:per|it_1,$0)
example_end

Sent: no no !
Sem: lambda $0_{r}.and(co|no_2($0),co|no_1($0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: what 're you doing Adam ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|do-presp_4(pro:per|you_3,pro:int|what_1,$0),$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: it 's what ?
Sem: lambda $0_{r}.Q(pro:int|what_3(pro:per|it_1,$0))
example_end

Sent: careful Adam !
Sem: lambda $0_{e}.co|careful_1($0)
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: you do ?
Sem: lambda $0_{r}.Q(v|do_2(pro:per|you_1,$0))
example_end

Sent: that 's alright .
Sem: lambda $0_{r}.adj|alright_3(pro:dem|that_1,$0)
example_end

Sent: what 're you doing Adam ?
Sem: lambda $0_{r}.Q(aux|~be_2(part|do-presp_4(pro:per|you_3,pro:int|what_1,$0),$0))
example_end

