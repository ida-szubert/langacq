Sent: no thank_you Adam .
Sem: qn|no_1($0,n|thank_you_2($0))
example_end

Sent: what is that ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:dem|that_3,$0))
example_end

Sent: that 's right ?
Sem: lambda $0_{r}.Q(n|right_3(pro:dem|that_1,$0))
example_end

Sent: oh thank_you .
Sem: lambda $0_{r}.and(n|thank_you_2($0),co|oh_1($0))
example_end

Sent: I 'll try .
Sem: lambda $0_{r}.mod|~will_2(v|try_3(pro:sub|i_1,$0),$0)
example_end

Sent: careful Adam !
Sem: lambda $0_{e}.co|careful_1($0)
example_end

Sent: oh I see .
Sem: lambda $0_{r}.and(v|see_3(pro:sub|i_2,$0),co|oh_1($0))
example_end

Sent: that 's not a hammer .
Sem: lambda $0_{r}.not(det:art|a_4(pro:dem|that_1,n|hammer_5(pro:dem|that_1,$0)),$0)
example_end

Sent: how are you ?
Sem: lambda $0_{r}.Q(and(aux|be-pres_2(pro:per|you_3,$0),adv:int|how_1($0)))
example_end

Sent: what 's that ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:dem|that_3,$0))
example_end

Sent: what is it ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:per|it_3,$0))
example_end

Sent: who 's there ?
Sem: lambda $0_{r}.Q(and(aux|~be_2(pro:rel|who_1,$0),adv|there_3($0)))
example_end

Sent: who is that ?
Sem: lambda $0_{r}.Q(pro:int|who_1(pro:dem|that_3,$0))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: here 's another one .
Sem: lambda $0_{r}.and(cop|~be_2(qn|another_3($1,pro:indef|one_4($1)),$0),pro:exist|here_1($0))
example_end

Sent: wait a minute .
Sem: lambda $0_{r}.v|wait_1(you,det:art|a_2($1,n|minute_3($1)),$0)
example_end

Sent: who is this .
Sem: lambda $0_{r}.pro:dem|this_3(pro:int|who_1,$0)
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: yes you did .
Sem: lambda $0_{r}.and(v|do-past_3(pro:per|you_2,$0),co|yes_1($0))
example_end

Sent: who is that ?
Sem: lambda $0_{r}.Q(pro:int|who_1(pro:dem|that_3,$0))
example_end

Sent: what d you mean ?
Sem: lambda $0_{r}.Q(mod|do_2(adj|mean_4(pro:per|you_3,pro:int|what_1,$0),$0))
example_end

Sent: what is that ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:dem|that_3,$0))
example_end

Sent: who is that ?
Sem: lambda $0_{r}.Q(pro:int|who_1(pro:dem|that_3,$0))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: here 's one .
Sem: lambda $0_{r}.and(cop|~be_2(pro:indef|one_3,$0),pro:exist|here_1($0))
example_end

Sent: that 's what ?
Sem: lambda $0_{r}.Q(pro:int|what_3(pro:dem|that_1,$0))
example_end

Sent: what is that ?
Sem: lambda $0_{r}.Q(pro:int|what_1(pro:dem|that_3,$0))
example_end

Sent: I don 't know .
Sem: lambda $0_{r}.not(mod|do_2(v|know_4(pro:sub|i_1,$0),$0),$0)
example_end

Sent: alright Adam .
Sem: lambda $0_{r}.co|alright_1($0)
example_end

